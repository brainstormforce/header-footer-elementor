/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Components/PromotionWidget.jsx":
/*!********************************************!*\
  !*** ./src/Components/PromotionWidget.jsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ \"@wordpress/element\");\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\nvar PromotionWidget = function PromotionWidget() {\n  (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    // Global variables to track state\n    var lastClickedWidgetType = null;\n    var continuousCheckInterval = null;\n    var searchObserver = null;\n\n    // Function to customize the promotion dialog\n    var customizePromotionDialog = function customizePromotionDialog() {\n      var forceUaeWidget = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var dialog = parent.document.querySelector('#elementor-element--promotion__dialog');\n      if (!dialog) return false;\n      var defaultBtn = dialog.querySelector('.dialog-buttons-action:not(.uae-upgrade-button)');\n      if (!defaultBtn) return false;\n\n      // Always show our button in search results or if forced\n      var shouldShowUaeButton = forceUaeWidget || lastClickedWidgetType === 'uae';\n\n      // Clean up any previous custom buttons to avoid duplicates\n      var existingCustomBtns = dialog.querySelectorAll('.uae-upgrade-button');\n      existingCustomBtns.forEach(function (btn) {\n        return btn.remove();\n      });\n      if (shouldShowUaeButton) {\n        // Hide the default button\n        defaultBtn.style.display = 'none';\n\n        // Create our custom button\n        var button = document.createElement('a');\n        button.textContent = 'Upgrade Now';\n\n        // Get widget name from the dialog title\n        var dialogTitle = dialog.querySelector('.dialog-header');\n        var widgetTitle = 'widget';\n        if (dialogTitle && dialogTitle.textContent) {\n          widgetTitle = dialogTitle.textContent.trim().toLowerCase().replace(/\\s+/g, '-');\n        }\n\n        // Set href with dynamic widget title in utm_medium\n        button.setAttribute('href', \"https://ultimateelementor.com/pricing/?utm_source=plugin-editor&utm_medium=\".concat(widgetTitle, \"-promo&utm_campaign=uae-upgrade\"));\n        button.setAttribute('target', '_blank');\n        button.classList.add('dialog-button', 'dialog-action', 'dialog-buttons-action', 'elementor-button', 'go-pro', 'elementor-button-success', 'uae-upgrade-button');\n\n        // Insert our button\n        defaultBtn.insertAdjacentElement('afterend', button);\n\n        // Add event listener to prevent default behavior\n        button.addEventListener('click', function (e) {\n          e.stopPropagation();\n        });\n\n        // Mark the dialog as customized\n        dialog.setAttribute('data-uae-customized', 'true');\n        return true;\n      } else {\n        // Not our widget, make sure default button is visible\n        defaultBtn.style.display = '';\n        dialog.removeAttribute('data-uae-customized');\n        return true;\n      }\n    };\n\n    // Function to check if a widget is a UAE widget\n    var isUaeWidget = function isUaeWidget(widget) {\n      if (!widget) return false;\n\n      // Check if it has the hfe class in the icon\n      var icon = widget.querySelector('.icon > i');\n      var hasHfeClass = icon && icon.className.includes('hfe');\n\n      // Check if it's in our category\n      var isInUaeCategory = widget.closest('#elementor-panel-category-hfe-widgets') !== null;\n      return hasHfeClass || isInUaeCategory;\n    };\n\n    // Function to start continuous checking for dialog changes\n    var startContinuousCheck = function startContinuousCheck() {\n      // Clear any existing interval\n      if (continuousCheckInterval) {\n        clearInterval(continuousCheckInterval);\n      }\n\n      // Set up a new interval to check every 100ms\n      continuousCheckInterval = setInterval(function () {\n        var dialog = parent.document.querySelector('#elementor-element--promotion__dialog');\n        if (!dialog) return;\n        if (lastClickedWidgetType === 'uae') {\n          var defaultBtn = dialog.querySelector('.dialog-buttons-action:not(.uae-upgrade-button)');\n          var customBtn = dialog.querySelector('.uae-upgrade-button');\n\n          // If default button is visible or our button is missing, fix it\n          if (defaultBtn && defaultBtn.style.display !== 'none' || !customBtn) {\n            customizePromotionDialog(true);\n          }\n        }\n      }, 100);\n\n      // Safety timeout to stop checking after 10 seconds\n      setTimeout(function () {\n        if (continuousCheckInterval) {\n          clearInterval(continuousCheckInterval);\n          continuousCheckInterval = null;\n        }\n      }, 10000);\n    };\n\n    // Handle clicks on promotion widgets\n    var handleProWidgetClick = function handleProWidgetClick(e) {\n      // Find the clicked promotion widget\n      var clickedWidget = null;\n      var allProWidgets = parent.document.querySelectorAll('.elementor-element--promotion');\n      for (var i = 0; i < allProWidgets.length; i++) {\n        if (allProWidgets[i].contains(e.target)) {\n          clickedWidget = allProWidgets[i];\n          break;\n        }\n      }\n      if (!clickedWidget) return;\n\n      // Check if it's our widget\n      var isUae = isUaeWidget(clickedWidget);\n\n      // Update the last clicked widget type\n      lastClickedWidgetType = isUae ? 'uae' : 'other';\n\n      // Start continuous checking for dialog changes\n      startContinuousCheck();\n\n      // Also set up multiple immediate checks with increasing delays\n      var delays = [10, 30, 50, 100, 200, 300, 500, 1000, 1500, 2000];\n      delays.forEach(function (delay) {\n        setTimeout(function () {\n          var dialog = parent.document.querySelector('#elementor-element--promotion__dialog');\n          if (dialog) {\n            customizePromotionDialog(isUae);\n          }\n        }, delay);\n      });\n    };\n\n    // Create a mutation observer to watch for dialog changes\n    var createDialogObserver = function createDialogObserver() {\n      var observer = new MutationObserver(function (mutations) {\n        var _iterator = _createForOfIteratorHelper(mutations),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var mutation = _step.value;\n            // Look for added nodes that might be the dialog\n            if (mutation.addedNodes.length) {\n              var _iterator2 = _createForOfIteratorHelper(mutation.addedNodes),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var node = _step2.value;\n                  if (node.id === 'elementor-element--promotion__dialog') {\n                    // Dialog was just added, customize it\n                    customizePromotionDialog(lastClickedWidgetType === 'uae');\n                    startContinuousCheck();\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            // Also check for attribute changes on the dialog\n            if (mutation.type === 'attributes' && mutation.target.id === 'elementor-element--promotion__dialog') {\n              if (lastClickedWidgetType === 'uae') {\n                customizePromotionDialog(true);\n              }\n            }\n          }\n\n          // Always check if dialog exists and needs customization\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        var dialog = parent.document.querySelector('#elementor-element--promotion__dialog');\n        if (dialog && lastClickedWidgetType === 'uae') {\n          var defaultBtn = dialog.querySelector('.dialog-buttons-action:not(.uae-upgrade-button)');\n          var customBtn = dialog.querySelector('.uae-upgrade-button');\n\n          // If default button is visible or our button is missing, fix it\n          if (defaultBtn && defaultBtn.style.display !== 'none' || !customBtn) {\n            customizePromotionDialog(true);\n          }\n        }\n      });\n\n      // Observe the body for changes\n      if (parent.document.body) {\n        observer.observe(parent.document.body, {\n          childList: true,\n          subtree: true,\n          attributes: true,\n          attributeFilter: ['style', 'class', 'id']\n        });\n      }\n      return observer;\n    };\n\n    // Special function to handle search results\n    var setupSearchResultsHandler = function setupSearchResultsHandler() {\n      // If we already have an observer, disconnect it\n      if (searchObserver) {\n        searchObserver.disconnect();\n        searchObserver = null;\n      }\n\n      // Create a new observer specifically for search results\n      searchObserver = new MutationObserver(function (mutations) {\n        // Check if search results are visible\n        var searchWrapper = parent.document.querySelector('#elementor-panel-elements-search-wrapper');\n        if (!searchWrapper) return;\n\n        // Process all promotion widgets in search results\n        var searchPromoWidgets = searchWrapper.querySelectorAll('.elementor-element--promotion');\n        if (searchPromoWidgets.length === 0) return;\n\n        // Add click handlers to all promotion widgets in search results\n        searchPromoWidgets.forEach(function (widget) {\n          // Remove any existing click handlers\n          widget.removeEventListener('click', handleSearchWidgetClick);\n\n          // Add our click handler\n          widget.addEventListener('click', handleSearchWidgetClick);\n\n          // Mark this widget as processed\n          widget.setAttribute('data-uae-processed', 'true');\n        });\n      });\n\n      // Observe the panel for changes\n      var panelElements = parent.document.querySelector('#elementor-panel-elements');\n      if (panelElements) {\n        searchObserver.observe(panelElements, {\n          childList: true,\n          subtree: true,\n          attributes: false\n        });\n      }\n\n      // Also observe the search input\n      var searchInput = parent.document.querySelector('#elementor-panel-elements-search-input');\n      if (searchInput) {\n        // Add input event listener\n        searchInput.addEventListener('input', handleSearchInput);\n      }\n    };\n\n    // Handle search input changes\n    var handleSearchInput = function handleSearchInput() {\n      // Wait a bit for search results to render\n      setTimeout(function () {\n        var searchWrapper = parent.document.querySelector('#elementor-panel-elements-search-wrapper');\n        if (!searchWrapper) return;\n        var searchPromoWidgets = searchWrapper.querySelectorAll('.elementor-element--promotion');\n        searchPromoWidgets.forEach(function (widget) {\n          // Remove any existing click handlers\n          widget.removeEventListener('click', handleSearchWidgetClick);\n\n          // Add our click handler\n          widget.addEventListener('click', handleSearchWidgetClick);\n\n          // Mark this widget as processed\n          widget.setAttribute('data-uae-processed', 'true');\n        });\n      }, 300);\n    };\n\n    // Handle clicks on widgets in search results\n    var handleSearchWidgetClick = function handleSearchWidgetClick(e) {\n      // Set all widgets in search results to be treated as UAE widgets\n      lastClickedWidgetType = 'uae';\n\n      // Start continuous checking\n      startContinuousCheck();\n\n      // Set up immediate checks with increasing delays\n      var delays = [10, 30, 50, 100, 200, 300, 500, 1000];\n      delays.forEach(function (delay) {\n        setTimeout(function () {\n          var dialog = parent.document.querySelector('#elementor-element--promotion__dialog');\n          if (dialog) {\n            customizePromotionDialog(true);\n          }\n        }, delay);\n      });\n\n      // Don't stop propagation - we want the dialog to open\n    };\n\n    // Initialize everything\n    var initProWidgets = function initProWidgets() {\n      if (typeof parent.document === 'undefined') return;\n\n      // Remove any existing event listeners to prevent duplicates\n      parent.document.removeEventListener('mousedown', handleProWidgetClick, true);\n\n      // Add our event listener with capture phase to ensure it runs first\n      parent.document.addEventListener('mousedown', handleProWidgetClick, true);\n\n      // Set up search results handler\n      setupSearchResultsHandler();\n\n      // Create the observer\n      var observer = createDialogObserver();\n\n      // Check if dialog already exists\n      var existingDialog = parent.document.querySelector('#elementor-element--promotion__dialog');\n      if (existingDialog) {\n        customizePromotionDialog();\n      }\n      return observer;\n    };\n\n    // Initialize when Elementor is ready\n    var observer = null;\n    if (window.elementor) {\n      elementor.on('preview:loaded', function () {\n        observer = initProWidgets();\n      });\n    } else {\n      window.addEventListener('elementor/frontend/init', function () {\n        observer = initProWidgets();\n      });\n    }\n\n    // Cleanup function\n    return function () {\n      if (continuousCheckInterval) {\n        clearInterval(continuousCheckInterval);\n      }\n      if (observer) {\n        observer.disconnect();\n      }\n      if (searchObserver) {\n        searchObserver.disconnect();\n      }\n      if (typeof parent.document !== 'undefined') {\n        parent.document.removeEventListener('mousedown', handleProWidgetClick, true);\n\n        // Remove search input event listeners\n        var searchInput = parent.document.querySelector('#elementor-panel-elements-search-input');\n        if (searchInput) {\n          searchInput.removeEventListener('input', handleSearchInput);\n        }\n\n        // Remove click handlers from search widgets\n        var searchPromoWidgets = parent.document.querySelectorAll('#elementor-panel-elements-search-wrapper .elementor-element--promotion');\n        searchPromoWidgets.forEach(function (widget) {\n          widget.removeEventListener('click', handleSearchWidgetClick);\n        });\n      }\n      if (window.elementor && elementor.off) {\n        elementor.off('preview:loaded', initProWidgets);\n      } else {\n        window.removeEventListener('elementor/frontend/init', initProWidgets);\n      }\n    };\n  }, []);\n  return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PromotionWidget);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Components/PromotionWidget.jsx\n");

/***/ }),

/***/ "./src/promotion-widget.js":
/*!*********************************!*\
  !*** ./src/promotion-widget.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/dom-ready */ \"@wordpress/dom-ready\");\n/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/element */ \"@wordpress/element\");\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Components_PromotionWidget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Components/PromotionWidget */ \"./src/Components/PromotionWidget.jsx\");\n\n\n\n_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n  var container = document.createElement('div');\n  document.body.appendChild(container);\n  (0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.render)(/*#__PURE__*/React.createElement(_Components_PromotionWidget__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null), container);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcHJvbW90aW9uLXdpZGdldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDQTtBQUN0QjtBQUV0QkEsMkRBQVEsQ0FBQyxZQUFNO0VBQ1gsSUFBTUcsU0FBUyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxLQUFLLENBQUM7RUFDL0NELFFBQVEsQ0FBQ0UsSUFBSSxDQUFDQyxXQUFXLENBQUNKLFNBQVMsQ0FBQztFQUNwQ0YsMERBQU0sY0FBQ08sS0FBQSxDQUFBSCxhQUFBLENBQUNILG1FQUFlLE1BQUUsQ0FBQyxFQUFFQyxTQUFTLENBQUM7QUFDMUMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9zcmMvcHJvbW90aW9uLXdpZGdldC5qcz9hMjQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb21SZWFkeSBmcm9tICdAd29yZHByZXNzL2RvbS1yZWFkeSc7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAd29yZHByZXNzL2VsZW1lbnQnO1xuaW1wb3J0IFByb21vdGlvbldpZGdldCBmcm9tICcuL0NvbXBvbmVudHMvUHJvbW90aW9uV2lkZ2V0JztcblxuZG9tUmVhZHkoKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICByZW5kZXIoPFByb21vdGlvbldpZGdldCAvPiwgY29udGFpbmVyKTtcbn0pO1xuIl0sIm5hbWVzIjpbImRvbVJlYWR5IiwicmVuZGVyIiwiUHJvbW90aW9uV2lkZ2V0IiwiY29udGFpbmVyIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYm9keSIsImFwcGVuZENoaWxkIiwiUmVhY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/promotion-widget.js\n");

/***/ }),

/***/ "@wordpress/dom-ready":
/*!**********************************!*\
  !*** external ["wp","domReady"] ***!
  \**********************************/
/***/ ((module) => {

module.exports = window["wp"]["domReady"];

/***/ }),

/***/ "@wordpress/element":
/*!*********************************!*\
  !*** external ["wp","element"] ***!
  \*********************************/
/***/ ((module) => {

module.exports = window["wp"]["element"];

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/promotion-widget.js");
/******/ 	
/******/ })()
;