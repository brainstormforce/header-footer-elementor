/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@bsf/force-ui/dist/force-ui.js":
/*!*****************************************************!*\
  !*** ./node_modules/@bsf/force-ui/dist/force-ui.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("!function(e,t){ true?module.exports=t():0}(\"undefined\"!=typeof self?self:this,(function(){return function(){\"use strict\";var e={316:function(e,t,n){function r(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}n.d(t,{A:function(){return i}});var o=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,i=r((function(e){return o.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91}))},20:function(e,t,n){var r=n(609),o=Symbol.for(\"react.element\"),i=Symbol.for(\"react.fragment\"),s=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var r,i={},c=null,u=null;for(r in void 0!==n&&(c=\"\"+n),void 0!==t.key&&(c=\"\"+t.key),void 0!==t.ref&&(u=t.ref),t)s.call(t,r)&&!l.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===i[r]&&(i[r]=t[r]);return{$$typeof:o,type:e,key:c,ref:u,props:i,_owner:a.current}}t.Fragment=i,t.jsx=c,t.jsxs=c},848:function(e,t,n){e.exports=n(20)},609:function(e){e.exports=window.React}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var r={};n.r(r),n.d(r,{Alert:function(){return Lp},Avatar:function(){return nt},Badge:function(){return Ge},Breadcrumb:function(){return iS},Button:function(){return le},ButtonGroup:function(){return bi},Checkbox:function(){return Te},Container:function(){return Dp},Dialog:function(){return RS},Drawer:function(){return u_},EditorInput:function(){return vE},Input:function(){return ut},Label:function(){return pt},Loader:function(){return vt},Menu:function(){return jE},ProgressBar:function(){return yt},ProgressSteps:function(){return kE},RadioButton:function(){return Ke},Select:function(){return vh},Sidebar:function(){return KE},Skeleton:function(){return TE},Switch:function(){return ge},Tabs:function(){return Zf},TextArea:function(){return tt},Title:function(){return mt},Toaster:function(){return tp},Tooltip:function(){return fi},Topbar:function(){return MS},toast:function(){return Mh}});var o=n(609),i=n.n(o);const s=e=>{const t=u(e),{conflictingClassGroups:n,conflictingClassGroupModifiers:r}=e;return{getClassGroupId:e=>{const n=e.split(\"-\");return\"\"===n[0]&&1!==n.length&&n.shift(),a(n,t)||c(e)},getConflictingClassGroupIds:(e,t)=>{const o=n[e]||[];return t&&r[e]?[...o,...r[e]]:o}}},a=(e,t)=>{if(0===e.length)return t.classGroupId;const n=e[0],r=t.nextPart.get(n),o=r?a(e.slice(1),r):void 0;if(o)return o;if(0===t.validators.length)return;const i=e.join(\"-\");return t.validators.find((({validator:e})=>e(i)))?.classGroupId},l=/^\\[(.+)\\]$/,c=e=>{if(l.test(e)){const t=l.exec(e)[1],n=t?.substring(0,t.indexOf(\":\"));if(n)return\"arbitrary..\"+n}},u=e=>{const{theme:t,prefix:n}=e,r={nextPart:new Map,validators:[]};return p(Object.entries(e.classGroups),n).forEach((([e,n])=>{d(n,r,e,t)})),r},d=(e,t,n,r)=>{e.forEach((e=>{if(\"string\"!=typeof e){if(\"function\"==typeof e)return h(e)?void d(e(r),t,n,r):void t.validators.push({validator:e,classGroupId:n});Object.entries(e).forEach((([e,o])=>{d(o,f(t,e),n,r)}))}else(\"\"===e?t:f(t,e)).classGroupId=n}))},f=(e,t)=>{let n=e;return t.split(\"-\").forEach((e=>{n.nextPart.has(e)||n.nextPart.set(e,{nextPart:new Map,validators:[]}),n=n.nextPart.get(e)})),n},h=e=>e.isThemeGetter,p=(e,t)=>t?e.map((([e,n])=>[e,n.map((e=>\"string\"==typeof e?t+e:\"object\"==typeof e?Object.fromEntries(Object.entries(e).map((([e,n])=>[t+e,n]))):e))])):e,m=e=>{if(e<1)return{get:()=>{},set:()=>{}};let t=0,n=new Map,r=new Map;const o=(o,i)=>{n.set(o,i),t++,t>e&&(t=0,r=n,n=new Map)};return{get(e){let t=n.get(e);return void 0!==t?t:void 0!==(t=r.get(e))?(o(e,t),t):void 0},set(e,t){n.has(e)?n.set(e,t):o(e,t)}}},g=e=>{const{separator:t,experimentalParseClassName:n}=e,r=1===t.length,o=t[0],i=t.length,s=e=>{const n=[];let s,a=0,l=0;for(let c=0;c<e.length;c++){let u=e[c];if(0===a){if(u===o&&(r||e.slice(c,c+i)===t)){n.push(e.slice(l,c)),l=c+i;continue}if(\"/\"===u){s=c;continue}}\"[\"===u?a++:\"]\"===u&&a--}const c=0===n.length?e:e.substring(l),u=c.startsWith(\"!\");return{modifiers:n,hasImportantModifier:u,baseClassName:u?c.substring(1):c,maybePostfixModifierPosition:s&&s>l?s-l:void 0}};return n?e=>n({className:e,parseClassName:s}):s},v=e=>{if(e.length<=1)return e;const t=[];let n=[];return e.forEach((e=>{\"[\"===e[0]?(t.push(...n.sort(),e),n=[]):n.push(e)})),t.push(...n.sort()),t},y=/\\s+/;function b(){let e,t,n=0,r=\"\";for(;n<arguments.length;)(e=arguments[n++])&&(t=x(e))&&(r&&(r+=\" \"),r+=t);return r}const x=e=>{if(\"string\"==typeof e)return e;let t,n=\"\";for(let r=0;r<e.length;r++)e[r]&&(t=x(e[r]))&&(n&&(n+=\" \"),n+=t);return n};function w(e,...t){let n,r,o,i=function(l){const c=t.reduce(((e,t)=>t(e)),e());return n=(e=>({cache:m(e.cacheSize),parseClassName:g(e),...s(e)}))(c),r=n.cache.get,o=n.cache.set,i=a,a(l)};function a(e){const t=r(e);if(t)return t;const i=((e,t)=>{const{parseClassName:n,getClassGroupId:r,getConflictingClassGroupIds:o}=t,i=[],s=e.trim().split(y);let a=\"\";for(let e=s.length-1;e>=0;e-=1){const t=s[e],{modifiers:l,hasImportantModifier:c,baseClassName:u,maybePostfixModifierPosition:d}=n(t);let f=Boolean(d),h=r(f?u.substring(0,d):u);if(!h){if(!f){a=t+(a.length>0?\" \"+a:a);continue}if(h=r(u),!h){a=t+(a.length>0?\" \"+a:a);continue}f=!1}const p=v(l).join(\":\"),m=c?p+\"!\":p,g=m+h;if(i.includes(g))continue;i.push(g);const y=o(h,f);for(let e=0;e<y.length;++e){const t=y[e];i.push(m+t)}a=t+(a.length>0?\" \"+a:a)}return a})(e,n);return o(e,i),i}return function(){return i(b.apply(null,arguments))}}const E=e=>{const t=t=>t[e]||[];return t.isThemeGetter=!0,t},S=/^\\[(?:([a-z-]+):)?(.+)\\]$/i,_=/^\\d+\\/\\d+$/,k=new Set([\"px\",\"full\",\"screen\"]),C=/^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/,P=/\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/,T=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/,O=/^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/,R=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/,N=e=>j(e)||k.has(e)||_.test(e),A=e=>H(e,\"length\",q),j=e=>Boolean(e)&&!Number.isNaN(Number(e)),M=e=>H(e,\"number\",j),I=e=>Boolean(e)&&Number.isInteger(Number(e)),D=e=>e.endsWith(\"%\")&&j(e.slice(0,-1)),L=e=>S.test(e),F=e=>C.test(e),z=new Set([\"length\",\"size\",\"percentage\"]),B=e=>H(e,z,Y),V=e=>H(e,\"position\",Y),W=new Set([\"image\",\"url\"]),U=e=>H(e,W,X),$=e=>H(e,\"\",G),K=()=>!0,H=(e,t,n)=>{const r=S.exec(e);return!!r&&(r[1]?\"string\"==typeof t?r[1]===t:t.has(r[1]):n(r[2]))},q=e=>P.test(e)&&!T.test(e),Y=()=>!1,G=e=>O.test(e),X=e=>R.test(e),J=(Symbol.toStringTag,()=>{const e=E(\"colors\"),t=E(\"spacing\"),n=E(\"blur\"),r=E(\"brightness\"),o=E(\"borderColor\"),i=E(\"borderRadius\"),s=E(\"borderSpacing\"),a=E(\"borderWidth\"),l=E(\"contrast\"),c=E(\"grayscale\"),u=E(\"hueRotate\"),d=E(\"invert\"),f=E(\"gap\"),h=E(\"gradientColorStops\"),p=E(\"gradientColorStopPositions\"),m=E(\"inset\"),g=E(\"margin\"),v=E(\"opacity\"),y=E(\"padding\"),b=E(\"saturate\"),x=E(\"scale\"),w=E(\"sepia\"),S=E(\"skew\"),_=E(\"space\"),k=E(\"translate\"),C=()=>[\"auto\",L,t],P=()=>[L,t],T=()=>[\"\",N,A],O=()=>[\"auto\",j,L],R=()=>[\"\",\"0\",L],z=()=>[j,L];return{cacheSize:500,separator:\":\",theme:{colors:[K],spacing:[N,A],blur:[\"none\",\"\",F,L],brightness:z(),borderColor:[e],borderRadius:[\"none\",\"\",\"full\",F,L],borderSpacing:P(),borderWidth:T(),contrast:z(),grayscale:R(),hueRotate:z(),invert:R(),gap:P(),gradientColorStops:[e],gradientColorStopPositions:[D,A],inset:C(),margin:C(),opacity:z(),padding:P(),saturate:z(),scale:z(),sepia:R(),skew:z(),space:P(),translate:P()},classGroups:{aspect:[{aspect:[\"auto\",\"square\",\"video\",L]}],container:[\"container\"],columns:[{columns:[F]}],\"break-after\":[{\"break-after\":[\"auto\",\"avoid\",\"all\",\"avoid-page\",\"page\",\"left\",\"right\",\"column\"]}],\"break-before\":[{\"break-before\":[\"auto\",\"avoid\",\"all\",\"avoid-page\",\"page\",\"left\",\"right\",\"column\"]}],\"break-inside\":[{\"break-inside\":[\"auto\",\"avoid\",\"avoid-page\",\"avoid-column\"]}],\"box-decoration\":[{\"box-decoration\":[\"slice\",\"clone\"]}],box:[{box:[\"border\",\"content\"]}],display:[\"block\",\"inline-block\",\"inline\",\"flex\",\"inline-flex\",\"table\",\"inline-table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row-group\",\"table-row\",\"flow-root\",\"grid\",\"inline-grid\",\"contents\",\"list-item\",\"hidden\"],float:[{float:[\"right\",\"left\",\"none\",\"start\",\"end\"]}],clear:[{clear:[\"left\",\"right\",\"both\",\"none\",\"start\",\"end\"]}],isolation:[\"isolate\",\"isolation-auto\"],\"object-fit\":[{object:[\"contain\",\"cover\",\"fill\",\"none\",\"scale-down\"]}],\"object-position\":[{object:[\"bottom\",\"center\",\"left\",\"left-bottom\",\"left-top\",\"right\",\"right-bottom\",\"right-top\",\"top\",L]}],overflow:[{overflow:[\"auto\",\"hidden\",\"clip\",\"visible\",\"scroll\"]}],\"overflow-x\":[{\"overflow-x\":[\"auto\",\"hidden\",\"clip\",\"visible\",\"scroll\"]}],\"overflow-y\":[{\"overflow-y\":[\"auto\",\"hidden\",\"clip\",\"visible\",\"scroll\"]}],overscroll:[{overscroll:[\"auto\",\"contain\",\"none\"]}],\"overscroll-x\":[{\"overscroll-x\":[\"auto\",\"contain\",\"none\"]}],\"overscroll-y\":[{\"overscroll-y\":[\"auto\",\"contain\",\"none\"]}],position:[\"static\",\"fixed\",\"absolute\",\"relative\",\"sticky\"],inset:[{inset:[m]}],\"inset-x\":[{\"inset-x\":[m]}],\"inset-y\":[{\"inset-y\":[m]}],start:[{start:[m]}],end:[{end:[m]}],top:[{top:[m]}],right:[{right:[m]}],bottom:[{bottom:[m]}],left:[{left:[m]}],visibility:[\"visible\",\"invisible\",\"collapse\"],z:[{z:[\"auto\",I,L]}],basis:[{basis:C()}],\"flex-direction\":[{flex:[\"row\",\"row-reverse\",\"col\",\"col-reverse\"]}],\"flex-wrap\":[{flex:[\"wrap\",\"wrap-reverse\",\"nowrap\"]}],flex:[{flex:[\"1\",\"auto\",\"initial\",\"none\",L]}],grow:[{grow:R()}],shrink:[{shrink:R()}],order:[{order:[\"first\",\"last\",\"none\",I,L]}],\"grid-cols\":[{\"grid-cols\":[K]}],\"col-start-end\":[{col:[\"auto\",{span:[\"full\",I,L]},L]}],\"col-start\":[{\"col-start\":O()}],\"col-end\":[{\"col-end\":O()}],\"grid-rows\":[{\"grid-rows\":[K]}],\"row-start-end\":[{row:[\"auto\",{span:[I,L]},L]}],\"row-start\":[{\"row-start\":O()}],\"row-end\":[{\"row-end\":O()}],\"grid-flow\":[{\"grid-flow\":[\"row\",\"col\",\"dense\",\"row-dense\",\"col-dense\"]}],\"auto-cols\":[{\"auto-cols\":[\"auto\",\"min\",\"max\",\"fr\",L]}],\"auto-rows\":[{\"auto-rows\":[\"auto\",\"min\",\"max\",\"fr\",L]}],gap:[{gap:[f]}],\"gap-x\":[{\"gap-x\":[f]}],\"gap-y\":[{\"gap-y\":[f]}],\"justify-content\":[{justify:[\"normal\",\"start\",\"end\",\"center\",\"between\",\"around\",\"evenly\",\"stretch\"]}],\"justify-items\":[{\"justify-items\":[\"start\",\"end\",\"center\",\"stretch\"]}],\"justify-self\":[{\"justify-self\":[\"auto\",\"start\",\"end\",\"center\",\"stretch\"]}],\"align-content\":[{content:[\"normal\",\"start\",\"end\",\"center\",\"between\",\"around\",\"evenly\",\"stretch\",\"baseline\"]}],\"align-items\":[{items:[\"start\",\"end\",\"center\",\"baseline\",\"stretch\"]}],\"align-self\":[{self:[\"auto\",\"start\",\"end\",\"center\",\"stretch\",\"baseline\"]}],\"place-content\":[{\"place-content\":[\"start\",\"end\",\"center\",\"between\",\"around\",\"evenly\",\"stretch\",\"baseline\"]}],\"place-items\":[{\"place-items\":[\"start\",\"end\",\"center\",\"baseline\",\"stretch\"]}],\"place-self\":[{\"place-self\":[\"auto\",\"start\",\"end\",\"center\",\"stretch\"]}],p:[{p:[y]}],px:[{px:[y]}],py:[{py:[y]}],ps:[{ps:[y]}],pe:[{pe:[y]}],pt:[{pt:[y]}],pr:[{pr:[y]}],pb:[{pb:[y]}],pl:[{pl:[y]}],m:[{m:[g]}],mx:[{mx:[g]}],my:[{my:[g]}],ms:[{ms:[g]}],me:[{me:[g]}],mt:[{mt:[g]}],mr:[{mr:[g]}],mb:[{mb:[g]}],ml:[{ml:[g]}],\"space-x\":[{\"space-x\":[_]}],\"space-x-reverse\":[\"space-x-reverse\"],\"space-y\":[{\"space-y\":[_]}],\"space-y-reverse\":[\"space-y-reverse\"],w:[{w:[\"auto\",\"min\",\"max\",\"fit\",\"svw\",\"lvw\",\"dvw\",L,t]}],\"min-w\":[{\"min-w\":[L,t,\"min\",\"max\",\"fit\"]}],\"max-w\":[{\"max-w\":[L,t,\"none\",\"full\",\"min\",\"max\",\"fit\",\"prose\",{screen:[F]},F]}],h:[{h:[L,t,\"auto\",\"min\",\"max\",\"fit\",\"svh\",\"lvh\",\"dvh\"]}],\"min-h\":[{\"min-h\":[L,t,\"min\",\"max\",\"fit\",\"svh\",\"lvh\",\"dvh\"]}],\"max-h\":[{\"max-h\":[L,t,\"min\",\"max\",\"fit\",\"svh\",\"lvh\",\"dvh\"]}],size:[{size:[L,t,\"auto\",\"min\",\"max\",\"fit\"]}],\"font-size\":[{text:[\"base\",F,A]}],\"font-smoothing\":[\"antialiased\",\"subpixel-antialiased\"],\"font-style\":[\"italic\",\"not-italic\"],\"font-weight\":[{font:[\"thin\",\"extralight\",\"light\",\"normal\",\"medium\",\"semibold\",\"bold\",\"extrabold\",\"black\",M]}],\"font-family\":[{font:[K]}],\"fvn-normal\":[\"normal-nums\"],\"fvn-ordinal\":[\"ordinal\"],\"fvn-slashed-zero\":[\"slashed-zero\"],\"fvn-figure\":[\"lining-nums\",\"oldstyle-nums\"],\"fvn-spacing\":[\"proportional-nums\",\"tabular-nums\"],\"fvn-fraction\":[\"diagonal-fractions\",\"stacked-fractons\"],tracking:[{tracking:[\"tighter\",\"tight\",\"normal\",\"wide\",\"wider\",\"widest\",L]}],\"line-clamp\":[{\"line-clamp\":[\"none\",j,M]}],leading:[{leading:[\"none\",\"tight\",\"snug\",\"normal\",\"relaxed\",\"loose\",N,L]}],\"list-image\":[{\"list-image\":[\"none\",L]}],\"list-style-type\":[{list:[\"none\",\"disc\",\"decimal\",L]}],\"list-style-position\":[{list:[\"inside\",\"outside\"]}],\"placeholder-color\":[{placeholder:[e]}],\"placeholder-opacity\":[{\"placeholder-opacity\":[v]}],\"text-alignment\":[{text:[\"left\",\"center\",\"right\",\"justify\",\"start\",\"end\"]}],\"text-color\":[{text:[e]}],\"text-opacity\":[{\"text-opacity\":[v]}],\"text-decoration\":[\"underline\",\"overline\",\"line-through\",\"no-underline\"],\"text-decoration-style\":[{decoration:[\"solid\",\"dashed\",\"dotted\",\"double\",\"none\",\"wavy\"]}],\"text-decoration-thickness\":[{decoration:[\"auto\",\"from-font\",N,A]}],\"underline-offset\":[{\"underline-offset\":[\"auto\",N,L]}],\"text-decoration-color\":[{decoration:[e]}],\"text-transform\":[\"uppercase\",\"lowercase\",\"capitalize\",\"normal-case\"],\"text-overflow\":[\"truncate\",\"text-ellipsis\",\"text-clip\"],\"text-wrap\":[{text:[\"wrap\",\"nowrap\",\"balance\",\"pretty\"]}],indent:[{indent:P()}],\"vertical-align\":[{align:[\"baseline\",\"top\",\"middle\",\"bottom\",\"text-top\",\"text-bottom\",\"sub\",\"super\",L]}],whitespace:[{whitespace:[\"normal\",\"nowrap\",\"pre\",\"pre-line\",\"pre-wrap\",\"break-spaces\"]}],break:[{break:[\"normal\",\"words\",\"all\",\"keep\"]}],hyphens:[{hyphens:[\"none\",\"manual\",\"auto\"]}],content:[{content:[\"none\",L]}],\"bg-attachment\":[{bg:[\"fixed\",\"local\",\"scroll\"]}],\"bg-clip\":[{\"bg-clip\":[\"border\",\"padding\",\"content\",\"text\"]}],\"bg-opacity\":[{\"bg-opacity\":[v]}],\"bg-origin\":[{\"bg-origin\":[\"border\",\"padding\",\"content\"]}],\"bg-position\":[{bg:[\"bottom\",\"center\",\"left\",\"left-bottom\",\"left-top\",\"right\",\"right-bottom\",\"right-top\",\"top\",V]}],\"bg-repeat\":[{bg:[\"no-repeat\",{repeat:[\"\",\"x\",\"y\",\"round\",\"space\"]}]}],\"bg-size\":[{bg:[\"auto\",\"cover\",\"contain\",B]}],\"bg-image\":[{bg:[\"none\",{\"gradient-to\":[\"t\",\"tr\",\"r\",\"br\",\"b\",\"bl\",\"l\",\"tl\"]},U]}],\"bg-color\":[{bg:[e]}],\"gradient-from-pos\":[{from:[p]}],\"gradient-via-pos\":[{via:[p]}],\"gradient-to-pos\":[{to:[p]}],\"gradient-from\":[{from:[h]}],\"gradient-via\":[{via:[h]}],\"gradient-to\":[{to:[h]}],rounded:[{rounded:[i]}],\"rounded-s\":[{\"rounded-s\":[i]}],\"rounded-e\":[{\"rounded-e\":[i]}],\"rounded-t\":[{\"rounded-t\":[i]}],\"rounded-r\":[{\"rounded-r\":[i]}],\"rounded-b\":[{\"rounded-b\":[i]}],\"rounded-l\":[{\"rounded-l\":[i]}],\"rounded-ss\":[{\"rounded-ss\":[i]}],\"rounded-se\":[{\"rounded-se\":[i]}],\"rounded-ee\":[{\"rounded-ee\":[i]}],\"rounded-es\":[{\"rounded-es\":[i]}],\"rounded-tl\":[{\"rounded-tl\":[i]}],\"rounded-tr\":[{\"rounded-tr\":[i]}],\"rounded-br\":[{\"rounded-br\":[i]}],\"rounded-bl\":[{\"rounded-bl\":[i]}],\"border-w\":[{border:[a]}],\"border-w-x\":[{\"border-x\":[a]}],\"border-w-y\":[{\"border-y\":[a]}],\"border-w-s\":[{\"border-s\":[a]}],\"border-w-e\":[{\"border-e\":[a]}],\"border-w-t\":[{\"border-t\":[a]}],\"border-w-r\":[{\"border-r\":[a]}],\"border-w-b\":[{\"border-b\":[a]}],\"border-w-l\":[{\"border-l\":[a]}],\"border-opacity\":[{\"border-opacity\":[v]}],\"border-style\":[{border:[\"solid\",\"dashed\",\"dotted\",\"double\",\"none\",\"hidden\"]}],\"divide-x\":[{\"divide-x\":[a]}],\"divide-x-reverse\":[\"divide-x-reverse\"],\"divide-y\":[{\"divide-y\":[a]}],\"divide-y-reverse\":[\"divide-y-reverse\"],\"divide-opacity\":[{\"divide-opacity\":[v]}],\"divide-style\":[{divide:[\"solid\",\"dashed\",\"dotted\",\"double\",\"none\"]}],\"border-color\":[{border:[o]}],\"border-color-x\":[{\"border-x\":[o]}],\"border-color-y\":[{\"border-y\":[o]}],\"border-color-t\":[{\"border-t\":[o]}],\"border-color-r\":[{\"border-r\":[o]}],\"border-color-b\":[{\"border-b\":[o]}],\"border-color-l\":[{\"border-l\":[o]}],\"divide-color\":[{divide:[o]}],\"outline-style\":[{outline:[\"\",\"solid\",\"dashed\",\"dotted\",\"double\",\"none\"]}],\"outline-offset\":[{\"outline-offset\":[N,L]}],\"outline-w\":[{outline:[N,A]}],\"outline-color\":[{outline:[e]}],\"ring-w\":[{ring:T()}],\"ring-w-inset\":[\"ring-inset\"],\"ring-color\":[{ring:[e]}],\"ring-opacity\":[{\"ring-opacity\":[v]}],\"ring-offset-w\":[{\"ring-offset\":[N,A]}],\"ring-offset-color\":[{\"ring-offset\":[e]}],shadow:[{shadow:[\"\",\"inner\",\"none\",F,$]}],\"shadow-color\":[{shadow:[K]}],opacity:[{opacity:[v]}],\"mix-blend\":[{\"mix-blend\":[\"normal\",\"multiply\",\"screen\",\"overlay\",\"darken\",\"lighten\",\"color-dodge\",\"color-burn\",\"hard-light\",\"soft-light\",\"difference\",\"exclusion\",\"hue\",\"saturation\",\"color\",\"luminosity\",\"plus-lighter\",\"plus-darker\"]}],\"bg-blend\":[{\"bg-blend\":[\"normal\",\"multiply\",\"screen\",\"overlay\",\"darken\",\"lighten\",\"color-dodge\",\"color-burn\",\"hard-light\",\"soft-light\",\"difference\",\"exclusion\",\"hue\",\"saturation\",\"color\",\"luminosity\"]}],filter:[{filter:[\"\",\"none\"]}],blur:[{blur:[n]}],brightness:[{brightness:[r]}],contrast:[{contrast:[l]}],\"drop-shadow\":[{\"drop-shadow\":[\"\",\"none\",F,L]}],grayscale:[{grayscale:[c]}],\"hue-rotate\":[{\"hue-rotate\":[u]}],invert:[{invert:[d]}],saturate:[{saturate:[b]}],sepia:[{sepia:[w]}],\"backdrop-filter\":[{\"backdrop-filter\":[\"\",\"none\"]}],\"backdrop-blur\":[{\"backdrop-blur\":[n]}],\"backdrop-brightness\":[{\"backdrop-brightness\":[r]}],\"backdrop-contrast\":[{\"backdrop-contrast\":[l]}],\"backdrop-grayscale\":[{\"backdrop-grayscale\":[c]}],\"backdrop-hue-rotate\":[{\"backdrop-hue-rotate\":[u]}],\"backdrop-invert\":[{\"backdrop-invert\":[d]}],\"backdrop-opacity\":[{\"backdrop-opacity\":[v]}],\"backdrop-saturate\":[{\"backdrop-saturate\":[b]}],\"backdrop-sepia\":[{\"backdrop-sepia\":[w]}],\"border-collapse\":[{border:[\"collapse\",\"separate\"]}],\"border-spacing\":[{\"border-spacing\":[s]}],\"border-spacing-x\":[{\"border-spacing-x\":[s]}],\"border-spacing-y\":[{\"border-spacing-y\":[s]}],\"table-layout\":[{table:[\"auto\",\"fixed\"]}],caption:[{caption:[\"top\",\"bottom\"]}],transition:[{transition:[\"none\",\"all\",\"\",\"colors\",\"opacity\",\"shadow\",\"transform\",L]}],duration:[{duration:z()}],ease:[{ease:[\"linear\",\"in\",\"out\",\"in-out\",L]}],delay:[{delay:z()}],animate:[{animate:[\"none\",\"spin\",\"ping\",\"pulse\",\"bounce\",L]}],transform:[{transform:[\"\",\"gpu\",\"none\"]}],scale:[{scale:[x]}],\"scale-x\":[{\"scale-x\":[x]}],\"scale-y\":[{\"scale-y\":[x]}],rotate:[{rotate:[I,L]}],\"translate-x\":[{\"translate-x\":[k]}],\"translate-y\":[{\"translate-y\":[k]}],\"skew-x\":[{\"skew-x\":[S]}],\"skew-y\":[{\"skew-y\":[S]}],\"transform-origin\":[{origin:[\"center\",\"top\",\"top-right\",\"right\",\"bottom-right\",\"bottom\",\"bottom-left\",\"left\",\"top-left\",L]}],accent:[{accent:[\"auto\",e]}],appearance:[{appearance:[\"none\",\"auto\"]}],cursor:[{cursor:[\"auto\",\"default\",\"pointer\",\"wait\",\"text\",\"move\",\"help\",\"not-allowed\",\"none\",\"context-menu\",\"progress\",\"cell\",\"crosshair\",\"vertical-text\",\"alias\",\"copy\",\"no-drop\",\"grab\",\"grabbing\",\"all-scroll\",\"col-resize\",\"row-resize\",\"n-resize\",\"e-resize\",\"s-resize\",\"w-resize\",\"ne-resize\",\"nw-resize\",\"se-resize\",\"sw-resize\",\"ew-resize\",\"ns-resize\",\"nesw-resize\",\"nwse-resize\",\"zoom-in\",\"zoom-out\",L]}],\"caret-color\":[{caret:[e]}],\"pointer-events\":[{\"pointer-events\":[\"none\",\"auto\"]}],resize:[{resize:[\"none\",\"y\",\"x\",\"\"]}],\"scroll-behavior\":[{scroll:[\"auto\",\"smooth\"]}],\"scroll-m\":[{\"scroll-m\":P()}],\"scroll-mx\":[{\"scroll-mx\":P()}],\"scroll-my\":[{\"scroll-my\":P()}],\"scroll-ms\":[{\"scroll-ms\":P()}],\"scroll-me\":[{\"scroll-me\":P()}],\"scroll-mt\":[{\"scroll-mt\":P()}],\"scroll-mr\":[{\"scroll-mr\":P()}],\"scroll-mb\":[{\"scroll-mb\":P()}],\"scroll-ml\":[{\"scroll-ml\":P()}],\"scroll-p\":[{\"scroll-p\":P()}],\"scroll-px\":[{\"scroll-px\":P()}],\"scroll-py\":[{\"scroll-py\":P()}],\"scroll-ps\":[{\"scroll-ps\":P()}],\"scroll-pe\":[{\"scroll-pe\":P()}],\"scroll-pt\":[{\"scroll-pt\":P()}],\"scroll-pr\":[{\"scroll-pr\":P()}],\"scroll-pb\":[{\"scroll-pb\":P()}],\"scroll-pl\":[{\"scroll-pl\":P()}],\"snap-align\":[{snap:[\"start\",\"end\",\"center\",\"align-none\"]}],\"snap-stop\":[{snap:[\"normal\",\"always\"]}],\"snap-type\":[{snap:[\"none\",\"x\",\"y\",\"both\"]}],\"snap-strictness\":[{snap:[\"mandatory\",\"proximity\"]}],touch:[{touch:[\"auto\",\"none\",\"manipulation\"]}],\"touch-x\":[{\"touch-pan\":[\"x\",\"left\",\"right\"]}],\"touch-y\":[{\"touch-pan\":[\"y\",\"up\",\"down\"]}],\"touch-pz\":[\"touch-pinch-zoom\"],select:[{select:[\"none\",\"text\",\"all\",\"auto\"]}],\"will-change\":[{\"will-change\":[\"auto\",\"scroll\",\"contents\",\"transform\",L]}],fill:[{fill:[e,\"none\"]}],\"stroke-w\":[{stroke:[N,A,M]}],stroke:[{stroke:[e,\"none\"]}],sr:[\"sr-only\",\"not-sr-only\"],\"forced-color-adjust\":[{\"forced-color-adjust\":[\"auto\",\"none\"]}]},conflictingClassGroups:{overflow:[\"overflow-x\",\"overflow-y\"],overscroll:[\"overscroll-x\",\"overscroll-y\"],inset:[\"inset-x\",\"inset-y\",\"start\",\"end\",\"top\",\"right\",\"bottom\",\"left\"],\"inset-x\":[\"right\",\"left\"],\"inset-y\":[\"top\",\"bottom\"],flex:[\"basis\",\"grow\",\"shrink\"],gap:[\"gap-x\",\"gap-y\"],p:[\"px\",\"py\",\"ps\",\"pe\",\"pt\",\"pr\",\"pb\",\"pl\"],px:[\"pr\",\"pl\"],py:[\"pt\",\"pb\"],m:[\"mx\",\"my\",\"ms\",\"me\",\"mt\",\"mr\",\"mb\",\"ml\"],mx:[\"mr\",\"ml\"],my:[\"mt\",\"mb\"],size:[\"w\",\"h\"],\"font-size\":[\"leading\"],\"fvn-normal\":[\"fvn-ordinal\",\"fvn-slashed-zero\",\"fvn-figure\",\"fvn-spacing\",\"fvn-fraction\"],\"fvn-ordinal\":[\"fvn-normal\"],\"fvn-slashed-zero\":[\"fvn-normal\"],\"fvn-figure\":[\"fvn-normal\"],\"fvn-spacing\":[\"fvn-normal\"],\"fvn-fraction\":[\"fvn-normal\"],\"line-clamp\":[\"display\",\"overflow\"],rounded:[\"rounded-s\",\"rounded-e\",\"rounded-t\",\"rounded-r\",\"rounded-b\",\"rounded-l\",\"rounded-ss\",\"rounded-se\",\"rounded-ee\",\"rounded-es\",\"rounded-tl\",\"rounded-tr\",\"rounded-br\",\"rounded-bl\"],\"rounded-s\":[\"rounded-ss\",\"rounded-es\"],\"rounded-e\":[\"rounded-se\",\"rounded-ee\"],\"rounded-t\":[\"rounded-tl\",\"rounded-tr\"],\"rounded-r\":[\"rounded-tr\",\"rounded-br\"],\"rounded-b\":[\"rounded-br\",\"rounded-bl\"],\"rounded-l\":[\"rounded-tl\",\"rounded-bl\"],\"border-spacing\":[\"border-spacing-x\",\"border-spacing-y\"],\"border-w\":[\"border-w-s\",\"border-w-e\",\"border-w-t\",\"border-w-r\",\"border-w-b\",\"border-w-l\"],\"border-w-x\":[\"border-w-r\",\"border-w-l\"],\"border-w-y\":[\"border-w-t\",\"border-w-b\"],\"border-color\":[\"border-color-t\",\"border-color-r\",\"border-color-b\",\"border-color-l\"],\"border-color-x\":[\"border-color-r\",\"border-color-l\"],\"border-color-y\":[\"border-color-t\",\"border-color-b\"],\"scroll-m\":[\"scroll-mx\",\"scroll-my\",\"scroll-ms\",\"scroll-me\",\"scroll-mt\",\"scroll-mr\",\"scroll-mb\",\"scroll-ml\"],\"scroll-mx\":[\"scroll-mr\",\"scroll-ml\"],\"scroll-my\":[\"scroll-mt\",\"scroll-mb\"],\"scroll-p\":[\"scroll-px\",\"scroll-py\",\"scroll-ps\",\"scroll-pe\",\"scroll-pt\",\"scroll-pr\",\"scroll-pb\",\"scroll-pl\"],\"scroll-px\":[\"scroll-pr\",\"scroll-pl\"],\"scroll-py\":[\"scroll-pt\",\"scroll-pb\"],touch:[\"touch-x\",\"touch-y\",\"touch-pz\"],\"touch-x\":[\"touch\"],\"touch-y\":[\"touch\"],\"touch-pz\":[\"touch\"]},conflictingClassGroupModifiers:{\"font-size\":[\"leading\"]}}}),Z=w(J);function Q(e){var t,n,r=\"\";if(\"string\"==typeof e||\"number\"==typeof e)r+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(n=Q(e[t]))&&(r&&(r+=\" \"),r+=n)}else for(n in e)e[n]&&(r&&(r+=\" \"),r+=n);return r}function ee(){for(var e,t,n=0,r=\"\",o=arguments.length;n<o;n++)(e=arguments[n])&&(t=Q(e))&&(r&&(r+=\" \"),r+=t);return r}var te=function(){return Z(ee.apply(void 0,arguments))},ne=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.forEach((function(e){return null==e?void 0:e.apply(void 0,n)}))}},re=function(e){var t={0:\"gap-0\",xxs:\"gap-1\",xs:\"gap-2\",sm:\"gap-3\",md:\"gap-4\",lg:\"gap-5\",xl:\"gap-6\",\"2xl\":\"gap-8\"};return t[e]||t.md},oe={1:\"grid-cols-1\",2:\"grid-cols-2\",3:\"grid-cols-3\",4:\"grid-cols-4\",5:\"grid-cols-5\",6:\"grid-cols-6\",7:\"grid-cols-7\",8:\"grid-cols-8\",9:\"grid-cols-9\",10:\"grid-cols-10\",11:\"grid-cols-11\",12:\"grid-cols-12\"},ie=[\"variant\",\"size\",\"type\",\"tag\",\"className\",\"children\",\"disabled\",\"destructive\",\"icon\",\"iconPosition\",\"loading\"];function se(){return se=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},se.apply(null,arguments)}var ae=(0,o.forwardRef)((function(e,t){var n,r,o,s,a=e.variant,l=void 0===a?\"primary\":a,c=e.size,u=void 0===c?\"md\":c,d=e.type,f=void 0===d?\"button\":d,h=e.tag,p=void 0===h?\"button\":h,m=e.className,g=e.children,v=e.disabled,y=void 0!==v&&v,b=e.destructive,x=void 0!==b&&b,w=e.icon,E=void 0===w?null:w,S=e.iconPosition,_=void 0===S?\"left\":S,k=e.loading,C=void 0!==k&&k,P=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,ie),T=C?\"opacity-50 disabled:cursor-not-allowed\":\"\",O=null===(n={primary:\"text-text-on-color bg-button-primary hover:bg-button-primary-hover border-button-primary hover:border-button-primary-hover disabled:bg-button-disabled disabled:border-button-disabled\",secondary:\"text-text-on-color bg-button-secondary hover:bg-button-secondary-hover border-button-secondary hover:border-button-secondary-hover disabled:bg-button-disabled disabled:border-button-disabled\",outline:\"text-button-tertiary-color border border-border-subtle bg-button-tertiary hover:bg-button-tertiary-hover hover:border-border-subtle disabled:bg-button-tertiary disabled:border-border-disabled\",ghost:\"text-text-primary bg-transparent border border-transparent hover:bg-button-tertiary-hover\",link:\"text-link-primary bg-transparent hover:text-link-primary-hover hover:underline p-0 border-0 leading-none\"})||void 0===n?void 0:n[l],R=x&&!y?null===(r={primary:\"bg-button-danger hover:bg-button-danger-hover border-button-danger hover:border-button-danger-hover\",outline:\"text-button-danger border border-button-danger hover:border-button-danger bg-button-tertiary hover:bg-field-background-error\",ghost:\"text-button-danger hover:bg-field-background-error\",link:\"text-button-danger hover:text-button-danger-secondary\"})||void 0===r?void 0:r[l]:\"\",N=null===(o={xs:\"p-1 rounded-sm [&>svg]:h-4 [&>svg]:w-4\",sm:\"p-2 rounded-sm [&>svg]:h-4 [&>svg]:w-4\",md:\"p-2.5 rounded-md text-sm [&>svg]:h-5 [&>svg]:w-5\",lg:\"p-3 rounded-lg text-base [&>svg]:h-6 [&>svg]:w-6\"})||void 0===o?void 0:o[u],A=null,j=\"\";E&&(j=\"flex items-center justify-center gap-1\",\"left\"===_?s=E:A=E);var M=p;return i().createElement(M,se({ref:t,type:f,className:te(j,\"border border-solid cursor-pointer transition-colors duration-300 ease-in-out text-xs font-semibold focus:ring-2 focus:ring-toggle-on focus:ring-offset-2 disabled:text-text-disabled\",N,O,R,T,m),disabled:y},P),s,g,A)})),le=ae;let ce=(e=21)=>{let t=\"\",n=crypto.getRandomValues(new Uint8Array(e));for(;e--;)t+=\"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\"[63&n[e]];return t};var ue=[\"id\",\"onChange\",\"value\",\"defaultValue\",\"size\",\"disabled\",\"label\",\"name\",\"className\"];function de(){return de=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},de.apply(null,arguments)}function fe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var he=function(e){var t=e.label,n=e.switchId,r=e.disabled,i=void 0!==r&&r,s=e.children;if((0,o.isValidElement)(t))return React.createElement(\"div\",{className:te(\"inline-flex items-center gap-3\",\"items-start\")},s,t);var a,l,c,u,d,f=!(null!=t&&t.heading||null!=t&&t.description),h=null!=t&&t.heading&&null!=t&&t.description?\"items-start\":\"items-center\";return f?s:React.createElement(\"div\",{className:te(\"inline-flex\",h,\"gap-3\")},s,React.createElement(\"label\",{htmlFor:n,className:te(!i&&\"cursor-pointer\")},(c=void 0===(l=(a=t||{}).heading)?\"\":l,d=void 0===(u=a.description)?\"\":u,React.createElement(\"div\",{className:\"space-y-1.5\"},c&&React.createElement(\"p\",{className:\"text-text-primary text-base font-medium leading-4 m-0\"},c),d&&React.createElement(\"p\",{className:\"text-text-secondary text-sm font-normal leading-5 m-0\"},d)))))},pe=function(e,t){var n,r,i=e.id,s=e.onChange,a=e.value,l=e.defaultValue,c=void 0!==l&&l,u=e.size,d=void 0===u?\"lg\":u,f=e.disabled,h=void 0!==f&&f,p=e.label,m=void 0===p?{heading:\"\",description:\"\"}:p,g=e.name,v=e.className,y=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,ue),b=(0,o.useMemo)((function(){return void 0!==a}),[a]),x=(0,o.useMemo)((function(){return i||\"switch-\".concat(ce())}),[]),w=(n=(0,o.useState)(c),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(n,r)||function(e,t){if(e){if(\"string\"==typeof e)return fe(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?fe(e,t):void 0}}(n,r)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),E=w[0],S=w[1],_=\"primary\",k=(0,o.useCallback)((function(){return b?a:E}),[b,a,E]),C={primary:{input:\"bg-toggle-off hover:bg-toggle-off-hover checked:bg-toggle-on checked:hover:bg-toggle-on-hover focus:ring focus:ring-toggle-on focus:ring-offset-4 border border-solid border-toggle-off-border checked:border-toggle-on-border shadow-toggleContainer focus:outline-none checked:focus:border-toggle-on-border focus:border-toggle-off-border\",toggleDial:\"bg-toggle-dial-background shadow-toggleDial\"}},P={lg:{container:\"w-11 h-6\",toggleDial:\"size-4 top-2/4 left-1 -translate-y-2/4 peer-checked:translate-x-5 before:w-10 before:h-10 before:rounded-full before:absolute before:top-2/4 before:left-2/4 before:-translate-y-2/4 before:-translate-x-2/4\"},sm:{container:\"w-9 h-5\",toggleDial:\"size-3 top-2/4 left-1 -translate-y-2/4 peer-checked:translate-x-4 before:w-10 before:h-10 before:rounded-full before:absolute before:top-2/4 before:left-2/4 before:-translate-y-2/4 before:-translate-x-2/4\"}};return React.createElement(he,{label:m,switchId:x,disabled:h},React.createElement(\"div\",{className:te(\"relative inline-block cursor-pointer rounded-full shrink-0\",P[d].container,v)},React.createElement(\"input\",de({ref:t,id:x,type:\"checkbox\",className:te(\"peer appearance-none absolute bg-blue-gray-100 rounded-full cursor-pointer transition-colors duration-300 h-full w-full  before:content-[''] checked:before:content-[''] m-0 checked:[background-image:none]\",C[_].input,h&&\"bg-toggle-off-disabled disabled:border-transparent shadow-none disabled:cursor-not-allowed\"),checked:k(),onChange:function(e){if(!h){var t=e.target.checked;b||S(t),\"function\"==typeof s&&s(t)}},disabled:h,name:g},y)),React.createElement(\"label\",{htmlFor:x,className:te(\"bg-white border border-blue-gray-100 rounded-full absolute cursor-pointer shadow-md before:content[''] before:transition-opacity before:opacity-0 hover:before:opacity-10 before:hidden border-none transition-all duration-300\",P[d].toggleDial,C[_].toggleDial,h&&\"peer-disabled:cursor-not-allowed\")})))},me=(0,o.forwardRef)(pe);me.displayName=\"Switch\";var ge=me;const ve=(...e)=>e.filter(((e,t,n)=>Boolean(e)&&n.indexOf(e)===t)).join(\" \");var ye={xmlns:\"http://www.w3.org/2000/svg\",width:24,height:24,viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:2,strokeLinecap:\"round\",strokeLinejoin:\"round\"};const be=(0,o.forwardRef)((({color:e=\"currentColor\",size:t=24,strokeWidth:n=2,absoluteStrokeWidth:r,className:i=\"\",children:s,iconNode:a,...l},c)=>(0,o.createElement)(\"svg\",{ref:c,...ye,width:t,height:t,stroke:e,strokeWidth:r?24*Number(n)/Number(t):n,className:ve(\"lucide\",i),...l},[...a.map((([e,t])=>(0,o.createElement)(e,t))),...Array.isArray(s)?s:[s]]))),xe=(e,t)=>{const n=(0,o.forwardRef)((({className:n,...r},i)=>{return(0,o.createElement)(be,{ref:i,iconNode:t,className:ve(`lucide-${s=e,s.replace(/([a-z0-9])([A-Z])/g,\"$1-$2\").toLowerCase()}`,n),...r});var s}));return n.displayName=`${e}`,n},we=xe(\"Minus\",[[\"path\",{d:\"M5 12h14\",key:\"1ays0h\"}]]),Ee=xe(\"Check\",[[\"path\",{d:\"M20 6 9 17l-5-5\",key:\"1gmf2c\"}]]);var Se=[\"id\",\"label\",\"defaultChecked\",\"checked\",\"onChange\",\"value\",\"indeterminate\",\"disabled\",\"size\"];function _e(){return _e=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_e.apply(null,arguments)}function ke(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var Ce=function(e,t){var n,r,i,s,a=e.id,l=e.label,c=e.defaultChecked,u=void 0!==c&&c,d=e.checked,f=e.onChange,h=(e.value,e.indeterminate),p=e.disabled,m=e.size,g=void 0===m?\"md\":m,v=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,Se),y=(0,o.useMemo)((function(){return a||\"checkbox-\".concat(ce())}),[a]),b=(0,o.useMemo)((function(){return void 0!==d}),[d]),x=(i=(0,o.useState)(u||!1),s=2,function(e){if(Array.isArray(e))return e}(i)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(i,s)||function(e,t){if(e){if(\"string\"==typeof e)return ke(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ke(e,t):void 0}}(i,s)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),w=x[0],E=x[1],S=\"primary\",_={sm:{checkbox:\"size-4 rounded-sm\",icon:\"size-3\"},md:{checkbox:\"size-5 rounded\",icon:\"size-4\"}},k={primary:{checkbox:\"border-border-strong hover:border-border-interactive checked:border-border-interactive bg-white checked:bg-toggle-on checked:hover:bg-toggle-on-hover checked:hover:border-toggle-on-hover focus:ring-2 focus:ring-offset-4 focus:ring-focus\",icon:\"text-white\"}},C=(0,o.useCallback)((function(){return b?d:w}),[b,d,w]),P=(0,o.useCallback)((function(){return(0,o.isValidElement)(l)?l:l.heading||l.description?React.createElement(\"div\",{className:\"space-y-1.5\"},l.heading&&React.createElement(\"p\",{className:\"text-text-primary text-base font-medium leading-4 m-0\"},l.heading),l.description&&React.createElement(\"p\",{className:\"text-text-secondary text-sm font-normal leading-5 m-0\"},l.description)):null}),[l]);return React.createElement(\"div\",{className:te(\"inline-flex items-center\",!!l&&\"items-start\")},React.createElement(\"label\",{className:te(\"relative flex items-center rounded-full\",!p&&\"cursor-pointer\"),htmlFor:y},React.createElement(\"input\",_e({ref:t,id:y,type:\"checkbox\",className:te(\"peer relative cursor-pointer appearance-none transition-all m-0 before:content-[''] checked:before:content-[''] checked:before:hidden before:hidden !border-1.5 border-solid\",k[S].checkbox,_[g].checkbox,p&&\"disabled:bg-white checked:disabled:bg-white disabled:border-border-disabled checked:disabled:border-border-disabled\"),checked:C(),onChange:function(e){if(!p){var t=e.target.checked;b||E(t),\"function\"==typeof f&&f(t)}},disabled:p},v)),React.createElement(\"span\",{className:te(\"pointer-events-none inline-flex items-center absolute top-2/4 left-2/4 -translate-y-2/4 -translate-x-2/4 text-white opacity-0 transition-opacity peer-checked:opacity-100\",k[S].icon,p&&\"peer-disabled:text-border-disabled\")},h?React.createElement(we,{className:te(null===(n=_[g])||void 0===n?void 0:n.icon)}):React.createElement(Ee,{className:te(null===(r=_[g])||void 0===r?void 0:r.icon)}))),!!l&&React.createElement(\"label\",{className:te(\"ml-3\",!p&&\"cursor-pointer\"),htmlFor:y},P()))},Pe=(0,o.forwardRef)(Ce);Pe.displayName=\"Checkbox\";var Te=Pe,Oe={primary:{checkbox:\"border-border-strong hover:border-border-interactive checked:border-border-interactive bg-white checked:bg-toggle-on checked:hover:bg-toggle-on-hover checked:hover:border-toggle-on-hover focus:ring-2 focus:ring-offset-4 focus:ring-focus\",icon:\"text-white\"}},Re={sm:{checkbox:\"size-4\",icon:\"size-1.5\"},md:{checkbox:\"size-5\",icon:\"size-2\"}},Ne={xs:\"py-1 px-1 text-sm gap-0.5 [&>svg]:h-4 [&>svg]:w-4\",sm:\"py-2 px-2 text-base gap-1 [&>svg]:h-4 [&>svg]:w-4\",md:\"py-2.5 px-2.5 text-base gap-1 [&>svg]:h-5 [&>svg]:w-5\"},Ae=[\"id\",\"label\",\"value\",\"children\",\"disabled\",\"icon\",\"inlineIcon\",\"hideSelection\",\"reversePosition\",\"borderOn\",\"badgeItem\",\"useSwitch\"],je=[\"id\",\"children\",\"value\",\"disabled\",\"size\"];function Me(){return Me=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Me.apply(null,arguments)}function Ie(e){return Ie=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ie(e)}function De(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Le(e,t){if(e){if(\"string\"==typeof e)return Fe(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Fe(e,t):void 0}}function Fe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var ze=(0,o.createContext)(),Be=function(){return(0,o.useContext)(ze)},Ve=function(e){var t,n=e.children,r=e.name,s=e.style,a=void 0===s?\"simple\":s,l=e.size,c=void 0===l?\"md\":l,u=e.value,d=e.defaultValue,f=e.by,h=void 0===f?\"id\":f,p=e.as,m=void 0===p?\"div\":p,g=e.onChange,v=e.className,y=e.disableGroup,b=void 0!==y&&y,x=e.vertical,w=void 0!==x&&x,E=e.columns,S=void 0===E?4:E,_=e.multiSelection,k=void 0!==_&&_,C=(0,o.useMemo)((function(){return void 0!==u}),[u]),P=(0,o.useMemo)((function(){return r||\"radio-button-group-\".concat(ce())}),[r]);t=C?u:k?null!=d?d:[]:d;var T,O,R=(T=(0,o.useState)(t),O=2,function(e){if(Array.isArray(e))return e}(T)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(T,O)||Le(T,O)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),N=R[0],A=R[1],j=(0,o.useCallback)((function(e){if(k)A((function(t){var n=t.includes(e)?t.filter((function(t){return t!==e})):[].concat(function(e){return function(e){if(Array.isArray(e))return Fe(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||Le(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}(t),[e]);return\"function\"==typeof g&&g(n),n}));else{if(C||A(e),\"function\"!=typeof g)return;g(e)}}),[g]);v=te(\"grid grid-cols-4 gap-2\",oe[S],\"tile\"===a&&\"gap-0\",w&&\"grid-cols-1\",v);var M=te(\"tile\"===a?\"border border-border-subtle border-solid rounded-md shadow-sm\":\"gap-6\",v),I=function(){return i().createElement(ze.Provider,{value:{name:P,value:C?u:N,by:h,onChange:j,isControlled:C,disableAll:b,style:a,columns:S,multiSelection:k,size:c}},i().Children.map(n,(function(e){return(0,o.isValidElement)(e)?e:null})))};return i().createElement(i().Fragment,null,\"tile\"===a?i().createElement(\"div\",{className:M},I()):i().createElement(m,m===o.Fragment?{}:{className:v},I()))};Ve.displayName=\"RadioButton.Group\";var We=function(e,t){var n,r=e.id,s=e.label,a=e.value,l=e.children,c=e.disabled,u=e.icon,d=void 0===u?null:u,f=e.inlineIcon,h=void 0!==f&&f,p=e.hideSelection,m=void 0!==p&&p,g=e.reversePosition,v=void 0!==g&&g,y=e.borderOn,b=void 0!==y&&y,x=e.badgeItem,w=void 0===x?null:x,E=e.useSwitch,S=void 0!==E&&E,_=De(e,Ae),k=Be(),C=k.name,P=k.value,T=k.by,O=k.onChange,R=k.disableAll,N=k.checked,A=k.multiSelection,j=k.size,M=\"primary\",I=(0,o.useMemo)((function(){return r||\"radio-button-\".concat(ce())}),[r]),D=(0,o.useMemo)((function(){return R||c}),[R,c]),L=(0,o.useMemo)((function(){return A?Array.isArray(P)&&P.includes(a):void 0!==N?N:Ie(P)===Ie(a)&&(\"string\"==typeof P?P===a:Array.isArray(P)?P.includes(a):P[T]===a[T])}),[P,a,N]),F=(0,o.useCallback)((function(){return(0,o.isValidElement)(s)?s:s.heading?i().createElement(\"div\",{className:te(!h&&\"space-y-1.5 mt-[2px]\",v&&(S?\"ml-10\":\"ml-4\"),h&&\"flex gap-2\")},d&&i().createElement(\"span\",null,d,\" \"),i().createElement(\"div\",{className:te(\"space-y-1.5\")},i().createElement(\"p\",{className:te(\"text-text-primary text-sm font-medium leading-4 m-0\",d&&\"mt-1\")},s.heading),s.description&&i().createElement(\"p\",{className:\"text-text-tertiary text-sm font-normal leading-5 m-0\"},s.description))):null}),[s]);return\"tile\"===k.style?i().createElement($e,{id:r,label:s,value:a,disabled:c,size:j},l):i().createElement(\"label\",{className:te(\"inline-flex items-center relative cursor-pointer transition-all duration-300\",!!s&&\"items-start justify-between min-w-[180px] \",b&&\"border border-border-subtle border-solid rounded-md shadow-sm hover:ring-2 hover:ring-border-interactive\",b&&L&&\"ring-2 ring-border-interactive\",\"sm\"===j?\"px-3 py-3\":\"px-4 py-4\",\"pr-12\",D&&\"cursor-not-allowed\"),htmlFor:I,onClick:function(){D||(A?O(a,!L):O(a))}},!!s&&i().createElement(\"label\",{className:te(\"cursor-pointer\",D&&\"cursor-not-allowed\"),htmlFor:I},F()),i().createElement(\"label\",{className:te(\"absolute mr-[2px] right-3 flex items-center cursor-pointer rounded-full\",v&&\"left-0\",D&&\"cursor-not-allowed\")},!!w&&w,!m&&(S?i().createElement(ge,{defaultValue:!1,size:\"md\"===j?\"lg\":\"sm\",onChange:function(){A?O(a,!L):O(a)},checked:L}):i().createElement(\"span\",{className:\"relative\"},i().createElement(\"input\",Me({ref:t,id:I,type:A?\"checkbox\":\"radio\",className:te(\"peer flex relative cursor-pointer appearance-none transition-all m-0 before:content-[''] checked:before:content-[''] checked:before:hidden before:hidden !border-1.5 border-solid\",!A&&\"rounded-full\",Oe[M].checkbox,Re[j].checkbox,D&&\"disabled:bg-white checked:disabled:bg-white disabled:border-border-disabled checked:disabled:border-border-disabled cursor-not-allowed\"),name:C,value:a,onChange:function(e){return O(e.target.value)},checked:L,disabled:D},_)),i().createElement(\"span\",{className:te(\"inline-flex items-center absolute top-2/4 left-2/4 -translate-y-2/4 -translate-x-2/4 text-white opacity-0 transition-opacity peer-checked:opacity-100\",Oe[M].icon,D&&\"peer-disabled:text-border-disabled cursor-not-allowed\")},A?i().createElement(Ee,{className:\"sm\"===j?\"size-3\":\"size-4\"}):i().createElement(\"div\",{className:te(\"rounded-full bg-current\",\"sm\"===j&&\"mt-[2px]\",null===(n=Re[j])||void 0===n?void 0:n.icon)}))))))},Ue=(0,o.forwardRef)(We);Ue.displayName=\"RadioButton.Button\";var $e=function(e){var t=e.id,n=e.children,r=e.value,s=e.disabled,a=e.size,l=void 0===a?\"md\":a,c=De(e,je),u=Be()||{},d=u.name,f=u.value,h=u.by,p=u.onChange,m=u.disableAll,g=u.checked,v=(0,o.useMemo)((function(){return t||\"radio-button-\".concat(ce())}),[t]),y=(0,o.useMemo)((function(){return m||s}),[m,s]),b=(0,o.useMemo)((function(){return void 0!==g?g:Ie(f)===Ie(r)&&(\"string\"==typeof f?f===r:Array.isArray(f)?f.includes(r):f[h]===r[h])}),[f,r,g,h]),x=te(\"bg-background-primary text-primary cursor-pointer flex items-center justify-center\",\"hover:bg-button-tertiary-hover\",\"focus:outline-none\",y?\"text-text-disabled cursor-not-allowed\":\"\",Ne[l],\"border-0 border-r border-border-subtle border-solid\");return i().createElement(i().Fragment,null,i().createElement(\"button\",Me({type:\"button\",id:v,className:te(x,\"first:rounded-tl first:rounded-bl first:border-0 first:border-r first:border-border-subtle last:rounded-tr last:rounded-br last:border-0\",b&&\"bg-button-disabled\"),onClick:function(){p&&p(r)},disabled:y},c),i().createElement(\"input\",{type:\"hidden\",value:r,name:d,checked:b,onChange:p}),n))},Ke=Object.assign(Ue,{Group:Ve,Button:Ue});const He=xe(\"X\",[[\"path\",{d:\"M18 6 6 18\",key:\"1bl5f8\"}],[\"path\",{d:\"m6 6 12 12\",key:\"d8bk6v\"}]]);var qe=function(e,t){var n=e.label,r=void 0===n?\"\":n,o=e.size,i=void 0===o?\"sm\":o,s=e.className,a=void 0===s?\"\":s,l=e.type,c=void 0===l?\"pill\":l,u=e.variant,d=void 0===u?\"neutral\":u,f=e.icon,h=void 0===f?null:f,p=e.disabled,m=void 0!==p&&p,g=e.onClose,v=void 0===g?function(){}:g,y=e.closable,b=void 0!==y&&y,x=e.onMouseDown,w=void 0===x?function(){}:x,E={neutral:\"bg-badge-background-gray hover:bg-badge-hover-gray text-badge-color-gray border-badge-border-gray\",red:\"bg-badge-background-red hover:bg-badge-hover-red text-badge-color-red border-badge-border-red\",yellow:\"bg-badge-background-yellow hover:bg-badge-hover-yellow text-badge-color-yellow border-badge-border-yellow\",green:\"bg-badge-background-green hover:bg-badge-hover-green text-badge-color-green border-badge-border-green\",blue:\"bg-badge-background-sky hover:bg-badge-hover-sky text-badge-color-sky border-badge-border-sky\",inverse:\"bg-background-inverse hover:bg-badge-hover-inverse text-text-inverse border-background-inverse\",disabled:\"bg-badge-background-disabled hover:bg-badge-hover-disabled text-badge-color-disabled border-badge-border-disabled disabled cursor-not-allowed\"},S=\"\",_=\"group relative justify-center flex items-center [&>svg]:h-4 [&>svg]:w-4 cursor-pointer\";return m?(S=E.disabled,_+=\" cursor-not-allowed disabled\"):S=E[d],r?React.createElement(\"span\",{className:te(\"font-medium border-badge-border-gray flex gap-1 items-center justify-center border border-solid\",{xs:\"py-0.5 px-1 text-xs\",sm:\"py-1 px-1.5 text-xs\",md:\"py-1 px-1.5 text-sm\",lg:\"py-1 px-1.5 text-base\"}[i],{pill:\"rounded-full\",rounded:\"rounded\"}[c],S,a),ref:t},h?React.createElement(\"span\",{className:\"justify-center flex items-center [&>svg]:h-4 [&>svg]:w-4\"},h):null,r,b&&React.createElement(\"span\",{className:_,onClick:m?null:v,onMouseDown:w,role:\"button\",tabIndex:0},React.createElement(\"span\",{className:\"sr-only\"},\"Remove \".concat(r)),React.createElement(He,null),React.createElement(\"span\",{className:\"absolute -inset-1\"}))):null},Ye=(0,o.forwardRef)(qe);Ye.displayName=\"Badge\";var Ge=Ye,Xe=[\"id\",\"defaultValue\",\"value\",\"size\",\"className\",\"disabled\",\"onChange\",\"error\",\"onError\"];function Je(){return Je=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Je.apply(null,arguments)}function Ze(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var Qe=function(e,t){var n,r,i=e.id,s=e.defaultValue,a=void 0===s?\"\":s,l=e.value,c=e.size,u=void 0===c?\"sm\":c,d=e.className,f=void 0===d?\"\":d,h=e.disabled,p=void 0!==h&&h,m=e.onChange,g=void 0===m?function(){}:m,v=e.error,y=void 0!==v&&v,b=e.onError,x=void 0===b?function(){}:b,w=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,Xe),E=(0,o.useMemo)((function(){return i||\"input-textarea-\".concat(ce())}),[i]),S=(0,o.useMemo)((function(){return void 0!==l}),[l]),_=(n=(0,o.useState)(a),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(n,r)||function(e,t){if(e){if(\"string\"==typeof e)return Ze(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ze(e,t):void 0}}(n,r)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),k=_[0],C=_[1],P=(0,o.useCallback)((function(){return S?l:k}),[S,l,k]),T=p?\"hover:border-border-disabled\":\"hover:border-border-strong\",O=y?\"focus:border-focus-error-border focus:ring-field-color-error bg-field-background-error\":\"\",R=p?\"border-border-disabled bg-field-background-disabled cursor-not-allowed text-text-disabled\":\"\";return React.createElement(\"textarea\",Je({ref:t,id:E,className:te(\"py-2 rounded border border-solid border-border-subtle bg-field-secondary-background font-normal placeholder-text-tertiary text-text-primary\",R,{sm:\"px-3 rounded text-xs\",md:\"px-3 rounded-md text-sm\",lg:\"px-4 rounded-lg text-base\"}[u],\"focus:border-focus-border focus:ring-2 focus:ring-toggle-on focus:ring-offset-2\",T,O,f),disabled:p,onChange:function(e){if(!p){var t=e.target.value;S||C(t),\"function\"==typeof g&&g(t)}},onInvalid:x,value:P()},w))},et=(0,o.forwardRef)(Qe);et.displayName=\"TextArea\";var tt=et,nt=function(e){var t,n,r,o,i=e.variant,s=void 0===i?\"primary\":i,a=e.size,l=void 0===a?\"md\":a,c=e.border,u=void 0===c?\"subtle\":c,d=e.url,f=void 0===d?\"\":d,h=e.children,p=e.className,m=null===(t={white:\"text-text-primary bg-background-primary\",gray:\"text-text-primary bg-background-secondary\",primary:\"text-text-on-color bg-background-brand\",primaryLight:\"text-text-primary bg-brand-background-50\",dark:\"text-text-on-color bg-button-secondary\"})||void 0===t?void 0:t[s],g=null===(n={xs:\"w-5 h-5 [&>svg]:h-3 [&>svg]:w-3 text-xs\",sm:\"w-6 h-6 [&>svg]:h-4 [&>svg]:w-4 text-sm\",md:\"w-8 h-8 [&>svg]:h-5 [&>svg]:w-5 text-base\",lg:\"w-10 h-10 [&>svg]:h-6 [&>svg]:w-6 text-lg\"})||void 0===n?void 0:n[l],v=null===(r={none:\"\",subtle:\"border border-solid border-border-transparent-subtle\",ring:\"border-4 border-solid border-border-white\"})||void 0===r?void 0:r[f&&\"none\"===u?\"subtle\":u],y=f?\"bg-cover bg-center bg-no-repeat\":\"\";return React.createElement(\"div\",{className:te(\"rounded-full overflow-hidden flex items-center justify-center\",!f&&m,g,v,y,p),style:f?{backgroundImage:\"url(\".concat(f,\")\")}:{}},h?\"string\"==typeof h?null==h||null===(o=h[0])||void 0===o?void 0:o.toUpperCase():h:null)};const rt=xe(\"Upload\",[[\"path\",{d:\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\",key:\"ih7n3h\"}],[\"polyline\",{points:\"17 8 12 3 7 8\",key:\"t8dd8p\"}],[\"line\",{x1:\"12\",x2:\"12\",y1:\"3\",y2:\"15\",key:\"widbto\"}]]);var ot=[\"id\",\"type\",\"defaultValue\",\"value\",\"size\",\"className\",\"disabled\",\"onChange\",\"error\",\"onError\",\"prefix\",\"suffix\"];function it(){return it=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},it.apply(null,arguments)}function st(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return at(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?at(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function at(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var lt=function(e,t){var n=e.id,r=e.type,i=void 0===r?\"text\":r,s=e.defaultValue,a=void 0===s?\"\":s,l=e.value,c=e.size,u=void 0===c?\"sm\":c,d=e.className,f=void 0===d?\"\":d,h=e.disabled,p=void 0!==h&&h,m=e.onChange,g=void 0===m?function(){}:m,v=e.error,y=void 0!==v&&v,b=e.onError,x=void 0===b?function(){}:b,w=e.prefix,E=void 0===w?null:w,S=e.suffix,_=void 0===S?null:S,k=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,ot),C=(0,o.useMemo)((function(){return n||\"input-\".concat(i,\"-\").concat(ce())}),[n]),P=(0,o.useMemo)((function(){return void 0!==l}),[l]),T=st((0,o.useState)(a),2),O=T[0],R=T[1],N=st((0,o.useState)(null),2),A=N[0],j=N[1],M=(0,o.useCallback)((function(){return P?l:O}),[P,l,O]),I=function(e){var t;p||(\"file\"===i?(t=e.target.files).length>0?j(t[0].name):j(null):t=e.target.value,P||\"file\"===i||R(t),\"function\"==typeof g&&g(t))},D=\"border border-solid border-border-subtle bg-field-secondary-background font-normal placeholder-text-tertiary text-text-primary w-full focus:outline-none\",L={sm:\"px-2 py-2 rounded\",md:\"px-2.5 py-2.5 rounded-md\",lg:\"px-3 py-3 rounded-lg\"},F={sm:\"text-xs\",md:\"text-base\",lg:\"text-base\"},z={sm:E?\"pl-8\":\"\",md:E?\"pl-9\":\"\",lg:E?\"pl-10\":\"\"},B={sm:_?\"pr-8\":\"\",md:_?\"pr-9\":\"\",lg:_?\"pr-10\":\"\"},V=p?\"hover:border-border-disabled\":\"hover:border-border-strong\",W=\"focus:border-focus-border focus:ring-2 focus:ring-toggle-on focus:ring-offset-2\",U=y?\"focus:border-focus-error-border focus:ring-field-color-error bg-field-background-error\":\"\",$=y?\"focus:border-focus-error-border focus:ring-field-color-error\":\"\",K=p?\"border-border-disabled bg-field-background-disabled cursor-not-allowed text-text-disabled\":\"\",H=p?\"border-border-disabled cursor-not-allowed text-text-disabled file:text-text-tertiary\":\"\",q=\"font-normal placeholder-text-tertiary text-text-primary pointer-events-none absolute inset-y-0 flex flex-1 items-center [&>svg]:h-4 [&>svg]:w-4\",Y=p?\"font-normal placeholder-text-tertiary text-icon-disabled pointer-events-none absolute inset-y-0 flex flex-1 items-center\":\"font-normal placeholder-text-tertiary text-field-placeholder pointer-events-none absolute inset-y-0 flex flex-1 items-center\",G=A?\"file:border-0 file:bg-transparent\":\"text-text-tertiary file:border-0 file:bg-transparent\";return\"file\"===i?React.createElement(\"div\",{className:te(\"relative flex focus-within:z-10\",f)},React.createElement(\"input\",it({ref:t,id:C,type:\"file\",className:te(D,H,L[u],F[u],W,V,$,G),disabled:p,onChange:I,onInvalid:x},k)),React.createElement(\"div\",{className:te(Y,\"right-0 pr-3\",{sm:\"[&>svg]:h-4 [&>svg]:w-4\",md:\"[&>svg]:h-5 [&>svg]:w-5\",lg:\"[&>svg]:h-6 [&>svg]:w-6\"}[u])},React.createElement(rt,null))):React.createElement(\"div\",{className:te(\"relative flex focus-within:z-10\",f)},E?React.createElement(\"div\",{className:te(q,\"left-0 pl-3\",F[u])},E):null,React.createElement(\"input\",it({ref:t,id:C,type:i,className:te(D,K,L[u],F[u],z[u],B[u],W,V,U),disabled:p,onChange:I,onInvalid:x,value:M()},k)),_?React.createElement(\"div\",{className:te(q,\"right-0 pr-3\",F[u])},_):null)},ct=(0,o.forwardRef)(lt);ct.displayName=\"Input\";var ut=ct,dt=[\"children\",\"tag\",\"size\",\"className\",\"variant\",\"required\"];function ft(){return ft=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ft.apply(null,arguments)}var ht=(0,o.forwardRef)((function(e,t){var n=e.children,r=void 0===n?null:n,o=e.tag,s=void 0===o?\"label\":o,a=e.size,l=void 0===a?\"sm\":a,c=e.className,u=void 0===c?\"\":c,d=e.variant,f=void 0===d?\"neutral\":d,h=e.required,p=void 0!==h&&h,m=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,dt);if(!r)return null;var g=\"\";p&&(g=\"after:content-['*'] after:text-field-required after:ml-0.5\");var v=s;return i().createElement(v,ft({ref:t,className:te(\"font-medium text-field-label flex items-center gap-0.5\",{xs:\"text-xs [&>*]:text-xs [&>svg]:h-3 [&>svg]:w-3\",sm:\"text-sm [&>*]:text-sm [&>svg]:h-4 [&>svg]:w-4\",md:\"text-base [&>*]:text-base [&>svg]:h-5 [&>svg]:w-5\"}[l],{neutral:\"text-field-label [&>*]:text-field-label\",help:\"text-field-helper [&>*]:text-field-helper\",error:\"text-support-error [&>*]:text-support-error\",disabled:\"text-field-color-disabled disabled cursor-not-allowed [&>*]:text-field-color-disabled\"}[f],g,u)},m),r)})),pt=ht,mt=function(e){var t=e.title,n=void 0===t?null:t,r=e.description,o=void 0===r?null:r,i=e.icon,s=void 0===i?null:i,a=e.iconPosition,l=void 0===a?\"right\":a,c=e.tag,u=void 0===c?\"h2\":c,d=e.size,f=void 0===d?\"sm\":d,h=e.className,p=void 0===h?\"\":h,m={xs:\"gap-1 [&>svg]:size-3.5\",sm:\"gap-1 [&>svg]:size-4\",md:\"gap-1.5 [&>svg]:size-5\",lg:\"gap-1.5 [&>svg]:size-5\"};if(!n)return null;var g=function(){var e=u;return React.createElement(e,{className:te(\"font-semibold p-0 m-0\",{xs:\"text-base [&>*]:text-base gap-1\",sm:\"text-lg [&>*]:text-lg gap-1\",md:\"text-xl [&>*]:text-xl gap-1.5\",lg:\"text-2xl [&>*]:text-2xl gap-1.5\"}[f])},n)};return o?React.createElement(\"div\",{className:p},React.createElement(\"div\",null,s&&\"left\"===l&&React.createElement(\"div\",{className:te(\"flex items-center\",m[f])},s,g()),s&&\"right\"===l&&React.createElement(\"div\",{className:te(\"flex items-center\",m[f])},g(),s),!s&&g()),React.createElement(\"span\",{className:te(\"text-text-secondary font-normal\",{xs:\"text-base\",sm:\"text-lg\",md:\"text-xl\",lg:\"text-2xl\"}[f])},o)):React.createElement(\"div\",{className:p},s&&\"left\"===l&&React.createElement(\"div\",{className:te(\"flex items-center\",m[f])},s,g()),s&&\"right\"===l&&React.createElement(\"div\",{className:te(\"flex items-center\",m[f])},g(),s),!s&&g())};const gt=xe(\"LoaderCircle\",[[\"path\",{d:\"M21 12a9 9 0 1 1-6.219-8.56\",key:\"13zald\"}]]);var vt=function(e){var t,n,r=e.variant,o=void 0===r?\"primary\":r,i=e.size,s=void 0===i?\"md\":i,a=e.icon,l=void 0===a?null:a,c=e.className,u=void 0===c?\"\":c,d=null===(t={primary:\"text-brand-primary-600 bg-background-primary\",secondary:\"text-background-primary bg-brand-primary-600\"})||void 0===t?void 0:t[o],f=null===(n={sm:\"[&>svg]:h-4 [&>svg]:w-4\",md:\"[&>svg]:h-5 [&>svg]:w-5\",lg:\"[&>svg]:h-6 [&>svg]:w-6\",xl:\"[&>svg]:h-8 [&>svg]:w-8\"})||void 0===n?void 0:n[s];return React.createElement(\"span\",{className:te(\"flex\",f,d,u)},l||React.createElement(gt,{className:\"animate-spin\"}))},yt=function(e){var t=e.progress,n=void 0===t?0:t,r=e.speed,o=void 0===r?200:r,i=e.className,s=void 0===i?\"\":i;if(!n)return null;var a=n;n<0&&(a=0),n>100&&(a=100);var l=\"translateX(-\".concat(100-a,\"%)\"),c=\"h-2 rounded-full bg-background-brand absolute left-0 top-0 w-full bottom-0 origin-left transition-transform duration-\".concat(o,\" ease-linear\");return React.createElement(\"div\",{className:te(\"h-2 rounded-full bg-misc-progress-background overflow-hidden relative\",s),role:\"progressbar\",\"aria-valuenow\":a,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\"},React.createElement(\"div\",{className:c,style:{transform:l}}))};function bt(e){return Et(e)?(e.nodeName||\"\").toLowerCase():\"#document\"}function xt(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function wt(e){var t;return null==(t=(Et(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function Et(e){return e instanceof Node||e instanceof xt(e).Node}function St(e){return e instanceof Element||e instanceof xt(e).Element}function _t(e){return e instanceof HTMLElement||e instanceof xt(e).HTMLElement}function kt(e){return\"undefined\"!=typeof ShadowRoot&&(e instanceof ShadowRoot||e instanceof xt(e).ShadowRoot)}function Ct(e){const{overflow:t,overflowX:n,overflowY:r,display:o}=At(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&![\"inline\",\"contents\"].includes(o)}function Pt(e){return[\"table\",\"td\",\"th\"].includes(bt(e))}function Tt(e){return[\":popover-open\",\":modal\"].some((t=>{try{return e.matches(t)}catch(e){return!1}}))}function Ot(e){const t=Rt(),n=St(e)?At(e):e;return\"none\"!==n.transform||\"none\"!==n.perspective||!!n.containerType&&\"normal\"!==n.containerType||!t&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!t&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"perspective\",\"filter\"].some((e=>(n.willChange||\"\").includes(e)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((e=>(n.contain||\"\").includes(e)))}function Rt(){return!(\"undefined\"==typeof CSS||!CSS.supports)&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}function Nt(e){return[\"html\",\"body\",\"#document\"].includes(bt(e))}function At(e){return xt(e).getComputedStyle(e)}function jt(e){return St(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.scrollX,scrollTop:e.scrollY}}function Mt(e){if(\"html\"===bt(e))return e;const t=e.assignedSlot||e.parentNode||kt(e)&&e.host||wt(e);return kt(t)?t.host:t}function It(e){const t=Mt(e);return Nt(t)?e.ownerDocument?e.ownerDocument.body:e.body:_t(t)&&Ct(t)?t:It(t)}function Dt(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);const o=It(e),i=o===(null==(r=e.ownerDocument)?void 0:r.body),s=xt(o);if(i){const e=Lt(s);return t.concat(s,s.visualViewport||[],Ct(o)?o:[],e&&n?Dt(e):[])}return t.concat(o,Dt(o,[],n))}function Lt(e){return e.parent&&Object.getPrototypeOf(e.parent)?e.frameElement:null}function Ft(e){let t=e.activeElement;for(;null!=(null==(n=t)||null==(n=n.shadowRoot)?void 0:n.activeElement);){var n;t=t.shadowRoot.activeElement}return t}function zt(e,t){if(!e||!t)return!1;const n=null==t.getRootNode?void 0:t.getRootNode();if(e.contains(t))return!0;if(n&&kt(n)){let n=t;for(;n;){if(e===n)return!0;n=n.parentNode||n.host}}return!1}function Bt(){const e=navigator.userAgentData;return null!=e&&e.platform?e.platform:navigator.platform}function Vt(){const e=navigator.userAgentData;return e&&Array.isArray(e.brands)?e.brands.map((e=>{let{brand:t,version:n}=e;return t+\"/\"+n})).join(\" \"):navigator.userAgent}function Wt(e){return!(0!==e.mozInputSource||!e.isTrusted)||(Kt()&&e.pointerType?\"click\"===e.type&&1===e.buttons:0===e.detail&&!e.pointerType)}function Ut(e){return!Vt().includes(\"jsdom/\")&&(!Kt()&&0===e.width&&0===e.height||Kt()&&1===e.width&&1===e.height&&0===e.pressure&&0===e.detail&&\"mouse\"===e.pointerType||e.width<1&&e.height<1&&0===e.pressure&&0===e.detail&&\"touch\"===e.pointerType)}function $t(){return/apple/i.test(navigator.vendor)}function Kt(){const e=/android/i;return e.test(Bt())||e.test(Vt())}function Ht(){return Bt().toLowerCase().startsWith(\"mac\")&&!navigator.maxTouchPoints}function qt(e,t){const n=[\"mouse\",\"pen\"];return t||n.push(\"\",void 0),n.includes(e)}function Yt(e){return(null==e?void 0:e.ownerDocument)||document}function Gt(e,t){if(null==t)return!1;if(\"composedPath\"in e)return e.composedPath().includes(t);const n=e;return null!=n.target&&t.contains(n.target)}function Xt(e){return\"composedPath\"in e?e.composedPath()[0]:e.target}const Jt=\"input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";function Zt(e){return _t(e)&&e.matches(Jt)}function Qt(e){e.preventDefault(),e.stopPropagation()}function en(e){return!!e&&\"combobox\"===e.getAttribute(\"role\")&&Zt(e)}const tn=Math.min,nn=Math.max,rn=Math.round,on=Math.floor,sn=e=>({x:e,y:e}),an={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"},ln={start:\"end\",end:\"start\"};function cn(e,t,n){return nn(e,tn(t,n))}function un(e,t){return\"function\"==typeof e?e(t):e}function dn(e){return e.split(\"-\")[0]}function fn(e){return e.split(\"-\")[1]}function hn(e){return\"x\"===e?\"y\":\"x\"}function pn(e){return\"y\"===e?\"height\":\"width\"}function mn(e){return[\"top\",\"bottom\"].includes(dn(e))?\"y\":\"x\"}function gn(e){return hn(mn(e))}function vn(e){return e.replace(/start|end/g,(e=>ln[e]))}function yn(e){return e.replace(/left|right|bottom|top/g,(e=>an[e]))}function bn(e){return\"number\"!=typeof e?function(e){return{top:0,right:0,bottom:0,left:0,...e}}(e):{top:e,right:e,bottom:e,left:e}}function xn(e){const{x:t,y:n,width:r,height:o}=e;return{width:r,height:o,top:n,left:t,right:t+r,bottom:n+o,x:t,y:n}}var wn=[\"input:not([inert])\",\"select:not([inert])\",\"textarea:not([inert])\",\"a[href]:not([inert])\",\"button:not([inert])\",\"[tabindex]:not(slot):not([inert])\",\"audio[controls]:not([inert])\",\"video[controls]:not([inert])\",'[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\"details>summary:first-of-type:not([inert])\",\"details:not([inert])\"].join(\",\"),En=\"undefined\"==typeof Element,Sn=En?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector,kn=!En&&Element.prototype.getRootNode?function(e){var t;return null==e||null===(t=e.getRootNode)||void 0===t?void 0:t.call(e)}:function(e){return null==e?void 0:e.ownerDocument},Cn=function e(t,n){var r;void 0===n&&(n=!0);var o=null==t||null===(r=t.getAttribute)||void 0===r?void 0:r.call(t,\"inert\");return\"\"===o||\"true\"===o||n&&t&&e(t.parentNode)},Pn=function e(t,n,r){for(var o=[],i=Array.from(t);i.length;){var s=i.shift();if(!Cn(s,!1))if(\"SLOT\"===s.tagName){var a=s.assignedElements(),l=e(a.length?a:s.children,!0,r);r.flatten?o.push.apply(o,l):o.push({scopeParent:s,candidates:l})}else{Sn.call(s,wn)&&r.filter(s)&&(n||!t.includes(s))&&o.push(s);var c=s.shadowRoot||\"function\"==typeof r.getShadowRoot&&r.getShadowRoot(s),u=!Cn(c,!1)&&(!r.shadowRootFilter||r.shadowRootFilter(s));if(c&&u){var d=e(!0===c?s.children:c.children,!0,r);r.flatten?o.push.apply(o,d):o.push({scopeParent:s,candidates:d})}else i.unshift.apply(i,s.children)}}return o},Tn=function(e){return!isNaN(parseInt(e.getAttribute(\"tabindex\"),10))},On=function(e){if(!e)throw new Error(\"No node provided\");return e.tabIndex<0&&(/^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName)||function(e){var t,n=null==e||null===(t=e.getAttribute)||void 0===t?void 0:t.call(e,\"contenteditable\");return\"\"===n||\"true\"===n}(e))&&!Tn(e)?0:e.tabIndex},Rn=function(e,t){return e.tabIndex===t.tabIndex?e.documentOrder-t.documentOrder:e.tabIndex-t.tabIndex},Nn=function(e){return\"INPUT\"===e.tagName},An=function(e){var t=e.getBoundingClientRect(),n=t.width,r=t.height;return 0===n&&0===r},jn=function(e,t){return!(t.disabled||Cn(t)||function(e){return Nn(e)&&\"hidden\"===e.type}(t)||function(e,t){var n=t.displayCheck,r=t.getShadowRoot;if(\"hidden\"===getComputedStyle(e).visibility)return!0;var o=Sn.call(e,\"details>summary:first-of-type\")?e.parentElement:e;if(Sn.call(o,\"details:not([open]) *\"))return!0;if(n&&\"full\"!==n&&\"legacy-full\"!==n){if(\"non-zero-area\"===n)return An(e)}else{if(\"function\"==typeof r){for(var i=e;e;){var s=e.parentElement,a=kn(e);if(s&&!s.shadowRoot&&!0===r(s))return An(e);e=e.assignedSlot?e.assignedSlot:s||a===e.ownerDocument?s:a.host}e=i}if(function(e){var t,n,r,o,i=e&&kn(e),s=null===(t=i)||void 0===t?void 0:t.host,a=!1;if(i&&i!==e)for(a=!!(null!==(n=s)&&void 0!==n&&null!==(r=n.ownerDocument)&&void 0!==r&&r.contains(s)||null!=e&&null!==(o=e.ownerDocument)&&void 0!==o&&o.contains(e));!a&&s;){var l,c,u;a=!(null===(c=s=null===(l=i=kn(s))||void 0===l?void 0:l.host)||void 0===c||null===(u=c.ownerDocument)||void 0===u||!u.contains(s))}return a}(e))return!e.getClientRects().length;if(\"legacy-full\"!==n)return!0}return!1}(t,e)||function(e){return\"DETAILS\"===e.tagName&&Array.prototype.slice.apply(e.children).some((function(e){return\"SUMMARY\"===e.tagName}))}(t)||function(e){if(/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName))for(var t=e.parentElement;t;){if(\"FIELDSET\"===t.tagName&&t.disabled){for(var n=0;n<t.children.length;n++){var r=t.children.item(n);if(\"LEGEND\"===r.tagName)return!!Sn.call(t,\"fieldset[disabled] *\")||!r.contains(e)}return!0}t=t.parentElement}return!1}(t))},Mn=function(e,t){return!(function(e){return function(e){return Nn(e)&&\"radio\"===e.type}(e)&&!function(e){if(!e.name)return!0;var t,n=e.form||kn(e),r=function(e){return n.querySelectorAll('input[type=\"radio\"][name=\"'+e+'\"]')};if(\"undefined\"!=typeof window&&void 0!==window.CSS&&\"function\"==typeof window.CSS.escape)t=r(window.CSS.escape(e.name));else try{t=r(e.name)}catch(e){return console.error(\"Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s\",e.message),!1}var o=function(e,t){for(var n=0;n<e.length;n++)if(e[n].checked&&e[n].form===t)return e[n]}(t,e.form);return!o||o===e}(e)}(t)||On(t)<0||!jn(e,t))},In=function(e){var t=parseInt(e.getAttribute(\"tabindex\"),10);return!!(isNaN(t)||t>=0)},Dn=function e(t){var n=[],r=[];return t.forEach((function(t,o){var i=!!t.scopeParent,s=i?t.scopeParent:t,a=function(e,t){var n=On(e);return n<0&&t&&!Tn(e)?0:n}(s,i),l=i?e(t.candidates):s;0===a?i?n.push.apply(n,l):n.push(s):r.push({documentOrder:o,tabIndex:a,item:t,isScope:i,content:l})})),r.sort(Rn).reduce((function(e,t){return t.isScope?e.push.apply(e,t.content):e.push(t.content),e}),[]).concat(n)},Ln=function(e,t){var n;return n=(t=t||{}).getShadowRoot?Pn([e],t.includeContainer,{filter:Mn.bind(null,t),flatten:!1,getShadowRoot:t.getShadowRoot,shadowRootFilter:In}):function(e,t,n){if(Cn(e))return[];var r=Array.prototype.slice.apply(e.querySelectorAll(wn));return t&&Sn.call(e,wn)&&r.unshift(e),r.filter(n)}(e,t.includeContainer,Mn.bind(null,t)),Dn(n)},Fn=function(e,t){if(t=t||{},!e)throw new Error(\"No node provided\");return!1!==Sn.call(e,wn)&&Mn(t,e)},zn=window.ReactDOM;function Bn(e,t,n){let{reference:r,floating:o}=e;const i=mn(t),s=gn(t),a=pn(s),l=dn(t),c=\"y\"===i,u=r.x+r.width/2-o.width/2,d=r.y+r.height/2-o.height/2,f=r[a]/2-o[a]/2;let h;switch(l){case\"top\":h={x:u,y:r.y-o.height};break;case\"bottom\":h={x:u,y:r.y+r.height};break;case\"right\":h={x:r.x+r.width,y:d};break;case\"left\":h={x:r.x-o.width,y:d};break;default:h={x:r.x,y:r.y}}switch(fn(t)){case\"start\":h[s]-=f*(n&&c?-1:1);break;case\"end\":h[s]+=f*(n&&c?-1:1)}return h}async function Vn(e,t){var n;void 0===t&&(t={});const{x:r,y:o,platform:i,rects:s,elements:a,strategy:l}=e,{boundary:c=\"clippingAncestors\",rootBoundary:u=\"viewport\",elementContext:d=\"floating\",altBoundary:f=!1,padding:h=0}=un(t,e),p=bn(h),m=a[f?\"floating\"===d?\"reference\":\"floating\":d],g=xn(await i.getClippingRect({element:null==(n=await(null==i.isElement?void 0:i.isElement(m)))||n?m:m.contextElement||await(null==i.getDocumentElement?void 0:i.getDocumentElement(a.floating)),boundary:c,rootBoundary:u,strategy:l})),v=\"floating\"===d?{x:r,y:o,width:s.floating.width,height:s.floating.height}:s.reference,y=await(null==i.getOffsetParent?void 0:i.getOffsetParent(a.floating)),b=await(null==i.isElement?void 0:i.isElement(y))&&await(null==i.getScale?void 0:i.getScale(y))||{x:1,y:1},x=xn(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({elements:a,rect:v,offsetParent:y,strategy:l}):v);return{top:(g.top-x.top+p.top)/b.y,bottom:(x.bottom-g.bottom+p.bottom)/b.y,left:(g.left-x.left+p.left)/b.x,right:(x.right-g.right+p.right)/b.x}}function Wn(e){const t=At(e);let n=parseFloat(t.width)||0,r=parseFloat(t.height)||0;const o=_t(e),i=o?e.offsetWidth:n,s=o?e.offsetHeight:r,a=rn(n)!==i||rn(r)!==s;return a&&(n=i,r=s),{width:n,height:r,$:a}}function Un(e){return St(e)?e:e.contextElement}function $n(e){const t=Un(e);if(!_t(t))return sn(1);const n=t.getBoundingClientRect(),{width:r,height:o,$:i}=Wn(t);let s=(i?rn(n.width):n.width)/r,a=(i?rn(n.height):n.height)/o;return s&&Number.isFinite(s)||(s=1),a&&Number.isFinite(a)||(a=1),{x:s,y:a}}const Kn=sn(0);function Hn(e){const t=xt(e);return Rt()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:Kn}function qn(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=!1);const o=e.getBoundingClientRect(),i=Un(e);let s=sn(1);t&&(r?St(r)&&(s=$n(r)):s=$n(e));const a=function(e,t,n){return void 0===t&&(t=!1),!(!n||t&&n!==xt(e))&&t}(i,n,r)?Hn(i):sn(0);let l=(o.left+a.x)/s.x,c=(o.top+a.y)/s.y,u=o.width/s.x,d=o.height/s.y;if(i){const e=xt(i),t=r&&St(r)?xt(r):r;let n=e,o=Lt(n);for(;o&&r&&t!==n;){const e=$n(o),t=o.getBoundingClientRect(),r=At(o),i=t.left+(o.clientLeft+parseFloat(r.paddingLeft))*e.x,s=t.top+(o.clientTop+parseFloat(r.paddingTop))*e.y;l*=e.x,c*=e.y,u*=e.x,d*=e.y,l+=i,c+=s,n=xt(o),o=Lt(n)}}return xn({width:u,height:d,x:l,y:c})}function Yn(e){return qn(wt(e)).left+jt(e).scrollLeft}function Gn(e,t,n){let r;if(\"viewport\"===t)r=function(e,t){const n=xt(e),r=wt(e),o=n.visualViewport;let i=r.clientWidth,s=r.clientHeight,a=0,l=0;if(o){i=o.width,s=o.height;const e=Rt();(!e||e&&\"fixed\"===t)&&(a=o.offsetLeft,l=o.offsetTop)}return{width:i,height:s,x:a,y:l}}(e,n);else if(\"document\"===t)r=function(e){const t=wt(e),n=jt(e),r=e.ownerDocument.body,o=nn(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),i=nn(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let s=-n.scrollLeft+Yn(e);const a=-n.scrollTop;return\"rtl\"===At(r).direction&&(s+=nn(t.clientWidth,r.clientWidth)-o),{width:o,height:i,x:s,y:a}}(wt(e));else if(St(t))r=function(e,t){const n=qn(e,!0,\"fixed\"===t),r=n.top+e.clientTop,o=n.left+e.clientLeft,i=_t(e)?$n(e):sn(1);return{width:e.clientWidth*i.x,height:e.clientHeight*i.y,x:o*i.x,y:r*i.y}}(t,n);else{const n=Hn(e);r={...t,x:t.x-n.x,y:t.y-n.y}}return xn(r)}function Xn(e,t){const n=Mt(e);return!(n===t||!St(n)||Nt(n))&&(\"fixed\"===At(n).position||Xn(n,t))}function Jn(e,t,n){const r=_t(t),o=wt(t),i=\"fixed\"===n,s=qn(e,!0,i,t);let a={scrollLeft:0,scrollTop:0};const l=sn(0);if(r||!r&&!i)if((\"body\"!==bt(t)||Ct(o))&&(a=jt(t)),r){const e=qn(t,!0,i,t);l.x=e.x+t.clientLeft,l.y=e.y+t.clientTop}else o&&(l.x=Yn(o));return{x:s.left+a.scrollLeft-l.x,y:s.top+a.scrollTop-l.y,width:s.width,height:s.height}}function Zn(e){return\"static\"===At(e).position}function Qn(e,t){return _t(e)&&\"fixed\"!==At(e).position?t?t(e):e.offsetParent:null}function er(e,t){const n=xt(e);if(Tt(e))return n;if(!_t(e)){let t=Mt(e);for(;t&&!Nt(t);){if(St(t)&&!Zn(t))return t;t=Mt(t)}return n}let r=Qn(e,t);for(;r&&Pt(r)&&Zn(r);)r=Qn(r,t);return r&&Nt(r)&&Zn(r)&&!Ot(r)?n:r||function(e){let t=Mt(e);for(;_t(t)&&!Nt(t);){if(Ot(t))return t;if(Tt(t))return null;t=Mt(t)}return null}(e)||n}const tr={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:t,rect:n,offsetParent:r,strategy:o}=e;const i=\"fixed\"===o,s=wt(r),a=!!t&&Tt(t.floating);if(r===s||a&&i)return n;let l={scrollLeft:0,scrollTop:0},c=sn(1);const u=sn(0),d=_t(r);if((d||!d&&!i)&&((\"body\"!==bt(r)||Ct(s))&&(l=jt(r)),_t(r))){const e=qn(r);c=$n(r),u.x=e.x+r.clientLeft,u.y=e.y+r.clientTop}return{width:n.width*c.x,height:n.height*c.y,x:n.x*c.x-l.scrollLeft*c.x+u.x,y:n.y*c.y-l.scrollTop*c.y+u.y}},getDocumentElement:wt,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:o}=e;const i=[...\"clippingAncestors\"===n?Tt(t)?[]:function(e,t){const n=t.get(e);if(n)return n;let r=Dt(e,[],!1).filter((e=>St(e)&&\"body\"!==bt(e))),o=null;const i=\"fixed\"===At(e).position;let s=i?Mt(e):e;for(;St(s)&&!Nt(s);){const t=At(s),n=Ot(s);n||\"fixed\"!==t.position||(o=null),(i?!n&&!o:!n&&\"static\"===t.position&&o&&[\"absolute\",\"fixed\"].includes(o.position)||Ct(s)&&!n&&Xn(e,s))?r=r.filter((e=>e!==s)):o=t,s=Mt(s)}return t.set(e,r),r}(t,this._c):[].concat(n),r],s=i[0],a=i.reduce(((e,n)=>{const r=Gn(t,n,o);return e.top=nn(r.top,e.top),e.right=tn(r.right,e.right),e.bottom=tn(r.bottom,e.bottom),e.left=nn(r.left,e.left),e}),Gn(t,s,o));return{width:a.right-a.left,height:a.bottom-a.top,x:a.left,y:a.top}},getOffsetParent:er,getElementRects:async function(e){const t=this.getOffsetParent||er,n=this.getDimensions,r=await n(e.floating);return{reference:Jn(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,width:r.width,height:r.height}}},getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){const{width:t,height:n}=Wn(e);return{width:t,height:n}},getScale:$n,isElement:St,isRTL:function(e){return\"rtl\"===At(e).direction}};function nr(e,t,n,r){void 0===r&&(r={});const{ancestorScroll:o=!0,ancestorResize:i=!0,elementResize:s=\"function\"==typeof ResizeObserver,layoutShift:a=\"function\"==typeof IntersectionObserver,animationFrame:l=!1}=r,c=Un(e),u=o||i?[...c?Dt(c):[],...Dt(t)]:[];u.forEach((e=>{o&&e.addEventListener(\"scroll\",n,{passive:!0}),i&&e.addEventListener(\"resize\",n)}));const d=c&&a?function(e,t){let n,r=null;const o=wt(e);function i(){var e;clearTimeout(n),null==(e=r)||e.disconnect(),r=null}return function s(a,l){void 0===a&&(a=!1),void 0===l&&(l=1),i();const{left:c,top:u,width:d,height:f}=e.getBoundingClientRect();if(a||t(),!d||!f)return;const h={rootMargin:-on(u)+\"px \"+-on(o.clientWidth-(c+d))+\"px \"+-on(o.clientHeight-(u+f))+\"px \"+-on(c)+\"px\",threshold:nn(0,tn(1,l))||1};let p=!0;function m(e){const t=e[0].intersectionRatio;if(t!==l){if(!p)return s();t?s(!1,t):n=setTimeout((()=>{s(!1,1e-7)}),1e3)}p=!1}try{r=new IntersectionObserver(m,{...h,root:o.ownerDocument})}catch(e){r=new IntersectionObserver(m,h)}r.observe(e)}(!0),i}(c,n):null;let f,h=-1,p=null;s&&(p=new ResizeObserver((e=>{let[r]=e;r&&r.target===c&&p&&(p.unobserve(t),cancelAnimationFrame(h),h=requestAnimationFrame((()=>{var e;null==(e=p)||e.observe(t)}))),n()})),c&&!l&&p.observe(c),p.observe(t));let m=l?qn(e):null;return l&&function t(){const r=qn(e);!m||r.x===m.x&&r.y===m.y&&r.width===m.width&&r.height===m.height||n(),m=r,f=requestAnimationFrame(t)}(),n(),()=>{var e;u.forEach((e=>{o&&e.removeEventListener(\"scroll\",n),i&&e.removeEventListener(\"resize\",n)})),null==d||d(),null==(e=p)||e.disconnect(),p=null,l&&cancelAnimationFrame(f)}}const rr=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(t){var n,r;const{x:o,y:i,placement:s,middlewareData:a}=t,l=await async function(e,t){const{placement:n,platform:r,elements:o}=e,i=await(null==r.isRTL?void 0:r.isRTL(o.floating)),s=dn(n),a=fn(n),l=\"y\"===mn(n),c=[\"left\",\"top\"].includes(s)?-1:1,u=i&&l?-1:1,d=un(t,e);let{mainAxis:f,crossAxis:h,alignmentAxis:p}=\"number\"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return a&&\"number\"==typeof p&&(h=\"end\"===a?-1*p:p),l?{x:h*u,y:f*c}:{x:f*c,y:h*u}}(t,e);return s===(null==(n=a.offset)?void 0:n.placement)&&null!=(r=a.arrow)&&r.alignmentOffset?{}:{x:o+l.x,y:i+l.y,data:{...l,placement:s}}}}},or=function(e){return void 0===e&&(e={}),{name:\"shift\",options:e,async fn(t){const{x:n,y:r,placement:o}=t,{mainAxis:i=!0,crossAxis:s=!1,limiter:a={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...l}=un(e,t),c={x:n,y:r},u=await Vn(t,l),d=mn(dn(o)),f=hn(d);let h=c[f],p=c[d];if(i){const e=\"y\"===f?\"bottom\":\"right\";h=cn(h+u[\"y\"===f?\"top\":\"left\"],h,h-u[e])}if(s){const e=\"y\"===d?\"bottom\":\"right\";p=cn(p+u[\"y\"===d?\"top\":\"left\"],p,p-u[e])}const m=a.fn({...t,[f]:h,[d]:p});return{...m,data:{x:m.x-n,y:m.y-r}}}}},ir=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(t){var n,r;const{placement:o,middlewareData:i,rects:s,initialPlacement:a,platform:l,elements:c}=t,{mainAxis:u=!0,crossAxis:d=!0,fallbackPlacements:f,fallbackStrategy:h=\"bestFit\",fallbackAxisSideDirection:p=\"none\",flipAlignment:m=!0,...g}=un(e,t);if(null!=(n=i.arrow)&&n.alignmentOffset)return{};const v=dn(o),y=mn(a),b=dn(a)===a,x=await(null==l.isRTL?void 0:l.isRTL(c.floating)),w=f||(b||!m?[yn(a)]:function(e){const t=yn(e);return[vn(e),t,vn(t)]}(a)),E=\"none\"!==p;!f&&E&&w.push(...function(e,t,n,r){const o=fn(e);let i=function(e,t,n){const r=[\"left\",\"right\"],o=[\"right\",\"left\"],i=[\"top\",\"bottom\"],s=[\"bottom\",\"top\"];switch(e){case\"top\":case\"bottom\":return n?t?o:r:t?r:o;case\"left\":case\"right\":return t?i:s;default:return[]}}(dn(e),\"start\"===n,r);return o&&(i=i.map((e=>e+\"-\"+o)),t&&(i=i.concat(i.map(vn)))),i}(a,m,p,x));const S=[a,...w],_=await Vn(t,g),k=[];let C=(null==(r=i.flip)?void 0:r.overflows)||[];if(u&&k.push(_[v]),d){const e=function(e,t,n){void 0===n&&(n=!1);const r=fn(e),o=gn(e),i=pn(o);let s=\"x\"===o?r===(n?\"end\":\"start\")?\"right\":\"left\":\"start\"===r?\"bottom\":\"top\";return t.reference[i]>t.floating[i]&&(s=yn(s)),[s,yn(s)]}(o,s,x);k.push(_[e[0]],_[e[1]])}if(C=[...C,{placement:o,overflows:k}],!k.every((e=>e<=0))){var P,T;const e=((null==(P=i.flip)?void 0:P.index)||0)+1,t=S[e];if(t)return{data:{index:e,overflows:C},reset:{placement:t}};let n=null==(T=C.filter((e=>e.overflows[0]<=0)).sort(((e,t)=>e.overflows[1]-t.overflows[1]))[0])?void 0:T.placement;if(!n)switch(h){case\"bestFit\":{var O;const e=null==(O=C.filter((e=>{if(E){const t=mn(e.placement);return t===y||\"y\"===t}return!0})).map((e=>[e.placement,e.overflows.filter((e=>e>0)).reduce(((e,t)=>e+t),0)])).sort(((e,t)=>e[1]-t[1]))[0])?void 0:O[0];e&&(n=e);break}case\"initialPlacement\":n=a}if(o!==n)return{reset:{placement:n}}}return{}}}},sr=function(e){return void 0===e&&(e={}),{name:\"size\",options:e,async fn(t){const{placement:n,rects:r,platform:o,elements:i}=t,{apply:s=()=>{},...a}=un(e,t),l=await Vn(t,a),c=dn(n),u=fn(n),d=\"y\"===mn(n),{width:f,height:h}=r.floating;let p,m;\"top\"===c||\"bottom\"===c?(p=c,m=u===(await(null==o.isRTL?void 0:o.isRTL(i.floating))?\"start\":\"end\")?\"left\":\"right\"):(m=c,p=\"end\"===u?\"top\":\"bottom\");const g=h-l.top-l.bottom,v=f-l.left-l.right,y=tn(h-l[p],g),b=tn(f-l[m],v),x=!t.middlewareData.shift;let w=y,E=b;if(d?E=u||x?tn(b,v):v:w=u||x?tn(y,g):g,x&&!u){const e=nn(l.left,0),t=nn(l.right,0),n=nn(l.top,0),r=nn(l.bottom,0);d?E=f-2*(0!==e||0!==t?e+t:nn(l.left,l.right)):w=h-2*(0!==n||0!==r?n+r:nn(l.top,l.bottom))}await s({...t,availableWidth:E,availableHeight:w});const S=await o.getDimensions(i.floating);return f!==S.width||h!==S.height?{reset:{rects:!0}}:{}}}},ar=e=>({name:\"arrow\",options:e,async fn(t){const{x:n,y:r,placement:o,rects:i,platform:s,elements:a,middlewareData:l}=t,{element:c,padding:u=0}=un(e,t)||{};if(null==c)return{};const d=bn(u),f={x:n,y:r},h=gn(o),p=pn(h),m=await s.getDimensions(c),g=\"y\"===h,v=g?\"top\":\"left\",y=g?\"bottom\":\"right\",b=g?\"clientHeight\":\"clientWidth\",x=i.reference[p]+i.reference[h]-f[h]-i.floating[p],w=f[h]-i.reference[h],E=await(null==s.getOffsetParent?void 0:s.getOffsetParent(c));let S=E?E[b]:0;S&&await(null==s.isElement?void 0:s.isElement(E))||(S=a.floating[b]||i.floating[p]);const _=x/2-w/2,k=S/2-m[p]/2-1,C=tn(d[v],k),P=tn(d[y],k),T=C,O=S-m[p]-P,R=S/2-m[p]/2+_,N=cn(T,R,O),A=!l.arrow&&null!=fn(o)&&R!==N&&i.reference[p]/2-(R<T?C:P)-m[p]/2<0,j=A?R<T?R-T:R-O:0;return{[h]:f[h]+j,data:{[h]:N,centerOffset:R-N-j,...A&&{alignmentOffset:j}},reset:A}}}),lr=(e,t,n)=>{const r=new Map,o={platform:tr,...n},i={...o.platform,_c:r};return(async(e,t,n)=>{const{placement:r=\"bottom\",strategy:o=\"absolute\",middleware:i=[],platform:s}=n,a=i.filter(Boolean),l=await(null==s.isRTL?void 0:s.isRTL(t));let c=await s.getElementRects({reference:e,floating:t,strategy:o}),{x:u,y:d}=Bn(c,r,l),f=r,h={},p=0;for(let n=0;n<a.length;n++){const{name:i,fn:m}=a[n],{x:g,y:v,data:y,reset:b}=await m({x:u,y:d,initialPlacement:r,placement:f,strategy:o,middlewareData:h,rects:c,platform:s,elements:{reference:e,floating:t}});u=null!=g?g:u,d=null!=v?v:d,h={...h,[i]:{...h[i],...y}},b&&p<=50&&(p++,\"object\"==typeof b&&(b.placement&&(f=b.placement),b.rects&&(c=!0===b.rects?await s.getElementRects({reference:e,floating:t,strategy:o}):b.rects),({x:u,y:d}=Bn(c,f,l))),n=-1)}return{x:u,y:d,placement:f,strategy:o,middlewareData:h}})(e,t,{...o,platform:i})};var cr=\"undefined\"!=typeof document?o.useLayoutEffect:o.useEffect;function ur(e,t){if(e===t)return!0;if(typeof e!=typeof t)return!1;if(\"function\"==typeof e&&e.toString()===t.toString())return!0;let n,r,o;if(e&&t&&\"object\"==typeof e){if(Array.isArray(e)){if(n=e.length,n!==t.length)return!1;for(r=n;0!=r--;)if(!ur(e[r],t[r]))return!1;return!0}if(o=Object.keys(e),n=o.length,n!==Object.keys(t).length)return!1;for(r=n;0!=r--;)if(!{}.hasOwnProperty.call(t,o[r]))return!1;for(r=n;0!=r--;){const n=o[r];if(!(\"_owner\"===n&&e.$$typeof||ur(e[n],t[n])))return!1}return!0}return e!=e&&t!=t}function dr(e){return\"undefined\"==typeof window?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function fr(e,t){const n=dr(e);return Math.round(t*n)/n}function hr(e){const t=o.useRef(e);return cr((()=>{t.current=e})),t}const pr=e=>({name:\"arrow\",options:e,fn(t){const{element:n,padding:r}=\"function\"==typeof e?e(t):e;return n&&(o=n,{}.hasOwnProperty.call(o,\"current\"))?null!=n.current?ar({element:n.current,padding:r}).fn(t):{}:n?ar({element:n,padding:r}).fn(t):{};var o}}),mr=(e,t)=>({...rr(e),options:[e,t]}),gr=(e,t)=>({...ir(e),options:[e,t]}),vr=(e,t)=>({...pr(e),options:[e,t]}),yr={...o},br=yr.useInsertionEffect||(e=>e());function xr(e){const t=o.useRef((()=>{}));return br((()=>{t.current=e})),o.useCallback((function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return null==t.current?void 0:t.current(...n)}),[])}const wr=\"ArrowUp\",Er=\"ArrowDown\",Sr=\"ArrowLeft\",_r=\"ArrowRight\";function kr(e,t,n){return Math.floor(e/t)!==n}function Cr(e,t){return t<0||t>=e.current.length}function Pr(e,t){return Or(e,{disabledIndices:t})}function Tr(e,t){return Or(e,{decrement:!0,startingIndex:e.current.length,disabledIndices:t})}function Or(e,t){let{startingIndex:n=-1,decrement:r=!1,disabledIndices:o,amount:i=1}=void 0===t?{}:t;const s=e.current;let a=n;do{a+=r?-i:i}while(a>=0&&a<=s.length-1&&Ar(s,a,o));return a}function Rr(e,t,n,r,o){if(-1===e)return-1;const i=n.indexOf(e),s=t[e];switch(o){case\"tl\":return i;case\"tr\":return s?i+s.width-1:i;case\"bl\":return s?i+(s.height-1)*r:i;case\"br\":return n.lastIndexOf(e)}}function Nr(e,t){return t.flatMap(((t,n)=>e.includes(t)?[n]:[]))}function Ar(e,t,n){if(n)return n.includes(t);const r=e[t];return null==r||r.hasAttribute(\"disabled\")||\"true\"===r.getAttribute(\"aria-disabled\")}let jr=0;function Mr(e,t){void 0===t&&(t={});const{preventScroll:n=!1,cancelPrevious:r=!0,sync:o=!1}=t;r&&cancelAnimationFrame(jr);const i=()=>null==e?void 0:e.focus({preventScroll:n});o?i():jr=requestAnimationFrame(i)}var Ir=\"undefined\"!=typeof document?o.useLayoutEffect:o.useEffect;function Dr(){return Dr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Dr.apply(this,arguments)}let Lr=!1,Fr=0;const zr=()=>\"floating-ui-\"+Math.random().toString(36).slice(2,6)+Fr++,Br=yr.useId||function(){const[e,t]=o.useState((()=>Lr?zr():void 0));return Ir((()=>{null==e&&t(zr())}),[]),o.useEffect((()=>{Lr=!0}),[]),e},Vr=o.forwardRef((function(e,t){const{context:{placement:n,elements:{floating:r},middlewareData:{arrow:i,shift:s}},width:a=14,height:l=7,tipRadius:c=0,strokeWidth:u=0,staticOffset:d,stroke:f,d:h,style:{transform:p,...m}={},...g}=e,v=Br(),[y,b]=o.useState(!1);if(Ir((()=>{r&&\"rtl\"===At(r).direction&&b(!0)}),[r]),!r)return null;const[x,w]=n.split(\"-\"),E=\"top\"===x||\"bottom\"===x;let S=d;(E&&null!=s&&s.x||!E&&null!=s&&s.y)&&(S=null);const _=2*u,k=_/2,C=a/2*(c/-8+1),P=l/2*c/4,T=!!h,O=S&&\"end\"===w?\"bottom\":\"top\";let R=S&&\"end\"===w?\"right\":\"left\";S&&y&&(R=\"end\"===w?\"left\":\"right\");const N=null!=(null==i?void 0:i.x)?S||i.x:\"\",A=null!=(null==i?void 0:i.y)?S||i.y:\"\",j=h||\"M0,0 H\"+a+\" L\"+(a-C)+\",\"+(l-P)+\" Q\"+a/2+\",\"+l+\" \"+C+\",\"+(l-P)+\" Z\",M={top:T?\"rotate(180deg)\":\"\",left:T?\"rotate(90deg)\":\"rotate(-90deg)\",bottom:T?\"\":\"rotate(180deg)\",right:T?\"rotate(-90deg)\":\"rotate(90deg)\"}[x];return o.createElement(\"svg\",Dr({},g,{\"aria-hidden\":!0,ref:t,width:T?a:a+_,height:a,viewBox:\"0 0 \"+a+\" \"+(l>a?l:a),style:{position:\"absolute\",pointerEvents:\"none\",[R]:N,[O]:A,[x]:E||T?\"100%\":\"calc(100% - \"+_/2+\"px)\",transform:\"\"+M+(null!=p?p:\"\"),...m}}),_>0&&o.createElement(\"path\",{clipPath:\"url(#\"+v+\")\",fill:\"none\",stroke:f,strokeWidth:_+(h?0:1),d:j}),o.createElement(\"path\",{stroke:_&&!h?g.fill:\"none\",d:j}),o.createElement(\"clipPath\",{id:v},o.createElement(\"rect\",{x:-k,y:k*(T?-1:1),width:a+_,height:a})))}));const Wr=o.createContext(null),Ur=o.createContext(null),$r=()=>{var e;return(null==(e=o.useContext(Wr))?void 0:e.id)||null},Kr=()=>o.useContext(Ur);function Hr(e){return\"data-floating-ui-\"+e}function qr(e){const t=(0,o.useRef)(e);return Ir((()=>{t.current=e})),t}const Yr=Hr(\"safe-polygon\");function Gr(e,t,n){return n&&!qt(n)?0:\"number\"==typeof e?e:null==e?void 0:e[t]}function Xr(e,t){let n=e.filter((e=>{var n;return e.parentId===t&&(null==(n=e.context)?void 0:n.open)})),r=n;for(;r.length;)r=e.filter((e=>{var t;return null==(t=r)?void 0:t.some((t=>{var n;return e.parentId===t.id&&(null==(n=e.context)?void 0:n.open)}))})),n=n.concat(r);return n}let Jr=new WeakMap,Zr=new WeakSet,Qr={},eo=0;const to=e=>e&&(e.host||to(e.parentNode)),no=(e,t)=>t.map((t=>{if(e.contains(t))return t;const n=to(t);return e.contains(n)?n:null})).filter((e=>null!=e));function ro(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!1);const r=Yt(e[0]).body;return function(e,t,n,r){const o=\"data-floating-ui-inert\",i=r?\"inert\":n?\"aria-hidden\":null,s=no(t,e),a=new Set,l=new Set(s),c=[];Qr[o]||(Qr[o]=new WeakMap);const u=Qr[o];return s.forEach((function e(t){t&&!a.has(t)&&(a.add(t),t.parentNode&&e(t.parentNode))})),function e(t){t&&!l.has(t)&&[].forEach.call(t.children,(t=>{if(\"script\"!==bt(t))if(a.has(t))e(t);else{const e=i?t.getAttribute(i):null,n=null!==e&&\"false\"!==e,r=(Jr.get(t)||0)+1,s=(u.get(t)||0)+1;Jr.set(t,r),u.set(t,s),c.push(t),1===r&&n&&Zr.add(t),1===s&&t.setAttribute(o,\"\"),!n&&i&&t.setAttribute(i,\"true\")}}))}(t),a.clear(),eo++,()=>{c.forEach((e=>{const t=(Jr.get(e)||0)-1,n=(u.get(e)||0)-1;Jr.set(e,t),u.set(e,n),t||(!Zr.has(e)&&i&&e.removeAttribute(i),Zr.delete(e)),n||e.removeAttribute(o)})),eo--,eo||(Jr=new WeakMap,Jr=new WeakMap,Zr=new WeakSet,Qr={})}}(e.concat(Array.from(r.querySelectorAll(\"[aria-live]\"))),r,t,n)}const oo=()=>({getShadowRoot:!0,displayCheck:\"function\"==typeof ResizeObserver&&ResizeObserver.toString().includes(\"[native code]\")?\"full\":\"none\"});function io(e,t){const n=Ln(e,oo());\"prev\"===t&&n.reverse();const r=n.indexOf(Ft(Yt(e)));return n.slice(r+1)[0]}function so(){return io(document.body,\"next\")}function ao(){return io(document.body,\"prev\")}function lo(e,t){const n=t||e.currentTarget,r=e.relatedTarget;return!r||!zt(n,r)}function co(e){Ln(e,oo()).forEach((e=>{e.dataset.tabindex=e.getAttribute(\"tabindex\")||\"\",e.setAttribute(\"tabindex\",\"-1\")}))}function uo(e){e.querySelectorAll(\"[data-tabindex]\").forEach((e=>{const t=e.dataset.tabindex;delete e.dataset.tabindex,t?e.setAttribute(\"tabindex\",t):e.removeAttribute(\"tabindex\")}))}const fo={border:0,clip:\"rect(0 0 0 0)\",height:\"1px\",margin:\"-1px\",overflow:\"hidden\",padding:0,position:\"fixed\",whiteSpace:\"nowrap\",width:\"1px\",top:0,left:0};function ho(e){\"Tab\"===e.key&&(e.target,clearTimeout(void 0))}const po=o.forwardRef((function(e,t){const[n,r]=o.useState();Ir((()=>($t()&&r(\"button\"),document.addEventListener(\"keydown\",ho),()=>{document.removeEventListener(\"keydown\",ho)})),[]);const i={ref:t,tabIndex:0,role:n,\"aria-hidden\":!n||void 0,[Hr(\"focus-guard\")]:\"\",style:fo};return o.createElement(\"span\",Dr({},e,i))})),mo=o.createContext(null),go=Hr(\"portal\");function vo(e){const{children:t,id:n,root:r=null,preserveTabOrder:i=!0}=e,s=function(e){void 0===e&&(e={});const{id:t,root:n}=e,r=Br(),i=yo(),[s,a]=o.useState(null),l=o.useRef(null);return Ir((()=>()=>{null==s||s.remove(),queueMicrotask((()=>{l.current=null}))}),[s]),Ir((()=>{if(!r)return;if(l.current)return;const e=t?document.getElementById(t):null;if(!e)return;const n=document.createElement(\"div\");n.id=r,n.setAttribute(go,\"\"),e.appendChild(n),l.current=n,a(n)}),[t,r]),Ir((()=>{if(!r)return;if(l.current)return;let e=n||(null==i?void 0:i.portalNode);e&&!St(e)&&(e=e.current),e=e||document.body;let o=null;t&&(o=document.createElement(\"div\"),o.id=t,e.appendChild(o));const s=document.createElement(\"div\");s.id=r,s.setAttribute(go,\"\"),e=o||e,e.appendChild(s),l.current=s,a(s)}),[t,n,r,i]),s}({id:n,root:r}),[a,l]=o.useState(null),c=o.useRef(null),u=o.useRef(null),d=o.useRef(null),f=o.useRef(null),h=null==a?void 0:a.modal,p=null==a?void 0:a.open,m=!!a&&!a.modal&&a.open&&i&&!(!r&&!s);return o.useEffect((()=>{if(s&&i&&!h)return s.addEventListener(\"focusin\",e,!0),s.addEventListener(\"focusout\",e,!0),()=>{s.removeEventListener(\"focusin\",e,!0),s.removeEventListener(\"focusout\",e,!0)};function e(e){s&&lo(e)&&(\"focusin\"===e.type?uo:co)(s)}}),[s,i,h]),o.useEffect((()=>{s&&(p||uo(s))}),[p,s]),o.createElement(mo.Provider,{value:o.useMemo((()=>({preserveTabOrder:i,beforeOutsideRef:c,afterOutsideRef:u,beforeInsideRef:d,afterInsideRef:f,portalNode:s,setFocusManagerState:l})),[i,s])},m&&s&&o.createElement(po,{\"data-type\":\"outside\",ref:c,onFocus:e=>{if(lo(e,s)){var t;null==(t=d.current)||t.focus()}else{const e=ao()||(null==a?void 0:a.refs.domReference.current);null==e||e.focus()}}}),m&&s&&o.createElement(\"span\",{\"aria-owns\":s.id,style:fo}),s&&zn.createPortal(t,s),m&&s&&o.createElement(po,{\"data-type\":\"outside\",ref:u,onFocus:e=>{if(lo(e,s)){var t;null==(t=f.current)||t.focus()}else{const t=so()||(null==a?void 0:a.refs.domReference.current);null==t||t.focus(),(null==a?void 0:a.closeOnFocusOut)&&(null==a||a.onOpenChange(!1,e.nativeEvent,\"focus-out\"))}}}))}const yo=()=>o.useContext(mo),bo=\"data-floating-ui-focusable\";function xo(e){return e?e.hasAttribute(bo)?e:e.querySelector(\"[\"+bo+\"]\")||e:null}const wo=20;let Eo=[];function So(e){Eo=Eo.filter((e=>e.isConnected));let t=e;if(t&&\"body\"!==bt(t)){if(!Fn(t,oo())){const e=Ln(t,oo())[0];e&&(t=e)}Eo.push(t),Eo.length>wo&&(Eo=Eo.slice(-wo))}}function _o(){return Eo.slice().reverse().find((e=>e.isConnected))}const ko=o.forwardRef((function(e,t){return o.createElement(\"button\",Dr({},e,{type:\"button\",ref:t,tabIndex:-1,style:fo}))}));function Co(e){const{context:t,children:n,disabled:r=!1,order:i=[\"content\"],guards:s=!0,initialFocus:a=0,returnFocus:l=!0,restoreFocus:c=!1,modal:u=!0,visuallyHiddenDismiss:d=!1,closeOnFocusOut:f=!0}=e,{open:h,refs:p,nodeId:m,onOpenChange:g,events:v,dataRef:y,floatingId:b,elements:{domReference:x,floating:w}}=t,E=\"number\"==typeof a&&a<0,S=en(x)&&E,_=!(\"undefined\"!=typeof HTMLElement&&\"inert\"in HTMLElement.prototype)||s,k=qr(i),C=qr(a),P=qr(l),T=Kr(),O=yo(),R=o.useRef(null),N=o.useRef(null),A=o.useRef(!1),j=o.useRef(!1),M=o.useRef(-1),I=null!=O,D=xo(w),L=xr((function(e){return void 0===e&&(e=D),e?Ln(e,oo()):[]})),F=xr((e=>{const t=L(e);return k.current.map((e=>x&&\"reference\"===e?x:D&&\"floating\"===e?D:t)).filter(Boolean).flat()}));function z(e){return!r&&d&&u?o.createElement(ko,{ref:\"start\"===e?R:N,onClick:e=>g(!1,e.nativeEvent)},\"string\"==typeof d?d:\"Dismiss\"):null}o.useEffect((()=>{A.current=!1}),[r]),o.useEffect((()=>{if(r)return;if(!u)return;function e(e){if(\"Tab\"===e.key){zt(D,Ft(Yt(D)))&&0===L().length&&!S&&Qt(e);const t=F(),n=Xt(e);\"reference\"===k.current[0]&&n===x&&(Qt(e),e.shiftKey?Mr(t[t.length-1]):Mr(t[1])),\"floating\"===k.current[1]&&n===D&&e.shiftKey&&(Qt(e),Mr(t[0]))}}const t=Yt(D);return t.addEventListener(\"keydown\",e),()=>{t.removeEventListener(\"keydown\",e)}}),[r,x,D,u,k,S,L,F]),o.useEffect((()=>{if(!r&&w)return w.addEventListener(\"focusin\",e),()=>{w.removeEventListener(\"focusin\",e)};function e(e){const t=Xt(e),n=L().indexOf(t);-1!==n&&(M.current=n)}}),[r,w,L]),o.useEffect((()=>{if(!r&&f)return w&&_t(x)?(x.addEventListener(\"focusout\",t),x.addEventListener(\"pointerdown\",e),w.addEventListener(\"focusout\",t),()=>{x.removeEventListener(\"focusout\",t),x.removeEventListener(\"pointerdown\",e),w.removeEventListener(\"focusout\",t)}):void 0;function e(){j.current=!0,setTimeout((()=>{j.current=!1}))}function t(e){const t=e.relatedTarget;queueMicrotask((()=>{const n=!(zt(x,t)||zt(w,t)||zt(t,w)||zt(null==O?void 0:O.portalNode,t)||null!=t&&t.hasAttribute(Hr(\"focus-guard\"))||T&&(Xr(T.nodesRef.current,m).find((e=>{var n,r;return zt(null==(n=e.context)?void 0:n.elements.floating,t)||zt(null==(r=e.context)?void 0:r.elements.domReference,t)}))||function(e,t){var n;let r=[],o=null==(n=e.find((e=>e.id===t)))?void 0:n.parentId;for(;o;){const t=e.find((e=>e.id===o));o=null==t?void 0:t.parentId,t&&(r=r.concat(t))}return r}(T.nodesRef.current,m).find((e=>{var n,r;return(null==(n=e.context)?void 0:n.elements.floating)===t||(null==(r=e.context)?void 0:r.elements.domReference)===t}))));if(c&&n&&Ft(Yt(D))===Yt(D).body){_t(D)&&D.focus();const e=M.current,t=L(),n=t[e]||t[t.length-1]||D;_t(n)&&n.focus()}!S&&u||!t||!n||j.current||t===_o()||(A.current=!0,g(!1,e,\"focus-out\"))}))}}),[r,x,w,D,u,m,T,O,g,f,c,L,S]),o.useEffect((()=>{var e;if(r)return;const t=Array.from((null==O||null==(e=O.portalNode)?void 0:e.querySelectorAll(\"[\"+Hr(\"portal\")+\"]\"))||[]);if(w){const e=[w,...t,R.current,N.current,k.current.includes(\"reference\")||S?x:null].filter((e=>null!=e)),n=u||S?ro(e,_,!_):ro(e);return()=>{n()}}}),[r,x,w,u,k,O,S,_]),Ir((()=>{if(r||!_t(D))return;const e=Ft(Yt(D));queueMicrotask((()=>{const t=F(D),n=C.current,r=(\"number\"==typeof n?t[n]:n.current)||D,o=zt(D,e);E||o||!h||Mr(r,{preventScroll:r===D})}))}),[r,h,D,E,F,C]),Ir((()=>{if(r||!D)return;let e=!1;const t=Yt(D),n=Ft(t);let o=y.current.openEvent;const i=p.domReference.current;function s(t){let{open:n,reason:r,event:i,nested:s}=t;n&&(o=i),\"escape-key\"===r&&p.domReference.current&&So(p.domReference.current),\"hover\"===r&&\"mouseleave\"===i.type&&(A.current=!0),\"outside-press\"===r&&(s?(A.current=!1,e=!0):A.current=!(Wt(i)||Ut(i)))}return So(n),v.on(\"openchange\",s),()=>{v.off(\"openchange\",s);const r=Ft(t),a=zt(w,r)||T&&Xr(T.nodesRef.current,m).some((e=>{var t;return zt(null==(t=e.context)?void 0:t.elements.floating,r)}));(a||o&&[\"click\",\"mousedown\"].includes(o.type))&&p.domReference.current&&So(p.domReference.current);const l=i||n,c=Ln(Yt(l).body,oo());queueMicrotask((()=>{let n=_o();!n&&_t(l)&&w&&(n=function(e,t,n){const r=e.indexOf(t);function o(t){const o=Hr(\"focus-guard\");let i=r+(t?1:0),s=e[i];for(;s&&(!s.isConnected||s.hasAttribute(o)||zt(n,s));)t?i++:i--,s=e[i];return s}return o(!0)||o(!1)}(c,l,w)),P.current&&!A.current&&_t(n)&&(n===r||r===t.body||a)&&n.focus({preventScroll:e})}))}}),[r,w,D,P,y,p,v,T,m]),Ir((()=>{if(!r&&O)return O.setFocusManagerState({modal:u,closeOnFocusOut:f,open:h,onOpenChange:g,refs:p}),()=>{O.setFocusManagerState(null)}}),[r,O,u,h,g,p,f]),Ir((()=>{if(r)return;if(!D)return;if(\"function\"!=typeof MutationObserver)return;if(E)return;const e=()=>{const e=D.getAttribute(\"tabindex\"),t=L(),n=Ft(Yt(w)),r=t.indexOf(n);-1!==r&&(M.current=r),k.current.includes(\"floating\")||n!==p.domReference.current&&0===t.length?\"0\"!==e&&D.setAttribute(\"tabindex\",\"0\"):\"-1\"!==e&&D.setAttribute(\"tabindex\",\"-1\")};e();const t=new MutationObserver(e);return t.observe(D,{childList:!0,subtree:!0,attributes:!0}),()=>{t.disconnect()}}),[r,w,D,p,k,L,E]);const B=!r&&_&&(!u||!S)&&(I||u);return o.createElement(o.Fragment,null,B&&o.createElement(po,{\"data-type\":\"inside\",ref:null==O?void 0:O.beforeInsideRef,onFocus:e=>{if(u){const e=F();Mr(\"reference\"===i[0]?e[0]:e[e.length-1])}else if(null!=O&&O.preserveTabOrder&&O.portalNode)if(A.current=!1,lo(e,O.portalNode)){const e=so()||x;null==e||e.focus()}else{var t;null==(t=O.beforeOutsideRef.current)||t.focus()}}}),!S&&z(\"start\"),n,z(\"end\"),B&&o.createElement(po,{\"data-type\":\"inside\",ref:null==O?void 0:O.afterInsideRef,onFocus:e=>{if(u)Mr(F()[0]);else if(null!=O&&O.preserveTabOrder&&O.portalNode)if(f&&(A.current=!0),lo(e,O.portalNode)){const e=ao()||x;null==e||e.focus()}else{var t;null==(t=O.afterOutsideRef.current)||t.focus()}}}))}function Po(e){return _t(e.target)&&\"BUTTON\"===e.target.tagName}function To(e){return Zt(e)}function Oo(e,t){void 0===t&&(t={});const{open:n,onOpenChange:r,dataRef:i,elements:{domReference:s}}=e,{enabled:a=!0,event:l=\"click\",toggle:c=!0,ignoreMouse:u=!1,keyboardHandlers:d=!0}=t,f=o.useRef(),h=o.useRef(!1),p=o.useMemo((()=>({onPointerDown(e){f.current=e.pointerType},onMouseDown(e){const t=f.current;0===e.button&&\"click\"!==l&&(qt(t,!0)&&u||(!n||!c||i.current.openEvent&&\"mousedown\"!==i.current.openEvent.type?(e.preventDefault(),r(!0,e.nativeEvent,\"click\")):r(!1,e.nativeEvent,\"click\")))},onClick(e){const t=f.current;\"mousedown\"===l&&f.current?f.current=void 0:qt(t,!0)&&u||(!n||!c||i.current.openEvent&&\"click\"!==i.current.openEvent.type?r(!0,e.nativeEvent,\"click\"):r(!1,e.nativeEvent,\"click\"))},onKeyDown(e){f.current=void 0,e.defaultPrevented||!d||Po(e)||(\" \"!==e.key||To(s)||(e.preventDefault(),h.current=!0),\"Enter\"===e.key&&r(!n||!c,e.nativeEvent,\"click\"))},onKeyUp(e){e.defaultPrevented||!d||Po(e)||To(s)||\" \"===e.key&&h.current&&(h.current=!1,r(!n||!c,e.nativeEvent,\"click\"))}})),[i,s,l,u,d,r,n,c]);return o.useMemo((()=>a?{reference:p}:{}),[a,p])}const Ro={pointerdown:\"onPointerDown\",mousedown:\"onMouseDown\",click:\"onClick\"},No={pointerdown:\"onPointerDownCapture\",mousedown:\"onMouseDownCapture\",click:\"onClickCapture\"},Ao=e=>{var t,n;return{escapeKey:\"boolean\"==typeof e?e:null!=(t=null==e?void 0:e.escapeKey)&&t,outsidePress:\"boolean\"==typeof e?e:null==(n=null==e?void 0:e.outsidePress)||n}};function jo(e,t){void 0===t&&(t={});const{open:n,onOpenChange:r,elements:i,dataRef:s}=e,{enabled:a=!0,escapeKey:l=!0,outsidePress:c=!0,outsidePressEvent:u=\"pointerdown\",referencePress:d=!1,referencePressEvent:f=\"pointerdown\",ancestorScroll:h=!1,bubbles:p,capture:m}=t,g=Kr(),v=xr(\"function\"==typeof c?c:()=>!1),y=\"function\"==typeof c?v:c,b=o.useRef(!1),x=o.useRef(!1),{escapeKey:w,outsidePress:E}=Ao(p),{escapeKey:S,outsidePress:_}=Ao(m),k=xr((e=>{var t;if(!n||!a||!l||\"Escape\"!==e.key)return;const o=null==(t=s.current.floatingContext)?void 0:t.nodeId,i=g?Xr(g.nodesRef.current,o):[];if(!w&&(e.stopPropagation(),i.length>0)){let e=!0;if(i.forEach((t=>{var n;null==(n=t.context)||!n.open||t.context.dataRef.current.__escapeKeyBubbles||(e=!1)})),!e)return}r(!1,function(e){return\"nativeEvent\"in e}(e)?e.nativeEvent:e,\"escape-key\")})),C=xr((e=>{var t;const n=()=>{var t;k(e),null==(t=Xt(e))||t.removeEventListener(\"keydown\",n)};null==(t=Xt(e))||t.addEventListener(\"keydown\",n)})),P=xr((e=>{var t;const n=b.current;b.current=!1;const o=x.current;if(x.current=!1,\"click\"===u&&o)return;if(n)return;if(\"function\"==typeof y&&!y(e))return;const a=Xt(e),l=\"[\"+Hr(\"inert\")+\"]\",c=Yt(i.floating).querySelectorAll(l);let d=St(a)?a:null;for(;d&&!Nt(d);){const e=Mt(d);if(Nt(e)||!St(e))break;d=e}if(c.length&&St(a)&&!a.matches(\"html,body\")&&!zt(a,i.floating)&&Array.from(c).every((e=>!zt(d,e))))return;if(_t(a)&&R){const t=a.clientWidth>0&&a.scrollWidth>a.clientWidth,n=a.clientHeight>0&&a.scrollHeight>a.clientHeight;let r=n&&e.offsetX>a.clientWidth;if(n&&\"rtl\"===At(a).direction&&(r=e.offsetX<=a.offsetWidth-a.clientWidth),r||t&&e.offsetY>a.clientHeight)return}const f=null==(t=s.current.floatingContext)?void 0:t.nodeId,h=g&&Xr(g.nodesRef.current,f).some((t=>{var n;return Gt(e,null==(n=t.context)?void 0:n.elements.floating)}));if(Gt(e,i.floating)||Gt(e,i.domReference)||h)return;const p=g?Xr(g.nodesRef.current,f):[];if(p.length>0){let e=!0;if(p.forEach((t=>{var n;null==(n=t.context)||!n.open||t.context.dataRef.current.__outsidePressBubbles||(e=!1)})),!e)return}r(!1,e,\"outside-press\")})),T=xr((e=>{var t;const n=()=>{var t;P(e),null==(t=Xt(e))||t.removeEventListener(u,n)};null==(t=Xt(e))||t.addEventListener(u,n)}));o.useEffect((()=>{if(!n||!a)return;function e(e){r(!1,e,\"ancestor-scroll\")}s.current.__escapeKeyBubbles=w,s.current.__outsidePressBubbles=E;const t=Yt(i.floating);l&&t.addEventListener(\"keydown\",S?C:k,S),y&&t.addEventListener(u,_?T:P,_);let o=[];return h&&(St(i.domReference)&&(o=Dt(i.domReference)),St(i.floating)&&(o=o.concat(Dt(i.floating))),!St(i.reference)&&i.reference&&i.reference.contextElement&&(o=o.concat(Dt(i.reference.contextElement)))),o=o.filter((e=>{var n;return e!==(null==(n=t.defaultView)?void 0:n.visualViewport)})),o.forEach((t=>{t.addEventListener(\"scroll\",e,{passive:!0})})),()=>{l&&t.removeEventListener(\"keydown\",S?C:k,S),y&&t.removeEventListener(u,_?T:P,_),o.forEach((t=>{t.removeEventListener(\"scroll\",e)}))}}),[s,i,l,y,u,n,r,h,a,w,E,k,S,C,P,_,T]),o.useEffect((()=>{b.current=!1}),[y,u]);const O=o.useMemo((()=>({onKeyDown:k,[Ro[f]]:e=>{d&&r(!1,e.nativeEvent,\"reference-press\")}})),[k,r,d,f]),R=o.useMemo((()=>({onKeyDown:k,onMouseDown(){x.current=!0},onMouseUp(){x.current=!0},[No[u]]:()=>{b.current=!0}})),[k,u]);return o.useMemo((()=>a?{reference:O,floating:R}:{}),[a,O,R])}function Mo(e){void 0===e&&(e={});const{nodeId:t}=e,n=function(e){const{open:t=!1,onOpenChange:n,elements:r}=e,i=Br(),s=o.useRef({}),[a]=o.useState((()=>function(){const e=new Map;return{emit(t,n){var r;null==(r=e.get(t))||r.forEach((e=>e(n)))},on(t,n){e.set(t,[...e.get(t)||[],n])},off(t,n){var r;e.set(t,(null==(r=e.get(t))?void 0:r.filter((e=>e!==n)))||[])}}}())),l=null!=$r(),[c,u]=o.useState(r.reference),d=xr(((e,t,r)=>{s.current.openEvent=e?t:void 0,a.emit(\"openchange\",{open:e,event:t,reason:r,nested:l}),null==n||n(e,t,r)})),f=o.useMemo((()=>({setPositionReference:u})),[]),h=o.useMemo((()=>({reference:c||r.reference||null,floating:r.floating||null,domReference:r.reference})),[c,r.reference,r.floating]);return o.useMemo((()=>({dataRef:s,open:t,onOpenChange:d,elements:h,events:a,floatingId:i,refs:f})),[t,d,h,a,i,f])}({...e,elements:{reference:null,floating:null,...e.elements}}),r=e.rootContext||n,i=r.elements,[s,a]=o.useState(null),[l,c]=o.useState(null),u=(null==i?void 0:i.reference)||s,d=o.useRef(null),f=Kr();Ir((()=>{u&&(d.current=u)}),[u]);const h=function(e){void 0===e&&(e={});const{placement:t=\"bottom\",strategy:n=\"absolute\",middleware:r=[],platform:i,elements:{reference:s,floating:a}={},transform:l=!0,whileElementsMounted:c,open:u}=e,[d,f]=o.useState({x:0,y:0,strategy:n,placement:t,middlewareData:{},isPositioned:!1}),[h,p]=o.useState(r);ur(h,r)||p(r);const[m,g]=o.useState(null),[v,y]=o.useState(null),b=o.useCallback((e=>{e!==S.current&&(S.current=e,g(e))}),[]),x=o.useCallback((e=>{e!==_.current&&(_.current=e,y(e))}),[]),w=s||m,E=a||v,S=o.useRef(null),_=o.useRef(null),k=o.useRef(d),C=null!=c,P=hr(c),T=hr(i),O=o.useCallback((()=>{if(!S.current||!_.current)return;const e={placement:t,strategy:n,middleware:h};T.current&&(e.platform=T.current),lr(S.current,_.current,e).then((e=>{const t={...e,isPositioned:!0};R.current&&!ur(k.current,t)&&(k.current=t,zn.flushSync((()=>{f(t)})))}))}),[h,t,n,T]);cr((()=>{!1===u&&k.current.isPositioned&&(k.current.isPositioned=!1,f((e=>({...e,isPositioned:!1}))))}),[u]);const R=o.useRef(!1);cr((()=>(R.current=!0,()=>{R.current=!1})),[]),cr((()=>{if(w&&(S.current=w),E&&(_.current=E),w&&E){if(P.current)return P.current(w,E,O);O()}}),[w,E,O,P,C]);const N=o.useMemo((()=>({reference:S,floating:_,setReference:b,setFloating:x})),[b,x]),A=o.useMemo((()=>({reference:w,floating:E})),[w,E]),j=o.useMemo((()=>{const e={position:n,left:0,top:0};if(!A.floating)return e;const t=fr(A.floating,d.x),r=fr(A.floating,d.y);return l?{...e,transform:\"translate(\"+t+\"px, \"+r+\"px)\",...dr(A.floating)>=1.5&&{willChange:\"transform\"}}:{position:n,left:t,top:r}}),[n,l,A.floating,d.x,d.y]);return o.useMemo((()=>({...d,update:O,refs:N,elements:A,floatingStyles:j})),[d,O,N,A,j])}({...e,elements:{...i,...l&&{reference:l}}}),p=o.useCallback((e=>{const t=St(e)?{getBoundingClientRect:()=>e.getBoundingClientRect(),contextElement:e}:e;c(t),h.refs.setReference(t)}),[h.refs]),m=o.useCallback((e=>{(St(e)||null===e)&&(d.current=e,a(e)),(St(h.refs.reference.current)||null===h.refs.reference.current||null!==e&&!St(e))&&h.refs.setReference(e)}),[h.refs]),g=o.useMemo((()=>({...h.refs,setReference:m,setPositionReference:p,domReference:d})),[h.refs,m,p]),v=o.useMemo((()=>({...h.elements,domReference:u})),[h.elements,u]),y=o.useMemo((()=>({...h,...r,refs:g,elements:v,nodeId:t})),[h,g,v,t,r]);return Ir((()=>{r.dataRef.current.floatingContext=y;const e=null==f?void 0:f.nodesRef.current.find((e=>e.id===t));e&&(e.context=y)})),o.useMemo((()=>({...h,context:y,refs:g,elements:v})),[h,g,v,y])}const Io=\"active\",Do=\"selected\";function Lo(e,t,n){const r=new Map,o=\"item\"===n;let i=e;if(o&&e){const{[Io]:t,[Do]:__,...n}=e;i=n}return{...\"floating\"===n&&{tabIndex:-1,[bo]:\"\"},...i,...t.map((t=>{const r=t?t[n]:null;return\"function\"==typeof r?e?r(e):null:r})).concat(e).reduce(((e,t)=>t?(Object.entries(t).forEach((t=>{let[n,i]=t;var s;o&&[Io,Do].includes(n)||(0===n.indexOf(\"on\")?(r.has(n)||r.set(n,[]),\"function\"==typeof i&&(null==(s=r.get(n))||s.push(i),e[n]=function(){for(var e,t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return null==(e=r.get(n))?void 0:e.map((e=>e(...o))).find((e=>void 0!==e))})):e[n]=i)})),e):e),{})}}function Fo(e){void 0===e&&(e=[]);const t=e.map((e=>null==e?void 0:e.reference)),n=e.map((e=>null==e?void 0:e.floating)),r=e.map((e=>null==e?void 0:e.item)),i=o.useCallback((t=>Lo(t,e,\"reference\")),t),s=o.useCallback((t=>Lo(t,e,\"floating\")),n),a=o.useCallback((t=>Lo(t,e,\"item\")),r);return o.useMemo((()=>({getReferenceProps:i,getFloatingProps:s,getItemProps:a})),[i,s,a])}let zo=!1;function Bo(e,t,n){switch(e){case\"vertical\":return t;case\"horizontal\":return n;default:return t||n}}function Vo(e,t){return Bo(t,e===wr||e===Er,e===Sr||e===_r)}function Wo(e,t,n){return Bo(t,e===Er,n?e===Sr:e===_r)||\"Enter\"===e||\" \"===e||\"\"===e}function Uo(e,t,n){return Bo(t,n?e===_r:e===Sr,e===wr)}function $o(e,t){const{open:n,onOpenChange:r,elements:i}=e,{listRef:s,activeIndex:a,onNavigate:l=()=>{},enabled:c=!0,selectedIndex:u=null,allowEscape:d=!1,loop:f=!1,nested:h=!1,rtl:p=!1,virtual:m=!1,focusItemOnOpen:g=\"auto\",focusItemOnHover:v=!0,openOnArrowKeyDown:y=!0,disabledIndices:b,orientation:x=\"vertical\",cols:w=1,scrollItemIntoView:E=!0,virtualItemRef:S,itemSizes:_,dense:k=!1}=t,C=qr(xo(i.floating)),P=$r(),T=Kr(),O=xr(l),R=o.useRef(g),N=o.useRef(null!=u?u:-1),A=o.useRef(null),j=o.useRef(!0),M=o.useRef(O),I=o.useRef(!!i.floating),D=o.useRef(n),L=o.useRef(!1),F=o.useRef(!1),z=qr(b),B=qr(n),V=qr(E),W=qr(u),[U,$]=o.useState(),[K,H]=o.useState(),q=xr((function(e,t,n){function r(e){m?($(e.id),null==T||T.events.emit(\"virtualfocus\",e),S&&(S.current=e)):Mr(e,{preventScroll:!0,sync:!(!Ht()||!$t())&&(zo||L.current)})}void 0===n&&(n=!1);const o=e.current[t.current];o&&r(o),requestAnimationFrame((()=>{const i=e.current[t.current]||o;if(!i)return;o||r(i);const s=V.current;s&&G&&(n||!j.current)&&(null==i.scrollIntoView||i.scrollIntoView(\"boolean\"==typeof s?{block:\"nearest\",inline:\"nearest\"}:s))}))}));Ir((()=>{document.createElement(\"div\").focus({get preventScroll(){return zo=!0,!1}})}),[]),Ir((()=>{c&&(n&&i.floating?R.current&&null!=u&&(F.current=!0,N.current=u,O(u)):I.current&&(N.current=-1,M.current(null)))}),[c,n,i.floating,u,O]),Ir((()=>{if(c&&n&&i.floating)if(null==a){if(L.current=!1,null!=W.current)return;if(I.current&&(N.current=-1,q(s,N)),(!D.current||!I.current)&&R.current&&(null!=A.current||!0===R.current&&null==A.current)){let e=0;const t=()=>{null==s.current[0]?(e<2&&(e?requestAnimationFrame:queueMicrotask)(t),e++):(N.current=null==A.current||Wo(A.current,x,p)||h?Pr(s,z.current):Tr(s,z.current),A.current=null,O(N.current))};t()}}else Cr(s,a)||(N.current=a,q(s,N,F.current),F.current=!1)}),[c,n,i.floating,a,W,h,s,x,p,O,q,z]),Ir((()=>{var e;if(!c||i.floating||!T||m||!I.current)return;const t=T.nodesRef.current,n=null==(e=t.find((e=>e.id===P)))||null==(e=e.context)?void 0:e.elements.floating,r=Ft(Yt(i.floating)),o=t.some((e=>e.context&&zt(e.context.elements.floating,r)));n&&!o&&j.current&&n.focus({preventScroll:!0})}),[c,i.floating,T,P,m]),Ir((()=>{if(c&&T&&m&&!P)return T.events.on(\"virtualfocus\",e),()=>{T.events.off(\"virtualfocus\",e)};function e(e){H(e.id),S&&(S.current=e)}}),[c,T,m,P,S]),Ir((()=>{M.current=O,I.current=!!i.floating})),Ir((()=>{n||(A.current=null)}),[n]),Ir((()=>{D.current=n}),[n]);const Y=null!=a,G=o.useMemo((()=>{function e(e){if(!n)return;const t=s.current.indexOf(e);-1!==t&&O(t)}return{onFocus(t){let{currentTarget:n}=t;e(n)},onClick:e=>{let{currentTarget:t}=e;return t.focus({preventScroll:!0})},...v&&{onMouseMove(t){let{currentTarget:n}=t;e(n)},onPointerLeave(e){let{pointerType:t}=e;j.current&&\"touch\"!==t&&(N.current=-1,q(s,N),O(null),m||Mr(C.current,{preventScroll:!0}))}}}}),[n,C,q,v,s,O,m]),X=xr((e=>{if(j.current=!1,L.current=!0,!B.current&&e.currentTarget===C.current)return;if(h&&Uo(e.key,x,p))return Qt(e),r(!1,e.nativeEvent,\"list-navigation\"),void(_t(i.domReference)&&!m&&i.domReference.focus());const t=N.current,o=Pr(s,b),a=Tr(s,b);if(\"Home\"===e.key&&(Qt(e),N.current=o,O(N.current)),\"End\"===e.key&&(Qt(e),N.current=a,O(N.current)),w>1){const t=_||Array.from({length:s.current.length},(()=>({width:1,height:1}))),n=function(e,t,n){const r=[];let o=0;return e.forEach(((e,i)=>{let{width:s,height:a}=e,l=!1;for(n&&(o=0);!l;){const e=[];for(let n=0;n<s;n++)for(let r=0;r<a;r++)e.push(o+n+r*t);o%t+s<=t&&e.every((e=>null==r[e]))?(e.forEach((e=>{r[e]=i})),l=!0):o++}})),[...r]}(t,w,k),r=n.findIndex((e=>null!=e&&!Ar(s.current,e,b))),i=n.reduce(((e,t,n)=>null==t||Ar(s.current,t,b)?e:n),-1),l=n[function(e,t){let{event:n,orientation:r,loop:o,cols:i,disabledIndices:s,minIndex:a,maxIndex:l,prevIndex:c,stopEvent:u=!1}=t,d=c;if(n.key===wr){if(u&&Qt(n),-1===c)d=l;else if(d=Or(e,{startingIndex:d,amount:i,decrement:!0,disabledIndices:s}),o&&(c-i<a||d<0)){const e=c%i,t=l%i,n=l-(t-e);d=t===e?l:t>e?n:n-i}Cr(e,d)&&(d=c)}if(n.key===Er&&(u&&Qt(n),-1===c?d=a:(d=Or(e,{startingIndex:c,amount:i,disabledIndices:s}),o&&c+i>l&&(d=Or(e,{startingIndex:c%i-i,amount:i,disabledIndices:s}))),Cr(e,d)&&(d=c)),\"both\"===r){const t=on(c/i);n.key===_r&&(u&&Qt(n),c%i!=i-1?(d=Or(e,{startingIndex:c,disabledIndices:s}),o&&kr(d,i,t)&&(d=Or(e,{startingIndex:c-c%i-1,disabledIndices:s}))):o&&(d=Or(e,{startingIndex:c-c%i-1,disabledIndices:s})),kr(d,i,t)&&(d=c)),n.key===Sr&&(u&&Qt(n),c%i!=0?(d=Or(e,{startingIndex:c,decrement:!0,disabledIndices:s}),o&&kr(d,i,t)&&(d=Or(e,{startingIndex:c+(i-c%i),decrement:!0,disabledIndices:s}))):o&&(d=Or(e,{startingIndex:c+(i-c%i),decrement:!0,disabledIndices:s})),kr(d,i,t)&&(d=c));const r=on(l/i)===t;Cr(e,d)&&(d=o&&r?n.key===Sr?l:Or(e,{startingIndex:c-c%i-1,disabledIndices:s}):c)}return d}({current:n.map((e=>null!=e?s.current[e]:null))},{event:e,orientation:x,loop:f,cols:w,disabledIndices:Nr([...b||s.current.map(((e,t)=>Ar(s.current,t)?t:void 0)),void 0],n),minIndex:r,maxIndex:i,prevIndex:Rr(N.current>a?o:N.current,t,n,w,e.key===Er?\"bl\":e.key===_r?\"tr\":\"tl\"),stopEvent:!0})];if(null!=l&&(N.current=l,O(N.current)),\"both\"===x)return}if(Vo(e.key,x)){if(Qt(e),n&&!m&&Ft(e.currentTarget.ownerDocument)===e.currentTarget)return N.current=Wo(e.key,x,p)?o:a,void O(N.current);Wo(e.key,x,p)?N.current=f?t>=a?d&&t!==s.current.length?-1:o:Or(s,{startingIndex:t,disabledIndices:b}):Math.min(a,Or(s,{startingIndex:t,disabledIndices:b})):N.current=f?t<=o?d&&-1!==t?s.current.length:a:Or(s,{startingIndex:t,decrement:!0,disabledIndices:b}):Math.max(o,Or(s,{startingIndex:t,decrement:!0,disabledIndices:b})),Cr(s,N.current)?O(null):O(N.current)}})),J=o.useMemo((()=>m&&n&&Y&&{\"aria-activedescendant\":K||U}),[m,n,Y,K,U]),Z=o.useMemo((()=>({\"aria-orientation\":\"both\"===x?void 0:x,...!en(i.domReference)&&J,onKeyDown:X,onPointerMove(){j.current=!0}})),[J,X,i.domReference,x]),Q=o.useMemo((()=>{function e(e){\"auto\"===g&&Wt(e.nativeEvent)&&(R.current=!0)}return{...J,onKeyDown(e){j.current=!1;const t=0===e.key.indexOf(\"Arrow\"),o=function(e,t,n){return Bo(t,n?e===Sr:e===_r,e===Er)}(e.key,x,p),i=Uo(e.key,x,p),a=Vo(e.key,x),l=(h?o:a)||\"Enter\"===e.key||\"\"===e.key.trim();if(m&&n){const n=null==T?void 0:T.nodesRef.current.find((e=>null==e.parentId)),r=T&&n?function(e,t){let n,r=-1;return function t(o,i){i>r&&(n=o,r=i),Xr(e,o).forEach((e=>{t(e.id,i+1)}))}(t,0),e.find((e=>e.id===n))}(T.nodesRef.current,n.id):null;if(t&&r&&S){const t=new KeyboardEvent(\"keydown\",{key:e.key,bubbles:!0});if(o||i){var c,d;const n=(null==(c=r.context)?void 0:c.elements.domReference)===e.currentTarget,a=i&&!n?null==(d=r.context)?void 0:d.elements.domReference:o?s.current.find((e=>(null==e?void 0:e.id)===U)):null;a&&(Qt(e),a.dispatchEvent(t),H(void 0))}var f;if(a&&r.context&&r.context.open&&r.parentId&&e.currentTarget!==r.context.elements.domReference)return Qt(e),void(null==(f=r.context.elements.domReference)||f.dispatchEvent(t))}return X(e)}(n||y||!t)&&(l&&(A.current=h&&a?null:e.key),h?o&&(Qt(e),n?(N.current=Pr(s,z.current),O(N.current)):r(!0,e.nativeEvent,\"list-navigation\")):a&&(null!=u&&(N.current=u),Qt(e),!n&&y?r(!0,e.nativeEvent,\"list-navigation\"):X(e),n&&O(N.current)))},onFocus(){n&&!m&&O(null)},onPointerDown:function(e){R.current=g,\"auto\"===g&&Ut(e.nativeEvent)&&(R.current=!0)},onMouseDown:e,onClick:e}}),[U,J,X,z,g,s,h,O,r,n,y,x,p,u,T,m,S]);return o.useMemo((()=>c?{reference:Q,floating:Z,item:G}:{}),[c,Q,Z,G])}const Ko=new Map([[\"select\",\"listbox\"],[\"combobox\",\"listbox\"],[\"label\",!1]]);function Ho(e,t){var n;void 0===t&&(t={});const{open:r,floatingId:i}=e,{enabled:s=!0,role:a=\"dialog\"}=t,l=null!=(n=Ko.get(a))?n:a,c=Br(),u=null!=$r(),d=o.useMemo((()=>\"tooltip\"===l||\"label\"===a?{[\"aria-\"+(\"label\"===a?\"labelledby\":\"describedby\")]:r?i:void 0}:{\"aria-expanded\":r?\"true\":\"false\",\"aria-haspopup\":\"alertdialog\"===l?\"dialog\":l,\"aria-controls\":r?i:void 0,...\"listbox\"===l&&{role:\"combobox\"},...\"menu\"===l&&{id:c},...\"menu\"===l&&u&&{role:\"menuitem\"},...\"select\"===a&&{\"aria-autocomplete\":\"none\"},...\"combobox\"===a&&{\"aria-autocomplete\":\"list\"}}),[l,i,u,r,c,a]),f=o.useMemo((()=>{const e={id:i,...l&&{role:l}};return\"tooltip\"===l||\"label\"===a?e:{...e,...\"menu\"===l&&{\"aria-labelledby\":c}}}),[l,i,c,a]),h=o.useCallback((e=>{let{active:t,selected:n}=e;const r={role:\"option\",...t&&{id:i+\"-option\"}};switch(a){case\"select\":return{...r,\"aria-selected\":t&&n};case\"combobox\":return{...r,...t&&{\"aria-selected\":!0}}}return{}}),[i,a]);return o.useMemo((()=>s?{reference:d,floating:f,item:h}:{}),[s,d,f,h])}const qo=e=>e.replace(/[A-Z]+(?![a-z])|[A-Z]/g,((e,t)=>(t?\"-\":\"\")+e.toLowerCase()));function Yo(e,t){return\"function\"==typeof e?e(t):e}function Go(e,t){const[n,r]=e;let o=!1;const i=t.length;for(let e=0,s=i-1;e<i;s=e++){const[i,a]=t[e]||[0,0],[l,c]=t[s]||[0,0];a>=r!=c>=r&&n<=(l-i)*(r-a)/(c-a)+i&&(o=!o)}return o}function Xo(e){void 0===e&&(e={});const{buffer:t=.5,blockPointerEvents:n=!1,requireIntent:r=!0}=e;let o,i=!1,s=null,a=null,l=performance.now();const c=e=>{let{x:n,y:c,placement:u,elements:d,onClose:f,nodeId:h,tree:p}=e;return function(e){function m(){clearTimeout(o),f()}if(clearTimeout(o),!d.domReference||!d.floating||null==u||null==n||null==c)return;const{clientX:g,clientY:v}=e,y=[g,v],b=Xt(e),x=\"mouseleave\"===e.type,w=zt(d.floating,b),E=zt(d.domReference,b),S=d.domReference.getBoundingClientRect(),_=d.floating.getBoundingClientRect(),k=u.split(\"-\")[0],C=n>_.right-_.width/2,P=c>_.bottom-_.height/2,T=function(e,t){return e[0]>=t.x&&e[0]<=t.x+t.width&&e[1]>=t.y&&e[1]<=t.y+t.height}(y,S),O=_.width>S.width,R=_.height>S.height,N=(O?S:_).left,A=(O?S:_).right,j=(R?S:_).top,M=(R?S:_).bottom;if(w&&(i=!0,!x))return;if(E&&(i=!1),E&&!x)return void(i=!0);if(x&&St(e.relatedTarget)&&zt(d.floating,e.relatedTarget))return;if(p&&Xr(p.nodesRef.current,h).some((e=>{let{context:t}=e;return null==t?void 0:t.open})))return;if(\"top\"===k&&c>=S.bottom-1||\"bottom\"===k&&c<=S.top+1||\"left\"===k&&n>=S.right-1||\"right\"===k&&n<=S.left+1)return m();let I=[];switch(k){case\"top\":I=[[N,S.top+1],[N,_.bottom-1],[A,_.bottom-1],[A,S.top+1]];break;case\"bottom\":I=[[N,_.top+1],[N,S.bottom-1],[A,S.bottom-1],[A,_.top+1]];break;case\"left\":I=[[_.right-1,M],[_.right-1,j],[S.left+1,j],[S.left+1,M]];break;case\"right\":I=[[S.right-1,M],[S.right-1,j],[_.left+1,j],[_.left+1,M]]}if(!Go([g,v],I)){if(i&&!T)return m();if(!x&&r){const t=function(e,t){const n=performance.now(),r=n-l;if(null===s||null===a||0===r)return s=e,a=t,l=n,null;const o=e-s,i=t-a,c=Math.sqrt(o*o+i*i);return s=e,a=t,l=n,c/r}(e.clientX,e.clientY);if(null!==t&&t<.1)return m()}Go([g,v],function(e){let[n,r]=e;switch(k){case\"top\":return[[O?n+t/2:C?n+4*t:n-4*t,r+t+1],[O?n-t/2:C?n+4*t:n-4*t,r+t+1],[_.left,C||O?_.bottom-t:_.top],[_.right,C?O?_.bottom-t:_.top:_.bottom-t]];case\"bottom\":return[[O?n+t/2:C?n+4*t:n-4*t,r-t],[O?n-t/2:C?n+4*t:n-4*t,r-t],[_.left,C||O?_.top+t:_.bottom],[_.right,C?O?_.top+t:_.bottom:_.top+t]];case\"left\":{const e=[n+t+1,R?r+t/2:P?r+4*t:r-4*t],o=[n+t+1,R?r-t/2:P?r+4*t:r-4*t];return[[P||R?_.right-t:_.left,_.top],[P?R?_.right-t:_.left:_.right-t,_.bottom],e,o]}case\"right\":return[[n-t,R?r+t/2:P?r+4*t:r-4*t],[n-t,R?r-t/2:P?r+4*t:r-4*t],[P||R?_.left+t:_.right,_.top],[P?R?_.left+t:_.right:_.left+t,_.bottom]]}}([n,c]))?!i&&r&&(o=window.setTimeout(m,40)):m()}}};return c.__options={blockPointerEvents:n},c}const Jo=xe(\"Info\",[[\"circle\",{cx:\"12\",cy:\"12\",r:\"10\",key:\"1mglay\"}],[\"path\",{d:\"M12 16v-4\",key:\"1dtifu\"}],[\"path\",{d:\"M12 8h.01\",key:\"e9boi3\"}]]),Zo=xe(\"TriangleAlert\",[[\"path\",{d:\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",key:\"wmoenq\"}],[\"path\",{d:\"M12 9v4\",key:\"juzpu7\"}],[\"path\",{d:\"M12 17h.01\",key:\"p32p05\"}]]),Qo=xe(\"Trash2\",[[\"path\",{d:\"M3 6h18\",key:\"d0wm0j\"}],[\"path\",{d:\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\",key:\"4alrt4\"}],[\"path\",{d:\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\",key:\"v07s0e\"}],[\"line\",{x1:\"10\",x2:\"10\",y1:\"11\",y2:\"17\",key:\"1uufr5\"}],[\"line\",{x1:\"14\",x2:\"14\",y1:\"11\",y2:\"17\",key:\"xtxkd\"}]]);var ei=\"light\",ti=function(e){var t=e.icon,n=void 0===t?null:t,r=e.theme,i=void 0===r?ei:r,s=e.variant,a=void 0===s?\"neutral\":s,l=\"[&>svg]:h-5 [&>svg]:w-5\",c=\"light\"===i?\"text-icon-secondary\":\"text-icon-inverse\";if(n&&(0,o.isValidElement)(n))return(0,o.cloneElement)(n,{className:te(l,c,n.props.className)});switch(a){case\"neutral\":return React.createElement(Jo,{className:te(l,c)});case\"info\":var u=\"light\"===i?\"text-support-info\":\"text-support-info-inverse\";return React.createElement(Jo,{className:te(l,u)});case\"success\":var d=\"light\"===i?\"text-support-success\":\"text-support-success-inverse\";return React.createElement(Ee,{className:te(l,d)});case\"warning\":var f=\"light\"===i?\"text-support-warning\":\"text-support-warning-inverse\";return React.createElement(Zo,{className:te(l,f)});case\"error\":var h=\"light\"===i?\"text-support-error\":\"text-support-error-inverse\";return React.createElement(Qo,{className:te(l,h)});default:return null}},ni=function(e){var t=e.actionType,n=void 0===t?\"button\":t,r=e.onAction,o=void 0===r?function(){}:r,i=e.actionLabel,s=void 0===i?\"\":i,a=e.theme,l=void 0===a?ei:a,c=\"focus:ring-0 focus:ring-offset-0 ring-offset-0 focus:outline-none\",u=\"text-button-primary border-button-primary hover:border-button-primary hover:text-button-primary-hover\";switch(\"dark\"===l&&(u=\"text-text-inverse border-text-inverse hover:border-text-inverse hover:text-text-inverse\"),n){case\"button\":return React.createElement(le,{variant:\"outline\",size:\"xs\",onClick:o,className:te(\"rounded\",c,u,\"dark\"===l?\"bg-transparent hover:bg-transparent\":\"bg-white hover:bg-white\")},s);case\"link\":return React.createElement(le,{variant:\"link\",size:\"xs\",onClick:o,className:te(c,u)},s);default:return null}},ri=function(e){var t=e.theme,n=void 0===t?ei:t,r=e.title,o=void 0===r?\"\":r;return!o&&isNaN(o)?null:React.createElement(\"span\",{className:te(\"block\",{light:\"text-text-primary\",dark:\"text-text-inverse\"}[n],\"text-sm leading-5 font-semibold\")},o)},oi=function(e){var t=e.theme,n=void 0===t?ei:t,r=e.content,o=void 0===r?\"\":r;return!o&&isNaN(o)?null:React.createElement(\"span\",{className:te({light:\"text-text-primary\",dark:\"text-text-inverse\"}[n],\"block text-sm [&_*]:text-sm leading-5 [&_*]:leading-5 font-normal\")},o)},ii=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){t.forEach((function(t){\"function\"==typeof t?t(e):t&&(t.current=e)}))}};function si(e){return si=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},si(e)}function ai(){return ai=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ai.apply(null,arguments)}function li(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ci(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?li(Object(n),!0).forEach((function(t){ui(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):li(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ui(e,t,n){return(t=function(e){var t=function(e){if(\"object\"!=si(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,\"string\");if(\"object\"!=si(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==si(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function di(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var fi=function(e){var t,n,r,s,a=e.variant,l=void 0===a?\"dark\":a,c=e.placement,u=void 0===c?\"bottom\":c,d=e.title,f=void 0===d?\"\":d,h=e.content,p=e.arrow,m=void 0!==p&&p,g=e.open,v=e.setOpen,y=e.children,b=e.className,x=e.tooltipPortalRoot,w=void 0===x?null:x,E=e.tooltipPortalId,S=void 0===E?\"\":E,_=e.boundary,k=void 0===_?\"clippingAncestors\":_,C=e.strategy,P=void 0===C?\"fixed\":C,T=e.offset,O=void 0===T?8:T,R=e.triggers,N=void 0===R?[\"hover\",\"focus\"]:R,A=e.interactive,j=void 0!==A&&A,M=(0,o.useMemo)((function(){return\"boolean\"==typeof g&&\"function\"==typeof v}),[g,v]),I=(r=(0,o.useState)(!1),s=2,function(e){if(Array.isArray(e))return e}(r)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(r,s)||function(e,t){if(e){if(\"string\"==typeof e)return di(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?di(e,t):void 0}}(r,s)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),D=I[0],L=I[1],F=(0,o.useRef)(null),z=Mo({open:M?g:D,onOpenChange:M?v:L,placement:u,strategy:P,middleware:[mr(O),gr({boundary:k}),(n={boundary:k},{...or(n),options:[n,undefined]}),vr({element:F})],whileElementsMounted:nr}),B=z.refs,V=z.floatingStyles,W=z.context,U=Oo(W,{enabled:!M&&N.includes(\"click\")}),$=function(e,t){void 0===t&&(t={});const{open:n,onOpenChange:r,dataRef:i,events:s,elements:a}=e,{enabled:l=!0,delay:c=0,handleClose:u=null,mouseOnly:d=!1,restMs:f=0,move:h=!0}=t,p=Kr(),m=$r(),g=qr(u),v=qr(c),y=qr(n),b=o.useRef(),x=o.useRef(-1),w=o.useRef(),E=o.useRef(-1),S=o.useRef(!0),_=o.useRef(!1),k=o.useRef((()=>{})),C=o.useCallback((()=>{var e;const t=null==(e=i.current.openEvent)?void 0:e.type;return(null==t?void 0:t.includes(\"mouse\"))&&\"mousedown\"!==t}),[i]);o.useEffect((()=>{if(l)return s.on(\"openchange\",e),()=>{s.off(\"openchange\",e)};function e(e){let{open:t}=e;t||(clearTimeout(x.current),clearTimeout(E.current),S.current=!0)}}),[l,s]),o.useEffect((()=>{if(!l)return;if(!g.current)return;if(!n)return;function e(e){C()&&r(!1,e,\"hover\")}const t=Yt(a.floating).documentElement;return t.addEventListener(\"mouseleave\",e),()=>{t.removeEventListener(\"mouseleave\",e)}}),[a.floating,n,r,l,g,C]);const P=o.useCallback((function(e,t,n){void 0===t&&(t=!0),void 0===n&&(n=\"hover\");const o=Gr(v.current,\"close\",b.current);o&&!w.current?(clearTimeout(x.current),x.current=window.setTimeout((()=>r(!1,e,n)),o)):t&&(clearTimeout(x.current),r(!1,e,n))}),[v,r]),T=xr((()=>{k.current(),w.current=void 0})),O=xr((()=>{if(_.current){const e=Yt(a.floating).body;e.style.pointerEvents=\"\",e.removeAttribute(Yr),_.current=!1}}));o.useEffect((()=>{if(l&&St(a.domReference)){var e;const t=a.domReference;return n&&t.addEventListener(\"mouseleave\",c),null==(e=a.floating)||e.addEventListener(\"mouseleave\",c),h&&t.addEventListener(\"mousemove\",o,{once:!0}),t.addEventListener(\"mouseenter\",o),t.addEventListener(\"mouseleave\",s),()=>{var e;n&&t.removeEventListener(\"mouseleave\",c),null==(e=a.floating)||e.removeEventListener(\"mouseleave\",c),h&&t.removeEventListener(\"mousemove\",o),t.removeEventListener(\"mouseenter\",o),t.removeEventListener(\"mouseleave\",s)}}function t(){return!!i.current.openEvent&&[\"click\",\"mousedown\"].includes(i.current.openEvent.type)}function o(e){if(clearTimeout(x.current),S.current=!1,d&&!qt(b.current)||f>0&&!Gr(v.current,\"open\"))return;const t=Gr(v.current,\"open\",b.current);t?x.current=window.setTimeout((()=>{y.current||r(!0,e,\"hover\")}),t):r(!0,e,\"hover\")}function s(e){if(t())return;k.current();const r=Yt(a.floating);if(clearTimeout(E.current),g.current&&i.current.floatingContext){n||clearTimeout(x.current),w.current=g.current({...i.current.floatingContext,tree:p,x:e.clientX,y:e.clientY,onClose(){O(),T(),P(e,!0,\"safe-polygon\")}});const t=w.current;return r.addEventListener(\"mousemove\",t),void(k.current=()=>{r.removeEventListener(\"mousemove\",t)})}(\"touch\"!==b.current||!zt(a.floating,e.relatedTarget))&&P(e)}function c(e){t()||i.current.floatingContext&&(null==g.current||g.current({...i.current.floatingContext,tree:p,x:e.clientX,y:e.clientY,onClose(){O(),T(),P(e)}})(e))}}),[a,l,e,d,f,h,P,T,O,r,n,y,p,v,g,i]),Ir((()=>{var e;if(l&&n&&null!=(e=g.current)&&e.__options.blockPointerEvents&&C()){_.current=!0;const e=a.floating;if(St(a.domReference)&&e){var t;const n=Yt(a.floating).body;n.setAttribute(Yr,\"\");const r=a.domReference,o=null==p||null==(t=p.nodesRef.current.find((e=>e.id===m)))||null==(t=t.context)?void 0:t.elements.floating;return o&&(o.style.pointerEvents=\"\"),n.style.pointerEvents=\"none\",r.style.pointerEvents=\"auto\",e.style.pointerEvents=\"auto\",()=>{n.style.pointerEvents=\"\",r.style.pointerEvents=\"\",e.style.pointerEvents=\"\"}}}}),[l,n,m,a,p,g,C]),Ir((()=>{n||(b.current=void 0,T(),O())}),[n,T,O]),o.useEffect((()=>()=>{T(),clearTimeout(x.current),clearTimeout(E.current),O()}),[l,a.domReference,T,O]);const R=o.useMemo((()=>{function e(e){b.current=e.pointerType}return{onPointerDown:e,onPointerEnter:e,onMouseMove(e){const{nativeEvent:t}=e;function o(){S.current||y.current||r(!0,t,\"hover\")}d&&!qt(b.current)||n||0===f||(clearTimeout(E.current),\"touch\"===b.current?o():E.current=window.setTimeout(o,f))}}}),[d,r,n,y,f]),N=o.useMemo((()=>({onMouseEnter(){clearTimeout(x.current)},onMouseLeave(e){P(e.nativeEvent,!1)}})),[P]);return o.useMemo((()=>l?{reference:R,floating:N}:{}),[l,R,N])}(W,ci({move:!1,enabled:!M&&N.includes(\"hover\")},j&&{handleClose:Xo()})),K=function(e,t){void 0===t&&(t={});const{open:n,onOpenChange:r,events:i,dataRef:s,elements:a}=e,{enabled:l=!0,visibleOnly:c=!0}=t,u=o.useRef(!1),d=o.useRef(),f=o.useRef(!0);o.useEffect((()=>{if(!l)return;const e=xt(a.domReference);function t(){!n&&_t(a.domReference)&&a.domReference===Ft(Yt(a.domReference))&&(u.current=!0)}function r(){f.current=!0}return e.addEventListener(\"blur\",t),e.addEventListener(\"keydown\",r,!0),()=>{e.removeEventListener(\"blur\",t),e.removeEventListener(\"keydown\",r,!0)}}),[a.domReference,n,l]),o.useEffect((()=>{if(l)return i.on(\"openchange\",e),()=>{i.off(\"openchange\",e)};function e(e){let{reason:t}=e;\"reference-press\"!==t&&\"escape-key\"!==t||(u.current=!0)}}),[i,l]),o.useEffect((()=>()=>{clearTimeout(d.current)}),[]);const h=o.useMemo((()=>({onPointerDown(e){Ut(e.nativeEvent)||(f.current=!1)},onMouseLeave(){u.current=!1},onFocus(e){if(u.current)return;const t=Xt(e.nativeEvent);if(c&&St(t))try{if($t()&&Ht())throw Error();if(!t.matches(\":focus-visible\"))return}catch(e){if(!f.current&&!Zt(t))return}r(!0,e.nativeEvent,\"focus\")},onBlur(e){u.current=!1;const t=e.relatedTarget,n=e.nativeEvent,o=St(t)&&t.hasAttribute(Hr(\"focus-guard\"))&&\"outside\"===t.getAttribute(\"data-type\");d.current=window.setTimeout((()=>{var e;const i=Ft(a.domReference?a.domReference.ownerDocument:document);(t||i!==a.domReference)&&(zt(null==(e=s.current.floatingContext)?void 0:e.refs.floating.current,i)||zt(a.domReference,i)||o||r(!1,n,\"focus\"))}))}})),[s,a.domReference,r,c]);return o.useMemo((()=>l?{reference:h}:{}),[l,h])}(W,{enabled:!M&&N.includes(\"focus\")}),H=Fo([U,$,K,jo(W),Ho(W,{role:\"tooltip\"})]),q=H.getReferenceProps,Y=H.getFloatingProps,G=function(e,t){void 0===t&&(t={});const{initial:n={opacity:0},open:r,close:i,common:s,duration:a=250}=t,l=e.placement,c=l.split(\"-\")[0],u=o.useMemo((()=>({side:c,placement:l})),[c,l]),d=\"number\"==typeof a,f=(d?a:a.open)||0,h=(d?a:a.close)||0,[p,m]=o.useState((()=>({...Yo(s,u),...Yo(n,u)}))),{isMounted:g,status:v}=function(e,t){void 0===t&&(t={});const{open:n,elements:{floating:r}}=e,{duration:i=250}=t,s=(\"number\"==typeof i?i:i.close)||0,[a,l]=o.useState(\"unmounted\"),c=function(e,t){const[n,r]=o.useState(e);return e&&!n&&r(!0),o.useEffect((()=>{if(!e&&n){const e=setTimeout((()=>r(!1)),t);return()=>clearTimeout(e)}}),[e,n,t]),n}(n,s);return c||\"close\"!==a||l(\"unmounted\"),Ir((()=>{if(r){if(n){l(\"initial\");const e=requestAnimationFrame((()=>{l(\"open\")}));return()=>{cancelAnimationFrame(e)}}l(\"close\")}}),[n,r]),{isMounted:c,status:a}}(e,{duration:a}),y=qr(n),b=qr(r),x=qr(i),w=qr(s);return Ir((()=>{const e=Yo(y.current,u),t=Yo(x.current,u),n=Yo(w.current,u),r=Yo(b.current,u)||Object.keys(e).reduce(((e,t)=>(e[t]=\"\",e)),{});if(\"initial\"===v&&m((t=>({transitionProperty:t.transitionProperty,...n,...e}))),\"open\"===v&&m({transitionProperty:Object.keys(r).map(qo).join(\",\"),transitionDuration:f+\"ms\",...n,...r}),\"close\"===v){const r=t||e;m({transitionProperty:Object.keys(r).map(qo).join(\",\"),transitionDuration:h+\"ms\",...n,...r})}}),[h,x,y,b,w,f,v,u]),{isMounted:g,styles:p}}(W,{duration:150,initial:{opacity:0},open:{opacity:1},close:{opacity:0}}),X=G.isMounted,J=G.styles,Z=null===(t={light:\"bg-tooltip-background-light text-text-primary\",dark:\"bg-tooltip-background-dark text-text-on-color\"})||void 0===t?void 0:t[l],Q=\"dark\"===l?\"text-tooltip-background-dark\":\"text-tooltip-background-light\";return i().createElement(i().Fragment,null,(0,o.isValidElement)(y)&&(0,o.cloneElement)(y,ci(ci({},y.props),{},{ref:ii(y.ref,B.setReference),className:te(y.props.className)},q())),i().createElement(vo,{id:S,root:w},X&&i().createElement(\"div\",ai({className:te(\"absolute z-20 py-2 px-3 rounded-md text-xs leading-4 shadow-soft-shadow-lg\",Z,\"max-w-80 w-fit\",b),ref:B.setFloating,style:ci(ci({},V),J)},Y()),i().createElement(\"div\",null,!!f&&i().createElement(\"span\",{className:\"font-semibold\"},f),!!h&&i().createElement(\"div\",{className:\"font-normal\"},h)),m&&i().createElement(Vr,{ref:F,context:W,placement:u,className:te(\"fill-current\",Q)}))))},hi=[\"slug\",\"text\",\"icon\",\"className\",\"disabled\",\"isFirstChild\",\"isLastChild\"];function pi(){return pi=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pi.apply(null,arguments)}var mi=(0,o.createContext)(),gi=function(e,t){var n=(0,o.useContext)(mi),r=e.slug,s=e.text,a=e.icon,l=e.className,c=e.disabled,u=void 0!==c&&c,d=e.isFirstChild,f=e.isLastChild,h=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,hi);if(!n)throw new Error(\"Button should be used inside Button Group\");var p=n.activeItem,m=n.onChange,g=n.size,v=n.iconPosition,y=te(\"bg-background-primary text-primary cursor-pointer flex items-center justify-center\",\"hover:bg-button-tertiary-hover\",\"focus:outline-none\",u?\"text-text-disabled cursor-not-allowed\":\"\",{xs:\"py-1 px-1 text-sm gap-0.5 [&>svg]:h-4 [&>svg]:w-4\",sm:\"py-2 px-2 text-base gap-1 [&>svg]:h-4 [&>svg]:w-4\",md:\"py-2.5 px-2.5 text-base gap-1 [&>svg]:h-5 [&>svg]:w-5\"}[g],\"border-0 border-r border-border-subtle border-solid\",p===r?\"bg-button-disabled\":\"\",d?\"rounded-tl rounded-bl border-0 border-r border-border-subtle\":\"\",f?\"rounded-tr rounded-br border-0\":\"\",l);return i().createElement(\"button\",pi({ref:t,className:y,disabled:u,onClick:function(e){m(e,{slug:r,text:s})}},h),\"left\"===v&&a&&i().createElement(\"span\",{className:\"mr-1\"},a),s,\"right\"===v&&a&&i().createElement(\"span\",{className:\"ml-1\"},a))},vi=(0,o.forwardRef)(gi);vi.displayName=\"Button\";var yi={Group:function(e){var t=e.children,n=e.activeItem,r=void 0===n?null:n,s=e.onChange,a=e.className,l=e.size,c=void 0===l?\"md\":l,u=e.iconPosition,d=void 0===u?\"left\":u,f=(0,o.useCallback)((function(e,t){s&&s({event:e,value:t})}),[s]),h=te(\"box-border flex border border-border-subtle border-solid rounded\",a);return i().createElement(\"div\",{className:h},i().createElement(mi.Provider,{value:{activeItem:r,onChange:f,size:c,iconPosition:d}},i().Children.map(t,(function(e,n){if(!(0,o.isValidElement)(e))return null;var r=0===n,s=n===i().Children.count(t)-1;return i().cloneElement(e,{index:n,isFirstChild:r,isLastChild:s})}))))},Button:vi},bi=yi;function xi(e){if(\"undefined\"==typeof Proxy)return e;const t=new Map;return new Proxy(e,{get:(n,r)=>(t.has(r)||t.set(r,e(r)),t.get(r))})}function wi(e){return null!==e&&\"object\"==typeof e&&\"function\"==typeof e.start}const Ei=e=>Array.isArray(e);function Si(e,t){if(!Array.isArray(t))return!1;const n=t.length;if(n!==e.length)return!1;for(let r=0;r<n;r++)if(t[r]!==e[r])return!1;return!0}function _i(e){return\"string\"==typeof e||Array.isArray(e)}function ki(e){const t=[{},{}];return null==e||e.values.forEach(((e,n)=>{t[0][n]=e.get(),t[1][n]=e.getVelocity()})),t}function Ci(e,t,n,r){if(\"function\"==typeof t){const[o,i]=ki(r);t=t(void 0!==n?n:e.custom,o,i)}if(\"string\"==typeof t&&(t=e.variants&&e.variants[t]),\"function\"==typeof t){const[o,i]=ki(r);t=t(void 0!==n?n:e.custom,o,i)}return t}function Pi(e,t,n){const r=e.getProps();return Ci(r,t,void 0!==n?n:r.custom,e)}const Ti=[\"animate\",\"whileInView\",\"whileFocus\",\"whileHover\",\"whileTap\",\"whileDrag\",\"exit\"],Oi=[\"initial\",...Ti],Ri=[\"transformPerspective\",\"x\",\"y\",\"z\",\"translateX\",\"translateY\",\"translateZ\",\"scale\",\"scaleX\",\"scaleY\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"skew\",\"skewX\",\"skewY\"],Ni=new Set(Ri),Ai=e=>1e3*e,ji=e=>e/1e3,Mi={type:\"spring\",stiffness:500,damping:25,restSpeed:10},Ii={type:\"keyframes\",duration:.8},Di={type:\"keyframes\",ease:[.25,.1,.35,1],duration:.3},Li=(e,{keyframes:t})=>t.length>2?Ii:Ni.has(e)?e.startsWith(\"scale\")?{type:\"spring\",stiffness:550,damping:0===t[1]?2*Math.sqrt(550):30,restSpeed:10}:Mi:Di;function Fi(e,t){return e[t]||e.default||e}const zi=e=>null!==e;function Bi(e,{repeat:t,repeatType:n=\"loop\"},r){const o=e.filter(zi),i=t&&\"loop\"!==n&&t%2==1?0:o.length-1;return i&&void 0!==r?r:o[i]}const Vi=e=>e,Wi=[\"read\",\"resolveKeyframes\",\"update\",\"preRender\",\"render\",\"postRender\"];function Ui(e,t){let n=!1,r=!0;const o={delta:0,timestamp:0,isProcessing:!1},i=()=>n=!0,s=Wi.reduce(((e,t)=>(e[t]=function(e){let t=new Set,n=new Set,r=!1,o=!1;const i=new WeakSet;let s={delta:0,timestamp:0,isProcessing:!1};function a(t){i.has(t)&&(l.schedule(t),e()),t(s)}const l={schedule:(e,o=!1,s=!1)=>{const a=s&&r?t:n;return o&&i.add(e),a.has(e)||a.add(e),e},cancel:e=>{n.delete(e),i.delete(e)},process:e=>{s=e,r?o=!0:(r=!0,[t,n]=[n,t],n.clear(),t.forEach(a),r=!1,o&&(o=!1,l.process(e)))}};return l}(i),e)),{}),{read:a,resolveKeyframes:l,update:c,preRender:u,render:d,postRender:f}=s,h=()=>{const i=performance.now();n=!1,o.delta=r?1e3/60:Math.max(Math.min(i-o.timestamp,40),1),o.timestamp=i,o.isProcessing=!0,a.process(o),l.process(o),c.process(o),u.process(o),d.process(o),f.process(o),o.isProcessing=!1,n&&t&&(r=!1,e(h))};return{schedule:Wi.reduce(((t,i)=>{const a=s[i];return t[i]=(t,i=!1,s=!1)=>(n||(n=!0,r=!0,o.isProcessing||e(h)),a.schedule(t,i,s)),t}),{}),cancel:e=>{for(let t=0;t<Wi.length;t++)s[Wi[t]].cancel(e)},state:o,steps:s}}const{schedule:$i,cancel:Ki,state:Hi,steps:qi}=Ui(\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:Vi,!0),Yi=e=>/^0[^.\\s]+$/u.test(e);let Gi=Vi,Xi=Vi;const Ji=e=>/^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(e),Zi=e=>t=>\"string\"==typeof t&&t.startsWith(e),Qi=Zi(\"--\"),es=Zi(\"var(--\"),ts=e=>!!es(e)&&ns.test(e.split(\"/*\")[0].trim()),ns=/var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu,rs=/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;function os(e,t,n=1){Xi(n<=4,`Max CSS variable fallback depth detected in property \"${e}\". This may indicate a circular fallback dependency.`);const[r,o]=function(e){const t=rs.exec(e);if(!t)return[,];const[,n,r,o]=t;return[`--${null!=n?n:r}`,o]}(e);if(!r)return;const i=window.getComputedStyle(t).getPropertyValue(r);if(i){const e=i.trim();return Ji(e)?parseFloat(e):e}return ts(o)?os(o,t,n+1):o}const is=(e,t,n)=>n>t?t:n<e?e:n,ss={test:e=>\"number\"==typeof e,parse:parseFloat,transform:e=>e},as={...ss,transform:e=>is(0,1,e)},ls={...ss,default:1},cs=e=>Math.round(1e5*e)/1e5,us=/-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu,ds=/(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu,fs=/^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;function hs(e){return\"string\"==typeof e}const ps=e=>({test:t=>hs(t)&&t.endsWith(e)&&1===t.split(\" \").length,parse:parseFloat,transform:t=>`${t}${e}`}),ms=ps(\"deg\"),gs=ps(\"%\"),vs=ps(\"px\"),ys=ps(\"vh\"),bs=ps(\"vw\"),xs={...gs,parse:e=>gs.parse(e)/100,transform:e=>gs.transform(100*e)},ws=new Set([\"width\",\"height\",\"top\",\"left\",\"right\",\"bottom\",\"x\",\"y\",\"translateX\",\"translateY\"]),Es=e=>e===ss||e===vs,Ss=(e,t)=>parseFloat(e.split(\", \")[t]),_s=(e,t)=>(n,{transform:r})=>{if(\"none\"===r||!r)return 0;const o=r.match(/^matrix3d\\((.+)\\)$/u);if(o)return Ss(o[1],t);{const t=r.match(/^matrix\\((.+)\\)$/u);return t?Ss(t[1],e):0}},ks=new Set([\"x\",\"y\",\"z\"]),Cs=Ri.filter((e=>!ks.has(e))),Ps={width:({x:e},{paddingLeft:t=\"0\",paddingRight:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),height:({y:e},{paddingTop:t=\"0\",paddingBottom:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),top:(e,{top:t})=>parseFloat(t),left:(e,{left:t})=>parseFloat(t),bottom:({y:e},{top:t})=>parseFloat(t)+(e.max-e.min),right:({x:e},{left:t})=>parseFloat(t)+(e.max-e.min),x:_s(4,13),y:_s(5,14)};Ps.translateX=Ps.x,Ps.translateY=Ps.y;const Ts=e=>t=>t.test(e),Os=[ss,vs,gs,ms,bs,ys,{test:e=>\"auto\"===e,parse:e=>e}],Rs=e=>Os.find(Ts(e)),Ns=new Set;let As=!1,js=!1;function Ms(){if(js){const e=Array.from(Ns).filter((e=>e.needsMeasurement)),t=new Set(e.map((e=>e.element))),n=new Map;t.forEach((e=>{const t=function(e){const t=[];return Cs.forEach((n=>{const r=e.getValue(n);void 0!==r&&(t.push([n,r.get()]),r.set(n.startsWith(\"scale\")?1:0))})),t}(e);t.length&&(n.set(e,t),e.render())})),e.forEach((e=>e.measureInitialState())),t.forEach((e=>{e.render();const t=n.get(e);t&&t.forEach((([t,n])=>{var r;null===(r=e.getValue(t))||void 0===r||r.set(n)}))})),e.forEach((e=>e.measureEndState())),e.forEach((e=>{void 0!==e.suspendedScrollY&&window.scrollTo(0,e.suspendedScrollY)}))}js=!1,As=!1,Ns.forEach((e=>e.complete())),Ns.clear()}function Is(){Ns.forEach((e=>{e.readKeyframes(),e.needsMeasurement&&(js=!0)}))}class Ds{constructor(e,t,n,r,o,i=!1){this.isComplete=!1,this.isAsync=!1,this.needsMeasurement=!1,this.isScheduled=!1,this.unresolvedKeyframes=[...e],this.onComplete=t,this.name=n,this.motionValue=r,this.element=o,this.isAsync=i}scheduleResolve(){this.isScheduled=!0,this.isAsync?(Ns.add(this),As||(As=!0,$i.read(Is),$i.resolveKeyframes(Ms))):(this.readKeyframes(),this.complete())}readKeyframes(){const{unresolvedKeyframes:e,name:t,element:n,motionValue:r}=this;for(let o=0;o<e.length;o++)if(null===e[o])if(0===o){const o=null==r?void 0:r.get(),i=e[e.length-1];if(void 0!==o)e[0]=o;else if(n&&t){const r=n.readValue(t,i);null!=r&&(e[0]=r)}void 0===e[0]&&(e[0]=i),r&&void 0===o&&r.set(e[0])}else e[o]=e[o-1]}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(){this.isComplete=!0,this.onComplete(this.unresolvedKeyframes,this.finalKeyframe),Ns.delete(this)}cancel(){this.isComplete||(this.isScheduled=!1,Ns.delete(this))}resume(){this.isComplete||this.scheduleResolve()}}const Ls=(e,t)=>n=>Boolean(hs(n)&&fs.test(n)&&n.startsWith(e)||t&&!function(e){return null==e}(n)&&Object.prototype.hasOwnProperty.call(n,t)),Fs=(e,t,n)=>r=>{if(!hs(r))return r;const[o,i,s,a]=r.match(us);return{[e]:parseFloat(o),[t]:parseFloat(i),[n]:parseFloat(s),alpha:void 0!==a?parseFloat(a):1}},zs={...ss,transform:e=>Math.round((e=>is(0,255,e))(e))},Bs={test:Ls(\"rgb\",\"red\"),parse:Fs(\"red\",\"green\",\"blue\"),transform:({red:e,green:t,blue:n,alpha:r=1})=>\"rgba(\"+zs.transform(e)+\", \"+zs.transform(t)+\", \"+zs.transform(n)+\", \"+cs(as.transform(r))+\")\"},Vs={test:Ls(\"#\"),parse:function(e){let t=\"\",n=\"\",r=\"\",o=\"\";return e.length>5?(t=e.substring(1,3),n=e.substring(3,5),r=e.substring(5,7),o=e.substring(7,9)):(t=e.substring(1,2),n=e.substring(2,3),r=e.substring(3,4),o=e.substring(4,5),t+=t,n+=n,r+=r,o+=o),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:o?parseInt(o,16)/255:1}},transform:Bs.transform},Ws={test:Ls(\"hsl\",\"hue\"),parse:Fs(\"hue\",\"saturation\",\"lightness\"),transform:({hue:e,saturation:t,lightness:n,alpha:r=1})=>\"hsla(\"+Math.round(e)+\", \"+gs.transform(cs(t))+\", \"+gs.transform(cs(n))+\", \"+cs(as.transform(r))+\")\"},Us={test:e=>Bs.test(e)||Vs.test(e)||Ws.test(e),parse:e=>Bs.test(e)?Bs.parse(e):Ws.test(e)?Ws.parse(e):Vs.parse(e),transform:e=>hs(e)?e:e.hasOwnProperty(\"red\")?Bs.transform(e):Ws.transform(e)},$s=\"number\",Ks=\"color\",Hs=\"var\",qs=\"var(\",Ys=\"${}\",Gs=/var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;function Xs(e){const t=e.toString(),n=[],r={color:[],number:[],var:[]},o=[];let i=0;const s=t.replace(Gs,(e=>(Us.test(e)?(r.color.push(i),o.push(Ks),n.push(Us.parse(e))):e.startsWith(qs)?(r.var.push(i),o.push(Hs),n.push(e)):(r.number.push(i),o.push($s),n.push(parseFloat(e))),++i,Ys))).split(Ys);return{values:n,split:s,indexes:r,types:o}}function Js(e){return Xs(e).values}function Zs(e){const{split:t,types:n}=Xs(e),r=t.length;return e=>{let o=\"\";for(let i=0;i<r;i++)if(o+=t[i],void 0!==e[i]){const t=n[i];o+=t===$s?cs(e[i]):t===Ks?Us.transform(e[i]):e[i]}return o}}const Qs=e=>\"number\"==typeof e?0:e,ea={test:function(e){var t,n;return isNaN(e)&&hs(e)&&((null===(t=e.match(us))||void 0===t?void 0:t.length)||0)+((null===(n=e.match(ds))||void 0===n?void 0:n.length)||0)>0},parse:Js,createTransformer:Zs,getAnimatableNone:function(e){const t=Js(e);return Zs(e)(t.map(Qs))}},ta=new Set([\"brightness\",\"contrast\",\"saturate\",\"opacity\"]);function na(e){const[t,n]=e.slice(0,-1).split(\"(\");if(\"drop-shadow\"===t)return e;const[r]=n.match(us)||[];if(!r)return e;const o=n.replace(r,\"\");let i=ta.has(t)?1:0;return r!==n&&(i*=100),t+\"(\"+i+o+\")\"}const ra=/\\b([a-z-]*)\\(.*?\\)/gu,oa={...ea,getAnimatableNone:e=>{const t=e.match(ra);return t?t.map(na).join(\" \"):e}},ia={...ss,transform:Math.round},sa={borderWidth:vs,borderTopWidth:vs,borderRightWidth:vs,borderBottomWidth:vs,borderLeftWidth:vs,borderRadius:vs,radius:vs,borderTopLeftRadius:vs,borderTopRightRadius:vs,borderBottomRightRadius:vs,borderBottomLeftRadius:vs,width:vs,maxWidth:vs,height:vs,maxHeight:vs,size:vs,top:vs,right:vs,bottom:vs,left:vs,padding:vs,paddingTop:vs,paddingRight:vs,paddingBottom:vs,paddingLeft:vs,margin:vs,marginTop:vs,marginRight:vs,marginBottom:vs,marginLeft:vs,rotate:ms,rotateX:ms,rotateY:ms,rotateZ:ms,scale:ls,scaleX:ls,scaleY:ls,scaleZ:ls,skew:ms,skewX:ms,skewY:ms,distance:vs,translateX:vs,translateY:vs,translateZ:vs,x:vs,y:vs,z:vs,perspective:vs,transformPerspective:vs,opacity:as,originX:xs,originY:xs,originZ:vs,zIndex:ia,backgroundPositionX:vs,backgroundPositionY:vs,fillOpacity:as,strokeOpacity:as,numOctaves:ia},aa={...sa,color:Us,backgroundColor:Us,outlineColor:Us,fill:Us,stroke:Us,borderColor:Us,borderTopColor:Us,borderRightColor:Us,borderBottomColor:Us,borderLeftColor:Us,filter:oa,WebkitFilter:oa},la=e=>aa[e];function ca(e,t){let n=la(e);return n!==oa&&(n=ea),n.getAnimatableNone?n.getAnimatableNone(t):void 0}const ua=new Set([\"auto\",\"none\",\"0\"]);class da extends Ds{constructor(e,t,n,r,o){super(e,t,n,r,o,!0)}readKeyframes(){const{unresolvedKeyframes:e,element:t,name:n}=this;if(!t||!t.current)return;super.readKeyframes();for(let n=0;n<e.length;n++){let r=e[n];if(\"string\"==typeof r&&(r=r.trim(),ts(r))){const o=os(r,t.current);void 0!==o&&(e[n]=o),n===e.length-1&&(this.finalKeyframe=r)}}if(this.resolveNoneKeyframes(),!ws.has(n)||2!==e.length)return;const[r,o]=e,i=Rs(r),s=Rs(o);if(i!==s)if(Es(i)&&Es(s))for(let t=0;t<e.length;t++){const n=e[t];\"string\"==typeof n&&(e[t]=parseFloat(n))}else this.needsMeasurement=!0}resolveNoneKeyframes(){const{unresolvedKeyframes:e,name:t}=this,n=[];for(let t=0;t<e.length;t++)(\"number\"==typeof(r=e[t])?0===r:null===r||\"none\"===r||\"0\"===r||Yi(r))&&n.push(t);var r;n.length&&function(e,t,n){let r,o=0;for(;o<e.length&&!r;){const t=e[o];\"string\"==typeof t&&!ua.has(t)&&Xs(t).values.length&&(r=e[o]),o++}if(r&&n)for(const o of t)e[o]=ca(n,r)}(e,n,t)}measureInitialState(){const{element:e,unresolvedKeyframes:t,name:n}=this;if(!e||!e.current)return;\"height\"===n&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=Ps[n](e.measureViewportBox(),window.getComputedStyle(e.current)),t[0]=this.measuredOrigin;const r=t[t.length-1];void 0!==r&&e.getValue(n,r).jump(r,!1)}measureEndState(){var e;const{element:t,name:n,unresolvedKeyframes:r}=this;if(!t||!t.current)return;const o=t.getValue(n);o&&o.jump(this.measuredOrigin,!1);const i=r.length-1,s=r[i];r[i]=Ps[n](t.measureViewportBox(),window.getComputedStyle(t.current)),null!==s&&void 0===this.finalKeyframe&&(this.finalKeyframe=s),(null===(e=this.removedTransforms)||void 0===e?void 0:e.length)&&this.removedTransforms.forEach((([e,n])=>{t.getValue(e).set(n)})),this.resolveNoneKeyframes()}}function fa(e){let t;return()=>(void 0===t&&(t=e()),t)}let ha;function pa(){ha=void 0}const ma={now:()=>(void 0===ha&&ma.set(Hi.isProcessing?Hi.timestamp:performance.now()),ha),set:e=>{ha=e,queueMicrotask(pa)}},ga=(e,t)=>!(\"zIndex\"===t||\"number\"!=typeof e&&!Array.isArray(e)&&(\"string\"!=typeof e||!ea.test(e)&&\"0\"!==e||e.startsWith(\"url(\")));class va{constructor({autoplay:e=!0,delay:t=0,type:n=\"keyframes\",repeat:r=0,repeatDelay:o=0,repeatType:i=\"loop\",...s}){this.isStopped=!1,this.hasAttemptedResolve=!1,this.createdAt=ma.now(),this.options={autoplay:e,delay:t,type:n,repeat:r,repeatDelay:o,repeatType:i,...s},this.updateFinishedPromise()}calcStartTime(){return this.resolvedAt&&this.resolvedAt-this.createdAt>40?this.resolvedAt:this.createdAt}get resolved(){return this._resolved||this.hasAttemptedResolve||(Is(),Ms()),this._resolved}onKeyframesResolved(e,t){this.resolvedAt=ma.now(),this.hasAttemptedResolve=!0;const{name:n,type:r,velocity:o,delay:i,onComplete:s,onUpdate:a,isGenerator:l}=this.options;if(!l&&!function(e,t,n,r){const o=e[0];if(null===o)return!1;if(\"display\"===t||\"visibility\"===t)return!0;const i=e[e.length-1],s=ga(o,t),a=ga(i,t);return Gi(s===a,`You are trying to animate ${t} from \"${o}\" to \"${i}\". ${o} is not an animatable value - to enable this animation set ${o} to a value animatable to ${i} via the \\`style\\` property.`),!(!s||!a)&&(function(e){const t=e[0];if(1===e.length)return!0;for(let n=0;n<e.length;n++)if(e[n]!==t)return!0}(e)||\"spring\"===n&&r)}(e,n,r,o)){if(!i)return null==a||a(Bi(e,this.options,t)),null==s||s(),void this.resolveFinishedPromise();this.options.duration=0}const c=this.initPlayback(e,t);!1!==c&&(this._resolved={keyframes:e,finalKeyframe:t,...c},this.onPostResolved())}onPostResolved(){}then(e,t){return this.currentFinishedPromise.then(e,t)}updateFinishedPromise(){this.currentFinishedPromise=new Promise((e=>{this.resolveFinishedPromise=e}))}}function ya(e,t){return t?e*(1e3/t):0}const ba=5;function xa(e,t,n){const r=Math.max(t-ba,0);return ya(n-e(r),t-r)}const wa=.001,Ea=.01,Sa=10,_a=.05,ka=1;const Ca=12;function Pa(e,t){return e*Math.sqrt(1-t*t)}const Ta=[\"duration\",\"bounce\"],Oa=[\"stiffness\",\"damping\",\"mass\"];function Ra(e,t){return t.some((t=>void 0!==e[t]))}function Na({keyframes:e,restDelta:t,restSpeed:n,...r}){const o=e[0],i=e[e.length-1],s={done:!1,value:o},{stiffness:a,damping:l,mass:c,duration:u,velocity:d,isResolvedFromDuration:f}=function(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!Ra(e,Oa)&&Ra(e,Ta)){const n=function({duration:e=800,bounce:t=.25,velocity:n=0,mass:r=1}){let o,i;Gi(e<=Ai(Sa),\"Spring duration must be 10 seconds or less\");let s=1-t;s=is(_a,ka,s),e=is(Ea,Sa,ji(e)),s<1?(o=t=>{const r=t*s,o=r*e,i=r-n,a=Pa(t,s),l=Math.exp(-o);return wa-i/a*l},i=t=>{const r=t*s*e,i=r*n+n,a=Math.pow(s,2)*Math.pow(t,2)*e,l=Math.exp(-r),c=Pa(Math.pow(t,2),s);return(-o(t)+wa>0?-1:1)*((i-a)*l)/c}):(o=t=>Math.exp(-t*e)*((t-n)*e+1)-wa,i=t=>Math.exp(-t*e)*(e*e*(n-t)));const a=function(e,t,n){let r=n;for(let n=1;n<Ca;n++)r-=e(r)/t(r);return r}(o,i,5/e);if(e=Ai(e),isNaN(a))return{stiffness:100,damping:10,duration:e};{const t=Math.pow(a,2)*r;return{stiffness:t,damping:2*s*Math.sqrt(r*t),duration:e}}}(e);t={...t,...n,mass:1},t.isResolvedFromDuration=!0}return t}({...r,velocity:-ji(r.velocity||0)}),h=d||0,p=l/(2*Math.sqrt(a*c)),m=i-o,g=ji(Math.sqrt(a/c)),v=Math.abs(m)<5;let y;if(n||(n=v?.01:2),t||(t=v?.005:.5),p<1){const e=Pa(g,p);y=t=>{const n=Math.exp(-p*g*t);return i-n*((h+p*g*m)/e*Math.sin(e*t)+m*Math.cos(e*t))}}else if(1===p)y=e=>i-Math.exp(-g*e)*(m+(h+g*m)*e);else{const e=g*Math.sqrt(p*p-1);y=t=>{const n=Math.exp(-p*g*t),r=Math.min(e*t,300);return i-n*((h+p*g*m)*Math.sinh(r)+e*m*Math.cosh(r))/e}}return{calculatedDuration:f&&u||null,next:e=>{const r=y(e);if(f)s.done=e>=u;else{let o=0;p<1&&(o=0===e?Ai(h):xa(y,e,r));const a=Math.abs(o)<=n,l=Math.abs(i-r)<=t;s.done=a&&l}return s.value=s.done?i:r,s}}}function Aa({keyframes:e,velocity:t=0,power:n=.8,timeConstant:r=325,bounceDamping:o=10,bounceStiffness:i=500,modifyTarget:s,min:a,max:l,restDelta:c=.5,restSpeed:u}){const d=e[0],f={done:!1,value:d},h=e=>void 0===a?l:void 0===l||Math.abs(a-e)<Math.abs(l-e)?a:l;let p=n*t;const m=d+p,g=void 0===s?m:s(m);g!==m&&(p=g-d);const v=e=>-p*Math.exp(-e/r),y=e=>g+v(e),b=e=>{const t=v(e),n=y(e);f.done=Math.abs(t)<=c,f.value=f.done?g:n};let x,w;const E=e=>{(e=>void 0!==a&&e<a||void 0!==l&&e>l)(f.value)&&(x=e,w=Na({keyframes:[f.value,h(f.value)],velocity:xa(y,e,f.value),damping:o,stiffness:i,restDelta:c,restSpeed:u}))};return E(0),{calculatedDuration:null,next:e=>{let t=!1;return w||void 0!==x||(t=!0,b(e),E(e)),void 0!==x&&e>=x?w.next(e-x):(!t&&b(e),f)}}}const ja=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e;function Ma(e,t,n,r){if(e===t&&n===r)return Vi;return o=>0===o||1===o?o:ja(function(e,t,n,r,o){let i,s,a=0;do{s=t+(n-t)/2,i=ja(s,r,o)-e,i>0?n=s:t=s}while(Math.abs(i)>1e-7&&++a<12);return s}(o,0,1,e,n),t,r)}const Ia=Ma(.42,0,1,1),Da=Ma(0,0,.58,1),La=Ma(.42,0,.58,1),Fa=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,za=e=>t=>1-e(1-t),Ba=e=>1-Math.sin(Math.acos(e)),Va=za(Ba),Wa=Fa(Ba),Ua=Ma(.33,1.53,.69,.99),$a=za(Ua),Ka=Fa($a),Ha={linear:Vi,easeIn:Ia,easeInOut:La,easeOut:Da,circIn:Ba,circInOut:Wa,circOut:Va,backIn:$a,backInOut:Ka,backOut:Ua,anticipate:e=>(e*=2)<1?.5*$a(e):.5*(2-Math.pow(2,-10*(e-1)))},qa=e=>{if(Array.isArray(e)){Xi(4===e.length,\"Cubic bezier arrays must contain four numerical values.\");const[t,n,r,o]=e;return Ma(t,n,r,o)}return\"string\"==typeof e?(Xi(void 0!==Ha[e],`Invalid easing type '${e}'`),Ha[e]):e},Ya=(e,t)=>n=>t(e(n)),Ga=(...e)=>e.reduce(Ya),Xa=(e,t,n)=>{const r=t-e;return 0===r?1:(n-e)/r},Ja=(e,t,n)=>e+(t-e)*n;function Za(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function Qa(e,t){return n=>n>0?t:e}const el=(e,t,n)=>{const r=e*e,o=n*(t*t-r)+r;return o<0?0:Math.sqrt(o)},tl=[Vs,Bs,Ws];function nl(e){const t=(e=>tl.find((t=>t.test(e))))(e);if(Gi(Boolean(t),`'${e}' is not an animatable color. Use the equivalent color code instead.`),!Boolean(t))return!1;let n=t.parse(e);return t===Ws&&(n=function({hue:e,saturation:t,lightness:n,alpha:r}){e/=360,n/=100;let o=0,i=0,s=0;if(t/=100){const r=n<.5?n*(1+t):n+t-n*t,a=2*n-r;o=Za(a,r,e+1/3),i=Za(a,r,e),s=Za(a,r,e-1/3)}else o=i=s=n;return{red:Math.round(255*o),green:Math.round(255*i),blue:Math.round(255*s),alpha:r}}(n)),n}const rl=(e,t)=>{const n=nl(e),r=nl(t);if(!n||!r)return Qa(e,t);const o={...n};return e=>(o.red=el(n.red,r.red,e),o.green=el(n.green,r.green,e),o.blue=el(n.blue,r.blue,e),o.alpha=Ja(n.alpha,r.alpha,e),Bs.transform(o))},ol=new Set([\"none\",\"hidden\"]);function il(e,t){return n=>Ja(e,t,n)}function sl(e){return\"number\"==typeof e?il:\"string\"==typeof e?ts(e)?Qa:Us.test(e)?rl:cl:Array.isArray(e)?al:\"object\"==typeof e?Us.test(e)?rl:ll:Qa}function al(e,t){const n=[...e],r=n.length,o=e.map(((e,n)=>sl(e)(e,t[n])));return e=>{for(let t=0;t<r;t++)n[t]=o[t](e);return n}}function ll(e,t){const n={...e,...t},r={};for(const o in n)void 0!==e[o]&&void 0!==t[o]&&(r[o]=sl(e[o])(e[o],t[o]));return e=>{for(const t in r)n[t]=r[t](e);return n}}const cl=(e,t)=>{const n=ea.createTransformer(t),r=Xs(e),o=Xs(t);return r.indexes.var.length===o.indexes.var.length&&r.indexes.color.length===o.indexes.color.length&&r.indexes.number.length>=o.indexes.number.length?ol.has(e)&&!o.values.length||ol.has(t)&&!r.values.length?function(e,t){return ol.has(e)?n=>n<=0?e:t:n=>n>=1?t:e}(e,t):Ga(al(function(e,t){var n;const r=[],o={color:0,var:0,number:0};for(let i=0;i<t.values.length;i++){const s=t.types[i],a=e.indexes[s][o[s]],l=null!==(n=e.values[a])&&void 0!==n?n:0;r[i]=l,o[s]++}return r}(r,o),o.values),n):(Gi(!0,`Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),Qa(e,t))};function ul(e,t,n){return\"number\"==typeof e&&\"number\"==typeof t&&\"number\"==typeof n?Ja(e,t,n):sl(e)(e,t)}function dl({duration:e=300,keyframes:t,times:n,ease:r=\"easeInOut\"}){const o=(e=>Array.isArray(e)&&\"number\"!=typeof e[0])(r)?r.map(qa):qa(r),i={done:!1,value:t[0]},s=function(e,t){return e.map((e=>e*t))}(n&&n.length===t.length?n:function(e){const t=[0];return function(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const o=Xa(0,t,r);e.push(Ja(n,1,o))}}(t,e.length-1),t}(t),e),a=function(e,t,{clamp:n=!0,ease:r,mixer:o}={}){const i=e.length;if(Xi(i===t.length,\"Both input and output ranges must be the same length\"),1===i)return()=>t[0];if(2===i&&e[0]===e[1])return()=>t[1];e[0]>e[i-1]&&(e=[...e].reverse(),t=[...t].reverse());const s=function(e,t,n){const r=[],o=n||ul,i=e.length-1;for(let n=0;n<i;n++){let i=o(e[n],e[n+1]);if(t){const e=Array.isArray(t)?t[n]||Vi:t;i=Ga(e,i)}r.push(i)}return r}(t,r,o),a=s.length,l=t=>{let n=0;if(a>1)for(;n<e.length-2&&!(t<e[n+1]);n++);const r=Xa(e[n],e[n+1],t);return s[n](r)};return n?t=>l(is(e[0],e[i-1],t)):l}(s,t,{ease:Array.isArray(o)?o:(l=t,c=o,l.map((()=>c||La)).splice(0,l.length-1))});var l,c;return{calculatedDuration:e,next:t=>(i.value=a(t),i.done=t>=e,i)}}const fl=e=>{const t=({timestamp:t})=>e(t);return{start:()=>$i.update(t,!0),stop:()=>Ki(t),now:()=>Hi.isProcessing?Hi.timestamp:ma.now()}},hl={decay:Aa,inertia:Aa,tween:dl,keyframes:dl,spring:Na},pl=e=>e/100;class ml extends va{constructor(e){super(e),this.holdTime=null,this.cancelTime=null,this.currentTime=0,this.playbackSpeed=1,this.pendingPlayState=\"running\",this.startTime=null,this.state=\"idle\",this.stop=()=>{if(this.resolver.cancel(),this.isStopped=!0,\"idle\"===this.state)return;this.teardown();const{onStop:e}=this.options;e&&e()};const{name:t,motionValue:n,element:r,keyframes:o}=this.options,i=(null==r?void 0:r.KeyframeResolver)||Ds;this.resolver=new i(o,((e,t)=>this.onKeyframesResolved(e,t)),t,n,r),this.resolver.scheduleResolve()}initPlayback(e){const{type:t=\"keyframes\",repeat:n=0,repeatDelay:r=0,repeatType:o,velocity:i=0}=this.options,s=hl[t]||dl;let a,l;s!==dl&&\"number\"!=typeof e[0]&&(a=Ga(pl,ul(e[0],e[1])),e=[0,100]);const c=s({...this.options,keyframes:e});\"mirror\"===o&&(l=s({...this.options,keyframes:[...e].reverse(),velocity:-i})),null===c.calculatedDuration&&(c.calculatedDuration=function(e){let t=0,n=e.next(t);for(;!n.done&&t<2e4;)t+=50,n=e.next(t);return t>=2e4?1/0:t}(c));const{calculatedDuration:u}=c,d=u+r;return{generator:c,mirroredGenerator:l,mapPercentToKeyframes:a,calculatedDuration:u,resolvedDuration:d,totalDuration:d*(n+1)-r}}onPostResolved(){const{autoplay:e=!0}=this.options;this.play(),\"paused\"!==this.pendingPlayState&&e?this.state=this.pendingPlayState:this.pause()}tick(e,t=!1){const{resolved:n}=this;if(!n){const{keyframes:e}=this.options;return{done:!0,value:e[e.length-1]}}const{finalKeyframe:r,generator:o,mirroredGenerator:i,mapPercentToKeyframes:s,keyframes:a,calculatedDuration:l,totalDuration:c,resolvedDuration:u}=n;if(null===this.startTime)return o.next(0);const{delay:d,repeat:f,repeatType:h,repeatDelay:p,onUpdate:m}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,e):this.speed<0&&(this.startTime=Math.min(e-c/this.speed,this.startTime)),t?this.currentTime=e:null!==this.holdTime?this.currentTime=this.holdTime:this.currentTime=Math.round(e-this.startTime)*this.speed;const g=this.currentTime-d*(this.speed>=0?1:-1),v=this.speed>=0?g<0:g>c;this.currentTime=Math.max(g,0),\"finished\"===this.state&&null===this.holdTime&&(this.currentTime=c);let y=this.currentTime,b=o;if(f){const e=Math.min(this.currentTime,c)/u;let t=Math.floor(e),n=e%1;!n&&e>=1&&(n=1),1===n&&t--,t=Math.min(t,f+1),Boolean(t%2)&&(\"reverse\"===h?(n=1-n,p&&(n-=p/u)):\"mirror\"===h&&(b=i)),y=is(0,1,n)*u}const x=v?{done:!1,value:a[0]}:b.next(y);s&&(x.value=s(x.value));let{done:w}=x;v||null===l||(w=this.speed>=0?this.currentTime>=c:this.currentTime<=0);const E=null===this.holdTime&&(\"finished\"===this.state||\"running\"===this.state&&w);return E&&void 0!==r&&(x.value=Bi(a,this.options,r)),m&&m(x.value),E&&this.finish(),x}get duration(){const{resolved:e}=this;return e?ji(e.calculatedDuration):0}get time(){return ji(this.currentTime)}set time(e){e=Ai(e),this.currentTime=e,null!==this.holdTime||0===this.speed?this.holdTime=e:this.driver&&(this.startTime=this.driver.now()-e/this.speed)}get speed(){return this.playbackSpeed}set speed(e){const t=this.playbackSpeed!==e;this.playbackSpeed=e,t&&(this.time=ji(this.currentTime))}play(){if(this.resolver.isScheduled||this.resolver.resume(),!this._resolved)return void(this.pendingPlayState=\"running\");if(this.isStopped)return;const{driver:e=fl,onPlay:t,startTime:n}=this.options;this.driver||(this.driver=e((e=>this.tick(e)))),t&&t();const r=this.driver.now();null!==this.holdTime?this.startTime=r-this.holdTime:this.startTime?\"finished\"===this.state&&(this.startTime=r):this.startTime=null!=n?n:this.calcStartTime(),\"finished\"===this.state&&this.updateFinishedPromise(),this.cancelTime=this.startTime,this.holdTime=null,this.state=\"running\",this.driver.start()}pause(){var e;this._resolved?(this.state=\"paused\",this.holdTime=null!==(e=this.currentTime)&&void 0!==e?e:0):this.pendingPlayState=\"paused\"}complete(){\"running\"!==this.state&&this.play(),this.pendingPlayState=this.state=\"finished\",this.holdTime=null}finish(){this.teardown(),this.state=\"finished\";const{onComplete:e}=this.options;e&&e()}cancel(){null!==this.cancelTime&&this.tick(this.cancelTime),this.teardown(),this.updateFinishedPromise()}teardown(){this.state=\"idle\",this.stopDriver(),this.resolveFinishedPromise(),this.updateFinishedPromise(),this.startTime=this.cancelTime=null,this.resolver.cancel()}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(e){return this.startTime=0,this.tick(e,!0)}}const gl=new Set([\"opacity\",\"clipPath\",\"filter\",\"transform\"]),vl=e=>Array.isArray(e)&&\"number\"==typeof e[0];function yl(e){return Boolean(!e||\"string\"==typeof e&&e in xl||vl(e)||Array.isArray(e)&&e.every(yl))}const bl=([e,t,n,r])=>`cubic-bezier(${e}, ${t}, ${n}, ${r})`,xl={linear:\"linear\",ease:\"ease\",easeIn:\"ease-in\",easeOut:\"ease-out\",easeInOut:\"ease-in-out\",circIn:bl([0,.65,.55,1]),circOut:bl([.55,0,1,.45]),backIn:bl([.31,.01,.66,-.59]),backOut:bl([.33,1.53,.69,.99])};function wl(e){return El(e)||xl.easeOut}function El(e){return e?vl(e)?bl(e):Array.isArray(e)?e.map(wl):xl[e]:void 0}const Sl=fa((()=>Object.hasOwnProperty.call(Element.prototype,\"animate\")));class _l extends va{constructor(e){super(e);const{name:t,motionValue:n,element:r,keyframes:o}=this.options;this.resolver=new da(o,((e,t)=>this.onKeyframesResolved(e,t)),t,n,r),this.resolver.scheduleResolve()}initPlayback(e,t){var n;let{duration:r=300,times:o,ease:i,type:s,motionValue:a,name:l,startTime:c}=this.options;if(!(null===(n=a.owner)||void 0===n?void 0:n.current))return!1;if(\"spring\"===(u=this.options).type||!yl(u.ease)){const{onComplete:t,onUpdate:n,motionValue:a,element:l,...c}=this.options,u=function(e,t){const n=new ml({...t,keyframes:e,repeat:0,delay:0,isGenerator:!0});let r={done:!1,value:e[0]};const o=[];let i=0;for(;!r.done&&i<2e4;)r=n.sample(i),o.push(r.value),i+=10;return{times:void 0,keyframes:o,duration:i-10,ease:\"linear\"}}(e,c);1===(e=u.keyframes).length&&(e[1]=e[0]),r=u.duration,o=u.times,i=u.ease,s=\"keyframes\"}var u;const d=function(e,t,n,{delay:r=0,duration:o=300,repeat:i=0,repeatType:s=\"loop\",ease:a,times:l}={}){const c={[t]:n};l&&(c.offset=l);const u=El(a);return Array.isArray(u)&&(c.easing=u),e.animate(c,{delay:r,duration:o,easing:Array.isArray(u)?\"linear\":u,fill:\"both\",iterations:i+1,direction:\"reverse\"===s?\"alternate\":\"normal\"})}(a.owner.current,l,e,{...this.options,duration:r,times:o,ease:i});return d.startTime=null!=c?c:this.calcStartTime(),this.pendingTimeline?(d.timeline=this.pendingTimeline,this.pendingTimeline=void 0):d.onfinish=()=>{const{onComplete:n}=this.options;a.set(Bi(e,this.options,t)),n&&n(),this.cancel(),this.resolveFinishedPromise()},{animation:d,duration:r,times:o,type:s,ease:i,keyframes:e}}get duration(){const{resolved:e}=this;if(!e)return 0;const{duration:t}=e;return ji(t)}get time(){const{resolved:e}=this;if(!e)return 0;const{animation:t}=e;return ji(t.currentTime||0)}set time(e){const{resolved:t}=this;if(!t)return;const{animation:n}=t;n.currentTime=Ai(e)}get speed(){const{resolved:e}=this;if(!e)return 1;const{animation:t}=e;return t.playbackRate}set speed(e){const{resolved:t}=this;if(!t)return;const{animation:n}=t;n.playbackRate=e}get state(){const{resolved:e}=this;if(!e)return\"idle\";const{animation:t}=e;return t.playState}get startTime(){const{resolved:e}=this;if(!e)return null;const{animation:t}=e;return t.startTime}attachTimeline(e){if(this._resolved){const{resolved:t}=this;if(!t)return Vi;const{animation:n}=t;n.timeline=e,n.onfinish=null}else this.pendingTimeline=e;return Vi}play(){if(this.isStopped)return;const{resolved:e}=this;if(!e)return;const{animation:t}=e;\"finished\"===t.playState&&this.updateFinishedPromise(),t.play()}pause(){const{resolved:e}=this;if(!e)return;const{animation:t}=e;t.pause()}stop(){if(this.resolver.cancel(),this.isStopped=!0,\"idle\"===this.state)return;this.resolveFinishedPromise(),this.updateFinishedPromise();const{resolved:e}=this;if(!e)return;const{animation:t,keyframes:n,duration:r,type:o,ease:i,times:s}=e;if(\"idle\"===t.playState||\"finished\"===t.playState)return;if(this.time){const{motionValue:e,onUpdate:t,onComplete:a,element:l,...c}=this.options,u=new ml({...c,keyframes:n,duration:r,type:o,ease:i,times:s,isGenerator:!0}),d=Ai(this.time);e.setWithVelocity(u.sample(d-10).value,u.sample(d).value,10)}const{onStop:a}=this.options;a&&a(),this.cancel()}complete(){const{resolved:e}=this;e&&e.animation.finish()}cancel(){const{resolved:e}=this;e&&e.animation.cancel()}static supports(e){const{motionValue:t,name:n,repeatDelay:r,repeatType:o,damping:i,type:s}=e;return Sl()&&n&&gl.has(n)&&t&&t.owner&&t.owner.current instanceof HTMLElement&&!t.owner.getProps().onUpdate&&!r&&\"mirror\"!==o&&0!==i&&\"inertia\"!==s}}const kl=fa((()=>void 0!==window.ScrollTimeline));class Cl{constructor(e){this.stop=()=>this.runAll(\"stop\"),this.animations=e.filter(Boolean)}then(e,t){return Promise.all(this.animations).then(e).catch(t)}getAll(e){return this.animations[0][e]}setAll(e,t){for(let n=0;n<this.animations.length;n++)this.animations[n][e]=t}attachTimeline(e){const t=this.animations.map((t=>{if(!kl()||!t.attachTimeline)return t.pause(),function(e,n){let r;const o=()=>{const{currentTime:e}=n,o=(null===e?0:e.value)/100;r!==o&&(e=>{t.time=t.duration*e})(o),r=o};return $i.update(o,!0),()=>Ki(o)}(0,e);t.attachTimeline(e)}));return()=>{t.forEach(((e,t)=>{e&&e(),this.animations[t].stop()}))}}get time(){return this.getAll(\"time\")}set time(e){this.setAll(\"time\",e)}get speed(){return this.getAll(\"speed\")}set speed(e){this.setAll(\"speed\",e)}get startTime(){return this.getAll(\"startTime\")}get duration(){let e=0;for(let t=0;t<this.animations.length;t++)e=Math.max(e,this.animations[t].duration);return e}runAll(e){this.animations.forEach((t=>t[e]()))}play(){this.runAll(\"play\")}pause(){this.runAll(\"pause\")}cancel(){this.runAll(\"cancel\")}complete(){this.runAll(\"complete\")}}const Pl=(e,t,n,r={},o,i,s)=>a=>{const l=Fi(r,e)||{},c=l.delay||r.delay||0;let{elapsed:u=0}=r;u-=Ai(c);let d={keyframes:Array.isArray(n)?n:[null,n],ease:\"easeOut\",velocity:t.getVelocity(),...l,delay:-u,onUpdate:e=>{t.set(e),l.onUpdate&&l.onUpdate(e)},onComplete:()=>{a(),l.onComplete&&l.onComplete(),s&&s()},onStop:s,name:e,motionValue:t,element:i?void 0:o};(function({when:e,delay:t,delayChildren:n,staggerChildren:r,staggerDirection:o,repeat:i,repeatType:s,repeatDelay:a,from:l,elapsed:c,...u}){return!!Object.keys(u).length})(l)||(d={...d,...Li(e,d)}),d.duration&&(d.duration=Ai(d.duration)),d.repeatDelay&&(d.repeatDelay=Ai(d.repeatDelay)),void 0!==d.from&&(d.keyframes[0]=d.from);let f=!1;if((!1===d.type||0===d.duration&&!d.repeatDelay)&&(d.duration=0,0===d.delay&&(f=!0)),f&&!i&&void 0!==t.get()){const e=Bi(d.keyframes,l);if(void 0!==e)return $i.update((()=>{d.onUpdate(e),d.onComplete()})),new Cl([])}return!i&&_l.supports(d)?new _l(d):new ml(d)},Tl=e=>Boolean(e&&\"object\"==typeof e&&e.mix&&e.toValue),Ol=e=>Ei(e)?e[e.length-1]||0:e;function Rl(e,t){-1===e.indexOf(t)&&e.push(t)}function Nl(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class Al{constructor(){this.subscriptions=[]}add(e){return Rl(this.subscriptions,e),()=>Nl(this.subscriptions,e)}notify(e,t,n){const r=this.subscriptions.length;if(r)if(1===r)this.subscriptions[0](e,t,n);else for(let o=0;o<r;o++){const r=this.subscriptions[o];r&&r(e,t,n)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}const jl={current:void 0};class Ml{constructor(e,t={}){this.version=\"11.4.0\",this.canTrackVelocity=null,this.events={},this.updateAndNotify=(e,t=!0)=>{const n=ma.now();this.updatedAt!==n&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(e),this.current!==this.prev&&this.events.change&&this.events.change.notify(this.current),t&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.hasAnimated=!1,this.setCurrent(e),this.owner=t.owner}setCurrent(e){var t;this.current=e,this.updatedAt=ma.now(),null===this.canTrackVelocity&&void 0!==e&&(this.canTrackVelocity=(t=this.current,!isNaN(parseFloat(t))))}setPrevFrameValue(e=this.current){this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt}onChange(e){return this.on(\"change\",e)}on(e,t){this.events[e]||(this.events[e]=new Al);const n=this.events[e].add(t);return\"change\"===e?()=>{n(),$i.read((()=>{this.events.change.getSize()||this.stop()}))}:n}clearListeners(){for(const e in this.events)this.events[e].clear()}attach(e,t){this.passiveEffect=e,this.stopPassiveEffect=t}set(e,t=!0){t&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,t)}setWithVelocity(e,t,n){this.set(t),this.prev=void 0,this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt-n}jump(e,t=!0){this.updateAndNotify(e),this.prev=e,this.prevUpdatedAt=this.prevFrameValue=void 0,t&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return jl.current&&jl.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){const e=ma.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||e-this.updatedAt>30)return 0;const t=Math.min(this.updatedAt-this.prevUpdatedAt,30);return ya(parseFloat(this.current)-parseFloat(this.prevFrameValue),t)}start(e){return this.stop(),new Promise((t=>{this.hasAnimated=!0,this.animation=e(t),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function Il(e,t){return new Ml(e,t)}function Dl(e,t,n){e.hasValue(t)?e.getValue(t).set(n):e.addValue(t,Il(n))}const Ll=e=>e.replace(/([a-z])([A-Z])/gu,\"$1-$2\").toLowerCase(),Fl=\"data-\"+Ll(\"framerAppearId\");function zl(e){return e.props[Fl]}function Bl(e){return Ni.has(e)?\"transform\":gl.has(e)?Ll(e):void 0}class Vl extends Ml{constructor(){super(...arguments),this.output=[],this.counts=new Map}add(e){const t=Bl(e);if(!t)return;const n=this.counts.get(t)||0;this.counts.set(t,n+1),0===n&&(this.output.push(t),this.update());let r=!1;return()=>{if(r)return;r=!0;const e=this.counts.get(t)-1;this.counts.set(t,e),0===e&&(Nl(this.output,t),this.update())}}update(){this.set(this.output.length?this.output.join(\", \"):\"auto\")}}const Wl=e=>Boolean(e&&e.getVelocity);function Ul(e,t){var n;if(!e.applyWillChange)return;let r=e.getValue(\"willChange\");return r||(null===(n=e.props.style)||void 0===n?void 0:n.willChange)||(r=new Vl(\"auto\"),e.addValue(\"willChange\",r)),o=r,Boolean(Wl(o)&&o.add)?r.add(t):void 0;var o}function $l({protectedKeys:e,needsAnimating:t},n){const r=e.hasOwnProperty(n)&&!0!==t[n];return t[n]=!1,r}function Kl(e,t,{delay:n=0,transitionOverride:r,type:o}={}){var i;let{transition:s=e.getDefaultTransition(),transitionEnd:a,...l}=t;r&&(s=r);const c=[],u=o&&e.animationState&&e.animationState.getState()[o];for(const t in l){const r=e.getValue(t,null!==(i=e.latestValues[t])&&void 0!==i?i:null),o=l[t];if(void 0===o||u&&$l(u,t))continue;const a={delay:n,...Fi(s||{},t)};let d=!1;if(window.MotionHandoffAnimation){const n=zl(e);if(n){const e=window.MotionHandoffAnimation(n,t,$i);null!==e&&(a.startTime=e,d=!0)}}r.start(Pl(t,r,o,e.shouldReduceMotion&&Ni.has(t)?{type:!1}:a,e,d,Ul(e,t)));const f=r.animation;f&&c.push(f)}return a&&Promise.all(c).then((()=>{$i.update((()=>{a&&function(e,t){const n=Pi(e,t);let{transitionEnd:r={},transition:o={},...i}=n||{};i={...i,...r};for(const t in i)Dl(e,t,Ol(i[t]))}(e,a)}))})),c}function Hl(e,t,n={}){var r;const o=Pi(e,t,\"exit\"===n.type?null===(r=e.presenceContext)||void 0===r?void 0:r.custom:void 0);let{transition:i=e.getDefaultTransition()||{}}=o||{};n.transitionOverride&&(i=n.transitionOverride);const s=o?()=>Promise.all(Kl(e,o,n)):()=>Promise.resolve(),a=e.variantChildren&&e.variantChildren.size?(r=0)=>{const{delayChildren:o=0,staggerChildren:s,staggerDirection:a}=i;return function(e,t,n=0,r=0,o=1,i){const s=[],a=(e.variantChildren.size-1)*r,l=1===o?(e=0)=>e*r:(e=0)=>a-e*r;return Array.from(e.variantChildren).sort(ql).forEach(((e,r)=>{e.notify(\"AnimationStart\",t),s.push(Hl(e,t,{...i,delay:n+l(r)}).then((()=>e.notify(\"AnimationComplete\",t))))})),Promise.all(s)}(e,t,o+r,s,a,n)}:()=>Promise.resolve(),{when:l}=i;if(l){const[e,t]=\"beforeChildren\"===l?[s,a]:[a,s];return e().then((()=>t()))}return Promise.all([s(),a(n.delay)])}function ql(e,t){return e.sortNodePosition(t)}const Yl=[...Ti].reverse(),Gl=Ti.length;function Xl(e=!1){return{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function Jl(){return{animate:Xl(!0),whileInView:Xl(),whileHover:Xl(),whileTap:Xl(),whileDrag:Xl(),whileFocus:Xl(),exit:Xl()}}class Zl{constructor(e){this.isMounted=!1,this.node=e}update(){}}let Ql=0;const ec={animation:{Feature:class extends Zl{constructor(e){super(e),e.animationState||(e.animationState=function(e){let t=function(e){return t=>Promise.all(t.map((({animation:t,options:n})=>function(e,t,n={}){let r;if(e.notify(\"AnimationStart\",t),Array.isArray(t)){const o=t.map((t=>Hl(e,t,n)));r=Promise.all(o)}else if(\"string\"==typeof t)r=Hl(e,t,n);else{const o=\"function\"==typeof t?Pi(e,t,n.custom):t;r=Promise.all(Kl(e,o,n))}return r.then((()=>{e.notify(\"AnimationComplete\",t)}))}(e,t,n))))}(e),n=Jl(),r=!0;const o=t=>(n,r)=>{var o;const i=Pi(e,r,\"exit\"===t?null===(o=e.presenceContext)||void 0===o?void 0:o.custom:void 0);if(i){const{transition:e,transitionEnd:t,...r}=i;n={...n,...r,...t}}return n};function i(i){const s=e.getProps(),a=e.getVariantContext(!0)||{},l=[],c=new Set;let u={},d=1/0;for(let t=0;t<Gl;t++){const p=Yl[t],m=n[p],g=void 0!==s[p]?s[p]:a[p],v=_i(g),y=p===i?m.isActive:null;!1===y&&(d=t);let b=g===a[p]&&g!==s[p]&&v;if(b&&r&&e.manuallyAnimateOnMount&&(b=!1),m.protectedKeys={...u},!m.isActive&&null===y||!g&&!m.prevProp||wi(g)||\"boolean\"==typeof g)continue;let x=(f=m.prevProp,(\"string\"==typeof(h=g)?h!==f:!!Array.isArray(h)&&!Si(h,f))||p===i&&m.isActive&&!b&&v||t>d&&v),w=!1;const E=Array.isArray(g)?g:[g];let S=E.reduce(o(p),{});!1===y&&(S={});const{prevResolvedValues:_={}}=m,k={..._,...S},C=t=>{x=!0,c.has(t)&&(w=!0,c.delete(t)),m.needsAnimating[t]=!0;const n=e.getValue(t);n&&(n.liveStyle=!1)};for(const e in k){const t=S[e],n=_[e];if(u.hasOwnProperty(e))continue;let r=!1;r=Ei(t)&&Ei(n)?!Si(t,n):t!==n,r?null!=t?C(e):c.add(e):void 0!==t&&c.has(e)?C(e):m.protectedKeys[e]=!0}m.prevProp=g,m.prevResolvedValues=S,m.isActive&&(u={...u,...S}),r&&e.blockInitialAnimation&&(x=!1),!x||b&&!w||l.push(...E.map((e=>({animation:e,options:{type:p}}))))}var f,h;if(c.size){const t={};c.forEach((n=>{const r=e.getBaseTarget(n),o=e.getValue(n);o&&(o.liveStyle=!0),t[n]=null!=r?r:null})),l.push({animation:t})}let p=Boolean(l.length);return!r||!1!==s.initial&&s.initial!==s.animate||e.manuallyAnimateOnMount||(p=!1),r=!1,p?t(l):Promise.resolve()}return{animateChanges:i,setActive:function(t,r){var o;if(n[t].isActive===r)return Promise.resolve();null===(o=e.variantChildren)||void 0===o||o.forEach((e=>{var n;return null===(n=e.animationState)||void 0===n?void 0:n.setActive(t,r)})),n[t].isActive=r;const s=i(t);for(const e in n)n[e].protectedKeys={};return s},setAnimateFunction:function(n){t=n(e)},getState:()=>n,reset:()=>{n=Jl(),r=!0}}}(e))}updateAnimationControlsSubscription(){const{animate:e}=this.node.getProps();wi(e)&&(this.unmountControls=e.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:e}=this.node.getProps(),{animate:t}=this.node.prevProps||{};e!==t&&this.updateAnimationControlsSubscription()}unmount(){var e;this.node.animationState.reset(),null===(e=this.unmountControls)||void 0===e||e.call(this)}}},exit:{Feature:class extends Zl{constructor(){super(...arguments),this.id=Ql++}update(){if(!this.node.presenceContext)return;const{isPresent:e,onExitComplete:t}=this.node.presenceContext,{isPresent:n}=this.node.prevPresenceContext||{};if(!this.node.animationState||e===n)return;const r=this.node.animationState.setActive(\"exit\",!e);t&&!e&&r.then((()=>t(this.id)))}mount(){const{register:e}=this.node.presenceContext||{};e&&(this.unmount=e(this.id))}unmount(){}}}},tc=e=>\"mouse\"===e.pointerType?\"number\"!=typeof e.button||e.button<=0:!1!==e.isPrimary;function nc(e,t=\"page\"){return{point:{x:e[`${t}X`],y:e[`${t}Y`]}}}const rc=e=>t=>tc(t)&&e(t,nc(t));function oc(e,t,n,r={passive:!0}){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n)}function ic(e,t,n,r){return oc(e,t,rc(n),r)}const sc=(e,t)=>Math.abs(e-t);class ac{constructor(e,t,{transformPagePoint:n,contextWindow:r,dragSnapToOrigin:o=!1}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const e=uc(this.lastMoveEventInfo,this.history),t=null!==this.startEvent,n=function(e,t){const n=sc(e.x,t.x),r=sc(e.y,t.y);return Math.sqrt(n**2+r**2)}(e.offset,{x:0,y:0})>=3;if(!t&&!n)return;const{point:r}=e,{timestamp:o}=Hi;this.history.push({...r,timestamp:o});const{onStart:i,onMove:s}=this.handlers;t||(i&&i(this.lastMoveEvent,e),this.startEvent=this.lastMoveEvent),s&&s(this.lastMoveEvent,e)},this.handlePointerMove=(e,t)=>{this.lastMoveEvent=e,this.lastMoveEventInfo=lc(t,this.transformPagePoint),$i.update(this.updatePoint,!0)},this.handlePointerUp=(e,t)=>{this.end();const{onEnd:n,onSessionEnd:r,resumeAnimation:o}=this.handlers;if(this.dragSnapToOrigin&&o&&o(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const i=uc(\"pointercancel\"===e.type?this.lastMoveEventInfo:lc(t,this.transformPagePoint),this.history);this.startEvent&&n&&n(e,i),r&&r(e,i)},!tc(e))return;this.dragSnapToOrigin=o,this.handlers=t,this.transformPagePoint=n,this.contextWindow=r||window;const i=lc(nc(e),this.transformPagePoint),{point:s}=i,{timestamp:a}=Hi;this.history=[{...s,timestamp:a}];const{onSessionStart:l}=t;l&&l(e,uc(i,this.history)),this.removeListeners=Ga(ic(this.contextWindow,\"pointermove\",this.handlePointerMove),ic(this.contextWindow,\"pointerup\",this.handlePointerUp),ic(this.contextWindow,\"pointercancel\",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),Ki(this.updatePoint)}}function lc(e,t){return t?{point:t(e.point)}:e}function cc(e,t){return{x:e.x-t.x,y:e.y-t.y}}function uc({point:e},t){return{point:e,delta:cc(e,fc(t)),offset:cc(e,dc(t)),velocity:hc(t,.1)}}function dc(e){return e[0]}function fc(e){return e[e.length-1]}function hc(e,t){if(e.length<2)return{x:0,y:0};let n=e.length-1,r=null;const o=fc(e);for(;n>=0&&(r=e[n],!(o.timestamp-r.timestamp>Ai(t)));)n--;if(!r)return{x:0,y:0};const i=ji(o.timestamp-r.timestamp);if(0===i)return{x:0,y:0};const s={x:(o.x-r.x)/i,y:(o.y-r.y)/i};return s.x===1/0&&(s.x=0),s.y===1/0&&(s.y=0),s}function pc(e){let t=null;return()=>null===t&&(t=e,()=>{t=null})}const mc=pc(\"dragHorizontal\"),gc=pc(\"dragVertical\");function vc(e){let t=!1;if(\"y\"===e)t=gc();else if(\"x\"===e)t=mc();else{const e=mc(),n=gc();e&&n?t=()=>{e(),n()}:(e&&e(),n&&n())}return t}function yc(){const e=vc(!0);return!e||(e(),!1)}function bc(e){return e&&\"object\"==typeof e&&Object.prototype.hasOwnProperty.call(e,\"current\")}const xc=.9999,wc=1.0001,Ec=-.01,Sc=.01;function _c(e){return e.max-e.min}function kc(e,t,n,r=.5){e.origin=r,e.originPoint=Ja(t.min,t.max,e.origin),e.scale=_c(n)/_c(t),e.translate=Ja(n.min,n.max,e.origin)-e.originPoint,(e.scale>=xc&&e.scale<=wc||isNaN(e.scale))&&(e.scale=1),(e.translate>=Ec&&e.translate<=Sc||isNaN(e.translate))&&(e.translate=0)}function Cc(e,t,n,r){kc(e.x,t.x,n.x,r?r.originX:void 0),kc(e.y,t.y,n.y,r?r.originY:void 0)}function Pc(e,t,n){e.min=n.min+t.min,e.max=e.min+_c(t)}function Tc(e,t,n){e.min=t.min-n.min,e.max=e.min+_c(t)}function Oc(e,t,n){Tc(e.x,t.x,n.x),Tc(e.y,t.y,n.y)}function Rc(e,t,n){return{min:void 0!==t?e.min+t:void 0,max:void 0!==n?e.max+n-(e.max-e.min):void 0}}function Nc(e,t){let n=t.min-e.min,r=t.max-e.max;return t.max-t.min<e.max-e.min&&([n,r]=[r,n]),{min:n,max:r}}const Ac=.35;function jc(e,t,n){return{min:Mc(e,t),max:Mc(e,n)}}function Mc(e,t){return\"number\"==typeof e?e:e[t]||0}const Ic=()=>({x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}}),Dc=()=>({x:{min:0,max:0},y:{min:0,max:0}});function Lc(e){return[e(\"x\"),e(\"y\")]}function Fc({top:e,left:t,right:n,bottom:r}){return{x:{min:t,max:n},y:{min:e,max:r}}}function zc(e){return void 0===e||1===e}function Bc({scale:e,scaleX:t,scaleY:n}){return!zc(e)||!zc(t)||!zc(n)}function Vc(e){return Bc(e)||Wc(e)||e.z||e.rotate||e.rotateX||e.rotateY||e.skewX||e.skewY}function Wc(e){return Uc(e.x)||Uc(e.y)}function Uc(e){return e&&\"0%\"!==e}function $c(e,t,n){return n+t*(e-n)}function Kc(e,t,n,r,o){return void 0!==o&&(e=$c(e,o,r)),$c(e,n,r)+t}function Hc(e,t=0,n=1,r,o){e.min=Kc(e.min,t,n,r,o),e.max=Kc(e.max,t,n,r,o)}function qc(e,{x:t,y:n}){Hc(e.x,t.translate,t.scale,t.originPoint),Hc(e.y,n.translate,n.scale,n.originPoint)}const Yc=.999999999999,Gc=1.0000000000001;function Xc(e,t){e.min=e.min+t,e.max=e.max+t}function Jc(e,t,n,r,o=.5){Hc(e,t,n,Ja(e.min,e.max,o),r)}function Zc(e,t){Jc(e.x,t.x,t.scaleX,t.scale,t.originX),Jc(e.y,t.y,t.scaleY,t.scale,t.originY)}function Qc(e,t){return Fc(function(e,t){if(!t)return e;const n=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}(e.getBoundingClientRect(),t))}const eu=({current:e})=>e?e.ownerDocument.defaultView:null,tu=new WeakMap;class nu{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=Dc(),this.visualElement=e}start(e,{snapToCursor:t=!1}={}){const{presenceContext:n}=this.visualElement;if(n&&!1===n.isPresent)return;const{dragSnapToOrigin:r}=this.getProps();this.panSession=new ac(e,{onSessionStart:e=>{const{dragSnapToOrigin:n}=this.getProps();n?this.pauseAnimation():this.stopAnimation(),t&&this.snapToCursor(nc(e,\"page\").point)},onStart:(e,t)=>{var n;const{drag:r,dragPropagation:o,onDragStart:i}=this.getProps();if(r&&!o&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=vc(r),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),Lc((e=>{let t=this.getAxisMotionValue(e).get()||0;if(gs.test(t)){const{projection:n}=this.visualElement;if(n&&n.layout){const r=n.layout.layoutBox[e];r&&(t=_c(r)*(parseFloat(t)/100))}}this.originPoint[e]=t})),i&&$i.postRender((()=>i(e,t))),null===(n=this.removeWillChange)||void 0===n||n.call(this),this.removeWillChange=Ul(this.visualElement,\"transform\");const{animationState:s}=this.visualElement;s&&s.setActive(\"whileDrag\",!0)},onMove:(e,t)=>{const{dragPropagation:n,dragDirectionLock:r,onDirectionLock:o,onDrag:i}=this.getProps();if(!n&&!this.openGlobalLock)return;const{offset:s}=t;if(r&&null===this.currentDirection)return this.currentDirection=function(e,t=10){let n=null;return Math.abs(e.y)>t?n=\"y\":Math.abs(e.x)>t&&(n=\"x\"),n}(s),void(null!==this.currentDirection&&o&&o(this.currentDirection));this.updateAxis(\"x\",t.point,s),this.updateAxis(\"y\",t.point,s),this.visualElement.render(),i&&i(e,t)},onSessionEnd:(e,t)=>this.stop(e,t),resumeAnimation:()=>Lc((e=>{var t;return\"paused\"===this.getAnimationState(e)&&(null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:r,contextWindow:eu(this.visualElement)})}stop(e,t){var n;null===(n=this.removeWillChange)||void 0===n||n.call(this);const r=this.isDragging;if(this.cancel(),!r)return;const{velocity:o}=t;this.startAnimation(o);const{onDragEnd:i}=this.getProps();i&&$i.postRender((()=>i(e,t)))}cancel(){this.isDragging=!1;const{projection:e,animationState:t}=this.visualElement;e&&(e.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:n}=this.getProps();!n&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),t&&t.setActive(\"whileDrag\",!1)}updateAxis(e,t,n){const{drag:r}=this.getProps();if(!n||!ru(e,r,this.currentDirection))return;const o=this.getAxisMotionValue(e);let i=this.originPoint[e]+n[e];this.constraints&&this.constraints[e]&&(i=function(e,{min:t,max:n},r){return void 0!==t&&e<t?e=r?Ja(t,e,r.min):Math.max(e,t):void 0!==n&&e>n&&(e=r?Ja(n,e,r.max):Math.min(e,n)),e}(i,this.constraints[e],this.elastic[e])),o.set(i)}resolveConstraints(){var e;const{dragConstraints:t,dragElastic:n}=this.getProps(),r=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(e=this.visualElement.projection)||void 0===e?void 0:e.layout,o=this.constraints;t&&bc(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!r)&&function(e,{top:t,left:n,bottom:r,right:o}){return{x:Rc(e.x,n,o),y:Rc(e.y,t,r)}}(r.layoutBox,t),this.elastic=function(e=Ac){return!1===e?e=0:!0===e&&(e=Ac),{x:jc(e,\"left\",\"right\"),y:jc(e,\"top\",\"bottom\")}}(n),o!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&Lc((e=>{!1!==this.constraints&&this.getAxisMotionValue(e)&&(this.constraints[e]=function(e,t){const n={};return void 0!==t.min&&(n.min=t.min-e.min),void 0!==t.max&&(n.max=t.max-e.min),n}(r.layoutBox[e],this.constraints[e]))}))}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:t}=this.getProps();if(!e||!bc(e))return!1;const n=e.current;Xi(null!==n,\"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");const{projection:r}=this.visualElement;if(!r||!r.layout)return!1;const o=function(e,t,n){const r=Qc(e,n),{scroll:o}=t;return o&&(Xc(r.x,o.offset.x),Xc(r.y,o.offset.y)),r}(n,r.root,this.visualElement.getTransformPagePoint());let i=function(e,t){return{x:Nc(e.x,t.x),y:Nc(e.y,t.y)}}(r.layout.layoutBox,o);if(t){const e=t(function({x:e,y:t}){return{top:t.min,right:e.max,bottom:t.max,left:e.min}}(i));this.hasMutatedConstraints=!!e,e&&(i=Fc(e))}return i}startAnimation(e){const{drag:t,dragMomentum:n,dragElastic:r,dragTransition:o,dragSnapToOrigin:i,onDragTransitionEnd:s}=this.getProps(),a=this.constraints||{},l=Lc((s=>{if(!ru(s,t,this.currentDirection))return;let l=a&&a[s]||{};i&&(l={min:0,max:0});const c=r?200:1e6,u=r?40:1e7,d={type:\"inertia\",velocity:n?e[s]:0,bounceStiffness:c,bounceDamping:u,timeConstant:750,restDelta:1,restSpeed:10,...o,...l};return this.startAxisValueAnimation(s,d)}));return Promise.all(l).then(s)}startAxisValueAnimation(e,t){const n=this.getAxisMotionValue(e);return n.start(Pl(e,n,0,t,this.visualElement,!1,Ul(this.visualElement,e)))}stopAnimation(){Lc((e=>this.getAxisMotionValue(e).stop()))}pauseAnimation(){Lc((e=>{var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.pause()}))}getAnimationState(e){var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.state}getAxisMotionValue(e){const t=`_drag${e.toUpperCase()}`,n=this.visualElement.getProps();return n[t]||this.visualElement.getValue(e,(n.initial?n.initial[e]:void 0)||0)}snapToCursor(e){Lc((t=>{const{drag:n}=this.getProps();if(!ru(t,n,this.currentDirection))return;const{projection:r}=this.visualElement,o=this.getAxisMotionValue(t);if(r&&r.layout){const{min:n,max:i}=r.layout.layoutBox[t];o.set(e[t]-Ja(n,i,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:e,dragConstraints:t}=this.getProps(),{projection:n}=this.visualElement;if(!bc(t)||!n||!this.constraints)return;this.stopAnimation();const r={x:0,y:0};Lc((e=>{const t=this.getAxisMotionValue(e);if(t&&!1!==this.constraints){const n=t.get();r[e]=function(e,t){let n=.5;const r=_c(e),o=_c(t);return o>r?n=Xa(t.min,t.max-r,e.min):r>o&&(n=Xa(e.min,e.max-o,t.min)),is(0,1,n)}({min:n,max:n},this.constraints[e])}}));const{transformTemplate:o}=this.visualElement.getProps();this.visualElement.current.style.transform=o?o({},\"\"):\"none\",n.root&&n.root.updateScroll(),n.updateLayout(),this.resolveConstraints(),Lc((t=>{if(!ru(t,e,null))return;const n=this.getAxisMotionValue(t),{min:o,max:i}=this.constraints[t];n.set(Ja(o,i,r[t]))}))}addListeners(){if(!this.visualElement.current)return;tu.set(this.visualElement,this);const e=ic(this.visualElement.current,\"pointerdown\",(e=>{const{drag:t,dragListener:n=!0}=this.getProps();t&&n&&this.start(e)})),t=()=>{const{dragConstraints:e}=this.getProps();bc(e)&&e.current&&(this.constraints=this.resolveRefConstraints())},{projection:n}=this.visualElement,r=n.addEventListener(\"measure\",t);n&&!n.layout&&(n.root&&n.root.updateScroll(),n.updateLayout()),$i.read(t);const o=oc(window,\"resize\",(()=>this.scalePositionWithinConstraints())),i=n.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t})=>{this.isDragging&&t&&(Lc((t=>{const n=this.getAxisMotionValue(t);n&&(this.originPoint[t]+=e[t].translate,n.set(n.get()+e[t].translate))})),this.visualElement.render())}));return()=>{o(),e(),r(),i&&i()}}getProps(){const e=this.visualElement.getProps(),{drag:t=!1,dragDirectionLock:n=!1,dragPropagation:r=!1,dragConstraints:o=!1,dragElastic:i=Ac,dragMomentum:s=!0}=e;return{...e,drag:t,dragDirectionLock:n,dragPropagation:r,dragConstraints:o,dragElastic:i,dragMomentum:s}}}function ru(e,t,n){return!(!0!==t&&t!==e||null!==n&&n!==e)}const ou=e=>(t,n)=>{e&&$i.postRender((()=>e(t,n)))};var iu=n(848);const su=(0,o.createContext)(null),au=(0,o.createContext)({}),lu=(0,o.createContext)({}),cu={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function uu(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const du={correct:(e,t)=>{if(!t.target)return e;if(\"string\"==typeof e){if(!vs.test(e))return e;e=parseFloat(e)}return`${uu(e,t.target.x)}% ${uu(e,t.target.y)}%`}},fu={correct:(e,{treeScale:t,projectionDelta:n})=>{const r=e,o=ea.parse(e);if(o.length>5)return r;const i=ea.createTransformer(e),s=\"number\"!=typeof o[0]?1:0,a=n.x.scale*t.x,l=n.y.scale*t.y;o[0+s]/=a,o[1+s]/=l;const c=Ja(a,l,.5);return\"number\"==typeof o[2+s]&&(o[2+s]/=c),\"number\"==typeof o[3+s]&&(o[3+s]/=c),i(o)}},hu={},{schedule:pu,cancel:mu}=Ui(queueMicrotask,!1);class gu extends o.Component{componentDidMount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n,layoutId:r}=this.props,{projection:o}=e;var i;i=yu,Object.assign(hu,i),o&&(t.group&&t.group.add(o),n&&n.register&&r&&n.register(o),o.root.didUpdate(),o.addEventListener(\"animationComplete\",(()=>{this.safeToRemove()})),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),cu.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:t,visualElement:n,drag:r,isPresent:o}=this.props,i=n.projection;return i?(i.isPresent=o,r||e.layoutDependency!==t||void 0===t?i.willUpdate():this.safeToRemove(),e.isPresent!==o&&(o?i.promote():i.relegate()||$i.postRender((()=>{const e=i.getStack();e&&e.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),pu.postRender((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),t&&t.group&&t.group.remove(r),n&&n.deregister&&n.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function vu(e){const[t,n]=function(){const e=(0,o.useContext)(su);if(null===e)return[!0,null];const{isPresent:t,onExitComplete:n,register:r}=e,i=(0,o.useId)();(0,o.useEffect)((()=>r(i)),[]);const s=(0,o.useCallback)((()=>n&&n(i)),[i,n]);return!t&&n?[!1,s]:[!0]}(),r=(0,o.useContext)(au);return(0,iu.jsx)(gu,{...e,layoutGroup:r,switchLayoutGroup:(0,o.useContext)(lu),isPresent:t,safeToRemove:n})}const yu={borderRadius:{...du,applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]},borderTopLeftRadius:du,borderTopRightRadius:du,borderBottomLeftRadius:du,borderBottomRightRadius:du,boxShadow:fu},bu=[\"TopLeft\",\"TopRight\",\"BottomLeft\",\"BottomRight\"],xu=bu.length,wu=e=>\"string\"==typeof e?parseFloat(e):e,Eu=e=>\"number\"==typeof e||vs.test(e);function Su(e,t){return void 0!==e[t]?e[t]:e.borderRadius}const _u=Cu(0,.5,Va),ku=Cu(.5,.95,Vi);function Cu(e,t,n){return r=>r<e?0:r>t?1:n(Xa(e,t,r))}function Pu(e,t){e.min=t.min,e.max=t.max}function Tu(e,t){Pu(e.x,t.x),Pu(e.y,t.y)}function Ou(e,t){e.translate=t.translate,e.scale=t.scale,e.originPoint=t.originPoint,e.origin=t.origin}function Ru(e,t,n,r,o){return e=$c(e-=t,1/n,r),void 0!==o&&(e=$c(e,1/o,r)),e}function Nu(e,t,[n,r,o],i,s){!function(e,t=0,n=1,r=.5,o,i=e,s=e){if(gs.test(t)&&(t=parseFloat(t),t=Ja(s.min,s.max,t/100)-s.min),\"number\"!=typeof t)return;let a=Ja(i.min,i.max,r);e===i&&(a-=t),e.min=Ru(e.min,t,n,a,o),e.max=Ru(e.max,t,n,a,o)}(e,t[n],t[r],t[o],t.scale,i,s)}const Au=[\"x\",\"scaleX\",\"originX\"],ju=[\"y\",\"scaleY\",\"originY\"];function Mu(e,t,n,r){Nu(e.x,t,Au,n?n.x:void 0,r?r.x:void 0),Nu(e.y,t,ju,n?n.y:void 0,r?r.y:void 0)}function Iu(e){return 0===e.translate&&1===e.scale}function Du(e){return Iu(e.x)&&Iu(e.y)}function Lu(e,t){return e.min===t.min&&e.max===t.max}function Fu(e,t){return Math.round(e.min)===Math.round(t.min)&&Math.round(e.max)===Math.round(t.max)}function zu(e,t){return Fu(e.x,t.x)&&Fu(e.y,t.y)}function Bu(e){return _c(e.x)/_c(e.y)}function Vu(e,t){return e.translate===t.translate&&e.scale===t.scale&&e.originPoint===t.originPoint}class Wu{constructor(){this.members=[]}add(e){Rl(this.members,e),e.scheduleRender()}remove(e){if(Nl(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const e=this.members[this.members.length-1];e&&this.promote(e)}}relegate(e){const t=this.members.findIndex((t=>e===t));if(0===t)return!1;let n;for(let e=t;e>=0;e--){const t=this.members[e];if(!1!==t.isPresent){n=t;break}}return!!n&&(this.promote(n),!0)}promote(e,t){const n=this.lead;if(e!==n&&(this.prevLead=n,this.lead=e,e.show(),n)){n.instance&&n.scheduleRender(),e.scheduleRender(),e.resumeFrom=n,t&&(e.resumeFrom.preserveOpacity=!0),n.snapshot&&(e.snapshot=n.snapshot,e.snapshot.latestValues=n.animationValues||n.latestValues),e.root&&e.root.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:r}=e.options;!1===r&&n.hide()}}exitAnimationComplete(){this.members.forEach((e=>{const{options:t,resumingFrom:n}=e;t.onExitComplete&&t.onExitComplete(),n&&n.options.onExitComplete&&n.options.onExitComplete()}))}scheduleRender(){this.members.forEach((e=>{e.instance&&e.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}const Uu=(e,t)=>e.depth-t.depth;class $u{constructor(){this.children=[],this.isDirty=!1}add(e){Rl(this.children,e),this.isDirty=!0}remove(e){Nl(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(Uu),this.isDirty=!1,this.children.forEach(e)}}function Ku(e){const t=Wl(e)?e.get():e;return Tl(t)?t.toValue():t}const Hu={type:\"projectionFrame\",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0},qu=\"undefined\"!=typeof window&&void 0!==window.MotionDebug,Yu=[\"\",\"X\",\"Y\",\"Z\"],Gu={visibility:\"hidden\"};let Xu=0;function Ju(e,t,n,r){const{latestValues:o}=t;o[e]&&(n[e]=o[e],t.setStaticValue(e,0),r&&(r[e]=0))}function Zu(e){if(e.hasCheckedOptimisedAppear=!0,e.root===e)return;const{visualElement:t}=e.options;if(!t)return;const n=zl(t);if(window.MotionHasOptimisedAnimation(n,\"transform\")){const{layout:t,layoutId:r}=e.options;window.MotionCancelOptimisedAnimation(n,\"transform\",$i,!(t||r))}const{parent:r}=e;r&&!r.hasCheckedOptimisedAppear&&Zu(r)}function Qu({attachResizeListener:e,defaultParent:t,measureScroll:n,checkIsScrollRoot:r,resetTransform:o}){return class{constructor(e={},n=(null==t?void 0:t())){this.id=Xu++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,qu&&(Hu.totalNodes=Hu.resolvedTargetDeltas=Hu.recalculatedProjection=0),this.nodes.forEach(nd),this.nodes.forEach(cd),this.nodes.forEach(ud),this.nodes.forEach(rd),qu&&window.MotionDebug.record(Hu)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=e,this.root=n?n.root||n:this,this.path=n?[...n.path,n]:[],this.parent=n,this.depth=n?n.depth+1:0;for(let e=0;e<this.path.length;e++)this.path[e].shouldResetTransform=!0;this.root===this&&(this.nodes=new $u)}addEventListener(e,t){return this.eventHandlers.has(e)||this.eventHandlers.set(e,new Al),this.eventHandlers.get(e).add(t)}notifyListeners(e,...t){const n=this.eventHandlers.get(e);n&&n.notify(...t)}hasListeners(e){return this.eventHandlers.has(e)}mount(t,n=this.root.hasTreeAnimated){if(this.instance)return;var r;this.isSVG=(r=t)instanceof SVGElement&&\"svg\"!==r.tagName,this.instance=t;const{layoutId:o,layout:i,visualElement:s}=this.options;if(s&&!s.current&&s.mount(t),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),n&&(i||o)&&(this.isLayoutDirty=!0),e){let n;const r=()=>this.root.updateBlockedByResize=!1;e(t,(()=>{this.root.updateBlockedByResize=!0,n&&n(),n=function(e){const t=ma.now(),n=({timestamp:r})=>{const o=r-t;o>=250&&(Ki(n),e(o-250))};return $i.read(n,!0),()=>Ki(n)}(r),cu.hasAnimatedSinceResize&&(cu.hasAnimatedSinceResize=!1,this.nodes.forEach(ld))}))}o&&this.root.registerSharedNode(o,this),!1!==this.options.animate&&s&&(o||i)&&this.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t,hasRelativeTargetChanged:n,layout:r})=>{if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const o=this.options.transition||s.getDefaultTransition()||gd,{onLayoutAnimationStart:i,onLayoutAnimationComplete:a}=s.getProps(),l=!this.targetLayout||!zu(this.targetLayout,r)||n,c=!t&&n;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||c||t&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(e,c);const t={...Fi(o,\"layout\"),onPlay:i,onComplete:a};(s.shouldReduceMotion||this.options.layoutRoot)&&(t.delay=0,t.type=!1),this.startAnimation(t)}else t||ld(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=r}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const e=this.getStack();e&&e.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,Ki(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(dd),this.animationId++)}getTransformTemplate(){const{visualElement:e}=this.options;return e&&e.getProps().transformTemplate}willUpdate(e=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&Zu(this),!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let e=0;e<this.path.length;e++){const t=this.path[e];t.shouldResetTransform=!0,t.updateScroll(\"snapshot\"),t.options.layoutRoot&&t.willUpdate(!1)}const{layoutId:t,layout:n}=this.options;if(void 0===t&&!n)return;const r=this.getTransformTemplate();this.prevTransformTemplateValue=r?r(this.latestValues,\"\"):void 0,this.updateSnapshot(),e&&this.notifyListeners(\"willUpdate\")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(id);this.isUpdating||this.nodes.forEach(sd),this.isUpdating=!1,this.nodes.forEach(ad),this.nodes.forEach(ed),this.nodes.forEach(td),this.clearAllSnapshots();const e=ma.now();Hi.delta=is(0,1e3/60,e-Hi.timestamp),Hi.timestamp=e,Hi.isProcessing=!0,qi.update.process(Hi),qi.preRender.process(Hi),qi.render.process(Hi),Hi.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,pu.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(od),this.sharedNodes.forEach(fd)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,$i.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){$i.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){!this.snapshot&&this.instance&&(this.snapshot=this.measure())}updateLayout(){if(!this.instance)return;if(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead()||this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let e=0;e<this.path.length;e++)this.path[e].updateScroll();const e=this.layout;this.layout=this.measure(!1),this.layoutCorrected=Dc(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners(\"measure\",this.layout.layoutBox);const{visualElement:t}=this.options;t&&t.notify(\"LayoutMeasure\",this.layout.layoutBox,e?e.layoutBox:void 0)}updateScroll(e=\"measure\"){let t=Boolean(this.options.layoutScroll&&this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===e&&(t=!1),t){const t=r(this.instance);this.scroll={animationId:this.root.animationId,phase:e,isRoot:t,offset:n(this.instance),wasRoot:this.scroll?this.scroll.isRoot:t}}}resetTransform(){if(!o)return;const e=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,t=this.projectionDelta&&!Du(this.projectionDelta),n=this.getTransformTemplate(),r=n?n(this.latestValues,\"\"):void 0,i=r!==this.prevTransformTemplateValue;e&&(t||Vc(this.latestValues)||i)&&(o(this.instance,r),this.shouldResetTransform=!1,this.scheduleRender())}measure(e=!0){const t=this.measurePageBox();let n=this.removeElementScroll(t);var r;return e&&(n=this.removeTransform(n)),bd((r=n).x),bd(r.y),{animationId:this.root.animationId,measuredBox:t,layoutBox:n,latestValues:{},source:this.id}}measurePageBox(){var e;const{visualElement:t}=this.options;if(!t)return Dc();const n=t.measureViewportBox();if(!(null===(e=this.scroll)||void 0===e?void 0:e.wasRoot)&&!this.path.some(wd)){const{scroll:e}=this.root;e&&(Xc(n.x,e.offset.x),Xc(n.y,e.offset.y))}return n}removeElementScroll(e){var t;const n=Dc();if(Tu(n,e),null===(t=this.scroll)||void 0===t?void 0:t.wasRoot)return n;for(let t=0;t<this.path.length;t++){const r=this.path[t],{scroll:o,options:i}=r;r!==this.root&&o&&i.layoutScroll&&(o.wasRoot&&Tu(n,e),Xc(n.x,o.offset.x),Xc(n.y,o.offset.y))}return n}applyTransform(e,t=!1){const n=Dc();Tu(n,e);for(let e=0;e<this.path.length;e++){const r=this.path[e];!t&&r.options.layoutScroll&&r.scroll&&r!==r.root&&Zc(n,{x:-r.scroll.offset.x,y:-r.scroll.offset.y}),Vc(r.latestValues)&&Zc(n,r.latestValues)}return Vc(this.latestValues)&&Zc(n,this.latestValues),n}removeTransform(e){const t=Dc();Tu(t,e);for(let e=0;e<this.path.length;e++){const n=this.path[e];if(!n.instance)continue;if(!Vc(n.latestValues))continue;Bc(n.latestValues)&&n.updateSnapshot();const r=Dc();Tu(r,n.measurePageBox()),Mu(t,n.latestValues,n.snapshot?n.snapshot.layoutBox:void 0,r)}return Vc(this.latestValues)&&Mu(t,this.latestValues),t}setTargetDelta(e){this.targetDelta=e,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(e){this.options={...this.options,...e,crossfade:void 0===e.crossfade||e.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==Hi.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(e=!1){var t;const n=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=n.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=n.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=n.isSharedProjectionDirty);const r=Boolean(this.resumingFrom)||this!==n;if(!(e||r&&this.isSharedProjectionDirty||this.isProjectionDirty||(null===(t=this.parent)||void 0===t?void 0:t.isProjectionDirty)||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;const{layout:o,layoutId:i}=this.options;if(this.layout&&(o||i)){if(this.resolvedRelativeTargetAt=Hi.timestamp,!this.targetDelta&&!this.relativeTarget){const e=this.getClosestProjectingParent();e&&e.layout&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=Dc(),this.relativeTargetOrigin=Dc(),Oc(this.relativeTargetOrigin,this.layout.layoutBox,e.layout.layoutBox),Tu(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){var s,a,l;if(this.target||(this.target=Dc(),this.targetWithTransforms=Dc()),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),s=this.target,a=this.relativeTarget,l=this.relativeParent.target,Pc(s.x,a.x,l.x),Pc(s.y,a.y,l.y)):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):Tu(this.target,this.layout.layoutBox),qc(this.target,this.targetDelta)):Tu(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const e=this.getClosestProjectingParent();e&&Boolean(e.resumingFrom)===Boolean(this.resumingFrom)&&!e.options.layoutScroll&&e.target&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=Dc(),this.relativeTargetOrigin=Dc(),Oc(this.relativeTargetOrigin,this.target,e.target),Tu(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}qu&&Hu.resolvedTargetDeltas++}}}getClosestProjectingParent(){if(this.parent&&!Bc(this.parent.latestValues)&&!Wc(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return Boolean((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){var e;const t=this.getLead(),n=Boolean(this.resumingFrom)||this!==t;let r=!0;if((this.isProjectionDirty||(null===(e=this.parent)||void 0===e?void 0:e.isProjectionDirty))&&(r=!1),n&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(r=!1),this.resolvedRelativeTargetAt===Hi.timestamp&&(r=!1),r)return;const{layout:o,layoutId:i}=this.options;if(this.isTreeAnimating=Boolean(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!o&&!i)return;Tu(this.layoutCorrected,this.layout.layoutBox);const s=this.treeScale.x,a=this.treeScale.y;!function(e,t,n,r=!1){const o=n.length;if(!o)return;let i,s;t.x=t.y=1;for(let a=0;a<o;a++){i=n[a],s=i.projectionDelta;const{visualElement:o}=i.options;o&&o.props.style&&\"contents\"===o.props.style.display||(r&&i.options.layoutScroll&&i.scroll&&i!==i.root&&Zc(e,{x:-i.scroll.offset.x,y:-i.scroll.offset.y}),s&&(t.x*=s.x.scale,t.y*=s.y.scale,qc(e,s)),r&&Vc(i.latestValues)&&Zc(e,i.latestValues))}t.x<Gc&&t.x>Yc&&(t.x=1),t.y<Gc&&t.y>Yc&&(t.y=1)}(this.layoutCorrected,this.treeScale,this.path,n),!t.layout||t.target||1===this.treeScale.x&&1===this.treeScale.y||(t.target=t.layout.layoutBox,t.targetWithTransforms=Dc());const{target:l}=t;l?(this.projectionDelta&&this.prevProjectionDelta?(Ou(this.prevProjectionDelta.x,this.projectionDelta.x),Ou(this.prevProjectionDelta.y,this.projectionDelta.y)):this.createProjectionDeltas(),Cc(this.projectionDelta,this.layoutCorrected,l,this.latestValues),this.treeScale.x===s&&this.treeScale.y===a&&Vu(this.projectionDelta.x,this.prevProjectionDelta.x)&&Vu(this.projectionDelta.y,this.prevProjectionDelta.y)||(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners(\"projectionUpdate\",l)),qu&&Hu.recalculatedProjection++):this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender())}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(e=!0){var t;if(null===(t=this.options.visualElement)||void 0===t||t.scheduleRender(),e){const e=this.getStack();e&&e.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta=Ic(),this.projectionDelta=Ic(),this.projectionDeltaWithTransform=Ic()}setAnimationOrigin(e,t=!1){const n=this.snapshot,r=n?n.latestValues:{},o={...this.latestValues},i=Ic();this.relativeParent&&this.relativeParent.options.layoutRoot||(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!t;const s=Dc(),a=(n?n.source:void 0)!==(this.layout?this.layout.source:void 0),l=this.getStack(),c=!l||l.members.length<=1,u=Boolean(a&&!c&&!0===this.options.crossfade&&!this.path.some(md));let d;this.animationProgress=0,this.mixTargetDelta=t=>{const n=t/1e3;var l,f,h,p,m,g;hd(i.x,e.x,n),hd(i.y,e.y,n),this.setTargetDelta(i),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(Oc(s,this.layout.layoutBox,this.relativeParent.layout.layoutBox),h=this.relativeTarget,p=this.relativeTargetOrigin,m=s,g=n,pd(h.x,p.x,m.x,g),pd(h.y,p.y,m.y,g),d&&(l=this.relativeTarget,f=d,Lu(l.x,f.x)&&Lu(l.y,f.y))&&(this.isProjectionDirty=!1),d||(d=Dc()),Tu(d,this.relativeTarget)),a&&(this.animationValues=o,function(e,t,n,r,o,i){o?(e.opacity=Ja(0,void 0!==n.opacity?n.opacity:1,_u(r)),e.opacityExit=Ja(void 0!==t.opacity?t.opacity:1,0,ku(r))):i&&(e.opacity=Ja(void 0!==t.opacity?t.opacity:1,void 0!==n.opacity?n.opacity:1,r));for(let o=0;o<xu;o++){const i=`border${bu[o]}Radius`;let s=Su(t,i),a=Su(n,i);void 0===s&&void 0===a||(s||(s=0),a||(a=0),0===s||0===a||Eu(s)===Eu(a)?(e[i]=Math.max(Ja(wu(s),wu(a),r),0),(gs.test(a)||gs.test(s))&&(e[i]+=\"%\")):e[i]=a)}(t.rotate||n.rotate)&&(e.rotate=Ja(t.rotate||0,n.rotate||0,r))}(o,r,this.latestValues,n,u,c)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=n},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(e){this.notifyListeners(\"animationStart\"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(Ki(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=$i.update((()=>{cu.hasAnimatedSinceResize=!0,this.currentAnimation=function(e,t,n){const r=Wl(0)?0:Il(0);return r.start(Pl(\"\",r,1e3,n)),r.animation}(0,0,{...e,onUpdate:t=>{this.mixTargetDelta(t),e.onUpdate&&e.onUpdate(t)},onComplete:()=>{e.onComplete&&e.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const e=this.getStack();e&&e.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners(\"animationComplete\")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const e=this.getLead();let{targetWithTransforms:t,target:n,layout:r,latestValues:o}=e;if(t&&n&&r){if(this!==e&&this.layout&&r&&xd(this.options.animationType,this.layout.layoutBox,r.layoutBox)){n=this.target||Dc();const t=_c(this.layout.layoutBox.x);n.x.min=e.target.x.min,n.x.max=n.x.min+t;const r=_c(this.layout.layoutBox.y);n.y.min=e.target.y.min,n.y.max=n.y.min+r}Tu(t,n),Zc(t,o),Cc(this.projectionDeltaWithTransform,this.layoutCorrected,t,o)}}registerSharedNode(e,t){this.sharedNodes.has(e)||this.sharedNodes.set(e,new Wu),this.sharedNodes.get(e).add(t);const n=t.options.initialPromotionConfig;t.promote({transition:n?n.transition:void 0,preserveFollowOpacity:n&&n.shouldPreserveFollowOpacity?n.shouldPreserveFollowOpacity(t):void 0})}isLead(){const e=this.getStack();return!e||e.lead===this}getLead(){var e;const{layoutId:t}=this.options;return t&&(null===(e=this.getStack())||void 0===e?void 0:e.lead)||this}getPrevLead(){var e;const{layoutId:t}=this.options;return t?null===(e=this.getStack())||void 0===e?void 0:e.prevLead:void 0}getStack(){const{layoutId:e}=this.options;if(e)return this.root.sharedNodes.get(e)}promote({needsReset:e,transition:t,preserveFollowOpacity:n}={}){const r=this.getStack();r&&r.promote(this,n),e&&(this.projectionDelta=void 0,this.needsReset=!0),t&&this.setOptions({transition:t})}relegate(){const e=this.getStack();return!!e&&e.relegate(this)}resetSkewAndRotation(){const{visualElement:e}=this.options;if(!e)return;let t=!1;const{latestValues:n}=e;if((n.z||n.rotate||n.rotateX||n.rotateY||n.rotateZ||n.skewX||n.skewY)&&(t=!0),!t)return;const r={};n.z&&Ju(\"z\",e,r,this.animationValues);for(let t=0;t<Yu.length;t++)Ju(`rotate${Yu[t]}`,e,r,this.animationValues),Ju(`skew${Yu[t]}`,e,r,this.animationValues);e.render();for(const t in r)e.setStaticValue(t,r[t]),this.animationValues&&(this.animationValues[t]=r[t]);e.scheduleRender()}getProjectionStyles(e){var t,n;if(!this.instance||this.isSVG)return;if(!this.isVisible)return Gu;const r={visibility:\"\"},o=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,r.opacity=\"\",r.pointerEvents=Ku(null==e?void 0:e.pointerEvents)||\"\",r.transform=o?o(this.latestValues,\"\"):\"none\",r;const i=this.getLead();if(!this.projectionDelta||!this.layout||!i.target){const t={};return this.options.layoutId&&(t.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,t.pointerEvents=Ku(null==e?void 0:e.pointerEvents)||\"\"),this.hasProjected&&!Vc(this.latestValues)&&(t.transform=o?o({},\"\"):\"none\",this.hasProjected=!1),t}const s=i.animationValues||i.latestValues;this.applyTransformsToTarget(),r.transform=function(e,t,n){let r=\"\";const o=e.x.translate/t.x,i=e.y.translate/t.y,s=(null==n?void 0:n.z)||0;if((o||i||s)&&(r=`translate3d(${o}px, ${i}px, ${s}px) `),1===t.x&&1===t.y||(r+=`scale(${1/t.x}, ${1/t.y}) `),n){const{transformPerspective:e,rotate:t,rotateX:o,rotateY:i,skewX:s,skewY:a}=n;e&&(r=`perspective(${e}px) ${r}`),t&&(r+=`rotate(${t}deg) `),o&&(r+=`rotateX(${o}deg) `),i&&(r+=`rotateY(${i}deg) `),s&&(r+=`skewX(${s}deg) `),a&&(r+=`skewY(${a}deg) `)}const a=e.x.scale*t.x,l=e.y.scale*t.y;return 1===a&&1===l||(r+=`scale(${a}, ${l})`),r||\"none\"}(this.projectionDeltaWithTransform,this.treeScale,s),o&&(r.transform=o(s,r.transform));const{x:a,y:l}=this.projectionDelta;r.transformOrigin=`${100*a.origin}% ${100*l.origin}% 0`,i.animationValues?r.opacity=i===this?null!==(n=null!==(t=s.opacity)&&void 0!==t?t:this.latestValues.opacity)&&void 0!==n?n:1:this.preserveOpacity?this.latestValues.opacity:s.opacityExit:r.opacity=i===this?void 0!==s.opacity?s.opacity:\"\":void 0!==s.opacityExit?s.opacityExit:0;for(const e in hu){if(void 0===s[e])continue;const{correct:t,applyTo:n}=hu[e],o=\"none\"===r.transform?s[e]:t(s[e],i);if(n){const e=n.length;for(let t=0;t<e;t++)r[n[t]]=o}else r[e]=o}return this.options.layoutId&&(r.pointerEvents=i===this?Ku(null==e?void 0:e.pointerEvents)||\"\":\"none\"),r}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((e=>{var t;return null===(t=e.currentAnimation)||void 0===t?void 0:t.stop()})),this.root.nodes.forEach(id),this.root.sharedNodes.clear()}}}function ed(e){e.updateLayout()}function td(e){var t;const n=(null===(t=e.resumeFrom)||void 0===t?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&n&&e.hasListeners(\"didUpdate\")){const{layoutBox:t,measuredBox:r}=e.layout,{animationType:o}=e.options,i=n.source!==e.layout.source;\"size\"===o?Lc((e=>{const r=i?n.measuredBox[e]:n.layoutBox[e],o=_c(r);r.min=t[e].min,r.max=r.min+o})):xd(o,n.layoutBox,t)&&Lc((r=>{const o=i?n.measuredBox[r]:n.layoutBox[r],s=_c(t[r]);o.max=o.min+s,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[r].max=e.relativeTarget[r].min+s)}));const s=Ic();Cc(s,t,n.layoutBox);const a=Ic();i?Cc(a,e.applyTransform(r,!0),n.measuredBox):Cc(a,t,n.layoutBox);const l=!Du(s);let c=!1;if(!e.resumeFrom){const r=e.getClosestProjectingParent();if(r&&!r.resumeFrom){const{snapshot:o,layout:i}=r;if(o&&i){const s=Dc();Oc(s,n.layoutBox,o.layoutBox);const a=Dc();Oc(a,t,i.layoutBox),zu(s,a)||(c=!0),r.options.layoutRoot&&(e.relativeTarget=a,e.relativeTargetOrigin=s,e.relativeParent=r)}}}e.notifyListeners(\"didUpdate\",{layout:t,snapshot:n,delta:a,layoutDelta:s,hasLayoutChanged:l,hasRelativeTargetChanged:c})}else if(e.isLead()){const{onExitComplete:t}=e.options;t&&t()}e.options.transition=void 0}function nd(e){qu&&Hu.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=Boolean(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function rd(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function od(e){e.clearSnapshot()}function id(e){e.clearMeasurements()}function sd(e){e.isLayoutDirty=!1}function ad(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify(\"BeforeLayoutMeasure\"),e.resetTransform()}function ld(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function cd(e){e.resolveTargetDelta()}function ud(e){e.calcProjection()}function dd(e){e.resetSkewAndRotation()}function fd(e){e.removeLeadSnapshot()}function hd(e,t,n){e.translate=Ja(t.translate,0,n),e.scale=Ja(t.scale,1,n),e.origin=t.origin,e.originPoint=t.originPoint}function pd(e,t,n,r){e.min=Ja(t.min,n.min,r),e.max=Ja(t.max,n.max,r)}function md(e){return e.animationValues&&void 0!==e.animationValues.opacityExit}const gd={duration:.45,ease:[.4,0,.1,1]},vd=e=>\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),yd=vd(\"applewebkit/\")&&!vd(\"chrome/\")?Math.round:Vi;function bd(e){e.min=yd(e.min),e.max=yd(e.max)}function xd(e,t,n){return\"position\"===e||\"preserve-aspect\"===e&&(r=Bu(t),o=Bu(n),!(Math.abs(r-o)<=.2));var r,o}function wd(e){var t;return e!==e.root&&(null===(t=e.scroll)||void 0===t?void 0:t.wasRoot)}const Ed=Qu({attachResizeListener:(e,t)=>oc(e,\"resize\",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),Sd={current:void 0},_d=Qu({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!Sd.current){const e=new Ed({});e.mount(window),e.setOptions({layoutScroll:!0}),Sd.current=e}return Sd.current},resetTransform:(e,t)=>{e.style.transform=void 0!==t?t:\"none\"},checkIsScrollRoot:e=>Boolean(\"fixed\"===window.getComputedStyle(e).position)}),kd={pan:{Feature:class extends Zl{constructor(){super(...arguments),this.removePointerDownListener=Vi}onPointerDown(e){this.session=new ac(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:eu(this.node)})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:t,onPan:n,onPanEnd:r}=this.node.getProps();return{onSessionStart:ou(e),onStart:ou(t),onMove:n,onEnd:(e,t)=>{delete this.session,r&&$i.postRender((()=>r(e,t)))}}}mount(){this.removePointerDownListener=ic(this.node.current,\"pointerdown\",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends Zl{constructor(e){super(e),this.removeGroupControls=Vi,this.removeListeners=Vi,this.controls=new nu(e)}mount(){const{dragControls:e}=this.node.getProps();e&&(this.removeGroupControls=e.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||Vi}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:_d,MeasureLayout:vu}};function Cd(e,t){const n=t?\"pointerenter\":\"pointerleave\",r=t?\"onHoverStart\":\"onHoverEnd\";return ic(e.current,n,((n,o)=>{if(\"touch\"===n.pointerType||yc())return;const i=e.getProps();e.animationState&&i.whileHover&&e.animationState.setActive(\"whileHover\",t);const s=i[r];s&&$i.postRender((()=>s(n,o)))}),{passive:!e.getProps()[r]})}const Pd=(e,t)=>!!t&&(e===t||Pd(e,t.parentElement));function Td(e,t){if(!t)return;const n=new PointerEvent(\"pointer\"+e);t(n,nc(n))}const Od=new WeakMap,Rd=new WeakMap,Nd=e=>{const t=Od.get(e.target);t&&t(e)},Ad=e=>{e.forEach(Nd)};const jd={some:0,all:1},Md={inView:{Feature:class extends Zl{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:e={}}=this.node.getProps(),{root:t,margin:n,amount:r=\"some\",once:o}=e,i={root:t?t.current:void 0,rootMargin:n,threshold:\"number\"==typeof r?r:jd[r]};return function(e,t,n){const r=function({root:e,...t}){const n=e||document;Rd.has(n)||Rd.set(n,{});const r=Rd.get(n),o=JSON.stringify(t);return r[o]||(r[o]=new IntersectionObserver(Ad,{root:e,...t})),r[o]}(t);return Od.set(e,n),r.observe(e),()=>{Od.delete(e),r.unobserve(e)}}(this.node.current,i,(e=>{const{isIntersecting:t}=e;if(this.isInView===t)return;if(this.isInView=t,o&&!t&&this.hasEnteredView)return;t&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive(\"whileInView\",t);const{onViewportEnter:n,onViewportLeave:r}=this.node.getProps(),i=t?n:r;i&&i(e)}))}mount(){this.startObserver()}update(){if(\"undefined\"==typeof IntersectionObserver)return;const{props:e,prevProps:t}=this.node;[\"amount\",\"margin\",\"root\"].some(function({viewport:e={}},{viewport:t={}}={}){return n=>e[n]!==t[n]}(e,t))&&this.startObserver()}unmount(){}}},tap:{Feature:class extends Zl{constructor(){super(...arguments),this.removeStartListeners=Vi,this.removeEndListeners=Vi,this.removeAccessibleListeners=Vi,this.startPointerPress=(e,t)=>{if(this.isPressing)return;this.removeEndListeners();const n=this.node.getProps(),r=ic(window,\"pointerup\",((e,t)=>{if(!this.checkPressEnd())return;const{onTap:n,onTapCancel:r,globalTapTarget:o}=this.node.getProps(),i=o||Pd(this.node.current,e.target)?n:r;i&&$i.update((()=>i(e,t)))}),{passive:!(n.onTap||n.onPointerUp)}),o=ic(window,\"pointercancel\",((e,t)=>this.cancelPress(e,t)),{passive:!(n.onTapCancel||n.onPointerCancel)});this.removeEndListeners=Ga(r,o),this.startPress(e,t)},this.startAccessiblePress=()=>{const e=oc(this.node.current,\"keydown\",(e=>{\"Enter\"!==e.key||this.isPressing||(this.removeEndListeners(),this.removeEndListeners=oc(this.node.current,\"keyup\",(e=>{\"Enter\"===e.key&&this.checkPressEnd()&&Td(\"up\",((e,t)=>{const{onTap:n}=this.node.getProps();n&&$i.postRender((()=>n(e,t)))}))})),Td(\"down\",((e,t)=>{this.startPress(e,t)})))})),t=oc(this.node.current,\"blur\",(()=>{this.isPressing&&Td(\"cancel\",((e,t)=>this.cancelPress(e,t)))}));this.removeAccessibleListeners=Ga(e,t)}}startPress(e,t){this.isPressing=!0;const{onTapStart:n,whileTap:r}=this.node.getProps();r&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!0),n&&$i.postRender((()=>n(e,t)))}checkPressEnd(){return this.removeEndListeners(),this.isPressing=!1,this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!1),!yc()}cancelPress(e,t){if(!this.checkPressEnd())return;const{onTapCancel:n}=this.node.getProps();n&&$i.postRender((()=>n(e,t)))}mount(){const e=this.node.getProps(),t=ic(e.globalTapTarget?window:this.node.current,\"pointerdown\",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),n=oc(this.node.current,\"focus\",this.startAccessiblePress);this.removeStartListeners=Ga(t,n)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}},focus:{Feature:class extends Zl{constructor(){super(...arguments),this.isActive=!1}onFocus(){let e=!1;try{e=this.node.current.matches(\":focus-visible\")}catch(t){e=!0}e&&this.node.animationState&&(this.node.animationState.setActive(\"whileFocus\",!0),this.isActive=!0)}onBlur(){this.isActive&&this.node.animationState&&(this.node.animationState.setActive(\"whileFocus\",!1),this.isActive=!1)}mount(){this.unmount=Ga(oc(this.node.current,\"focus\",(()=>this.onFocus())),oc(this.node.current,\"blur\",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends Zl{mount(){this.unmount=Ga(Cd(this.node,!0),Cd(this.node,!1))}unmount(){}}}},Id={layout:{ProjectionNode:_d,MeasureLayout:vu}},Dd=(0,o.createContext)({transformPagePoint:e=>e,isStatic:!1,reducedMotion:\"never\"}),Ld=(0,o.createContext)({}),Fd=\"undefined\"!=typeof window,zd=Fd?o.useLayoutEffect:o.useEffect,Bd=(0,o.createContext)({strict:!1});let Vd=!1;function Wd(e,t,n,r,i){var s;const{visualElement:a}=(0,o.useContext)(Ld),l=(0,o.useContext)(Bd),c=(0,o.useContext)(su),u=(0,o.useContext)(Dd).reducedMotion,d=(0,o.useRef)();r=r||l.renderer,!d.current&&r&&(d.current=r(e,{visualState:t,parent:a,props:n,presenceContext:c,blockInitialAnimation:!!c&&!1===c.initial,reducedMotionConfig:u}));const f=d.current,h=(0,o.useContext)(lu);!f||f.projection||!i||\"html\"!==f.type&&\"svg\"!==f.type||function(e,t,n,r){const{layoutId:o,layout:i,drag:s,dragConstraints:a,layoutScroll:l,layoutRoot:c}=t;e.projection=new n(e.latestValues,t[\"data-framer-portal-id\"]?void 0:$d(e.parent)),e.projection.setOptions({layoutId:o,layout:i,alwaysMeasureLayout:Boolean(s)||a&&bc(a),visualElement:e,animationType:\"string\"==typeof i?i:\"both\",initialPromotionConfig:r,layoutScroll:l,layoutRoot:c})}(d.current,n,i,h),(0,o.useInsertionEffect)((()=>{f&&f.update(n,c)}));const p=n[Fl],m=(0,o.useRef)(Boolean(p)&&!window.MotionHandoffIsComplete&&(null===(s=window.MotionHasOptimisedAnimation)||void 0===s?void 0:s.call(window,p)));return zd((()=>{f&&(f.updateFeatures(),pu.render(f.render),m.current&&f.animationState&&f.animationState.animateChanges())})),(0,o.useEffect)((()=>{f&&(!m.current&&f.animationState&&f.animationState.animateChanges(),m.current=!1,Vd||(Vd=!0,queueMicrotask(Ud)))})),f}function Ud(){window.MotionHandoffIsComplete=!0}function $d(e){if(e)return!1!==e.options.allowProjection?e.projection:$d(e.parent)}function Kd(e,t,n){return(0,o.useCallback)((r=>{r&&e.mount&&e.mount(r),t&&(r?t.mount(r):t.unmount()),n&&(\"function\"==typeof n?n(r):bc(n)&&(n.current=r))}),[t])}function Hd(e){return wi(e.animate)||Oi.some((t=>_i(e[t])))}function qd(e){return Boolean(Hd(e)||e.variants)}function Yd(e){return Array.isArray(e)?e.join(\" \"):e}const Gd={animation:[\"animate\",\"variants\",\"whileHover\",\"whileTap\",\"exit\",\"whileInView\",\"whileFocus\",\"whileDrag\"],exit:[\"exit\"],drag:[\"drag\",\"dragControls\"],focus:[\"whileFocus\"],hover:[\"whileHover\",\"onHoverStart\",\"onHoverEnd\"],tap:[\"whileTap\",\"onTap\",\"onTapStart\",\"onTapCancel\"],pan:[\"onPan\",\"onPanStart\",\"onPanSessionStart\",\"onPanEnd\"],inView:[\"whileInView\",\"onViewportEnter\",\"onViewportLeave\"],layout:[\"layout\",\"layoutId\"]},Xd={};for(const e in Gd)Xd[e]={isEnabled:t=>Gd[e].some((e=>!!t[e]))};const Jd=Symbol.for(\"motionComponentSymbol\");function Zd({preloadedFeatures:e,createVisualElement:t,useRender:n,useVisualState:r,Component:i}){e&&function(e){for(const t in e)Xd[t]={...Xd[t],...e[t]}}(e);const s=(0,o.forwardRef)((function(e,s){let a;const l={...(0,o.useContext)(Dd),...e,layoutId:Qd(e)},{isStatic:c}=l,u=function(e){const{initial:t,animate:n}=function(e,t){if(Hd(e)){const{initial:t,animate:n}=e;return{initial:!1===t||_i(t)?t:void 0,animate:_i(n)?n:void 0}}return!1!==e.inherit?t:{}}(e,(0,o.useContext)(Ld));return(0,o.useMemo)((()=>({initial:t,animate:n})),[Yd(t),Yd(n)])}(e),d=r(e,c);if(!c&&Fd){(0,o.useContext)(Bd).strict;const e=function(e){const{drag:t,layout:n}=Xd;if(!t&&!n)return{};const r={...t,...n};return{MeasureLayout:(null==t?void 0:t.isEnabled(e))||(null==n?void 0:n.isEnabled(e))?r.MeasureLayout:void 0,ProjectionNode:r.ProjectionNode}}(l);a=e.MeasureLayout,u.visualElement=Wd(i,d,l,t,e.ProjectionNode)}return(0,iu.jsxs)(Ld.Provider,{value:u,children:[a&&u.visualElement?(0,iu.jsx)(a,{visualElement:u.visualElement,...l}):null,n(i,e,Kd(d,u.visualElement,s),d,c,u.visualElement)]})}));return s[Jd]=i,s}function Qd({layoutId:e}){const t=(0,o.useContext)(au).id;return t&&void 0!==e?t+\"-\"+e:e}const ef=[\"animate\",\"circle\",\"defs\",\"desc\",\"ellipse\",\"g\",\"image\",\"line\",\"filter\",\"marker\",\"mask\",\"metadata\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"switch\",\"symbol\",\"svg\",\"text\",\"tspan\",\"use\",\"view\"];function tf(e){return\"string\"==typeof e&&!e.includes(\"-\")&&!!(ef.indexOf(e)>-1||/[A-Z]/u.test(e))}function nf(e,{style:t,vars:n},r,o){Object.assign(e.style,t,o&&o.getProjectionStyles(r));for(const t in n)e.style.setProperty(t,n[t])}const rf=new Set([\"baseFrequency\",\"diffuseConstant\",\"kernelMatrix\",\"kernelUnitLength\",\"keySplines\",\"keyTimes\",\"limitingConeAngle\",\"markerHeight\",\"markerWidth\",\"numOctaves\",\"targetX\",\"targetY\",\"surfaceScale\",\"specularConstant\",\"specularExponent\",\"stdDeviation\",\"tableValues\",\"viewBox\",\"gradientTransform\",\"pathLength\",\"startOffset\",\"textLength\",\"lengthAdjust\"]);function of(e,t,n,r){nf(e,t,void 0,r);for(const n in t.attrs)e.setAttribute(rf.has(n)?n:Ll(n),t.attrs[n])}function sf(e,{layout:t,layoutId:n}){return Ni.has(e)||e.startsWith(\"origin\")||(t||void 0!==n)&&(!!hu[e]||\"opacity\"===e)}function af(e,t,n){var r;const{style:o}=e,i={};for(const s in o)(Wl(o[s])||t.style&&Wl(t.style[s])||sf(s,e)||void 0!==(null===(r=null==n?void 0:n.getValue(s))||void 0===r?void 0:r.liveStyle))&&(i[s]=o[s]);return n&&o&&\"string\"==typeof o.willChange&&(n.applyWillChange=!1),i}function lf(e,t,n){const r=af(e,t,n);for(const n in e)(Wl(e[n])||Wl(t[n]))&&(r[-1!==Ri.indexOf(n)?\"attr\"+n.charAt(0).toUpperCase()+n.substring(1):n]=e[n]);return r}function cf(e){const t=(0,o.useRef)(null);return null===t.current&&(t.current=e()),t.current}const uf=e=>(t,n)=>{const r=(0,o.useContext)(Ld),i=(0,o.useContext)(su),s=()=>function({applyWillChange:e=!1,scrapeMotionValuesFromProps:t,createRenderState:n,onMount:r},o,i,s,a){const l={latestValues:hf(o,i,s,!a&&e,t),renderState:n()};return r&&(l.mount=e=>r(o,e,l)),l}(e,t,r,i,n);return n?s():cf(s)};function df(e,t){const n=Bl(t);n&&Rl(e,n)}function ff(e,t,n){const r=Array.isArray(t)?t:[t];for(let t=0;t<r.length;t++){const o=Ci(e,r[t]);if(o){const{transitionEnd:e,transition:t,...r}=o;n(r,e)}}}function hf(e,t,n,r,o){var i;const s={},a=[],l=r&&void 0===(null===(i=e.style)||void 0===i?void 0:i.willChange),c=o(e,{});for(const e in c)s[e]=Ku(c[e]);let{initial:u,animate:d}=e;const f=Hd(e),h=qd(e);t&&h&&!f&&!1!==e.inherit&&(void 0===u&&(u=t.initial),void 0===d&&(d=t.animate));let p=!!n&&!1===n.initial;p=p||!1===u;const m=p?d:u;return m&&\"boolean\"!=typeof m&&!wi(m)&&ff(e,m,((e,t)=>{for(const t in e){let n=e[t];Array.isArray(n)&&(n=n[p?n.length-1:0]),null!==n&&(s[t]=n)}for(const e in t)s[e]=t[e]})),l&&(d&&!1!==u&&!wi(d)&&ff(e,d,(e=>{for(const t in e)df(a,t)})),a.length&&(s.willChange=a.join(\",\"))),s}const pf=()=>({style:{},transform:{},transformOrigin:{},vars:{}}),mf=()=>({...pf(),attrs:{}}),gf=(e,t)=>t&&\"number\"==typeof e?t.transform(e):e,vf={x:\"translateX\",y:\"translateY\",z:\"translateZ\",transformPerspective:\"perspective\"},yf=Ri.length;function bf(e,t,n){const{style:r,vars:o,transformOrigin:i}=e;let s=!1,a=!1;for(const e in t){const n=t[e];if(Ni.has(e))s=!0;else if(Qi(e))o[e]=n;else{const t=gf(n,sa[e]);e.startsWith(\"origin\")?(a=!0,i[e]=t):r[e]=t}}if(t.transform||(s||n?r.transform=function(e,t,n){let r=\"\",o=!0;for(let i=0;i<yf;i++){const s=Ri[i],a=e[s];if(void 0===a)continue;let l=!0;if(l=\"number\"==typeof a?a===(s.startsWith(\"scale\")?1:0):0===parseFloat(a),!l||n){const e=gf(a,sa[s]);l||(o=!1,r+=`${vf[s]||s}(${e}) `),n&&(t[s]=e)}}return r=r.trim(),n?r=n(t,o?\"\":r):o&&(r=\"none\"),r}(t,e.transform,n):r.transform&&(r.transform=\"none\")),a){const{originX:e=\"50%\",originY:t=\"50%\",originZ:n=0}=i;r.transformOrigin=`${e} ${t} ${n}`}}function xf(e,t,n){return\"string\"==typeof e?e:vs.transform(t+n*e)}const wf={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"},Ef={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};function Sf(e,{attrX:t,attrY:n,attrScale:r,originX:o,originY:i,pathLength:s,pathSpacing:a=1,pathOffset:l=0,...c},u,d){if(bf(e,c,d),u)return void(e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox));e.attrs=e.style,e.style={};const{attrs:f,style:h,dimensions:p}=e;f.transform&&(p&&(h.transform=f.transform),delete f.transform),p&&(void 0!==o||void 0!==i||h.transform)&&(h.transformOrigin=function(e,t,n){return`${xf(t,e.x,e.width)} ${xf(n,e.y,e.height)}`}(p,void 0!==o?o:.5,void 0!==i?i:.5)),void 0!==t&&(f.x=t),void 0!==n&&(f.y=n),void 0!==r&&(f.scale=r),void 0!==s&&function(e,t,n=1,r=0,o=!0){e.pathLength=1;const i=o?wf:Ef;e[i.offset]=vs.transform(-r);const s=vs.transform(t),a=vs.transform(n);e[i.array]=`${s} ${a}`}(f,s,a,l,!1)}const _f=e=>\"string\"==typeof e&&\"svg\"===e.toLowerCase(),kf={useVisualState:uf({scrapeMotionValuesFromProps:lf,createRenderState:mf,onMount:(e,t,{renderState:n,latestValues:r})=>{$i.read((()=>{try{n.dimensions=\"function\"==typeof t.getBBox?t.getBBox():t.getBoundingClientRect()}catch(e){n.dimensions={x:0,y:0,width:0,height:0}}})),$i.render((()=>{Sf(n,r,_f(t.tagName),e.transformTemplate),of(t,n)}))}})},Cf={useVisualState:uf({applyWillChange:!0,scrapeMotionValuesFromProps:af,createRenderState:pf})};function Pf(e,t,n){for(const r in t)Wl(t[r])||sf(r,n)||(e[r]=t[r])}function Tf(e,t){const n={},r=function(e,t){const n={};return Pf(n,e.style||{},e),Object.assign(n,function({transformTemplate:e},t){return(0,o.useMemo)((()=>{const n=pf();return bf(n,t,e),Object.assign({},n.vars,n.style)}),[t])}(e,t)),n}(e,t);return e.drag&&!1!==e.dragListener&&(n.draggable=!1,r.userSelect=r.WebkitUserSelect=r.WebkitTouchCallout=\"none\",r.touchAction=!0===e.drag?\"none\":\"pan-\"+(\"x\"===e.drag?\"y\":\"x\")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(n.tabIndex=0),n.style=r,n}const Of=new Set([\"animate\",\"exit\",\"variants\",\"initial\",\"style\",\"values\",\"variants\",\"transition\",\"transformTemplate\",\"custom\",\"inherit\",\"onBeforeLayoutMeasure\",\"onAnimationStart\",\"onAnimationComplete\",\"onUpdate\",\"onDragStart\",\"onDrag\",\"onDragEnd\",\"onMeasureDragConstraints\",\"onDirectionLock\",\"onDragTransitionEnd\",\"_dragX\",\"_dragY\",\"onHoverStart\",\"onHoverEnd\",\"onViewportEnter\",\"onViewportLeave\",\"globalTapTarget\",\"ignoreStrict\",\"viewport\"]);function Rf(e){return e.startsWith(\"while\")||e.startsWith(\"drag\")&&\"draggable\"!==e||e.startsWith(\"layout\")||e.startsWith(\"onTap\")||e.startsWith(\"onPan\")||e.startsWith(\"onLayout\")||Of.has(e)}let Nf=e=>!Rf(e);try{(Af=n(316).A)&&(Nf=e=>e.startsWith(\"on\")?!Rf(e):Af(e))}catch(e){}var Af;function jf(e,t,n,r){const i=(0,o.useMemo)((()=>{const n=mf();return Sf(n,t,_f(r),e.transformTemplate),{...n.attrs,style:{...n.style}}}),[t]);if(e.style){const t={};Pf(t,e.style,e),i.style={...t,...i.style}}return i}function Mf(e=!1){return(t,n,r,{latestValues:i},s)=>{const a=(tf(t)?jf:Tf)(n,i,s,t),l=function(e,t,n){const r={};for(const o in e)\"values\"===o&&\"object\"==typeof e.values||(Nf(o)||!0===n&&Rf(o)||!t&&!Rf(o)||e.draggable&&o.startsWith(\"onDrag\"))&&(r[o]=e[o]);return r}(n,\"string\"==typeof t,e),c=t!==o.Fragment?{...l,...a,ref:r}:{},{children:u}=n,d=(0,o.useMemo)((()=>Wl(u)?u.get():u),[u]);return(0,o.createElement)(t,{...c,children:d})}}function If(e,t){return function(n,{forwardMotionProps:r}={forwardMotionProps:!1}){return Zd({...tf(n)?kf:Cf,preloadedFeatures:e,useRender:Mf(r),createVisualElement:t,Component:n})}}const Df={current:null},Lf={current:!1},Ff=new WeakMap,zf=[...Os,Us,ea],Bf=[\"AnimationStart\",\"AnimationComplete\",\"Update\",\"BeforeLayoutMeasure\",\"LayoutMeasure\",\"LayoutAnimationStart\",\"LayoutAnimationComplete\"],Vf=Oi.length;class Wf{scrapeMotionValuesFromProps(e,t,n){return{}}constructor({parent:e,props:t,presenceContext:n,reducedMotionConfig:r,blockInitialAnimation:o,visualState:i},s={}){this.applyWillChange=!1,this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.KeyframeResolver=Ds,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify(\"Update\",this.latestValues),this.render=()=>{this.isRenderScheduled=!1,this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.isRenderScheduled=!1,this.scheduleRender=()=>{this.isRenderScheduled||(this.isRenderScheduled=!0,$i.render(this.render,!1,!0))};const{latestValues:a,renderState:l}=i;this.latestValues=a,this.baseTarget={...a},this.initialValues=t.initial?{...a}:{},this.renderState=l,this.parent=e,this.props=t,this.presenceContext=n,this.depth=e?e.depth+1:0,this.reducedMotionConfig=r,this.options=s,this.blockInitialAnimation=Boolean(o),this.isControllingVariants=Hd(t),this.isVariantNode=qd(t),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(e&&e.current);const{willChange:c,...u}=this.scrapeMotionValuesFromProps(t,{},this);for(const e in u){const t=u[e];void 0!==a[e]&&Wl(t)&&t.set(a[e],!1)}}mount(e){this.current=e,Ff.set(e,this),this.projection&&!this.projection.instance&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((e,t)=>this.bindToMotionValue(t,e))),Lf.current||function(){if(Lf.current=!0,Fd)if(window.matchMedia){const e=window.matchMedia(\"(prefers-reduced-motion)\"),t=()=>Df.current=e.matches;e.addListener(t),t()}else Df.current=!1}(),this.shouldReduceMotion=\"never\"!==this.reducedMotionConfig&&(\"always\"===this.reducedMotionConfig||Df.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){Ff.delete(this.current),this.projection&&this.projection.unmount(),Ki(this.notifyUpdate),Ki(this.render),this.valueSubscriptions.forEach((e=>e())),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const e in this.events)this.events[e].clear();for(const e in this.features){const t=this.features[e];t&&(t.unmount(),t.isMounted=!1)}this.current=null}bindToMotionValue(e,t){this.valueSubscriptions.has(e)&&this.valueSubscriptions.get(e)();const n=Ni.has(e),r=t.on(\"change\",(t=>{this.latestValues[e]=t,this.props.onUpdate&&$i.preRender(this.notifyUpdate),n&&this.projection&&(this.projection.isTransformDirty=!0)})),o=t.on(\"renderRequest\",this.scheduleRender);let i;window.MotionCheckAppearSync&&(i=window.MotionCheckAppearSync(this,e,t)),this.valueSubscriptions.set(e,(()=>{r(),o(),i&&i(),t.owner&&t.stop()}))}sortNodePosition(e){return this.current&&this.sortInstanceNodePosition&&this.type===e.type?this.sortInstanceNodePosition(this.current,e.current):0}updateFeatures(){let e=\"animation\";for(e in Xd){const t=Xd[e];if(!t)continue;const{isEnabled:n,Feature:r}=t;if(!this.features[e]&&r&&n(this.props)&&(this.features[e]=new r(this)),this.features[e]){const t=this.features[e];t.isMounted?t.update():(t.mount(),t.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):Dc()}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,t){this.latestValues[e]=t}update(e,t){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=e,this.prevPresenceContext=this.presenceContext,this.presenceContext=t;for(let t=0;t<Bf.length;t++){const n=Bf[t];this.propEventSubscriptions[n]&&(this.propEventSubscriptions[n](),delete this.propEventSubscriptions[n]);const r=e[\"on\"+n];r&&(this.propEventSubscriptions[n]=this.on(n,r))}this.prevMotionValues=function(e,t,n){for(const r in t){const o=t[r],i=n[r];if(Wl(o))e.addValue(r,o);else if(Wl(i))e.addValue(r,Il(o,{owner:e}));else if(i!==o)if(e.hasValue(r)){const t=e.getValue(r);!0===t.liveStyle?t.jump(o):t.hasAnimated||t.set(o)}else{const t=e.getStaticValue(r);e.addValue(r,Il(void 0!==t?t:o,{owner:e}))}}for(const r in n)void 0===t[r]&&e.removeValue(r);return t}(this,this.scrapeMotionValuesFromProps(e,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(e){return this.props.variants?this.props.variants[e]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(e=!1){if(e)return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const e=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(e.initial=this.props.initial),e}const t={};for(let e=0;e<Vf;e++){const n=Oi[e],r=this.props[n];(_i(r)||!1===r)&&(t[n]=r)}return t}addVariantChild(e){const t=this.getClosestVariantNode();if(t)return t.variantChildren&&t.variantChildren.add(e),()=>t.variantChildren.delete(e)}addValue(e,t){const n=this.values.get(e);t!==n&&(n&&this.removeValue(e),this.bindToMotionValue(e,t),this.values.set(e,t),this.latestValues[e]=t.get())}removeValue(e){this.values.delete(e);const t=this.valueSubscriptions.get(e);t&&(t(),this.valueSubscriptions.delete(e)),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,t){if(this.props.values&&this.props.values[e])return this.props.values[e];let n=this.values.get(e);return void 0===n&&void 0!==t&&(n=Il(null===t?void 0:t,{owner:this}),this.addValue(e,n)),n}readValue(e,t){var n;let r=void 0===this.latestValues[e]&&this.current?null!==(n=this.getBaseTargetFromProps(this.props,e))&&void 0!==n?n:this.readValueFromInstance(this.current,e,this.options):this.latestValues[e];return null!=r&&(\"string\"==typeof r&&(Ji(r)||Yi(r))?r=parseFloat(r):!(e=>zf.find(Ts(e)))(r)&&ea.test(t)&&(r=ca(e,t)),this.setBaseTarget(e,Wl(r)?r.get():r)),Wl(r)?r.get():r}setBaseTarget(e,t){this.baseTarget[e]=t}getBaseTarget(e){var t;const{initial:n}=this.props;let r;if(\"string\"==typeof n||\"object\"==typeof n){const o=Ci(this.props,n,null===(t=this.presenceContext)||void 0===t?void 0:t.custom);o&&(r=o[e])}if(n&&void 0!==r)return r;const o=this.getBaseTargetFromProps(this.props,e);return void 0===o||Wl(o)?void 0!==this.initialValues[e]&&void 0===r?void 0:this.baseTarget[e]:o}on(e,t){return this.events[e]||(this.events[e]=new Al),this.events[e].add(t)}notify(e,...t){this.events[e]&&this.events[e].notify(...t)}}class Uf extends Wf{constructor(){super(...arguments),this.KeyframeResolver=da}sortInstanceNodePosition(e,t){return 2&e.compareDocumentPosition(t)?1:-1}getBaseTargetFromProps(e,t){return e.style?e.style[t]:void 0}removeValueFromRenderState(e,{vars:t,style:n}){delete t[e],delete n[e]}}class $f extends Uf{constructor(){super(...arguments),this.type=\"html\",this.applyWillChange=!0,this.renderInstance=nf}readValueFromInstance(e,t){if(Ni.has(t)){const e=la(t);return e&&e.default||0}{const r=(n=e,window.getComputedStyle(n)),o=(Qi(t)?r.getPropertyValue(t):r[t])||0;return\"string\"==typeof o?o.trim():o}var n}measureInstanceViewportBox(e,{transformPagePoint:t}){return Qc(e,t)}build(e,t,n){bf(e,t,n.transformTemplate)}scrapeMotionValuesFromProps(e,t,n){return af(e,t,n)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:e}=this.props;Wl(e)&&(this.childSubscription=e.on(\"change\",(e=>{this.current&&(this.current.textContent=`${e}`)})))}}class Kf extends Uf{constructor(){super(...arguments),this.type=\"svg\",this.isSVGTag=!1,this.measureInstanceViewportBox=Dc}getBaseTargetFromProps(e,t){return e[t]}readValueFromInstance(e,t){if(Ni.has(t)){const e=la(t);return e&&e.default||0}return t=rf.has(t)?t:Ll(t),e.getAttribute(t)}scrapeMotionValuesFromProps(e,t,n){return lf(e,t,n)}build(e,t,n){Sf(e,t,this.isSVGTag,n.transformTemplate)}renderInstance(e,t,n,r){of(e,t,0,r)}mount(e){this.isSVGTag=_f(e.tagName),super.mount(e)}}const Hf=xi(If({...ec,...Md,...kd,...Id},((e,t)=>tf(e)?new Kf(t):new $f(t,{allowProjection:e!==o.Fragment}))));var qf=[\"slug\",\"text\",\"icon\",\"className\",\"disabled\",\"badge\"];function Yf(){return Yf=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Yf.apply(null,arguments)}var Gf=(0,o.createContext)(),Xf=function(e,t){var n=(0,o.useContext)(Gf),r=e.slug,s=e.text,a=e.icon,l=e.className,c=e.disabled,u=void 0!==c&&c,d=e.badge,f=void 0===d?null:d,h=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,qf);if(!n)throw new Error(\"Tab should be used inside Tabs Group\");var p=n.activeItem,m=n.onChange,g=n.size,v=n.variant,y=n.orientation,b=n.iconPosition,x=n.width,w={xs:\"px-1.5 py-0.5 text-xs [&_svg]:size-3\",sm:\"underline\"===v?\"py-1.5 text-sm [&_svg]:size-4\":\"px-3 py-1.5 text-sm [&_svg]:size-4\",md:\"underline\"===v?\"py-2 text-base [&_svg]:size-5\":\"px-3.5 py-1.5 text-base [&_svg]:size-5\",lg:\"underline\"===v?\"p-2.5 text-lg [&_svg]:size-6\":\"px-3.5 py-1.5 text-lg [&_svg]:size-6\"}[g],E=te(\"relative border-none bg-transparent text-text-secondary cursor-pointer flex items-center justify-center transition-[box-shadow,color,background-color] duration-200\",\"full\"===x?\"flex-1\":\"\",\"vertical\"===y?\"w-full justify-between\":\"\"),S=\"rounded-full\";\"rounded\"===v?S=\"rounded-md\":\"underline\"===v&&(S=\"rounded-none\");var _=te(E,\"border-none\",S,\"hover:text-text-primary group\",\"focus:outline-none\",u?\"text-text-disabled cursor-not-allowed\":\"\",w,p===r?\"bg-background-primary text-text-primary shadow-sm\":\"\",l);return i().createElement(\"button\",Yf({ref:t,className:_,disabled:u,onClick:function(e){m(e,{slug:r,text:s})}},h),p===r&&\"underline\"===v&&i().createElement(Hf.span,{layoutId:\"underline\",className:\"absolute right-0 left-0 -bottom-px h-px bg-border-interactive\"}),i().createElement(\"span\",{className:\"flex items-center gap-1\"},\"left\"===b&&a&&i().createElement(\"span\",{className:\"mr-1 contents center-center group-hover:text-text-primary\"},a),s,\"right\"===b&&a&&i().createElement(\"span\",{className:\"ml-1 contents center-center group-hover:text-text-primary\"},a)),f&&(0,o.isValidElement)(f)&&f)},Jf=(0,o.forwardRef)(Xf);Jf.displayName=\"Tab\";var Zf={Group:function(e){var t,n=e.children,r=e.activeItem,s=void 0===r?null:r,a=e.onChange,l=e.className,c=e.size,u=void 0===c?\"sm\":c,d=e.orientation,f=void 0===d?\"horizontal\":d,h=e.variant,p=void 0===h?\"pill\":h,m=e.iconPosition,g=void 0===m?\"left\":m,v=e.width,y=void 0===v?\"full\":v,b=(0,o.useCallback)((function(e,t){a&&a({event:e,value:t})}),[a]),x=\"rounded-full\",w=\"p-1\",E=\"border border-tab-border border-solid\";\"vertical\"===f?t=\"gap-0.5\":\"rounded\"!==p&&\"pill\"!==p||(\"xs\"===u||\"sm\"===u?t=\"gap-0.5\":\"md\"!==u&&\"lg\"!==u||(t=\"gap-1\")),\"rounded\"===p||\"vertical\"===f?x=\"rounded-md\":\"underline\"===p&&(x=\"rounded-none\",w=\"p-0\",E=\"border-t-0 border-r-0 border-l-0 border-b border-solid border-tab-border\",\"xs\"===u?t=\"gap-0\":\"sm\"===u?t=\"gap-2.5\":\"md\"!==u&&\"lg\"!==u||(t=\"gap-3\"));var S=\"vertical\"===f?\"flex-col\":\"\",_=\"box-border [&>*]:box-border flex items-center \".concat(\"full\"===y?\"w-full\":\"\",\" \").concat(S),k=te(_,x,w,t,E,\"underline\"!==p?\"bg-tab-background\":\"\",l);return i().createElement(\"div\",{className:k},i().createElement(Gf.Provider,{value:{activeItem:s,onChange:b,size:u,variant:p,orientation:f,iconPosition:g,width:y}},i().Children.map(n,(function(e){return(0,o.isValidElement)(e)?i().cloneElement(e):null}))))},Tab:Jf};const Qf=xe(\"ChevronsUpDown\",[[\"path\",{d:\"m7 15 5 5 5-5\",key:\"1hf1tw\"}],[\"path\",{d:\"m7 9 5-5 5 5\",key:\"sgt6xg\"}]]),eh=xe(\"ChevronDown\",[[\"path\",{d:\"m6 9 6 6 6-6\",key:\"qrunsl\"}]]),th=xe(\"Search\",[[\"circle\",{cx:\"11\",cy:\"11\",r:\"8\",key:\"4ej97u\"}],[\"path\",{d:\"m21 21-4.3-4.3\",key:\"1qie3q\"}]]);var nh={sm:{icon:\"[&>svg]:size-4\",searchIcon:\"[&>svg]:size-4\",selectButton:\"px-2 py-2 rounded text-xs font-medium leading-4 min-h-[2.25rem]\",multiSelect:\"pl-2 pr-2 py-1.5\",displaySelected:\"text-xs font-normal\",dropdown:\"rounded-md\",dropdownItemsWrapper:\"p-1.5\",searchbarWrapper:\"p-3 flex items-center gap-0.5\",searchbar:\"font-medium text-xs\",searchbarIcon:\"[&>svg]:size-4\",label:\"text-xs font-medium\"},md:{icon:\"[&>svg]:size-5\",searchIcon:\"[&>svg]:size-5\",selectButton:\"px-2.5 py-2.5 rounded-md text-xs font-medium leading-4 min-h-[2.5rem]\",multiSelect:\"pl-2 pr-2.5 py-2\",displaySelected:\"text-sm font-normal\",dropdown:\"rounded-lg\",dropdownItemsWrapper:\"p-2\",searchbarWrapper:\"p-2.5 flex items-center gap-1\",searchbar:\"font-medium text-sm\",searchbarIcon:\"[&>svg]:size-5\",label:\"text-sm font-medium\"},lg:{icon:\"[&>svg]:size-6\",searchIcon:\"[&>svg]:size-5\",selectButton:\"px-3 py-3 rounded-lg text-sm font-medium leading-5 min-h-[3rem]\",multiSelect:\"pl-2.5 pr-3 py-2.5\",displaySelected:\"text-sm font-normal\",dropdown:\"rounded-lg\",dropdownItemsWrapper:\"p-2\",searchbarWrapper:\"p-2.5 flex items-center gap-1\",searchbar:\"font-medium text-sm\",searchbarIcon:\"[&>svg]:size-5\",label:\"text-base font-medium\"}},rh=\"group-disabled:text-field-color-disabled\",oh=[\"value\",\"selected\",\"children\"];function ih(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||lh(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function sh(){return sh=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},sh.apply(null,arguments)}function ah(e){return function(e){if(Array.isArray(e))return ch(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||lh(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function lh(e,t){if(e){if(\"string\"==typeof e)return ch(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ch(e,t):void 0}}function ch(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function uh(e){return uh=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},uh(e)}function dh(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function fh(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?dh(Object(n),!0).forEach((function(t){hh(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):dh(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function hh(e,t,n){return(t=function(e){var t=function(e){if(\"object\"!=uh(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,\"string\");if(\"object\"!=uh(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==uh(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ph=(0,o.createContext)(),mh=function(){return(0,o.useContext)(ph)},gh=function(e){var t,n=e.id,r=e.size,i=void 0===r?\"md\":r,s=e.value,a=e.defaultValue,l=e.onChange,c=e.by,u=void 0===c?\"id\":c,d=e.children,f=e.multiple,h=void 0!==f&&f,p=e.combobox,m=void 0!==p&&p,g=e.disabled,v=void 0!==g&&g,y=(0,o.useMemo)((function(){return n||\"select-\".concat(ce())}),[n]),b=(0,o.useMemo)((function(){return void 0!==s}),[s]),x=ih((0,o.useState)(a),2),w=x[0],E=x[1],S=ih((0,o.useState)(\"\"),2),_=S[0],k=S[1],C=(0,o.useCallback)((function(){return b?s:w}),[b,s,w]),P=ih((0,o.useState)(!1),2),T=P[0],O=P[1],R=ih((0,o.useState)(),2),N=R[0],A=R[1],j=ih((0,o.useState)(),2),M=j[0],I=j[1],D={sm:m?256:172,md:m?256:216,lg:m?256:216},L=Mo({placement:\"bottom-start\",open:T,onOpenChange:O,whileElementsMounted:nr,middleware:[mr(5),gr({padding:10}),(t={apply:function(e){var t=e.rects,n=e.elements,r=e.availableHeight;Object.assign(n.floating.style,{maxHeight:\"min(\".concat(r,\"px, \").concat(D[i],\"px)\"),maxWidth:\"\".concat(t.reference.width,\"px\")})},padding:10},{...sr(t),options:[t,undefined]})]}),F=L.refs,z=L.floatingStyles,B=L.context,V=(0,o.useRef)([]),W=(0,o.useRef)([]),U=(0,o.useRef)(!1),$=Oo(B,{event:\"mousedown\"}),K=jo(B),H=Ho(B,{role:\"listbox\"}),q=$o(B,{listRef:V,activeIndex:N,selectedIndex:M,onNavigate:A,loop:!0}),Y=function(e,t){var n;const{open:r,dataRef:i}=e,{listRef:s,activeIndex:a,onMatch:l,onTypingChange:c,enabled:u=!0,findMatch:d=null,resetMs:f=750,ignoreKeys:h=[],selectedIndex:p=null}=t,m=o.useRef(),g=o.useRef(\"\"),v=o.useRef(null!=(n=null!=p?p:a)?n:-1),y=o.useRef(null),b=xr(l),x=xr(c),w=qr(d),E=qr(h);Ir((()=>{r&&(clearTimeout(m.current),y.current=null,g.current=\"\")}),[r]),Ir((()=>{var e;r&&\"\"===g.current&&(v.current=null!=(e=null!=p?p:a)?e:-1)}),[r,p,a]);const S=xr((e=>{e?i.current.typing||(i.current.typing=e,x(e)):i.current.typing&&(i.current.typing=e,x(e))})),_=xr((e=>{function t(e,t,n){const r=w.current?w.current(t,n):t.find((e=>0===(null==e?void 0:e.toLocaleLowerCase().indexOf(n.toLocaleLowerCase()))));return r?e.indexOf(r):-1}const n=s.current;if(g.current.length>0&&\" \"!==g.current[0]&&(-1===t(n,n,g.current)?S(!1):\" \"===e.key&&Qt(e)),null==n||E.current.includes(e.key)||1!==e.key.length||e.ctrlKey||e.metaKey||e.altKey)return;r&&\" \"!==e.key&&(Qt(e),S(!0)),n.every((e=>{var t,n;return!e||(null==(t=e[0])?void 0:t.toLocaleLowerCase())!==(null==(n=e[1])?void 0:n.toLocaleLowerCase())}))&&g.current===e.key&&(g.current=\"\",v.current=y.current),g.current+=e.key,clearTimeout(m.current),m.current=setTimeout((()=>{g.current=\"\",v.current=y.current,S(!1)}),f);const o=v.current,i=t(n,[...n.slice((o||0)+1),...n.slice(0,(o||0)+1)],g.current);-1!==i?(b(i),y.current=i):\" \"!==e.key&&(g.current=\"\",S(!1))})),k=o.useMemo((()=>({onKeyDown:_})),[_]),C=o.useMemo((()=>({onKeyDown:_,onKeyUp(e){\" \"===e.key&&S(!1)}})),[_,S]);return o.useMemo((()=>u?{reference:k,floating:C}:{}),[u,k,C])}(B,{listRef:W,activeIndex:N,selectedIndex:M,onMatch:T?A:I,onTypingChange:function(e){U.current=e}}),G=Fo([K,H,q,$].concat(ah(m?[]:[Y]))),X=G.getReferenceProps,J=G.getFloatingProps,Z=G.getItemProps,Q=function(e,t){if(h)return function(e,t){var n,r=ah(null!==(n=C())&&void 0!==n?n:[]);-1===r.findIndex((function(e){return\"object\"===uh(e)?e[u]===t[u]:e===t}))&&(r.push(t),b||E(r),I(e),F.reference.current.focus(),O(!1),k(\"\"),\"function\"==typeof l&&l(r))}(e,t);I(e),b||E(t),F.reference.current.focus(),O(!1),k(\"\"),\"function\"==typeof l&&l(t)},ee=(0,o.useCallback)((function(e,t){V.current[e]=t}),[]);return React.createElement(ph.Provider,{value:{selectedIndex:M,setSelectedIndex:I,activeIndex:N,setActiveIndex:A,selected:w,setSelected:E,handleSelect:Q,combobox:m,sizeValue:i,multiple:h,onChange:l,isTypingRef:U,getItemProps:Z,onClickItem:function(e,t){Q(e,t)},onKeyDownItem:function(e,t,n){\"Enter\"===e.key&&(e.preventDefault(),Q(t,n)),\" \"!==e.key||U.current||(e.preventDefault(),Q(t,n))},getValues:C,selectId:y,getReferenceProps:X,isOpen:T,value:s,updateListRef:ee,refs:F,listContentRef:W,by:u,getFloatingProps:J,floatingStyles:z,context:B,searchKeyword:_,setSearchKeyword:k,disabled:v}},d)};gh.Button=function(e){var t,n,r,i=e.children,s=e.icon,a=void 0===s?null:s,l=e.placeholder,c=void 0===l?\"Select an option\":l,u=e.optionIcon,d=void 0===u?null:u,f=e.displayBy,h=void 0===f?\"name\":f,p=e.label,m=mh(),g=m.sizeValue,v=m.getReferenceProps,y=m.getValues,b=m.selectId,x=m.refs,w=m.isOpen,E=m.multiple,S=m.combobox,_=m.setSelected,k=m.onChange,C=m.isControlled,P=m.disabled,T=m.by,O=null===(t={sm:\"xs\",md:\"sm\",lg:\"md\"})||void 0===t?void 0:t[g],R=(0,o.useCallback)((function(){if(a)return a;var e=\"text-field-placeholder group-disabled:text-icon-disabled\";return S?React.createElement(Qf,{className:e}):React.createElement(eh,{className:e})}),[a]),N=(0,o.useCallback)((function(){var e=y();if(!e)return null;if(\"function\"==typeof i){var t=fh({value:e},E?{onClose:A}:{});return i(t)}if(E)return e.map((function(e,t){return React.createElement(Ge,{icon:d,type:\"rounded\",key:t,size:O,onMouseDown:A(e),label:\"object\"===uh(e)?e[h]:e,closable:!0,disabled:P})}));var n=\"object\"===uh(e)?e[h]:e;return(0,o.isValidElement)(i)&&(n=i),React.createElement(\"span\",{className:te(nh[g].displaySelected,rh)},n)}),[y]),A=function(e){return function(t){var n;null==t||t.preventDefault(),null==t||t.stopPropagation();var r=ah(null!==(n=y())&&void 0!==n?n:[]),o=r.findIndex((function(t){return\"object\"===uh(t)?t[T]===e[T]:t===e}));-1!==o&&(r.splice(o,1),C||_(r),\"function\"==typeof k&&k(r))}};return React.createElement(\"div\",{className:\"flex flex-col items-start gap-1.5 [&_*]:box-border box-border\"},React.createElement(\"label\",{className:te(null===(n=nh[g])||void 0===n?void 0:n.label,\"text-field-label\"),htmlFor:b},p),React.createElement(\"button\",sh({id:b,ref:x.setReference,className:te(\"flex items-center justify-between border border-solid w-full box-border transition-colors duration-150 bg-white\",\"border focus-visible:outline-none border-solid border-field-border\",!w&&\"focus:ring-2 focus:ring-offset-4 focus:border-focus-border focus:ring-focus [&:hover:not(:focus):not(:disabled)]:border-border-strong\",nh[g].selectButton,E&&nh[g].multiSelect,\"group disabled:border-field-border-disabled [&:hover:has(:disabled)]:border-field-border-disabled\"),\"aria-labelledby\":\"select-label\",tabIndex:0,disabled:P},v()),React.createElement(\"div\",{className:te(\"flex-1 grid items-center justify-start gap-1.5 \",y()&&\"flex flex-wrap\")},N(),(E?!(null!==(r=y())&&void 0!==r&&r.length):!y())&&React.createElement(\"div\",{className:te(\"[grid-area:1/1/2/3] text-field-input\",nh[g].displaySelected,rh)},c)),React.createElement(\"div\",{className:te(\"flex items-center [&>svg]:shrink-0\",nh[g].icon)},R())))},gh.Options=function(e){var t=e.children,n=e.searchBy,r=void 0===n?\"id\":n,i=e.searchPlaceholder,s=void 0===i?\"Search...\":i,a=e.dropdownPortalRoot,l=void 0===a?null:a,c=e.dropdownPortalId,u=void 0===c?\"\":c,d=mh(),f=d.isOpen,h=d.context,p=d.refs,m=d.combobox,g=d.floatingStyles,v=d.getFloatingProps,y=d.sizeValue,b=d.setSearchKeyword,x=d.setActiveIndex,w=d.setSelectedIndex,E=d.value,S=d.selected,_=d.getValues,k=d.searchKeyword,C=d.listContentRef,P=d.by,T=(0,o.useMemo)((function(){var e=_(),n=0;return e&&(n=o.Children.toArray(t).findIndex((function(t){return\"object\"===uh(t.props.value)?t.props.value[P]===e[P]:t.props.value===e}))),-1===n?0:n}),[E,S,t]);(0,o.useLayoutEffect)((function(){x(T),w(T)}),[]);var O=(0,o.useMemo)((function(){return o.Children.map(t,(function(e,t){if(!(0,o.isValidElement)(e))return null;if(k){var n=e.props.value;if(\"object\"===uh(n)){if(-1===n[r].toLowerCase().indexOf(k.toLowerCase()))return null}else if(-1===n.toLowerCase().indexOf(k.toLowerCase()))return null}return(0,o.cloneElement)(e,fh(fh({},e.props),{},{index:t}))}))}),[k,E,S,t]),R=o.Children.count(O);return(0,o.useEffect)((function(){C.current=[],o.Children.forEach(t,(function(e){if((0,o.isValidElement)(e)&&e.props.value){if(k){var t=e.props.value;if(\"object\"===uh(t)){if(-1===t[r].toLowerCase().indexOf(k.toLowerCase()))return}else if(-1===t.toLowerCase().indexOf(k.toLowerCase()))return}C.current.push(e.props.value)}}))}),[k]),React.createElement(React.Fragment,null,f&&React.createElement(vo,{id:u,root:l},React.createElement(Co,{context:h,modal:!1},React.createElement(\"div\",sh({ref:p.setFloating,className:te(\"box-border [&_*]:box-border w-full bg-white outline-none shadow-lg border border-solid border-border-subtle overflow-hidden\",m&&\"grid grid-cols-1 grid-rows-[auto_1fr] divide-y divide-x-0 divide-solid divide-border-subtle\",nh[y].dropdown,!m&&\"h-full\"),style:fh({},g)},v()),m&&React.createElement(\"div\",{className:te(nh[y].searchbarWrapper)},React.createElement(th,{className:te(\"text-icon-secondary shrink-0\",nh[y].searchbarIcon)}),React.createElement(\"input\",{className:te(\"px-1 w-full placeholder:text-field-placeholder border-0 focus:outline-none focus:shadow-none\",nh[y].searchbar),type:\"search\",name:\"keyword\",placeholder:s,onChange:function(e){return b(e.target.value)},autoComplete:\"off\"})),React.createElement(\"div\",{className:te(\"overflow-y-auto\",!m&&\"w-full h-full\",nh[y].dropdownItemsWrapper)},!!R&&O,!R&&React.createElement(\"div\",{className:\"p-2 text-center text-base font-medium text-field-placeholder\"},\"No items found\"))))))},gh.Option=function(e){var t=e.value,n=e.selected,r=e.children,i=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,oh),s=mh(),a=s.sizeValue,l=s.getItemProps,c=s.onKeyDownItem,u=s.onClickItem,d=s.activeIndex,f=s.selectedIndex,h=s.updateListRef,p=s.getValues,m=s.by,g=s.multiple,v=i.index,y=(0,o.useMemo)((function(){if(!g)return!1;var e=p();return!!e&&e.some((function(e){return\"object\"===uh(e)?e[m]===t[m]:e===t}))}),[t,p]),b=(0,o.useMemo)((function(){return\"boolean\"==typeof n?n:g?y:v===f}),[y,f,n]);return React.createElement(\"div\",sh({className:te(\"w-full flex items-center justify-between text-text-primary hover:bg-button-tertiary-hover rounded-md transition-all duration-150 cursor-pointer\",{sm:\"py-1.5 px-2 text-sm font-normal\",md:\"p-2 text-base font-normal\",lg:\"p-2 text-base font-normal\"}[a],v===d&&\"bg-button-tertiary-hover\"),ref:function(e){h(v,e)},role:\"option\",tabIndex:v===d?0:-1,\"aria-selected\":b&&v===d},l({onClick:function(){u(v,t)},onKeyDown:function(e){c(e,v,t)}})),React.createElement(\"span\",{className:\"w-full truncate\"},r),b&&React.createElement(Ee,{className:te(\"text-icon-on-color-disabled\",{sm:\"size-4\",md:\"size-5\",lg:\"size-5\"}[a])}))};var vh=gh,yh=[\"id\",\"message\",\"jsx\"];function bh(e){return bh=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},bh(e)}function xh(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function wh(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xh(Object(n),!0).forEach((function(t){Eh(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xh(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Eh(e,t,n){return(t=_h(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Sh(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,_h(r.key),r)}}function _h(e){var t=function(e){if(\"object\"!=bh(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,\"string\");if(\"object\"!=bh(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==bh(t)?t:t+\"\"}function kh(e,t,n){(function(e,t){if(t.has(e))throw new TypeError(\"Cannot initialize the same private elements twice on an object\")})(e,t),t.set(e,n)}function Ch(e,t){return e.get(Th(e,t))}function Ph(e,t,n){return e.set(Th(e,t),n),n}function Th(e,t,n){if(\"function\"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError(\"Private element is not present on this object\")}var Oh=1,Rh=new WeakMap,Nh=new WeakMap,Ah=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),kh(this,Rh,void 0),kh(this,Nh,void 0),Ph(Rh,this,[]),Ph(Nh,this,[])},t=[{key:\"subscribe\",value:function(e){var t=this;return Ch(Nh,this).push(e),function(){Ph(Nh,t,Ch(Nh,t).filter((function(t){return t!==e})))}}},{key:\"notify\",value:function(){var e=this;Ch(Nh,this).forEach((function(t){return t(Ch(Rh,e))}))}},{key:\"publish\",value:function(e){Ch(Nh,this).forEach((function(t){return t(e)}))}},{key:\"add\",value:function(e){Ch(Rh,this).push(e),this.publish(e)}},{key:\"remove\",value:function(e){return Ph(Rh,this,Ch(Rh,this).filter((function(t){return t.id!==e}))),e}},{key:\"create\",value:function(e){var t=this,n=e.id,r=void 0===n?void 0:n,o=e.message,i=void 0===o?\"\":o,s=e.jsx,a=void 0===s?void 0:s,l=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,yh);if(i||\"function\"==typeof a){var c=\"number\"==typeof r?r:Oh++,u=Ch(Rh,this).find((function(e){return e.id===c}));return u&&Ph(Rh,this,Ch(Rh,this).map((function(e){return e.id===c?(t.publish(wh(wh({},e),{},{title:i,jsx:a},l)),wh(wh({},e),{},{title:i,jsx:a},l)):e}))),this.add(wh({id:c,title:i,jsx:a},l)),c}}},{key:\"update\",value:function(e,t){var n=this,r=t.render,o=void 0===r?void 0:r,i=t;switch(bh(o)){case\"function\":i=wh({jsx:o},t);break;case\"string\":i=wh({title:o},t)}Ph(Rh,this,Ch(Rh,this).map((function(t){return t.id===e?(n.publish(wh(wh({},t),i)),wh(wh({},t),i)):t})))}},{key:\"dismiss\",value:function(e){var t=this;return e||Ch(Rh,this).forEach((function(e){return Ch(Nh,t).forEach((function(t){return t({id:e.id,dismiss:!0})}))})),Ch(Nh,this).forEach((function(t){return t({id:e,dismiss:!0})})),e}},{key:\"history\",value:function(){return Ch(Rh,this)}},{key:\"default\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.create(wh({message:e,type:\"neutral\"},t))}},{key:\"success\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.create(wh({message:e,type:\"success\"},t))}},{key:\"error\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.create(wh({message:e,type:\"error\"},t))}},{key:\"warning\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.create(wh({message:e,type:\"warning\"},t))}},{key:\"info\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.create(wh({message:e,type:\"info\"},t))}},{key:\"custom\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.create(wh({jsx:e,type:\"custom\"},t))}}],t&&Sh(e.prototype,t),Object.defineProperty(e,\"prototype\",{writable:!1}),e;var e,t}(),jh=new Ah,Mh=Object.seal(Object.assign((function(e,t){return jh.default(e,t)}),{success:jh.success.bind(jh),error:jh.error.bind(jh),warning:jh.warning.bind(jh),info:jh.info.bind(jh),custom:jh.custom.bind(jh),dismiss:jh.dismiss.bind(jh),update:jh.update.bind(jh)},{getHistory:jh.history.bind(jh)})),Ih=!1,Dh={\"top-left\":\"top-0 bottom-0 left-0 justify-start items-start\",\"top-right\":\"top-0 bottom-0 right-0 justify-start items-end\",\"bottom-left\":\"top-0 bottom-0 left-0 justify-end items-start\",\"bottom-right\":\"top-0 bottom-0 right-0 justify-end items-end\"},Lh={neutral:\"border-alert-border-neutral bg-alert-background-neutral\",custom:\"border-alert-border-neutral bg-alert-background-neutral\",info:\"border-alert-border-info bg-alert-background-info\",success:\"border-alert-border-green bg-alert-background-green\",warning:\"border-alert-border-warning bg-alert-background-warning\",error:\"border-alert-border-danger bg-alert-background-danger\"},Fh=\"bg-background-inverse border-background-inverse\",zh={light:\"text-icon-secondary\",dark:\"text-icon-inverse\"};class Bh extends o.Component{getSnapshotBeforeUpdate(e){const t=this.props.childRef.current;if(t&&e.isPresent&&!this.props.isPresent){const e=this.props.sizeRef.current;e.height=t.offsetHeight||0,e.width=t.offsetWidth||0,e.top=t.offsetTop,e.left=t.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function Vh({children:e,isPresent:t}){const n=(0,o.useId)(),r=(0,o.useRef)(null),i=(0,o.useRef)({width:0,height:0,top:0,left:0}),{nonce:s}=(0,o.useContext)(Dd);return(0,o.useInsertionEffect)((()=>{const{width:e,height:o,top:a,left:l}=i.current;if(t||!r.current||!e||!o)return;r.current.dataset.motionPopId=n;const c=document.createElement(\"style\");return s&&(c.nonce=s),document.head.appendChild(c),c.sheet&&c.sheet.insertRule(`\\n          [data-motion-pop-id=\"${n}\"] {\\n            position: absolute !important;\\n            width: ${e}px !important;\\n            height: ${o}px !important;\\n            top: ${a}px !important;\\n            left: ${l}px !important;\\n          }\\n        `),()=>{document.head.removeChild(c)}}),[t]),(0,iu.jsx)(Bh,{isPresent:t,childRef:r,sizeRef:i,children:o.cloneElement(e,{ref:r})})}const Wh=({children:e,initial:t,isPresent:n,onExitComplete:r,custom:i,presenceAffectsLayout:s,mode:a})=>{const l=cf(Uh),c=(0,o.useId)(),u=(0,o.useMemo)((()=>({id:c,initial:t,isPresent:n,custom:i,onExitComplete:e=>{l.set(e,!0);for(const e of l.values())if(!e)return;r&&r()},register:e=>(l.set(e,!1),()=>l.delete(e))})),s?[Math.random()]:[n]);return(0,o.useMemo)((()=>{l.forEach(((e,t)=>l.set(t,!1)))}),[n]),o.useEffect((()=>{!n&&!l.size&&r&&r()}),[n]),\"popLayout\"===a&&(e=(0,iu.jsx)(Vh,{isPresent:n,children:e})),(0,iu.jsx)(su.Provider,{value:u,children:e})};function Uh(){return new Map}const $h=e=>e.key||\"\";function Kh(e){const t=[];return o.Children.forEach(e,(e=>{(0,o.isValidElement)(e)&&t.push(e)})),t}const Hh=({children:e,exitBeforeEnter:t,custom:n,initial:r=!0,onExitComplete:i,presenceAffectsLayout:s=!0,mode:a=\"sync\"})=>{Xi(!t,\"Replace exitBeforeEnter with mode='wait'\");const l=(0,o.useMemo)((()=>Kh(e)),[e]),c=l.map($h),u=(0,o.useRef)(!0),d=(0,o.useRef)(l),f=cf((()=>new Map)),[h,p]=(0,o.useState)(l),[m,g]=(0,o.useState)(l);zd((()=>{u.current=!1,d.current=l;for(let e=0;e<m.length;e++){const t=$h(m[e]);c.includes(t)?f.delete(t):!0!==f.get(t)&&f.set(t,!1)}}),[m,c.length,c.join(\"-\")]);const v=[];if(l!==h){let e=[...l];for(let t=0;t<m.length;t++){const n=m[t],r=$h(n);c.includes(r)||(e.splice(t,0,n),v.push(n))}return\"wait\"===a&&v.length&&(e=v),g(Kh(e)),void p(l)}const{forceRender:y}=(0,o.useContext)(au);return(0,iu.jsx)(iu.Fragment,{children:m.map((e=>{const t=$h(e),o=l===m||c.includes(t);return(0,iu.jsx)(Wh,{isPresent:o,initial:!(u.current&&!r)&&void 0,custom:o?void 0:n,presenceAffectsLayout:s,mode:a,onExitComplete:o?void 0:()=>{if(!f.has(t))return;f.set(t,!0);let e=!0;f.forEach((t=>{t||(e=!1)})),e&&(null==y||y(),g(d.current),i&&i())},children:e},t)}))})};function qh(e){return qh=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},qh(e)}function Yh(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Gh(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Yh(Object(n),!0).forEach((function(t){Xh(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Yh(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Xh(e,t,n){return(t=function(e){var t=function(e){if(\"object\"!=qh(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,\"string\");if(\"object\"!=qh(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==qh(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Jh(e,t){if(e){if(\"string\"==typeof e)return Zh(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Zh(e,t):void 0}}function Zh(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var Qh,ep=function(e){var t=e.toastItem,n=e.title,r=void 0===n?null:n,i=e.content,s=void 0===i?null:i,a=e.autoDismiss,l=void 0===a||a,c=e.dismissAfter,u=void 0===c?5e3:c,d=e.theme,f=void 0===d?\"light\":d,h=e.design,p=void 0===h?\"stack\":h,m=e.icon,g=void 0===m?null:m,v=e.variant,y=void 0===v?\"neutral\":v,b=e.removeToast,x=(0,o.useRef)(0),w=(0,o.useRef)(0),E=(0,o.useRef)(0),S=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u;if(l&&!(u<0))return x.current=(new Date).getTime(),setTimeout((function(){b(e.id)}),t)};(0,o.useEffect)((function(){var e=u;return E.current=S(t,e),function(){clearTimeout(E.current)}}),[]),(0,o.useEffect)((function(){null!=t&&t.dismiss&&b(t.id)}),[t]);var _,k,C,P,T,O,R,N,A,j,M=function(){var e,n;null==t||null===(e=t.action)||void 0===e||null===(n=e.onClick)||void 0===n||n.call(e,(function(){return b(t.id)}))},I=null;return\"stack\"===p&&(I=React.createElement(\"div\",{className:te(\"flex items-center justify-start p-4 gap-2 relative border border-solid rounded-md shadow-lg\",\"dark\"===f?Fh:null===(_=Lh)||void 0===_?void 0:_[y],\"w-[22.5rem]\"),onMouseEnter:function(){clearTimeout(E.current),w.current=(new Date).getTime()},onMouseLeave:function(){E.current=S(t,u-(w.current-x.current))}},\"custom\"!==t.type?React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"self-start flex items-center justify-center [&_svg]:size-5 shrink-0\"},ti({variant:y,icon:g,theme:f})),React.createElement(\"div\",{className:\"flex flex-col items-start justify-start gap-0.5\"},ri({title:r,theme:f}),oi({content:s,theme:f}),(null==t||null===(k=t.action)||void 0===k?void 0:k.label)&&\"function\"==typeof(null==t||null===(C=t.action)||void 0===C?void 0:C.onClick)&&React.createElement(\"div\",{className:\"mt-2.5\"},ni({actionLabel:null==t||null===(P=t.action)||void 0===P?void 0:P.label,actionType:null!==(T=null==t||null===(O=t.action)||void 0===O?void 0:O.type)&&void 0!==T?T:\"button\",onAction:M,theme:f}))),React.createElement(\"div\",{className:\"absolute right-4 top-4 [&_svg]:size-5\"},React.createElement(\"button\",{className:te(\"bg-transparent m-0 p-0 border-none focus:outline-none active:outline-none cursor-pointer\",null!==(R=zh[f])&&void 0!==R?R:zh.light),onClick:function(){return b(t.id)}},React.createElement(He,null)))):null==t||null===(N=t.jsx)||void 0===N?void 0:N.call(t,{close:function(){return b(t.id)},action:null!=t&&t.action?Gh(Gh({},null==t?void 0:t.action),{},{onClick:M}):null}))),\"inline\"===p&&(I=React.createElement(\"div\",{className:te(\"flex items-center justify-start p-3 gap-2 relative border border-solid rounded-md shadow-lg\",\"dark\"===f?Fh:null===(A=Lh)||void 0===A?void 0:A[y],\"lg:w-[47.5rem] w-full\")},React.createElement(\"div\",{className:\"self-start flex items-center justify-center [&_svg]:size-5 shrink-0\"},ti({variant:y,icon:g,theme:f})),React.createElement(\"div\",{className:\"flex items-start justify-start gap-1 mr-10 [&>span:first-child]:shrink-0\"},ri({title:r,theme:f}),oi({content:s,theme:f})),React.createElement(\"div\",{className:\"absolute right-3 top-3 [&_svg]:size-5\"},React.createElement(\"button\",{className:te(\"bg-transparent m-0 p-0 border-none focus:outline-none active:outline-none cursor-pointer\",null!==(j=zh[f])&&void 0!==j?j:zh.light),onClick:function(){return b(t.id)}},React.createElement(He,null))))),I},tp=(Qh=function(e){var t,n,r,i=e.position,s=void 0===i?\"top-right\":i,a=e.design,l=void 0===a?\"stack\":a,c=e.theme,u=void 0===c?\"light\":c,d=e.className,f=void 0===d?\"\":d,h=e.autoDismiss,p=void 0===h||h,m=e.dismissAfter,g=void 0===m?5e3:m,v=(n=(0,o.useState)([]),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(n,r)||Jh(n,r)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),y=v[0],b=v[1];(0,o.useEffect)((function(){jh.subscribe((function(e){null!=e&&e.dismiss?b((function(t){return t.map((function(t){return t.id===e.id?Gh(Gh({},t),{},{dismiss:!0}):t}))})):setTimeout((function(){(0,zn.flushSync)((function(){return b((function(t){return-1!==t.findIndex((function(t){return t.id===e.id}))?t.map((function(t){return t.id===e.id?Gh(Gh({},t),e):t})):[].concat(function(e){return function(e){if(Array.isArray(e))return Zh(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||Jh(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}(t),[e])}))}))}))}))}),[]);var x=function(e){b((function(t){return t.filter((function(t){return t.id!==e}))}))};return React.createElement(\"ul\",{className:te(\"fixed flex flex-col list-none z-20 p-10 pointer-events-none [&>li]:pointer-events-auto gap-3\",null!==(t=Dh[s])&&void 0!==t?t:Dh[\"top-right\"],f)},React.createElement(Hh,{initial:!1},y.map((function(e){var t,n,r,o,i;return React.createElement(Hf.li,{key:e.id,positionTransition:!0,initial:{opacity:0,y:50,scale:.7},animate:{opacity:1,y:0,scale:1},exit:{opacity:0,scale:.6,transition:{duration:.15}},layoutId:\"toast-\".concat(e.id)},React.createElement(ep,{toastItem:e,title:e.title,content:null==e?void 0:e.description,icon:null!==(t=null==e?void 0:e.icon)&&void 0!==t?t:null,design:null!==(n=null==e?void 0:e.design)&&void 0!==n?n:l,autoDismiss:null!==(r=null==e?void 0:e.autoDismiss)&&void 0!==r?r:p,dismissAfter:null!==(o=null==e?void 0:e.dismissAfter)&&void 0!==o?o:g,removeToast:x,variant:e.type,theme:null!==(i=null==e?void 0:e.theme)&&void 0!==i?i:u}))}))))},(0,o.memo)((function(e){var t=e.singleTon;return Ih&&t?null:(Ih=!0,React.createElement(Qh,e))}))),np={sm:{1:\"grid-cols-1\",2:\"grid-cols-2\",3:\"grid-cols-3\",4:\"grid-cols-4\",5:\"grid-cols-5\",6:\"grid-cols-6\",7:\"grid-cols-7\",8:\"grid-cols-8\",9:\"grid-cols-9\",10:\"grid-cols-10\",11:\"grid-cols-11\",12:\"grid-cols-12\"},md:{1:\"md:grid-cols-1\",2:\"md:grid-cols-2\",3:\"md:grid-cols-3\",4:\"md:grid-cols-4\",5:\"md:grid-cols-5\",6:\"md:grid-cols-6\",7:\"md:grid-cols-7\",8:\"md:grid-cols-8\",9:\"md:grid-cols-9\",10:\"md:grid-cols-10\",11:\"md:grid-cols-11\",12:\"md:grid-cols-12\"},lg:{1:\"lg:grid-cols-1\",2:\"lg:grid-cols-2\",3:\"lg:grid-cols-3\",4:\"lg:grid-cols-4\",5:\"lg:grid-cols-5\",6:\"lg:grid-cols-6\",7:\"lg:grid-cols-7\",8:\"lg:grid-cols-8\",9:\"lg:grid-cols-9\",10:\"lg:grid-cols-10\",11:\"lg:grid-cols-11\",12:\"lg:grid-cols-12\"}},rp={sm:{xs:\"gap-2\",sm:\"gap-4\",md:\"gap-5\",lg:\"gap-6\",xl:\"gap-6\",\"2xl\":\"gap-8\"},md:{xs:\"md:gap-2\",sm:\"md:gap-4\",md:\"md:gap-5\",lg:\"md:gap-6\",xl:\"md:gap-6\",\"2xl\":\"md:gap-8\"},lg:{xs:\"lg:gap-2\",sm:\"lg:gap-4\",md:\"lg:gap-5\",lg:\"lg:gap-6\",xl:\"lg:gap-6\",\"2xl\":\"lg:gap-8\"}},op={sm:{xs:\"gap-x-2\",sm:\"gap-x-4\",md:\"gap-x-5\",lg:\"gap-x-6\",xl:\"gap-x-6\",\"2xl\":\"gap-x-8\"},md:{xs:\"md:gap-x-2\",sm:\"md:gap-x-4\",md:\"md:gap-x-5\",lg:\"md:gap-x-6\",xl:\"md:gap-x-6\",\"2xl\":\"md:gap-x-8\"},lg:{xs:\"lg:gap-x-2\",sm:\"lg:gap-x-4\",md:\"lg:gap-x-5\",lg:\"lg:gap-x-6\",xl:\"lg:gap-x-6\",\"2xl\":\"lg:gap-x-8\"}},ip={sm:{xs:\"gap-y-2\",sm:\"gap-y-4\",md:\"gap-y-5\",lg:\"gap-y-6\",xl:\"gap-y-6\",\"2xl\":\"gap-y-8\"},md:{xs:\"md:gap-y-2\",sm:\"md:gap-y-4\",md:\"md:gap-y-5\",lg:\"md:gap-y-6\",xl:\"md:gap-y-6\",\"2xl\":\"md:gap-y-8\"},lg:{xs:\"lg:gap-y-2\",sm:\"lg:gap-y-4\",md:\"lg:gap-y-5\",lg:\"lg:gap-y-6\",xl:\"lg:gap-y-6\",\"2xl\":\"lg:gap-y-8\"}},sp={sm:{1:\"col-span-1\",2:\"col-span-2\",3:\"col-span-3\",4:\"col-span-4\",5:\"col-span-5\",6:\"col-span-6\",7:\"col-span-7\",8:\"col-span-8\",9:\"col-span-9\",10:\"col-span-10\",11:\"col-span-11\",12:\"col-span-12\"},md:{1:\"md:col-span-1\",2:\"md:col-span-2\",3:\"md:col-span-3\",4:\"md:col-span-4\",5:\"md:col-span-5\",6:\"md:col-span-6\",7:\"md:col-span-7\",8:\"md:col-span-8\",9:\"md:col-span-9\",10:\"md:col-span-10\",11:\"md:col-span-11\",12:\"md:col-span-12\"},lg:{1:\"lg:col-span-1\",2:\"lg:col-span-2\",3:\"lg:col-span-3\",4:\"lg:col-span-4\",5:\"lg:col-span-5\",6:\"lg:col-span-6\",7:\"lg:col-span-7\",8:\"lg:col-span-8\",9:\"lg:col-span-9\",10:\"lg:col-span-10\",11:\"lg:col-span-11\",12:\"lg:col-span-12\"}},ap={sm:{1:\"col-start-1\",2:\"col-start-2\",3:\"col-start-3\",4:\"col-start-4\",5:\"col-start-5\",6:\"col-start-6\",7:\"col-start-7\",8:\"col-start-8\",9:\"col-start-9\",10:\"col-start-10\",11:\"col-start-11\",12:\"col-start-12\"},md:{1:\"md:col-start-1\",2:\"md:col-start-2\",3:\"md:col-start-3\",4:\"md:col-start-4\",5:\"md:col-start-5\",6:\"md:col-start-6\",7:\"md:col-start-7\",8:\"md:col-start-8\",9:\"md:col-start-9\",10:\"md:col-start-10\",11:\"md:col-start-11\",12:\"md:col-start-12\"},lg:{1:\"lg:col-start-1\",2:\"lg:col-start-2\",3:\"lg:col-start-3\",4:\"lg:col-start-4\",5:\"lg:col-start-5\",6:\"lg:col-start-6\",7:\"lg:col-start-7\",8:\"lg:col-start-8\",9:\"lg:col-start-9\",10:\"lg:col-start-10\",11:\"lg:col-start-11\",12:\"lg:col-start-12\"}},lp={sm:{row:\"grid-flow-row\",column:\"grid-flow-col\",\"row-dense\":\"grid-flow-row-dense\",\"column-dense\":\"grid-flow-col-dense\"},md:{row:\"md:grid-flow-row\",column:\"md:grid-flow-col\",\"row-dense\":\"md:grid-flow-row-dense\",\"column-dense\":\"md:grid-flow-col-dense\"},lg:{row:\"lg:grid-flow-row\",column:\"lg:grid-flow-col\",\"row-dense\":\"lg:grid-flow-row-dense\",\"column-dense\":\"lg:grid-flow-col-dense\"}},cp={sm:{normal:\"justify-normal\",start:\"justify-start\",end:\"justify-end\",center:\"justify-center\",between:\"justify-between\",around:\"justify-around\",evenly:\"justify-evenly\",stretch:\"justify-stretch\"},md:{normal:\"md:justify-normal\",start:\"md:justify-start\",end:\"md:justify-end\",center:\"md:justify-center\",between:\"md:justify-between\",around:\"md:justify-around\",evenly:\"md:justify-evenly\",stretch:\"md:justify-stretch\"},lg:{normal:\"lg:justify-normal\",start:\"lg:justify-start\",end:\"lg:justify-end\",center:\"lg:justify-center\",between:\"lg:justify-between\",around:\"lg:justify-around\",evenly:\"lg:justify-evenly\",stretch:\"lg:justify-stretch\"}},up={sm:{start:\"items-start\",end:\"items-end\",center:\"items-center\",baseline:\"items-baseline\",stretch:\"items-stretch\"},md:{start:\"md:items-start\",end:\"md:items-end\",center:\"md:items-center\",baseline:\"md:items-baseline\",stretch:\"md:items-stretch\"},lg:{start:\"lg:items-start\",end:\"lg:items-end\",center:\"lg:items-center\",baseline:\"lg:items-baseline\",stretch:\"lg:items-stretch\"}},dp={sm:{start:\"self-start\",end:\"self-end\",center:\"self-center\",baseline:\"self-baseline\",stretch:\"self-stretch\"},md:{start:\"md:self-start\",end:\"md:self-end\",center:\"md:self-center\",baseline:\"md:self-baseline\",stretch:\"md:self-stretch\"},lg:{start:\"lg:self-start\",end:\"lg:self-end\",center:\"lg:self-center\",baseline:\"lg:self-baseline\",stretch:\"lg:self-stretch\"}},fp={sm:{auto:\"justify-self-auto\",start:\"justify-self-start\",end:\"justify-self-end\",center:\"justify-self-center\",baseline:\"justify-self-baseline\",stretch:\"justify-self-stretch\"},md:{auto:\"md:justify-self-auto\",start:\"md:justify-self-start\",end:\"md:justify-self-end\",center:\"md:justify-self-center\",baseline:\"md:justify-self-baseline\",stretch:\"md:justify-self-stretch\"},lg:{auto:\"lg:justify-self-auto\",start:\"lg:justify-self-start\",end:\"lg:justify-self-end\",center:\"lg:justify-self-center\",baseline:\"lg:justify-self-baseline\",stretch:\"lg:justify-self-stretch\"}},hp={sm:{row:\"flex-row\",\"row-reverse\":\"flex-row-reverse\",column:\"flex-col\",\"column-reverse\":\"flex-col-reverse\"},md:{row:\"md:flex-row\",\"row-reverse\":\"md:flex-row-reverse\",column:\"md:flex-col\",\"column-reverse\":\"md:flex-col-reverse\"},lg:{row:\"lg:flex-row\",\"row-reverse\":\"lg:flex-row-reverse\",column:\"lg:flex-col\",\"column-reverse\":\"lg:flex-col-reverse\"}},pp={sm:{wrap:\"flex-wrap\",\"wrap-reverse\":\"flex-wrap-reverse\",nowrap:\"flex-nowrap\"},md:{wrap:\"md:flex-wrap\",\"wrap-reverse\":\"md:flex-wrap-reverse\",nowrap:\"md:flex-nowrap\"},lg:{wrap:\"lg:flex-wrap\",\"wrap-reverse\":\"lg:flex-wrap-reverse\",nowrap:\"lg:flex-nowrap\"}},mp={sm:{1:\"w-full\",2:\"w-1/2\",3:\"w-1/3\",4:\"w-1/4\",5:\"w-1/5\",6:\"w-1/6\",7:\"w-1/7\",8:\"w-1/8\",9:\"w-1/9\",10:\"w-1/10\",11:\"w-1/11\",12:\"w-1/12\"},md:{1:\"md:w-full\",2:\"md:w-1/2\",3:\"md:w-1/3\",4:\"md:w-1/4\",5:\"md:w-1/5\",6:\"md:w-1/6\",7:\"md:w-1/7\",8:\"md:w-1/8\",9:\"md:w-1/9\",10:\"md:w-1/10\",11:\"md:w-1/11\",12:\"md:w-1/12\"},lg:{1:\"lg:w-full\",2:\"lg:w-1/2\",3:\"lg:w-1/3\",4:\"lg:w-1/4\",5:\"lg:w-1/5\",6:\"lg:w-1/6\",7:\"lg:w-1/7\",8:\"lg:w-1/8\",9:\"lg:w-1/9\",10:\"lg:w-1/10\",11:\"lg:w-1/11\",12:\"lg:w-1/12\"}},gp={sm:{1:\"order-1\",2:\"order-2\",3:\"order-3\",4:\"order-4\",5:\"order-5\",6:\"order-6\",7:\"order-7\",8:\"order-8\",9:\"order-9\",10:\"order-10\",11:\"order-11\",12:\"order-12\",first:\"order-first\",last:\"order-last\",none:\"order-none\"},md:{1:\"md:order-1\",2:\"md:order-2\",3:\"md:order-3\",4:\"md:order-4\",5:\"md:order-5\",6:\"md:order-6\",7:\"md:order-7\",8:\"md:order-8\",9:\"md:order-9\",10:\"md:order-10\",11:\"md:order-11\",12:\"md:order-12\",first:\"md:order-first\",last:\"md:order-last\",none:\"md:order-none\"},lg:{1:\"lg:order-1\",2:\"lg:order-2\",3:\"lg:order-3\",4:\"lg:order-4\",5:\"lg:order-5\",6:\"lg:order-6\",7:\"lg:order-7\",8:\"lg:order-8\",9:\"lg:order-9\",10:\"lg:order-10\",11:\"lg:order-11\",12:\"lg:order-12\",first:\"lg:order-first\",last:\"lg:order-last\",none:\"lg:order-none\"}},vp={sm:{0:\"grow-0\",1:\"grow\"},md:{0:\"md:grow-0\",1:\"md:grow\"},lg:{0:\"lg:grow-0\",1:\"lg:grow\"}},yp={sm:{0:\"shrink-0\",1:\"shrink\"},md:{0:\"md:shrink-0\",1:\"md:shrink\"},lg:{0:\"lg:shrink-0\",1:\"lg:shrink\"}};function bp(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function xp(e){return xp=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},xp(e)}var wp=function(e,t,n){var r,o,i,s,a,l,c,u,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"sm\",f=[];switch(xp(e)){case\"object\":for(var h=0,p=Object.entries(e);h<p.length;h++){var m,g,v,y,b=(c=p[h],u=2,function(e){if(Array.isArray(e))return e}(c)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(c,u)||function(e,t){if(e){if(\"string\"==typeof e)return bp(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?bp(e,t):void 0}}(c,u)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),x=b[0],w=b[1];t[x]&&f.push(null!==(m=null!==(g=null==t||null===(v=t[x])||void 0===v?void 0:v[w])&&void 0!==g?g:null==t||null===(y=t[x])||void 0===y?void 0:y[null==n?void 0:n[x]])&&void 0!==m?m:\"\")}break;case\"string\":case\"number\":var E=d;f.push(null!==(r=null!==(o=null==t||null===(i=t[E])||void 0===i?void 0:i[e])&&void 0!==o?o:null==t||null===(s=t[E])||void 0===s?void 0:s[null==n?void 0:n[E]])&&void 0!==r?r:\"\");break;default:f.push(null!==(a=null==t||null===(l=t[d])||void 0===l?void 0:l[n])&&void 0!==a?a:\"\")}return f.join(\" \")},Ep=[\"className\",\"cols\",\"gap\",\"gapX\",\"gapY\",\"align\",\"justify\",\"gridFlow\",\"colsSubGrid\",\"rowsSubGrid\",\"autoRows\",\"autoCols\",\"children\"],Sp=[\"className\",\"children\",\"colSpan\",\"colStart\",\"alignSelf\",\"justifySelf\"];function _p(){return _p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_p.apply(null,arguments)}function kp(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var Cp=function(e){var t=e.className,n=e.cols,r=e.gap,o=e.gapX,s=e.gapY,a=e.align,l=e.justify,c=e.gridFlow,u=void 0===c?\"\":c,d=e.colsSubGrid,f=void 0!==d&&d,h=e.rowsSubGrid,p=void 0!==h&&h,m=e.autoRows,g=void 0!==m&&m,v=e.autoCols,y=void 0!==v&&v,b=e.children,x=kp(e,Ep),w=wp(n,np,1),E=wp(r,rp,\"sm\"),S=wp(o,op,\"\"),_=wp(s,ip,\"\"),k=wp(a,up,\"\"),C=wp(l,cp,\"\"),P=wp(u,lp,\"\");return i().createElement(\"div\",_p({className:te(\"grid\",{\"grid-cols-subgrid\":f,\"grid-rows-subgrid\":p,\"auto-cols-auto\":y,\"auto-rows-auto\":g},w,E,S,_,k,C,P,t)},x),b)};Object.assign(Cp,{Item:function(e){var t=e.className,n=e.children,r=e.colSpan,o=e.colStart,s=e.alignSelf,a=e.justifySelf,l=kp(e,Sp),c=wp(r,sp,0),u=wp(o,ap,0),d=wp(s,dp,\"\"),f=wp(a,fp,\"\");return i().createElement(\"div\",_p({className:te(c,u,d,f,t)},l),n)}});var Pp=Cp,Tp=[\"containerType\",\"gap\",\"gapX\",\"gapY\",\"direction\",\"justify\",\"align\",\"wrap\",\"cols\",\"className\",\"children\"],Op=[\"containerType\"],Rp=[\"grow\",\"shrink\",\"order\",\"alignSelf\",\"justifySelf\",\"className\",\"children\"];function Np(){return Np=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Np.apply(null,arguments)}function Ap(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var jp=(0,o.createContext)(),Mp=function(e){var t=e.containerType,n=void 0===t?\"flex\":t,r=e.gap,o=void 0===r?\"sm\":r,s=e.gapX,a=void 0===s?\"\":s,l=e.gapY,c=void 0===l?\"\":l,u=e.direction,d=void 0===u?\"\":u,f=e.justify,h=void 0===f?\"\":f,p=e.align,m=void 0===p?\"\":p,g=e.wrap,v=e.cols,y=void 0===v?\"\":v,b=e.className,x=e.children,w=Ap(e,Tp);if(\"grid\"===n){var E=e.containerType,S=Ap(e,Op);return i().createElement(jp.Provider,{value:{containerType:E}},i().createElement(Pp,S))}var _=wp(g,pp,\"\"),k=wp(o,rp,\"sm\"),C=wp(a,op,\"\"),P=wp(c,ip,\"\"),T=wp(d,hp,\"\"),O=wp(h,cp,\"\"),R=wp(m,up,\"\"),N=te(\"flex\",_,k,C,P,T,O,R,b);return i().createElement(jp.Provider,{value:{containerType:n,cols:y}},\"grid\"===n?i().createElement(Pp,e):i().createElement(\"div\",Np({className:N},w),x))};Mp.Item=function(e){var t=e.grow,n=e.shrink,r=e.order,s=e.alignSelf,a=e.justifySelf,l=e.className,c=e.children,u=Ap(e,Rp),d=(0,o.useContext)(jp),f=d.containerType,h=d.cols;if(\"grid\"===f){var p=Np({},(function(e){if(null==e)throw new TypeError(\"Cannot destructure \"+e)}(e),e));return i().createElement(Pp.Item,p)}var m=wp(s,dp,\"\"),g=wp(a,fp,\"\"),v=wp(t,vp,0),y=wp(n,yp,0),b=wp(r,gp,0),x=wp(h,mp,1);return i().createElement(\"div\",Np({className:te(\"box-border\",v,y,b,m,g,x,l)},u),c)},Mp.displayName=\"Container\",Mp.Item.displayName=\"Container.Item\";var Ip,Dp=Mp,Lp=function(e){var t,n,r,o,i,s,a=e.design,l=void 0===a?\"inline\":a,c=e.theme,u=void 0===c?\"light\":c,d=e.variant,f=void 0===d?\"neutral\":d,h=e.className,p=void 0===h?\"\":h,m=e.title,g=void 0===m?\"Title\":m,v=e.content,y=void 0===v?\"Description\":v,b=e.icon,x=void 0===b?null:b,w=e.onClose,E=void 0===w?function(){}:w,S=e.action,_=void 0===S?{label:\"Action\",onClick:function(){},type:\"link\"}:S,k=function(){E()},C=\"lg:w-[47.5rem] w-full\",P={neutral:\"border-alert-border-neutral bg-alert-background-neutral\",custom:\"border-alert-border-neutral bg-alert-background-neutral\",info:\"border-alert-border-info bg-alert-background-info\",success:\"border-alert-border-green bg-alert-background-green\",warning:\"border-alert-border-warning bg-alert-background-warning\",error:\"border-alert-border-danger bg-alert-background-danger\"},T=\"bg-background-inverse border-background-inverse\",O={light:\"text-icon-secondary\",dark:\"text-icon-inverse\"},R=function(){var e;null==_||null===(e=_.onClick)||void 0===e||e.call(_,(function(){return k()}))};return\"stack\"===l?React.createElement(\"div\",{className:te(\"flex items-center justify-start p-4 gap-2 relative border border-solid rounded-md shadow-lg\",\"dark\"===u?T:null===(o=P)||void 0===o?void 0:o[f],C,p)},React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"self-start flex items-center justify-center [&_svg]:size-5 shrink-0\"},ti({variant:f,icon:x,theme:u})),React.createElement(\"div\",{className:\"flex flex-col items-start justify-start gap-0.5\"},ri({title:g,theme:u}),oi({content:y,theme:u}),(null==_?void 0:_.label)&&\"function\"==typeof(null==_?void 0:_.onClick)&&React.createElement(\"div\",{className:\"mt-2.5\"},ni({actionLabel:null==_?void 0:_.label,actionType:null!==(i=null==_?void 0:_.type)&&void 0!==i?i:\"button\",onAction:R,theme:u}))),React.createElement(\"div\",{className:\"absolute right-4 top-4 [&_svg]:size-5\"},React.createElement(\"button\",{className:te(\"bg-transparent m-0 p-0 border-none focus:outline-none active:outline-none cursor-pointer\",null!==(s=O[u])&&void 0!==s?s:O.light),onClick:function(){return k()}},React.createElement(He,null))))):React.createElement(\"div\",{className:te(\"flex items-center justify-between p-3 gap-2 relative border border-solid rounded-md shadow-lg\",\"dark\"===u?T:null===(t=P)||void 0===t?void 0:t[f],C,p)},React.createElement(\"div\",{className:\"flex items-center justify-start gap-2\"},React.createElement(\"div\",{className:\"self-start flex items-center justify-center [&_svg]:size-5 shrink-0\"},ti({variant:f,icon:x,theme:u})),React.createElement(\"div\",{className:\"flex items-start justify-start gap-1 mr-10 [&>span:first-child]:shrink-0\"},ri({title:g,theme:u}),oi({content:y,theme:u}))),React.createElement(\"div\",{className:\"flex items-center justify-start gap-4 [&_svg]:size-5\"},(null==_?void 0:_.label)&&\"function\"==typeof(null==_?void 0:_.onClick)&&React.createElement(\"div\",{className:\"flex\"},ni({actionLabel:null==_?void 0:_.label,actionType:null!==(n=null==_?void 0:_.type)&&void 0!==n?n:\"button\",onAction:R,theme:u})),React.createElement(\"button\",{className:te(\"bg-transparent m-0 p-0 border-none focus:outline-none active:outline-none cursor-pointer\",null!==(r=O[u])&&void 0!==r?r:O.light),onClick:function(){return k()}},React.createElement(He,null))))},Fp=(Ip=function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)},Ip&&Ip.__esModule&&Object.prototype.hasOwnProperty.call(Ip,\"default\")?Ip.default:Ip);const zp=(0,o.createContext)(null);function Bp(){const e=(0,o.useContext)(zp);return null==e&&Fp(8),e}function Vp({defaultSelection:e}){const[t]=Bp();return(0,o.useEffect)((()=>{t.focus((()=>{const e=document.activeElement,n=t.getRootElement();null===n||null!==e&&n.contains(e)||n.focus({preventScroll:!0})}),{defaultSelection:e})}),[e,t]),null}const Wp={},Up={},$p={},Kp={},Hp={},qp={},Yp={},Gp={},Xp={},Jp={},Zp={},Qp={},em={},tm={},nm={},rm={},om={},im={},sm={},am={},lm={},cm={},um={},dm={},fm={},hm={},pm={},mm={},gm={},vm={},ym={},bm={},xm={},wm={},Em={},Sm={},_m={},km={},Cm={},Pm={},Tm=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement,Om=Tm&&\"documentMode\"in document?document.documentMode:null,Rm=Tm&&/Mac|iPod|iPhone|iPad/.test(navigator.platform),Nm=Tm&&/^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent),Am=!(!Tm||!(\"InputEvent\"in window)||Om)&&\"getTargetRanges\"in new window.InputEvent(\"input\"),jm=Tm&&/Version\\/[\\d.]+.*Safari/.test(navigator.userAgent),Mm=Tm&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,Im=Tm&&/Android/.test(navigator.userAgent),Dm=Tm&&/^(?=.*Chrome).*/i.test(navigator.userAgent),Lm=Tm&&Im&&Dm,Fm=Tm&&/AppleWebKit\\/[\\d.]+/.test(navigator.userAgent)&&!Dm,zm=1,Bm=3,Vm=0,Wm=2,Um=0,$m=1,Km=2,Hm=4,qm=8,Ym=3|Hm|qm|240,Gm=1,Xm=2,Jm=3,Zm=4,Qm=5,eg=6,tg=jm||Mm||Fm?\" \":\"​\",ng=\"\\n\\n\",rg=Nm?\" \":tg,og=\"֑-߿יִ-﷽ﹰ-ﻼ\",ig=\"A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿‎Ⰰ-﬜︀-﹯﻽-￿\",sg=new RegExp(\"^[^\"+ig+\"]*[\"+og+\"]\"),ag=new RegExp(\"^[^\"+og+\"]*[\"+ig+\"]\"),lg={bold:1,code:16,highlight:128,italic:2,strikethrough:Hm,subscript:32,superscript:64,underline:qm},cg={directionless:1,unmergeable:2},ug={center:Xm,end:eg,justify:Zm,left:Gm,right:Jm,start:Qm},dg={[Xm]:\"center\",[eg]:\"end\",[Zm]:\"justify\",[Gm]:\"left\",[Jm]:\"right\",[Qm]:\"start\"},fg={normal:0,segmented:2,token:1},hg={[Um]:\"normal\",[Km]:\"segmented\",[$m]:\"token\"};var pg,mg=(pg=function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)},pg&&pg.__esModule&&Object.prototype.hasOwnProperty.call(pg,\"default\")?pg.default:pg);function gg(...e){const t=[];for(const n of e)if(n&&\"string\"==typeof n)for(const[e]of n.matchAll(/\\S+/g))t.push(e);return t}const vg=100;let yg=!1,bg=0;function xg(e){bg=e.timeStamp}function wg(e,t,n){return t.__lexicalLineBreak===e||void 0!==e[`__lexicalKey_${n._key}`]}function Eg(e,t,n){const r=Rv(n._window);let o=null,i=null;null!==r&&r.anchorNode===e&&(o=r.anchorOffset,i=r.focusOffset);const s=e.nodeValue;null!==s&&av(t,s,o,i,!1)}function Sg(e,t,n){if(wb(e)){const t=e.anchor.getNode();if(t.is(n)&&e.format!==t.getFormat())return!1}return t.nodeType===Bm&&n.isAttached()}function _g(e,t,n){yg=!0;const r=performance.now()-bg>vg;try{cx(e,(()=>{const o=Mb()||function(e){return e.getEditorState().read((()=>{const e=Mb();return null!==e?e.clone():null}))}(e),i=new Map,s=e.getRootElement(),a=e._editorState,l=e._blockCursorElement;let c=!1,u=\"\";for(let n=0;n<t.length;n++){const d=t[n],f=d.type,h=d.target;let p=Yg(h,a);if(!(null===p&&h!==s||px(p)))if(\"characterData\"===f)r&&db(p)&&Sg(o,h,p)&&Eg(h,p,e);else if(\"childList\"===f){c=!0;const t=d.addedNodes;for(let n=0;n<t.length;n++){const r=t[n],o=qg(r),i=r.parentNode;if(null!=i&&r!==l&&null===o&&(\"BR\"!==r.nodeName||!wg(r,i,e))){if(Nm){const e=r.innerText||r.nodeValue;e&&(u+=e)}i.removeChild(r)}}const n=d.removedNodes,r=n.length;if(r>0){let t=0;for(let o=0;o<r;o++){const r=n[o];(\"BR\"===r.nodeName&&wg(r,h,e)||l===r)&&(h.appendChild(r),t++)}r!==t&&(h===s&&(p=Zg(a)),i.set(h,p))}}}if(i.size>0)for(const[t,n]of i)if(dx(n)){const r=n.getChildrenKeys();let o=t.firstChild;for(let n=0;n<r.length;n++){const i=r[n],s=e.getElementByKey(i);null!==s&&(null==o?(t.appendChild(s),o=s):o!==s&&t.replaceChild(s,o),o=o.nextSibling)}}else db(n)&&n.markDirty();const d=n.takeRecords();if(d.length>0){for(let t=0;t<d.length;t++){const n=d[t],r=n.addedNodes,o=n.target;for(let t=0;t<r.length;t++){const n=r[t],i=n.parentNode;null==i||\"BR\"!==n.nodeName||wg(n,o,e)||i.removeChild(n)}}n.takeRecords()}null!==o&&(c&&(o.dirty=!0,Qg(o)),Nm&&bv(e)&&o.insertRawText(u))}))}finally{yg=!1}}function kg(e){const t=e._observer;null!==t&&_g(e,t.takeRecords(),t)}function Cg(e){!function(e){0===bg&&kv(e).addEventListener(\"textInput\",xg,!0)}(e),e._observer=new MutationObserver(((t,n)=>{_g(e,t,n)}))}function Pg(e,t){const n=e.__mode,r=e.__format,o=e.__style,i=t.__mode,s=t.__format,a=t.__style;return!(null!==n&&n!==i||null!==r&&r!==s||null!==o&&o!==a)}function Tg(e,t){const n=e.mergeWithSibling(t),r=Zb()._normalizedNodes;return r.add(e.__key),r.add(t.__key),n}function Og(e){let t,n,r=e;if(\"\"!==r.__text||!r.isSimpleText()||r.isUnmergeable()){for(;null!==(t=r.getPreviousSibling())&&db(t)&&t.isSimpleText()&&!t.isUnmergeable();){if(\"\"!==t.__text){if(Pg(t,r)){r=Tg(t,r);break}break}t.remove()}for(;null!==(n=r.getNextSibling())&&db(n)&&n.isSimpleText()&&!n.isUnmergeable();){if(\"\"!==n.__text){if(Pg(r,n)){r=Tg(r,n);break}break}n.remove()}}else r.remove()}function Rg(e){for(;\"element\"===e.type;){const t=e.getNode(),n=e.offset;let r,o;if(n===t.getChildrenSize()?(r=t.getChildAtIndex(n-1),o=!0):(r=t.getChildAtIndex(n),o=!1),db(r)){e.set(r.__key,o?r.getTextContentSize():0,\"text\");break}if(!dx(r))break;e.set(r.__key,o?r.getChildrenSize():0,\"element\")}}let Ng=1;const Ag=\"function\"==typeof queueMicrotask?queueMicrotask:e=>{Promise.resolve().then(e)};function jg(e){const t=document.activeElement;if(null===t)return!1;const n=t.nodeName;return px(Yg(e))&&(\"INPUT\"===n||\"TEXTAREA\"===n||\"true\"===t.contentEditable&&null==Lg(t))}function Mg(e,t,n){const r=e.getRootElement();try{return null!==r&&r.contains(t)&&r.contains(n)&&null!==t&&!jg(t)&&Dg(t)===e}catch(e){return!1}}function Ig(e){return e instanceof Tx}function Dg(e){let t=e;for(;null!=t;){const e=Lg(t);if(Ig(e))return e;t=Sv(t)}return null}function Lg(e){return e?e.__lexicalEditor:null}function Fg(e){return e.isToken()||e.isSegmented()}function zg(e){return e.nodeType===Bm}function Bg(e){let t=e;for(;null!=t;){if(zg(t))return t;t=t.firstChild}return null}function Vg(e,t,n){const r=lg[t];if(null!==n&&(e&r)==(n&r))return e;let o=e^r;return\"subscript\"===t?o&=~lg.superscript:\"superscript\"===t&&(o&=~lg.subscript),o}function Wg(e){const t=e.getParent();if(null!==t){const n=e.getWritable(),r=t.getWritable(),o=e.getPreviousSibling(),i=e.getNextSibling();if(null===o)if(null!==i){const e=i.getWritable();r.__first=i.__key,e.__prev=null}else r.__first=null;else{const e=o.getWritable();if(null!==i){const t=i.getWritable();t.__prev=e.__key,e.__next=t.__key}else e.__next=null;n.__prev=null}if(null===i)if(null!==o){const e=o.getWritable();r.__last=o.__key,e.__next=null}else r.__last=null;else{const e=i.getWritable();if(null!==o){const t=o.getWritable();t.__next=e.__key,e.__prev=t.__key}else e.__prev=null;n.__next=null}r.__size--,n.__parent=null}}function Ug(e){Xb();const t=e.getLatest(),n=t.__parent,r=Jb(),o=Zb(),i=r._nodeMap,s=o._dirtyElements;null!==n&&function(e,t,n){let r=e;for(;null!==r;){if(n.has(r))return;const e=t.get(r);if(void 0===e)break;n.set(r,!1),r=e.__parent}}(n,i,s);const a=t.__key;o._dirtyType=1,dx(e)?s.set(a,!0):o._dirtyLeaves.add(a)}function $g(e){Gb();const t=Zb(),n=t._compositionKey;if(e!==n){if(t._compositionKey=e,null!==n){const e=Hg(n);null!==e&&e.getWritable()}if(null!==e){const t=Hg(e);null!==t&&t.getWritable()}}}function Kg(){return Yb()?null:Zb()._compositionKey}function Hg(e,t){const n=(t||Jb())._nodeMap.get(e);return void 0===n?null:n}function qg(e,t){const n=e[`__lexicalKey_${Zb()._key}`];return void 0!==n?Hg(n,t):null}function Yg(e,t){let n=e;for(;null!=n;){const e=qg(n,t);if(null!==e)return e;n=Sv(n)}return null}function Gg(e){const t=e._decorators,n=Object.assign({},t);return e._pendingDecorators=n,n}function Xg(e){return e.read((()=>Jg().getTextContent()))}function Jg(){return Zg(Jb())}function Zg(e){return e._nodeMap.get(\"root\")}function Qg(e){Gb();const t=Jb();null!==e&&(e.dirty=!0,e.setCachedNodes(null)),t._selection=e}function ev(e){const t=Zb(),n=function(e,t){let n=e;for(;null!=n;){const e=n[`__lexicalKey_${t._key}`];if(void 0!==e)return e;n=Sv(n)}return null}(e,t);return null===n?e===t.getRootElement()?Hg(\"root\"):null:Hg(n)}function tv(e,t){return t?e.getTextContentSize():0}function nv(e){return/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g.test(e)}function rv(e){const t=[];let n=e;for(;null!==n;)t.push(n),n=n._parentEditor;return t}function ov(){return Math.random().toString(36).replace(/[^a-z]+/g,\"\").substr(0,5)}function iv(e){return e.nodeType===Bm?e.nodeValue:null}function sv(e,t,n){const r=Rv(t._window);if(null===r)return;const o=r.anchorNode;let{anchorOffset:i,focusOffset:s}=r;if(null!==o){let t=iv(o);const r=Yg(o);if(null!==t&&db(r)){if(t===tg&&n){const e=n.length;t=n,i=e,s=e}null!==t&&av(r,t,i,s,e)}}}function av(e,t,n,r,o){let i=e;if(i.isAttached()&&(o||!i.isDirty())){const s=i.isComposing();let a=t;(s||o)&&t[t.length-1]===tg&&(a=t.slice(0,-1));const l=i.getTextContent();if(o||a!==l){if(\"\"===a){if($g(null),jm||Mm||Fm)i.remove();else{const e=Zb();setTimeout((()=>{e.update((()=>{i.isAttached()&&i.remove()}))}),20)}return}const t=i.getParent(),o=Ib(),l=i.getTextContentSize(),c=Kg(),u=i.getKey();if(i.isToken()||null!==c&&u===c&&!s||wb(o)&&(null!==t&&!t.canInsertTextBefore()&&0===o.anchor.offset||o.anchor.key===e.__key&&0===o.anchor.offset&&!i.canInsertTextBefore()&&!s||o.focus.key===e.__key&&o.focus.offset===l&&!i.canInsertTextAfter()&&!s))return void i.markDirty();const d=Mb();if(!wb(d)||null===n||null===r)return void i.setTextContent(a);if(d.setTextNodeRange(i,n,i,r),i.isSegmented()){const e=ub(i.getTextContent());i.replace(e),i=e}i.setTextContent(a)}}}function lv(e){return\"ArrowLeft\"===e}function cv(e){return\"ArrowRight\"===e}function uv(e,t){return Rm?e:t}function dv(e){return\"Enter\"===e}function fv(e){return\"Backspace\"===e}function hv(e){return\"Delete\"===e}function pv(e,t,n){return\"a\"===e.toLowerCase()&&uv(t,n)}function mv(e,t){void 0===e.__lexicalClassNameCache&&(e.__lexicalClassNameCache={});const n=e.__lexicalClassNameCache,r=n[t];if(void 0!==r)return r;const o=e[t];if(\"string\"==typeof o){const e=gg(o);return n[t]=e,e}return o}function gv(e,t,n,r,o){if(0===n.size)return;const i=r.__type,s=r.__key,a=t.get(i);void 0===a&&mg(33,i);const l=a.klass;let c=e.get(l);void 0===c&&(c=new Map,e.set(l,c));const u=c.get(s),d=\"destroyed\"===u&&\"created\"===o;(void 0===u||d)&&c.set(s,d?\"updated\":o)}function vv(e,t,n){const r=e.getParent();let o=n,i=e;return null!==r&&(t&&0===n?(o=i.getIndexWithinParent(),i=r):t||n!==i.getChildrenSize()||(o=i.getIndexWithinParent()+1,i=r)),i.getChildAtIndex(t?o-1:o)}function yv(e,t){const n=e.offset;if(\"element\"===e.type)return vv(e.getNode(),t,n);{const r=e.getNode();if(t&&0===n||!t&&n===r.getTextContentSize()){const e=t?r.getPreviousSibling():r.getNextSibling();return null===e?vv(r.getParentOrThrow(),t,r.getIndexWithinParent()+(t?0:1)):e}}return null}function bv(e){const t=kv(e).event,n=t&&t.inputType;return\"insertFromPaste\"===n||\"insertFromPasteAsQuotation\"===n}function xv(e,t,n){return sx(e,t,n)}function wv(e){return!gx(e)&&!e.isLastChild()&&!e.isInline()}function Ev(e,t){const n=e._keyToDOMMap.get(t);return void 0===n&&mg(75,t),n}function Sv(e){const t=e.assignedSlot||e.parentElement;return null!==t&&11===t.nodeType?t.host:t}function _v(e,t){let n=e.getParent();for(;null!==n;){if(n.is(t))return!0;n=n.getParent()}return!1}function kv(e){const t=e._window;return null===t&&mg(78),t}function Cv(e){return gx(e)||dx(e)&&e.isShadowRoot()}function Pv(e){const t=Zb(),n=e.constructor.getType(),r=t._nodes.get(n);void 0===r&&mg(97);const o=r.replace;if(null!==o){const t=o(e);return t instanceof e.constructor||mg(98),t}return e}function Tv(e,t){!gx(e.getParent())||dx(t)||px(t)||mg(99)}function Ov(e){return(px(e)||dx(e)&&!e.canBeEmpty())&&!e.isInline()}function _n(e,t,n){n.style.removeProperty(\"caret-color\"),t._blockCursorElement=null;const r=e.parentElement;null!==r&&r.removeChild(e)}function Rv(e){return Tm?(e||window).getSelection():null}function Nv(e){return 1===e.nodeType}function Av(e){const t=new RegExp(/^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var|#text)$/,\"i\");return null!==e.nodeName.match(t)}function jv(e){const t=new RegExp(/^(address|article|aside|blockquote|canvas|dd|div|dl|dt|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|header|hr|li|main|nav|noscript|ol|p|pre|section|table|td|tfoot|ul|video)$/,\"i\");return null!==e.nodeName.match(t)}function Mv(e){if(gx(e)||px(e)&&!e.isInline())return!0;if(!dx(e)||Cv(e))return!1;const t=e.getFirstChild(),n=null===t||qy(t)||db(t)||t.isInline();return!e.isInline()&&!1!==e.canBeEmpty()&&n}function Iv(e,t){let n=e;for(;null!==n&&null!==n.getParent()&&!t(n);)n=n.getParentOrThrow();return t(n)?n:null}const Dv=new WeakMap,Lv=new Map;function Fv(e){const t=e.constructor.clone(e);return t.afterCloneFrom(e),t}function zv(e,t,n,r,o,i){let s=e.getFirstChild();for(;null!==s;){const e=s.__key;s.__parent===t&&(dx(s)&&zv(s,e,n,r,o,i),n.has(e)||i.delete(e),o.push(e)),s=s.getNextSibling()}}let Bv,Vv,Wv,Uv,$v,Kv,Hv,qv,Yv,Gv,Xv=\"\",Jv=\"\",Zv=null,Qv=\"\",ey=\"\",ty=!1,ny=!1,ry=null;function oy(e,t){const n=Hv.get(e);if(null!==t){const n=by(e);n.parentNode===t&&t.removeChild(n)}if(qv.has(e)||Vv._keyToDOMMap.delete(e),dx(n)){const e=my(n,Hv);iy(e,0,e.length-1,null)}void 0!==n&&gv(Gv,Wv,Uv,n,\"destroyed\")}function iy(e,t,n,r){let o=t;for(;o<=n;++o){const t=e[o];void 0!==t&&oy(t,r)}}function sy(e,t){e.setProperty(\"text-align\",t)}const ay=\"40px\";function ly(e,t){const n=Bv.theme.indent;if(\"string\"==typeof n){const r=e.classList.contains(n);t>0&&!r?e.classList.add(n):t<1&&r&&e.classList.remove(n)}const r=getComputedStyle(e).getPropertyValue(\"--lexical-indent-base-value\")||ay;e.style.setProperty(\"padding-inline-start\",0===t?\"\":`calc(${t} * ${r})`)}function cy(e,t){const n=e.style;0===t?sy(n,\"\"):t===Gm?sy(n,\"left\"):t===Xm?sy(n,\"center\"):t===Jm?sy(n,\"right\"):t===Zm?sy(n,\"justify\"):t===Qm?sy(n,\"start\"):t===eg&&sy(n,\"end\")}function uy(e,t,n){const r=qv.get(e);void 0===r&&mg(60);const o=r.createDOM(Bv,Vv);if(function(e,t,n){const r=n._keyToDOMMap;t[\"__lexicalKey_\"+n._key]=e,r.set(e,t)}(e,o,Vv),db(r)?o.setAttribute(\"data-lexical-text\",\"true\"):px(r)&&o.setAttribute(\"data-lexical-decorator\",\"true\"),dx(r)){const e=r.__indent,t=r.__size;if(0!==e&&ly(o,e),0!==t){const e=t-1;!function(e,t,n,r){const o=Jv;Jv=\"\",dy(e,n,0,t,r,null),py(n,r),Jv=o}(my(r,qv),e,r,o)}const n=r.__format;0!==n&&cy(o,n),r.isInline()||hy(null,r,o),wv(r)&&(Xv+=ng,ey+=ng)}else{const t=r.getTextContent();if(px(r)){const t=r.decorate(Vv,Bv);null!==t&&vy(e,t),o.contentEditable=\"false\"}else db(r)&&(r.isDirectionless()||(Jv+=t));Xv+=t,ey+=t}if(null!==t)if(null!=n)t.insertBefore(o,n);else{const e=t.__lexicalLineBreak;null!=e?t.insertBefore(o,e):t.appendChild(o)}return gv(Gv,Wv,Uv,r,\"created\"),o}function dy(e,t,n,r,o,i){const s=Xv;Xv=\"\";let a=n;for(;a<=r;++a){uy(e[a],o,i);const t=qv.get(e[a]);null!==t&&db(t)&&(null===Zv&&(Zv=t.getFormat()),\"\"===Qv&&(Qv=t.getStyle()))}wv(t)&&(Xv+=ng),o.__lexicalTextContent=Xv,Xv=s+Xv}function fy(e,t){const n=t.get(e);return qy(n)||px(n)&&n.isInline()}function hy(e,t,n){const r=null!==e&&(0===e.__size||fy(e.__last,Hv)),o=0===t.__size||fy(t.__last,qv);if(r){if(!o){const e=n.__lexicalLineBreak;if(null!=e)try{n.removeChild(e)}catch(t){if(\"object\"==typeof t&&null!=t){const r=`${t.toString()} Parent: ${n.tagName}, child: ${e.tagName}.`;throw new Error(r)}throw t}n.__lexicalLineBreak=null}}else if(o){const e=document.createElement(\"br\");n.__lexicalLineBreak=e,n.appendChild(e)}}function py(e,t){const n=t.__lexicalDirTextContent,r=t.__lexicalDir;if(n!==Jv||r!==ry){const n=\"\"===Jv,i=n?ry:(o=Jv,sg.test(o)?\"rtl\":ag.test(o)?\"ltr\":null);if(i!==r){const o=t.classList,s=Bv.theme;let a=null!==r?s[r]:void 0,l=null!==i?s[i]:void 0;if(void 0!==a){if(\"string\"==typeof a){const e=gg(a);a=s[r]=e}o.remove(...a)}if(null===i||n&&\"ltr\"===i)t.removeAttribute(\"dir\");else{if(void 0!==l){if(\"string\"==typeof l){const e=gg(l);l=s[i]=e}void 0!==l&&o.add(...l)}t.dir=i}ny||(e.getWritable().__dir=i)}ry=i,t.__lexicalDirTextContent=Jv,t.__lexicalDir=i}var o}function my(e,t){const n=[];let r=e.__first;for(;null!==r;){const e=t.get(r);void 0===e&&mg(101),n.push(r),r=e.__next}return n}function gy(e,t){const n=Hv.get(e);let r=qv.get(e);void 0!==n&&void 0!==r||mg(61);const o=ty||Kv.has(e)||$v.has(e),i=Ev(Vv,e);if(n===r&&!o){if(dx(n)){const e=i.__lexicalTextContent;void 0!==e&&(Xv+=e,ey+=e);const t=i.__lexicalDirTextContent;void 0!==t&&(Jv+=t)}else{const e=n.getTextContent();db(n)&&!n.isDirectionless()&&(Jv+=e),ey+=e,Xv+=e}return i}if(n!==r&&o&&gv(Gv,Wv,Uv,r,\"updated\"),r.updateDOM(n,i,Bv)){const n=uy(e,null,null);return null===t&&mg(62),t.replaceChild(n,i),oy(e,null),n}if(dx(n)&&dx(r)){const e=r.__indent;e!==n.__indent&&ly(i,e);const t=r.__format;t!==n.__format&&cy(i,t),o&&(function(e,t,n){const r=Jv;var o;Jv=\"\",Zv=null,Qv=\"\",function(e,t,n){const r=Xv,o=e.__size,i=t.__size;if(Xv=\"\",1===o&&1===i){const r=e.__first,o=t.__first;if(r===o)gy(r,n);else{const e=by(r),t=uy(o,null,null);try{n.replaceChild(t,e)}catch(i){if(\"object\"==typeof i&&null!=i){const s=`${i.toString()} Parent: ${n.tagName}, new child: {tag: ${t.tagName} key: ${o}}, old child: {tag: ${e.tagName}, key: ${r}}.`;throw new Error(s)}throw i}oy(r,null)}const s=qv.get(o);db(s)&&(null===Zv&&(Zv=s.getFormat()),\"\"===Qv&&(Qv=s.getStyle()))}else{const r=my(e,Hv),s=my(t,qv);if(0===o)0!==i&&dy(s,t,0,i-1,n,null);else if(0===i){if(0!==o){const e=null==n.__lexicalLineBreak;iy(r,0,o-1,e?null:n),e&&(n.textContent=\"\")}}else!function(e,t,n,r,o,i){const s=r-1,a=o-1;let l,c,u=i.firstChild,d=0,f=0;for(;d<=s&&f<=a;){const e=t[d],r=n[f];if(e===r)u=yy(gy(r,i)),d++,f++;else{void 0===l&&(l=new Set(t)),void 0===c&&(c=new Set(n));const o=c.has(e),s=l.has(r);if(o)if(s){const e=Ev(Vv,r);e===u?u=yy(gy(r,i)):(null!=u?i.insertBefore(e,u):i.appendChild(e),gy(r,i)),d++,f++}else uy(r,i,u),f++;else u=yy(by(e)),oy(e,i),d++}const o=qv.get(r);null!==o&&db(o)&&(null===Zv&&(Zv=o.getFormat()),\"\"===Qv&&(Qv=o.getStyle()))}const h=d>s,p=f>a;if(h&&!p){const t=n[a+1];dy(n,e,f,a,i,void 0===t?null:Vv.getElementByKey(t))}else p&&!h&&iy(t,d,s,i)}(t,r,s,o,i,n)}wv(t)&&(Xv+=ng),n.__lexicalTextContent=Xv,Xv=r+Xv}(e,t,n),py(t,n),kx(o=t)&&null!=Zv&&Zv!==o.__textFormat&&!ny&&(o.setTextFormat(Zv),o.setTextStyle(Qv)),function(e){kx(e)&&\"\"!==Qv&&Qv!==e.__textStyle&&!ny&&e.setTextStyle(Qv)}(t),Jv=r}(n,r,i),gx(r)||r.isInline()||hy(n,r,i)),wv(r)&&(Xv+=ng,ey+=ng)}else{const t=r.getTextContent();if(px(r)){const t=r.decorate(Vv,Bv);null!==t&&vy(e,t)}else db(r)&&!r.isDirectionless()&&(Jv+=t);Xv+=t,ey+=t}if(!ny&&gx(r)&&r.__cachedText!==ey){const e=r.getWritable();e.__cachedText=ey,r=e}return i}function vy(e,t){let n=Vv._pendingDecorators;const r=Vv._decorators;if(null===n){if(r[e]===t)return;n=Gg(Vv)}n[e]=t}function yy(e){let t=e.nextSibling;return null!==t&&t===Vv._blockCursorElement&&(t=t.nextSibling),t}function by(e){const t=Yv.get(e);return void 0===t&&mg(75,e),t}const xy=Object.freeze({}),wy=[[\"keydown\",function(e,t){if(Ey=e.timeStamp,Sy=e.key,t.isComposing())return;const{key:n,shiftKey:r,ctrlKey:o,metaKey:i,altKey:s}=e;xv(t,tm,e)||null!=n&&(function(e,t,n,r){return cv(e)&&!t&&!r&&!n}(n,o,s,i)?xv(t,nm,e):function(e,t,n,r,o){return cv(e)&&!r&&!n&&(t||o)}(n,o,r,s,i)?xv(t,rm,e):function(e,t,n,r){return lv(e)&&!t&&!r&&!n}(n,o,s,i)?xv(t,om,e):function(e,t,n,r,o){return lv(e)&&!r&&!n&&(t||o)}(n,o,r,s,i)?xv(t,im,e):function(e,t,n){return function(e){return\"ArrowUp\"===e}(e)&&!t&&!n}(n,o,i)?xv(t,sm,e):function(e,t,n){return function(e){return\"ArrowDown\"===e}(e)&&!t&&!n}(n,o,i)?xv(t,am,e):function(e,t){return dv(e)&&t}(n,r)?(Oy=!0,xv(t,lm,e)):function(e){return\" \"===e}(n)?xv(t,cm,e):function(e,t){return Rm&&t&&\"o\"===e.toLowerCase()}(n,o)?(e.preventDefault(),Oy=!0,xv(t,Kp,!0)):function(e,t){return dv(e)&&!t}(n,r)?(Oy=!1,xv(t,lm,e)):function(e,t,n,r){return Rm?!t&&!n&&(fv(e)||\"h\"===e.toLowerCase()&&r):!(r||t||n)&&fv(e)}(n,s,i,o)?fv(n)?xv(t,um,e):(e.preventDefault(),xv(t,$p,!0)):function(e){return\"Escape\"===e}(n)?xv(t,dm,e):function(e,t,n,r,o){return Rm?!(n||r||o)&&(hv(e)||\"d\"===e.toLowerCase()&&t):!(t||r||o)&&hv(e)}(n,o,r,s,i)?hv(n)?xv(t,fm,e):(e.preventDefault(),xv(t,$p,!1)):function(e,t,n){return fv(e)&&(Rm?t:n)}(n,s,o)?(e.preventDefault(),xv(t,Xp,!0)):function(e,t,n){return hv(e)&&(Rm?t:n)}(n,s,o)?(e.preventDefault(),xv(t,Xp,!1)):function(e,t){return Rm&&t&&fv(e)}(n,i)?(e.preventDefault(),xv(t,Jp,!0)):function(e,t){return Rm&&t&&hv(e)}(n,i)?(e.preventDefault(),xv(t,Jp,!1)):function(e,t,n,r){return\"b\"===e.toLowerCase()&&!t&&uv(n,r)}(n,s,i,o)?(e.preventDefault(),xv(t,Zp,\"bold\")):function(e,t,n,r){return\"u\"===e.toLowerCase()&&!t&&uv(n,r)}(n,s,i,o)?(e.preventDefault(),xv(t,Zp,\"underline\")):function(e,t,n,r){return\"i\"===e.toLowerCase()&&!t&&uv(n,r)}(n,s,i,o)?(e.preventDefault(),xv(t,Zp,\"italic\")):function(e,t,n,r){return\"Tab\"===e&&!t&&!n&&!r}(n,s,o,i)?xv(t,hm,e):function(e,t,n,r){return\"z\"===e.toLowerCase()&&!t&&uv(n,r)}(n,r,i,o)?(e.preventDefault(),xv(t,Qp,void 0)):function(e,t,n,r){return Rm?\"z\"===e.toLowerCase()&&n&&t:\"y\"===e.toLowerCase()&&r||\"z\"===e.toLowerCase()&&r&&t}(n,r,i,o)?(e.preventDefault(),xv(t,em,void 0)):Sb(t._editorState._selection)?function(e,t,n,r){return!t&&\"c\"===e.toLowerCase()&&(Rm?n:r)}(n,r,i,o)?(e.preventDefault(),xv(t,ym,e)):function(e,t,n,r){return!t&&\"x\"===e.toLowerCase()&&(Rm?n:r)}(n,r,i,o)?(e.preventDefault(),xv(t,bm,e)):pv(n,i,o)&&(e.preventDefault(),xv(t,xm,e)):!Nm&&pv(n,i,o)&&(e.preventDefault(),xv(t,xm,e)),function(e,t,n,r){return e||t||n||r}(o,r,s,i)&&xv(t,Pm,e))}],[\"pointerdown\",function(e,t){const n=e.target,r=e.pointerType;n instanceof Node&&\"touch\"!==r&&cx(t,(()=>{px(Yg(n))||(Ty=!0)}))}],[\"compositionstart\",function(e,t){cx(t,(()=>{const n=Mb();if(wb(n)&&!t.isComposing()){const r=n.anchor,o=n.anchor.getNode();$g(r.key),(e.timeStamp<Ey+30||\"element\"===r.type||!n.isCollapsed()||o.getFormat()!==n.format||db(o)&&o.getStyle()!==n.style)&&xv(t,qp,rg)}}))}],[\"compositionend\",function(e,t){Nm?Ry=!0:cx(t,(()=>{Dy(t,e.data)}))}],[\"input\",function(e,t){e.stopPropagation(),cx(t,(()=>{const n=Mb(),r=e.data,o=Iy(e);if(null!=r&&wb(n)&&Ay(n,o,r,e.timeStamp,!1)){Ry&&(Dy(t,r),Ry=!1);const o=n.anchor.getNode(),i=Rv(t._window);if(null===i)return;const s=n.isBackward(),a=s?n.anchor.offset:n.focus.offset,l=s?n.focus.offset:n.anchor.offset;Am&&!n.isCollapsed()&&db(o)&&null!==i.anchorNode&&o.getTextContent().slice(0,a)+r+o.getTextContent().slice(a+l)===iv(i.anchorNode)||xv(t,qp,r);const c=r.length;Nm&&c>1&&\"insertCompositionText\"===e.inputType&&!t.isComposing()&&(n.anchor.offset-=c),jm||Mm||Fm||!t.isComposing()||(Ey=0,$g(null))}else sv(!1,t,null!==r?r:void 0),Ry&&(Dy(t,r||void 0),Ry=!1);Gb(),kg(Zb())})),ky=null}],[\"click\",function(e,t){cx(t,(()=>{const n=Mb(),r=Rv(t._window),o=Ib();if(r)if(wb(n)){const t=n.anchor,i=t.getNode();\"element\"===t.type&&0===t.offset&&n.isCollapsed()&&!gx(i)&&1===Jg().getChildrenSize()&&i.getTopLevelElementOrThrow().isEmpty()&&null!==o&&n.is(o)?(r.removeAllRanges(),n.dirty=!0):3!==e.detail||n.isCollapsed()||i!==n.focus.getNode()&&(dx(i)?i.select(0):i.getParentOrThrow().select(0))}else if(\"touch\"===e.pointerType){const n=r.anchorNode;if(null!==n){const i=n.nodeType;i!==zm&&i!==Bm||Qg(jb(o,r,t,e))}}xv(t,Up,e)}))}],[\"cut\",xy],[\"copy\",xy],[\"dragstart\",xy],[\"dragover\",xy],[\"dragend\",xy],[\"paste\",xy],[\"focus\",xy],[\"blur\",xy],[\"drop\",xy]];Am&&wy.push([\"beforeinput\",(e,t)=>function(e,t){const n=e.inputType,r=Iy(e);\"deleteCompositionText\"===n||Nm&&bv(t)||\"insertCompositionText\"!==n&&cx(t,(()=>{const o=Mb();if(\"deleteContentBackward\"===n){if(null===o){const e=Ib();if(!wb(e))return;Qg(e.clone())}if(wb(o)){const n=o.anchor.key===o.focus.key;if(i=e.timeStamp,\"MediaLast\"===Sy&&i<Ey+30&&t.isComposing()&&n){if($g(null),Ey=0,setTimeout((()=>{cx(t,(()=>{$g(null)}))}),30),wb(o)){const e=o.anchor.getNode();e.markDirty(),o.format=e.getFormat(),db(e)||mg(142),o.style=e.getStyle()}}else{$g(null),e.preventDefault();const r=o.anchor.getNode().getTextContent(),i=0===o.anchor.offset&&o.focus.offset===r.length;Lm&&n&&!i||xv(t,$p,!0)}return}}var i;if(!wb(o))return;const s=e.data;null!==ky&&sv(!1,t,ky),o.dirty&&null===ky||!o.isCollapsed()||gx(o.anchor.getNode())||null===r||o.applyDOMRange(r),ky=null;const a=o.anchor,l=o.focus,c=a.getNode(),u=l.getNode();if(\"insertText\"!==n&&\"insertTranspose\"!==n)switch(e.preventDefault(),n){case\"insertFromYank\":case\"insertFromDrop\":case\"insertReplacementText\":xv(t,qp,e);break;case\"insertFromComposition\":$g(null),xv(t,qp,e);break;case\"insertLineBreak\":$g(null),xv(t,Kp,!1);break;case\"insertParagraph\":$g(null),Oy&&!Mm?(Oy=!1,xv(t,Kp,!1)):xv(t,Hp,void 0);break;case\"insertFromPaste\":case\"insertFromPasteAsQuotation\":xv(t,Yp,e);break;case\"deleteByComposition\":(function(e,t){return e!==t||dx(e)||dx(t)||!e.isToken()||!t.isToken()})(c,u)&&xv(t,Gp,e);break;case\"deleteByDrag\":case\"deleteByCut\":xv(t,Gp,e);break;case\"deleteContent\":xv(t,$p,!1);break;case\"deleteWordBackward\":xv(t,Xp,!0);break;case\"deleteWordForward\":xv(t,Xp,!1);break;case\"deleteHardLineBackward\":case\"deleteSoftLineBackward\":xv(t,Jp,!0);break;case\"deleteContentForward\":case\"deleteHardLineForward\":case\"deleteSoftLineForward\":xv(t,Jp,!1);break;case\"formatStrikeThrough\":xv(t,Zp,\"strikethrough\");break;case\"formatBold\":xv(t,Zp,\"bold\");break;case\"formatItalic\":xv(t,Zp,\"italic\");break;case\"formatUnderline\":xv(t,Zp,\"underline\");break;case\"historyUndo\":xv(t,Qp,void 0);break;case\"historyRedo\":xv(t,em,void 0)}else{if(\"\\n\"===s)e.preventDefault(),xv(t,Kp,!1);else if(s===ng)e.preventDefault(),xv(t,Hp,void 0);else if(null==s&&e.dataTransfer){const t=e.dataTransfer.getData(\"text/plain\");e.preventDefault(),o.insertRawText(t)}else null!=s&&Ay(o,r,s,e.timeStamp,!0)?(e.preventDefault(),xv(t,qp,s)):ky=s;_y=e.timeStamp}}))}(e,t)]);let Ey=0,Sy=null,_y=0,ky=null;const Cy=new WeakMap;let Py=!1,Ty=!1,Oy=!1,Ry=!1,Ny=[0,\"\",0,\"root\",0];function Ay(e,t,n,r,o){const i=e.anchor,s=e.focus,a=i.getNode(),l=Zb(),c=Rv(l._window),u=null!==c?c.anchorNode:null,d=i.key,f=l.getElementByKey(d),h=n.length;return d!==s.key||!db(a)||(!o&&(!Am||_y<r+50)||a.isDirty()&&h<2||nv(n))&&i.offset!==s.offset&&!a.isComposing()||Fg(a)||a.isDirty()&&h>1||(o||!Am)&&null!==f&&!a.isComposing()&&u!==Bg(f)||null!==c&&null!==t&&(!t.collapsed||t.startContainer!==c.anchorNode||t.startOffset!==c.anchorOffset)||a.getFormat()!==e.format||a.getStyle()!==e.style||function(e,t){if(t.isSegmented())return!0;if(!e.isCollapsed())return!1;const n=e.anchor.offset,r=t.getParentOrThrow(),o=t.isToken();return 0===n?!t.canInsertTextBefore()||!r.canInsertTextBefore()&&!t.isComposing()||o||function(e){const t=e.getPreviousSibling();return(db(t)||dx(t)&&t.isInline())&&!t.canInsertTextAfter()}(t):n===t.getTextContentSize()&&(!t.canInsertTextAfter()||!r.canInsertTextAfter()&&!t.isComposing()||o)}(e,a)}function jy(e,t){return null!==e&&null!==e.nodeValue&&e.nodeType===Bm&&0!==t&&t!==e.nodeValue.length}function My(e,t,n){const{anchorNode:r,anchorOffset:o,focusNode:i,focusOffset:s}=e;Py&&(Py=!1,jy(r,o)&&jy(i,s))||cx(t,(()=>{if(!n)return void Qg(null);if(!Mg(t,r,i))return;const a=Mb();if(wb(a)){const n=a.anchor,r=n.getNode();if(a.isCollapsed()){\"Range\"===e.type&&e.anchorNode===e.focusNode&&(a.dirty=!0);const o=kv(t).event,i=o?o.timeStamp:performance.now(),[s,l,c,u,d]=Ny,f=Jg(),h=!1===t.isComposing()&&\"\"===f.getTextContent();if(i<d+200&&n.offset===c&&n.key===u)a.format=s,a.style=l;else if(\"text\"===n.type)db(r)||mg(141),a.format=r.getFormat(),a.style=r.getStyle();else if(\"element\"===n.type&&!h){const e=n.getNode();a.style=\"\",e instanceof wx&&0===e.getChildrenSize()?(a.format=e.getTextFormat(),a.style=e.getTextStyle()):a.format=0}}else{const e=n.key,t=a.focus.key,r=a.getNodes(),i=r.length,l=a.isBackward(),c=l?s:o,u=l?o:s,d=l?t:e,f=l?e:t;let h=Ym,p=!1;for(let e=0;e<i;e++){const t=r[e],n=t.getTextContentSize();if(db(t)&&0!==n&&!(0===e&&t.__key===d&&c===n||e===i-1&&t.__key===f&&0===u)&&(p=!0,h&=t.getFormat(),0===h))break}a.format=p?h:0}}xv(t,Wp,void 0)}))}function Iy(e){if(!e.getTargetRanges)return null;const t=e.getTargetRanges();return 0===t.length?null:t[0]}function Dy(e,t){const n=e._compositionKey;if($g(null),null!==n&&null!=t){if(\"\"===t){const t=Hg(n),r=Bg(e.getElementByKey(n));return void(null!==r&&null!==r.nodeValue&&db(t)&&av(t,r.nodeValue,null,null,!0))}if(\"\\n\"===t[t.length-1]){const t=Mb();if(wb(t)){const n=t.focus;return t.anchor.set(n.key,n.offset,n.type),void xv(e,lm,null)}}}sv(!0,e,t)}function Ly(e){let t=e.__lexicalEventHandles;return void 0===t&&(t=[],e.__lexicalEventHandles=t),t}const Fy=new Map;function zy(e){const t=e.target,n=Rv(null==t?null:9===t.nodeType?t.defaultView:t.ownerDocument.defaultView);if(null===n)return;const r=Dg(n.anchorNode);if(null===r)return;Ty&&(Ty=!1,cx(r,(()=>{const t=Ib(),o=n.anchorNode;if(null===o)return;const i=o.nodeType;i!==zm&&i!==Bm||Qg(jb(t,n,r,e))})));const o=rv(r),i=o[o.length-1],s=i._key,a=Fy.get(s),l=a||i;l!==r&&My(n,l,!1),My(n,r,!0),r!==i?Fy.set(s,r):a&&Fy.delete(s)}function By(e){e._lexicalHandled=!0}function Vy(e){return!0===e._lexicalHandled}function Wy(e,t,n){Gb();const r=e.__key,o=e.getParent();if(null===o)return;const i=function(e){const t=Mb();if(!wb(t)||!dx(e))return t;const{anchor:n,focus:r}=t,o=n.getNode(),i=r.getNode();return _v(o,e)&&n.set(e.__key,0,\"element\"),_v(i,e)&&r.set(e.__key,0,\"element\"),t}(e);let s=!1;if(wb(i)&&t){const t=i.anchor,n=i.focus;t.key===r&&(Fb(t,e,o,e.getPreviousSibling(),e.getNextSibling()),s=!0),n.key===r&&(Fb(n,e,o,e.getPreviousSibling(),e.getNextSibling()),s=!0)}else Sb(i)&&t&&e.isSelected()&&e.selectPrevious();if(wb(i)&&t&&!s){const t=e.getIndexWithinParent();Wg(e),Db(i,o,t,-1)}else Wg(e);n||Cv(o)||o.canBeEmpty()||!o.isEmpty()||Wy(o,t),t&&gx(o)&&o.isEmpty()&&o.selectEnd()}class Uy{static getType(){mg(64,this.name)}static clone(e){mg(65,this.name)}afterCloneFrom(e){this.__parent=e.__parent,this.__next=e.__next,this.__prev=e.__prev}constructor(e){this.__type=this.constructor.getType(),this.__parent=null,this.__prev=null,this.__next=null,function(e,t){if(null!=t)return void(e.__key=t);Gb(),Xb();const n=Zb(),r=Jb(),o=\"\"+Ng++;r._nodeMap.set(o,e),dx(e)?n._dirtyElements.set(o,!0):n._dirtyLeaves.add(o),n._cloneNotNeeded.add(o),n._dirtyType=1,e.__key=o}(this,e)}getType(){return this.__type}isInline(){mg(137,this.constructor.name)}isAttached(){let e=this.__key;for(;null!==e;){if(\"root\"===e)return!0;const t=Hg(e);if(null===t)break;e=t.__parent}return!1}isSelected(e){const t=e||Mb();if(null==t)return!1;const n=t.getNodes().some((e=>e.__key===this.__key));if(db(this))return n;if(wb(t)&&\"element\"===t.anchor.type&&\"element\"===t.focus.type){if(t.isCollapsed())return!1;const e=this.getParent();if(px(this)&&this.isInline()&&e){const n=t.isBackward()?t.focus:t.anchor,r=n.getNode();if(n.offset===r.getChildrenSize()&&r.is(e)&&r.getLastChildOrThrow().is(this))return!1}}return n}getKey(){return this.__key}getIndexWithinParent(){const e=this.getParent();if(null===e)return-1;let t=e.getFirstChild(),n=0;for(;null!==t;){if(this.is(t))return n;n++,t=t.getNextSibling()}return-1}getParent(){const e=this.getLatest().__parent;return null===e?null:Hg(e)}getParentOrThrow(){const e=this.getParent();return null===e&&mg(66,this.__key),e}getTopLevelElement(){let e=this;for(;null!==e;){const t=e.getParent();if(Cv(t))return dx(e)||e===this&&px(e)||mg(194),e;e=t}return null}getTopLevelElementOrThrow(){const e=this.getTopLevelElement();return null===e&&mg(67,this.__key),e}getParents(){const e=[];let t=this.getParent();for(;null!==t;)e.push(t),t=t.getParent();return e}getParentKeys(){const e=[];let t=this.getParent();for(;null!==t;)e.push(t.__key),t=t.getParent();return e}getPreviousSibling(){const e=this.getLatest().__prev;return null===e?null:Hg(e)}getPreviousSiblings(){const e=[],t=this.getParent();if(null===t)return e;let n=t.getFirstChild();for(;null!==n&&!n.is(this);)e.push(n),n=n.getNextSibling();return e}getNextSibling(){const e=this.getLatest().__next;return null===e?null:Hg(e)}getNextSiblings(){const e=[];let t=this.getNextSibling();for(;null!==t;)e.push(t),t=t.getNextSibling();return e}getCommonAncestor(e){const t=this.getParents(),n=e.getParents();dx(this)&&t.unshift(this),dx(e)&&n.unshift(e);const r=t.length,o=n.length;if(0===r||0===o||t[r-1]!==n[o-1])return null;const i=new Set(n);for(let e=0;e<r;e++){const n=t[e];if(i.has(n))return n}return null}is(e){return null!=e&&this.__key===e.__key}isBefore(e){if(this===e)return!1;if(e.isParentOf(this))return!0;if(this.isParentOf(e))return!1;const t=this.getCommonAncestor(e);let n=0,r=0,o=this;for(;;){const e=o.getParentOrThrow();if(e===t){n=o.getIndexWithinParent();break}o=e}for(o=e;;){const e=o.getParentOrThrow();if(e===t){r=o.getIndexWithinParent();break}o=e}return n<r}isParentOf(e){const t=this.__key;if(t===e.__key)return!1;let n=e;for(;null!==n;){if(n.__key===t)return!0;n=n.getParent()}return!1}getNodesBetween(e){const t=this.isBefore(e),n=[],r=new Set;let o=this;for(;null!==o;){const i=o.__key;if(r.has(i)||(r.add(i),n.push(o)),o===e)break;const s=dx(o)?t?o.getFirstChild():o.getLastChild():null;if(null!==s){o=s;continue}const a=t?o.getNextSibling():o.getPreviousSibling();if(null!==a){o=a;continue}const l=o.getParentOrThrow();if(r.has(l.__key)||n.push(l),l===e)break;let c=null,u=l;do{if(null===u&&mg(68),c=t?u.getNextSibling():u.getPreviousSibling(),u=u.getParent(),null===u)break;null!==c||r.has(u.__key)||n.push(u)}while(null===c);o=c}return t||n.reverse(),n}isDirty(){const e=Zb()._dirtyLeaves;return null!==e&&e.has(this.__key)}getLatest(){const e=Hg(this.__key);return null===e&&mg(113),e}getWritable(){Gb();const e=Jb(),t=Zb(),n=e._nodeMap,r=this.__key,o=this.getLatest(),i=t._cloneNotNeeded,s=Mb();if(null!==s&&s.setCachedNodes(null),i.has(r))return Ug(o),o;const a=Fv(o);return i.add(r),Ug(a),n.set(r,a),a}getTextContent(){return\"\"}getTextContentSize(){return this.getTextContent().length}createDOM(e,t){mg(70)}updateDOM(e,t,n){mg(71)}exportDOM(e){return{element:this.createDOM(e._config,e)}}exportJSON(){mg(72)}static importJSON(e){mg(18,this.name)}static transform(){return null}remove(e){Wy(this,!0,e)}replace(e,t){Gb();let n=Mb();null!==n&&(n=n.clone()),Tv(this,e);const r=this.getLatest(),o=this.__key,i=e.__key,s=e.getWritable(),a=this.getParentOrThrow().getWritable(),l=a.__size;Wg(s);const c=r.getPreviousSibling(),u=r.getNextSibling(),d=r.__prev,f=r.__next,h=r.__parent;if(Wy(r,!1,!0),null===c?a.__first=i:c.getWritable().__next=i,s.__prev=d,null===u?a.__last=i:u.getWritable().__prev=i,s.__next=f,s.__parent=h,a.__size=l,t&&(dx(this)&&dx(s)||mg(139),this.getChildren().forEach((e=>{s.append(e)}))),wb(n)){Qg(n);const e=n.anchor,t=n.focus;e.key===o&&yb(e,s),t.key===o&&yb(t,s)}return Kg()===o&&$g(i),s}insertAfter(e,t=!0){Gb(),Tv(this,e);const n=this.getWritable(),r=e.getWritable(),o=r.getParent(),i=Mb();let s=!1,a=!1;if(null!==o){const t=e.getIndexWithinParent();if(Wg(r),wb(i)){const e=o.__key,n=i.anchor,r=i.focus;s=\"element\"===n.type&&n.key===e&&n.offset===t+1,a=\"element\"===r.type&&r.key===e&&r.offset===t+1}}const l=this.getNextSibling(),c=this.getParentOrThrow().getWritable(),u=r.__key,d=n.__next;if(null===l?c.__last=u:l.getWritable().__prev=u,c.__size++,n.__next=u,r.__next=d,r.__prev=n.__key,r.__parent=n.__parent,t&&wb(i)){const e=this.getIndexWithinParent();Db(i,c,e+1);const t=c.__key;s&&i.anchor.set(t,e+2,\"element\"),a&&i.focus.set(t,e+2,\"element\")}return e}insertBefore(e,t=!0){Gb(),Tv(this,e);const n=this.getWritable(),r=e.getWritable(),o=r.__key;Wg(r);const i=this.getPreviousSibling(),s=this.getParentOrThrow().getWritable(),a=n.__prev,l=this.getIndexWithinParent();null===i?s.__first=o:i.getWritable().__next=o,s.__size++,n.__prev=o,r.__prev=a,r.__next=n.__key,r.__parent=n.__parent;const c=Mb();return t&&wb(c)&&Db(c,this.getParentOrThrow(),l),e}isParentRequired(){return!1}createParentElementNode(){return Sx()}selectStart(){return this.selectPrevious()}selectEnd(){return this.selectNext(0,0)}selectPrevious(e,t){Gb();const n=this.getPreviousSibling(),r=this.getParentOrThrow();if(null===n)return r.select(0,0);if(dx(n))return n.select();if(!db(n)){const e=n.getIndexWithinParent()+1;return r.select(e,e)}return n.select(e,t)}selectNext(e,t){Gb();const n=this.getNextSibling(),r=this.getParentOrThrow();if(null===n)return r.select();if(dx(n))return n.select(0,0);if(!db(n)){const e=n.getIndexWithinParent();return r.select(e,e)}return n.select(e,t)}markDirty(){this.getWritable()}}class $y extends Uy{static getType(){return\"linebreak\"}static clone(e){return new $y(e.__key)}constructor(e){super(e)}getTextContent(){return\"\\n\"}createDOM(){return document.createElement(\"br\")}updateDOM(){return!1}static importDOM(){return{br:e=>function(e){const t=e.parentElement;if(null!==t&&jv(t)){const n=t.firstChild;if(n===e||n.nextSibling===e&&Yy(n)){const n=t.lastChild;if(n===e||n.previousSibling===e&&Yy(n))return!0}}return!1}(e)||function(e){const t=e.parentElement;if(null!==t&&jv(t)){const n=t.firstChild;if(n===e||n.nextSibling===e&&Yy(n))return!1;const r=t.lastChild;if(r===e||r.previousSibling===e&&Yy(r))return!0}return!1}(e)?null:{conversion:Ky,priority:0}}}static importJSON(e){return Hy()}exportJSON(){return{type:\"linebreak\",version:1}}}function Ky(e){return{node:Hy()}}function Hy(){return Pv(new $y)}function qy(e){return e instanceof $y}function Yy(e){return e.nodeType===Bm&&/^( |\\t|\\r?\\n)+$/.test(e.textContent||\"\")}function Gy(e,t){return 16&t?\"code\":128&t?\"mark\":32&t?\"sub\":64&t?\"sup\":null}function Xy(e,t){return 1&t?\"strong\":2&t?\"em\":\"span\"}function Jy(e,t,n,r,o){const i=r.classList;let s=mv(o,\"base\");void 0!==s&&i.add(...s),s=mv(o,\"underlineStrikethrough\");let a=!1;const l=t&qm&&t&Hm;void 0!==s&&(n&qm&&n&Hm?(a=!0,l||i.add(...s)):l&&i.remove(...s));for(const e in lg){const r=lg[e];if(s=mv(o,e),void 0!==s)if(n&r){if(a&&(\"underline\"===e||\"strikethrough\"===e)){t&r&&i.remove(...s);continue}t&r&&(!l||\"underline\"!==e)&&\"strikethrough\"!==e||i.add(...s)}else t&r&&i.remove(...s)}}function Zy(e,t,n){const r=t.firstChild,o=n.isComposing(),i=e+(o?tg:\"\");if(null==r)t.textContent=i;else{const e=r.nodeValue;if(e!==i)if(o||Nm){const[t,n,o]=function(e,t){const n=e.length,r=t.length;let o=0,i=0;for(;o<n&&o<r&&e[o]===t[o];)o++;for(;i+o<n&&i+o<r&&e[n-i-1]===t[r-i-1];)i++;return[o,n-o-i,t.slice(o,r-i)]}(e,i);0!==n&&r.deleteData(t,n),r.insertData(t,o)}else r.nodeValue=i}}function Qy(e,t,n,r,o,i){Zy(o,e,t);const s=i.theme.text;void 0!==s&&Jy(0,0,r,e,s)}function eb(e,t){const n=document.createElement(t);return n.appendChild(e),n}class tb extends Uy{static getType(){return\"text\"}static clone(e){return new tb(e.__text,e.__key)}afterCloneFrom(e){super.afterCloneFrom(e),this.__format=e.__format,this.__style=e.__style,this.__mode=e.__mode,this.__detail=e.__detail}constructor(e,t){super(t),this.__text=e,this.__format=0,this.__style=\"\",this.__mode=0,this.__detail=0}getFormat(){return this.getLatest().__format}getDetail(){return this.getLatest().__detail}getMode(){const e=this.getLatest();return hg[e.__mode]}getStyle(){return this.getLatest().__style}isToken(){return 1===this.getLatest().__mode}isComposing(){return this.__key===Kg()}isSegmented(){return 2===this.getLatest().__mode}isDirectionless(){return!!(1&this.getLatest().__detail)}isUnmergeable(){return!!(2&this.getLatest().__detail)}hasFormat(e){const t=lg[e];return!!(this.getFormat()&t)}isSimpleText(){return\"text\"===this.__type&&0===this.__mode}getTextContent(){return this.getLatest().__text}getFormatFlags(e,t){return Vg(this.getLatest().__format,e,t)}canHaveFormat(){return!0}createDOM(e,t){const n=this.__format,r=Gy(0,n),o=Xy(0,n),i=null===r?o:r,s=document.createElement(i);let a=s;this.hasFormat(\"code\")&&s.setAttribute(\"spellcheck\",\"false\"),null!==r&&(a=document.createElement(o),s.appendChild(a)),Qy(a,this,0,n,this.__text,e);const l=this.__style;return\"\"!==l&&(s.style.cssText=l),s}updateDOM(e,t,n){const r=this.__text,o=e.__format,i=this.__format,s=Gy(0,o),a=Gy(0,i),l=Xy(0,o),c=Xy(0,i);if((null===s?l:s)!==(null===a?c:a))return!0;if(s===a&&l!==c){const e=t.firstChild;null==e&&mg(48);const o=document.createElement(c);return Qy(o,this,0,i,r,n),t.replaceChild(o,e),!1}let u=t;null!==a&&null!==s&&(u=t.firstChild,null==u&&mg(49)),Zy(r,u,this);const d=n.theme.text;void 0!==d&&o!==i&&Jy(0,o,i,u,d);const f=e.__style,h=this.__style;return f!==h&&(t.style.cssText=h),!1}static importDOM(){return{\"#text\":()=>({conversion:sb,priority:0}),b:()=>({conversion:rb,priority:0}),code:()=>({conversion:cb,priority:0}),em:()=>({conversion:cb,priority:0}),i:()=>({conversion:cb,priority:0}),s:()=>({conversion:cb,priority:0}),span:()=>({conversion:nb,priority:0}),strong:()=>({conversion:cb,priority:0}),sub:()=>({conversion:cb,priority:0}),sup:()=>({conversion:cb,priority:0}),u:()=>({conversion:cb,priority:0})}}static importJSON(e){const t=ub(e.text);return t.setFormat(e.format),t.setDetail(e.detail),t.setMode(e.mode),t.setStyle(e.style),t}exportDOM(e){let{element:t}=super.exportDOM(e);return null!==t&&Nv(t)||mg(132),t.style.whiteSpace=\"pre-wrap\",this.hasFormat(\"bold\")&&(t=eb(t,\"b\")),this.hasFormat(\"italic\")&&(t=eb(t,\"i\")),this.hasFormat(\"strikethrough\")&&(t=eb(t,\"s\")),this.hasFormat(\"underline\")&&(t=eb(t,\"u\")),{element:t}}exportJSON(){return{detail:this.getDetail(),format:this.getFormat(),mode:this.getMode(),style:this.getStyle(),text:this.getTextContent(),type:\"text\",version:1}}selectionTransform(e,t){}setFormat(e){const t=this.getWritable();return t.__format=\"string\"==typeof e?lg[e]:e,t}setDetail(e){const t=this.getWritable();return t.__detail=\"string\"==typeof e?cg[e]:e,t}setStyle(e){const t=this.getWritable();return t.__style=e,t}toggleFormat(e){const t=Vg(this.getFormat(),e,null);return this.setFormat(t)}toggleDirectionless(){const e=this.getWritable();return e.__detail^=1,e}toggleUnmergeable(){const e=this.getWritable();return e.__detail^=2,e}setMode(e){const t=fg[e];if(this.__mode===t)return this;const n=this.getWritable();return n.__mode=t,n}setTextContent(e){if(this.__text===e)return this;const t=this.getWritable();return t.__text=e,t}select(e,t){Gb();let n=e,r=t;const o=Mb(),i=this.getTextContent(),s=this.__key;if(\"string\"==typeof i){const e=i.length;void 0===n&&(n=e),void 0===r&&(r=e)}else n=0,r=0;if(!wb(o))return Nb(s,n,s,r,\"text\",\"text\");{const e=Kg();e!==o.anchor.key&&e!==o.focus.key||$g(s),o.setTextNodeRange(this,n,this,r)}return o}selectStart(){return this.select(0,0)}selectEnd(){const e=this.getTextContentSize();return this.select(e,e)}spliceText(e,t,n,r){const o=this.getWritable(),i=o.__text,s=n.length;let a=e;a<0&&(a=s+a,a<0&&(a=0));const l=Mb();if(r&&wb(l)){const t=e+s;l.setTextNodeRange(o,t,o,t)}const c=i.slice(0,a)+n+i.slice(a+t);return o.__text=c,o}canInsertTextBefore(){return!0}canInsertTextAfter(){return!0}splitText(...e){Gb();const t=this.getLatest(),n=t.getTextContent(),r=t.__key,o=Kg(),i=new Set(e),s=[],a=n.length;let l=\"\";for(let e=0;e<a;e++)\"\"!==l&&i.has(e)&&(s.push(l),l=\"\"),l+=n[e];\"\"!==l&&s.push(l);const c=s.length;if(0===c)return[];if(s[0]===n)return[t];const u=s[0],d=t.getParent();let f;const h=t.getFormat(),p=t.getStyle(),m=t.__detail;let g=!1;t.isSegmented()?(f=ub(u),f.__format=h,f.__style=p,f.__detail=m,g=!0):(f=t.getWritable(),f.__text=u);const v=Mb(),y=[f];let b=u.length;for(let e=1;e<c;e++){const t=s[e],n=t.length,i=ub(t).getWritable();i.__format=h,i.__style=p,i.__detail=m;const a=i.__key,l=b+n;if(wb(v)){const e=v.anchor,t=v.focus;e.key===r&&\"text\"===e.type&&e.offset>b&&e.offset<=l&&(e.key=a,e.offset-=b,v.dirty=!0),t.key===r&&\"text\"===t.type&&t.offset>b&&t.offset<=l&&(t.key=a,t.offset-=b,v.dirty=!0)}o===r&&$g(a),b=l,y.push(i)}if(null!==d){!function(e){const t=e.getPreviousSibling(),n=e.getNextSibling();null!==t&&Ug(t),null!==n&&Ug(n)}(this);const e=d.getWritable(),t=this.getIndexWithinParent();g?(e.splice(t,0,y),this.remove()):e.splice(t,1,y),wb(v)&&Db(v,d,t,c-1)}return y}mergeWithSibling(e){const t=e===this.getPreviousSibling();t||e===this.getNextSibling()||mg(50);const n=this.__key,r=e.__key,o=this.__text,i=o.length;Kg()===r&&$g(n);const s=Mb();if(wb(s)){const o=s.anchor,a=s.focus;null!==o&&o.key===r&&(zb(o,t,n,e,i),s.dirty=!0),null!==a&&a.key===r&&(zb(a,t,n,e,i),s.dirty=!0)}const a=e.__text,l=t?a+o:o+a;this.setTextContent(l);const c=this.getWritable();return e.remove(),c}isTextEntity(){return!1}}function nb(e){return{forChild:fb(e.style),node:null}}function rb(e){const t=e,n=\"normal\"===t.style.fontWeight;return{forChild:fb(t.style,n?void 0:\"bold\"),node:null}}const ob=new WeakMap;function ib(e){return\"PRE\"===e.nodeName||e.nodeType===zm&&void 0!==e.style&&void 0!==e.style.whiteSpace&&e.style.whiteSpace.startsWith(\"pre\")}function sb(e){const t=e;null===e.parentElement&&mg(129);let n=t.textContent||\"\";if(null!==function(e){let t,n=e.parentNode;const r=[e];for(;null!==n&&void 0===(t=ob.get(n))&&!ib(n);)r.push(n),n=n.parentNode;const o=void 0===t?n:t;for(let e=0;e<r.length;e++)ob.set(r[e],o);return o}(t)){const e=n.split(/(\\r?\\n|\\t)/),t=[],r=e.length;for(let n=0;n<r;n++){const r=e[n];\"\\n\"===r||\"\\r\\n\"===r?t.push(Hy()):\"\\t\"===r?t.push(pb()):\"\"!==r&&t.push(ub(r))}return{node:t}}if(n=n.replace(/\\r/g,\"\").replace(/[ \\t\\n]+/g,\" \"),\"\"===n)return{node:null};if(\" \"===n[0]){let e=t,r=!0;for(;null!==e&&null!==(e=ab(e,!1));){const t=e.textContent||\"\";if(t.length>0){/[ \\t\\n]$/.test(t)&&(n=n.slice(1)),r=!1;break}}r&&(n=n.slice(1))}if(\" \"===n[n.length-1]){let e=t,r=!0;for(;null!==e&&null!==(e=ab(e,!0));)if((e.textContent||\"\").replace(/^( |\\t|\\r?\\n)+/,\"\").length>0){r=!1;break}r&&(n=n.slice(0,n.length-1))}return\"\"===n?{node:null}:{node:ub(n)}}function ab(e,t){let n=e;for(;;){let e;for(;null===(e=t?n.nextSibling:n.previousSibling);){const e=n.parentElement;if(null===e)return null;n=e}if(n=e,n.nodeType===zm){const e=n.style.display;if(\"\"===e&&!Av(n)||\"\"!==e&&!e.startsWith(\"inline\"))return null}let r=n;for(;null!==(r=t?n.firstChild:n.lastChild);)n=r;if(n.nodeType===Bm)return n;if(\"BR\"===n.nodeName)return null}}const lb={code:\"code\",em:\"italic\",i:\"italic\",s:\"strikethrough\",strong:\"bold\",sub:\"subscript\",sup:\"superscript\",u:\"underline\"};function cb(e){const t=lb[e.nodeName.toLowerCase()];return void 0===t?{node:null}:{forChild:fb(e.style,t),node:null}}function ub(e=\"\"){return Pv(new tb(e))}function db(e){return e instanceof tb}function fb(e,t){const n=e.fontWeight,r=e.textDecoration.split(\" \"),o=\"700\"===n||\"bold\"===n,i=r.includes(\"line-through\"),s=\"italic\"===e.fontStyle,a=r.includes(\"underline\"),l=e.verticalAlign;return e=>db(e)?(o&&!e.hasFormat(\"bold\")&&e.toggleFormat(\"bold\"),i&&!e.hasFormat(\"strikethrough\")&&e.toggleFormat(\"strikethrough\"),s&&!e.hasFormat(\"italic\")&&e.toggleFormat(\"italic\"),a&&!e.hasFormat(\"underline\")&&e.toggleFormat(\"underline\"),\"sub\"!==l||e.hasFormat(\"subscript\")||e.toggleFormat(\"subscript\"),\"super\"!==l||e.hasFormat(\"superscript\")||e.toggleFormat(\"superscript\"),t&&!e.hasFormat(t)&&e.toggleFormat(t),e):e}class hb extends tb{static getType(){return\"tab\"}static clone(e){return new hb(e.__key)}afterCloneFrom(e){super.afterCloneFrom(e),this.__text=e.__text}constructor(e){super(\"\\t\",e),this.__detail=2}static importDOM(){return null}static importJSON(e){const t=pb();return t.setFormat(e.format),t.setStyle(e.style),t}exportJSON(){return{...super.exportJSON(),type:\"tab\",version:1}}setTextContent(e){mg(126)}setDetail(e){mg(127)}setMode(e){mg(128)}canInsertTextBefore(){return!1}canInsertTextAfter(){return!1}}function pb(){return Pv(new hb)}class mb{constructor(e,t,n){this._selection=null,this.key=e,this.offset=t,this.type=n}is(e){return this.key===e.key&&this.offset===e.offset&&this.type===e.type}isBefore(e){let t=this.getNode(),n=e.getNode();const r=this.offset,o=e.offset;if(dx(t)){const e=t.getDescendantByIndex(r);t=null!=e?e:t}if(dx(n)){const e=n.getDescendantByIndex(o);n=null!=e?e:n}return t===n?r<o:t.isBefore(n)}getNode(){const e=Hg(this.key);return null===e&&mg(20),e}set(e,t,n){const r=this._selection,o=this.key;this.key=e,this.offset=t,this.type=n,Yb()||(Kg()===o&&$g(e),null!==r&&(r.setCachedNodes(null),r.dirty=!0))}}function gb(e,t,n){return new mb(e,t,n)}function vb(e,t){let n=t.__key,r=e.offset,o=\"element\";if(db(t)){o=\"text\";const e=t.getTextContentSize();r>e&&(r=e)}else if(!dx(t)){const e=t.getNextSibling();if(db(e))n=e.__key,r=0,o=\"text\";else{const e=t.getParent();e&&(n=e.__key,r=t.getIndexWithinParent()+1)}}e.set(n,r,o)}function yb(e,t){if(dx(t)){const n=t.getLastDescendant();dx(n)||db(n)?vb(e,n):vb(e,t)}else vb(e,t)}function bb(e,t,n,r){e.key=t,e.offset=n,e.type=r}class xb{constructor(e){this._cachedNodes=null,this._nodes=e,this.dirty=!1}getCachedNodes(){return this._cachedNodes}setCachedNodes(e){this._cachedNodes=e}is(e){if(!Sb(e))return!1;const t=this._nodes,n=e._nodes;return t.size===n.size&&Array.from(t).every((e=>n.has(e)))}isCollapsed(){return!1}isBackward(){return!1}getStartEndPoints(){return null}add(e){this.dirty=!0,this._nodes.add(e),this._cachedNodes=null}delete(e){this.dirty=!0,this._nodes.delete(e),this._cachedNodes=null}clear(){this.dirty=!0,this._nodes.clear(),this._cachedNodes=null}has(e){return this._nodes.has(e)}clone(){return new xb(new Set(this._nodes))}extract(){return this.getNodes()}insertRawText(e){}insertText(){}insertNodes(e){const t=this.getNodes(),n=t.length,r=t[n-1];let o;if(db(r))o=r.select();else{const e=r.getIndexWithinParent()+1;o=r.getParentOrThrow().select(e,e)}o.insertNodes(e);for(let e=0;e<n;e++)t[e].remove()}getNodes(){const e=this._cachedNodes;if(null!==e)return e;const t=this._nodes,n=[];for(const e of t){const t=Hg(e);null!==t&&n.push(t)}return Yb()||(this._cachedNodes=n),n}getTextContent(){const e=this.getNodes();let t=\"\";for(let n=0;n<e.length;n++)t+=e[n].getTextContent();return t}}function wb(e){return e instanceof Eb}class Eb{constructor(e,t,n,r){this.anchor=e,this.focus=t,e._selection=this,t._selection=this,this._cachedNodes=null,this.format=n,this.style=r,this.dirty=!1}getCachedNodes(){return this._cachedNodes}setCachedNodes(e){this._cachedNodes=e}is(e){return!!wb(e)&&this.anchor.is(e.anchor)&&this.focus.is(e.focus)&&this.format===e.format&&this.style===e.style}isCollapsed(){return this.anchor.is(this.focus)}getNodes(){const e=this._cachedNodes;if(null!==e)return e;const t=this.anchor,n=this.focus,r=t.isBefore(n),o=r?t:n,i=r?n:t;let s=o.getNode(),a=i.getNode();const l=o.offset,c=i.offset;if(dx(s)){const e=s.getDescendantByIndex(l);s=null!=e?e:s}if(dx(a)){let e=a.getDescendantByIndex(c);null!==e&&e!==s&&a.getChildAtIndex(c)===e&&(e=e.getPreviousSibling()),a=null!=e?e:a}let u;return u=s.is(a)?dx(s)&&s.getChildrenSize()>0?[]:[s]:s.getNodesBetween(a),Yb()||(this._cachedNodes=u),u}setTextNodeRange(e,t,n,r){bb(this.anchor,e.__key,t,\"text\"),bb(this.focus,n.__key,r,\"text\"),this._cachedNodes=null,this.dirty=!0}getTextContent(){const e=this.getNodes();if(0===e.length)return\"\";const t=e[0],n=e[e.length-1],r=this.anchor,o=this.focus,i=r.isBefore(o),[s,a]=kb(this);let l=\"\",c=!0;for(let u=0;u<e.length;u++){const d=e[u];if(dx(d)&&!d.isInline())c||(l+=\"\\n\"),c=!d.isEmpty();else if(c=!1,db(d)){let e=d.getTextContent();d===t?d===n?\"element\"===r.type&&\"element\"===o.type&&o.offset!==r.offset||(e=s<a?e.slice(s,a):e.slice(a,s)):e=i?e.slice(s):e.slice(a):d===n&&(e=i?e.slice(0,a):e.slice(0,s)),l+=e}else!px(d)&&!qy(d)||d===n&&this.isCollapsed()||(l+=d.getTextContent())}return l}applyDOMRange(e){const t=Zb(),n=t.getEditorState()._selection,r=Rb(e.startContainer,e.startOffset,e.endContainer,e.endOffset,t,n);if(null===r)return;const[o,i]=r;bb(this.anchor,o.key,o.offset,o.type),bb(this.focus,i.key,i.offset,i.type),this._cachedNodes=null}clone(){const e=this.anchor,t=this.focus;return new Eb(gb(e.key,e.offset,e.type),gb(t.key,t.offset,t.type),this.format,this.style)}toggleFormat(e){this.format=Vg(this.format,e,null),this.dirty=!0}setStyle(e){this.style=e,this.dirty=!0}hasFormat(e){const t=lg[e];return!!(this.format&t)}insertRawText(e){const t=e.split(/(\\r?\\n|\\t)/),n=[],r=t.length;for(let e=0;e<r;e++){const r=t[e];\"\\n\"===r||\"\\r\\n\"===r?n.push(Hy()):\"\\t\"===r?n.push(pb()):n.push(ub(r))}this.insertNodes(n)}insertText(e){const t=this.anchor,n=this.focus,r=this.format,o=this.style;let i=t,s=n;!this.isCollapsed()&&n.isBefore(t)&&(i=n,s=t),\"element\"===i.type&&function(e,t,n,r){const o=e.getNode(),i=o.getChildAtIndex(e.offset),s=ub(),a=gx(o)?Sx().append(s):s;s.setFormat(n),s.setStyle(r),null===i?o.append(a):i.insertBefore(a),e.is(t)&&t.set(s.__key,0,\"text\"),e.set(s.__key,0,\"text\")}(i,s,r,o);const a=i.offset;let l=s.offset;const c=this.getNodes(),u=c.length;let d=c[0];db(d)||mg(26);const f=d.getTextContent().length,h=d.getParentOrThrow();let p=c[u-1];if(1===u&&\"element\"===s.type&&(l=f,s.set(i.key,l,\"text\")),this.isCollapsed()&&a===f&&(d.isSegmented()||d.isToken()||!d.canInsertTextAfter()||!h.canInsertTextAfter()&&null===d.getNextSibling())){let t=d.getNextSibling();if(db(t)&&t.canInsertTextBefore()&&!Fg(t)||(t=ub(),t.setFormat(r),t.setStyle(o),h.canInsertTextAfter()?d.insertAfter(t):h.insertAfter(t)),t.select(0,0),d=t,\"\"!==e)return void this.insertText(e)}else if(this.isCollapsed()&&0===a&&(d.isSegmented()||d.isToken()||!d.canInsertTextBefore()||!h.canInsertTextBefore()&&null===d.getPreviousSibling())){let t=d.getPreviousSibling();if(db(t)&&!Fg(t)||(t=ub(),t.setFormat(r),h.canInsertTextBefore()?d.insertBefore(t):h.insertBefore(t)),t.select(),d=t,\"\"!==e)return void this.insertText(e)}else if(d.isSegmented()&&a!==f){const e=ub(d.getTextContent());e.setFormat(r),d.replace(e),d=e}else if(!this.isCollapsed()&&\"\"!==e){const t=p.getParent();if(!h.canInsertTextBefore()||!h.canInsertTextAfter()||dx(t)&&(!t.canInsertTextBefore()||!t.canInsertTextAfter()))return this.insertText(\"\"),Ob(this.anchor,this.focus,null),void this.insertText(e)}if(1===u){if(d.isToken()){const t=ub(e);return t.select(),void d.replace(t)}const t=d.getFormat(),n=d.getStyle();if(a!==l||t===r&&n===o){if(function(e){return e instanceof hb}(d)){const t=ub(e);return t.setFormat(r),t.setStyle(o),t.select(),void d.replace(t)}}else{if(\"\"!==d.getTextContent()){const t=ub(e);if(t.setFormat(r),t.setStyle(o),t.select(),0===a)d.insertBefore(t,!1);else{const[e]=d.splitText(a);e.insertAfter(t,!1)}return void(t.isComposing()&&\"text\"===this.anchor.type&&(this.anchor.offset-=e.length))}d.setFormat(r),d.setStyle(o)}const i=l-a;d=d.spliceText(a,i,e,!0),\"\"===d.getTextContent()?d.remove():\"text\"===this.anchor.type&&(d.isComposing()?this.anchor.offset-=e.length:(this.format=t,this.style=n))}else{const t=new Set([...d.getParentKeys(),...p.getParentKeys()]),n=dx(d)?d:d.getParentOrThrow();let r=dx(p)?p:p.getParentOrThrow(),o=p;if(!n.is(r)&&r.isInline())do{o=r,r=r.getParentOrThrow()}while(r.isInline());if(\"text\"===s.type&&(0!==l||\"\"===p.getTextContent())||\"element\"===s.type&&p.getIndexWithinParent()<l)if(db(p)&&!p.isToken()&&l!==p.getTextContentSize()){if(p.isSegmented()){const e=ub(p.getTextContent());p.replace(e),p=e}gx(s.getNode())||\"text\"!==s.type||(p=p.spliceText(0,l,\"\")),t.add(p.__key)}else{const e=p.getParentOrThrow();e.canBeEmpty()||1!==e.getChildrenSize()?p.remove():e.remove()}else t.add(p.__key);const i=r.getChildren(),h=new Set(c),m=n.is(r),g=n.isInline()&&null===d.getNextSibling()?n:d;for(let e=i.length-1;e>=0;e--){const t=i[e];if(t.is(d)||dx(t)&&t.isParentOf(d))break;t.isAttached()&&(!h.has(t)||t.is(o)?m||g.insertAfter(t,!1):t.remove())}if(!m){let e=r,n=null;for(;null!==e;){const r=e.getChildren(),o=r.length;(0===o||r[o-1].is(n))&&(t.delete(e.__key),n=e),e=e.getParent()}}if(d.isToken())if(a===f)d.select();else{const t=ub(e);t.select(),d.replace(t)}else d=d.spliceText(a,f-a,e,!0),\"\"===d.getTextContent()?d.remove():d.isComposing()&&\"text\"===this.anchor.type&&(this.anchor.offset-=e.length);for(let e=1;e<u;e++){const n=c[e],r=n.__key;t.has(r)||n.remove()}}}removeText(){this.insertText(\"\")}formatText(e){if(this.isCollapsed())return this.toggleFormat(e),void $g(null);const t=this.getNodes(),n=[];for(const e of t)db(e)&&n.push(e);const r=n.length;if(0===r)return this.toggleFormat(e),void $g(null);const o=this.anchor,i=this.focus,s=this.isBackward(),a=s?i:o,l=s?o:i;let c=0,u=n[0],d=\"element\"===a.type?0:a.offset;if(\"text\"===a.type&&d===u.getTextContentSize()&&(c=1,u=n[1],d=0),null==u)return;const f=u.getFormatFlags(e,null),h=r-1;let p=n[h];const m=\"text\"===l.type?l.offset:p.getTextContentSize();if(u.is(p)){if(d===m)return;if(Fg(u)||0===d&&m===u.getTextContentSize())u.setFormat(f);else{const e=u.splitText(d,m),t=0===d?e[0]:e[1];t.setFormat(f),\"text\"===a.type&&a.set(t.__key,0,\"text\"),\"text\"===l.type&&l.set(t.__key,m-d,\"text\")}return void(this.format=f)}0===d||Fg(u)||([,u]=u.splitText(d),d=0),u.setFormat(f);const g=p.getFormatFlags(e,f);m>0&&(m===p.getTextContentSize()||Fg(p)||([p]=p.splitText(m)),p.setFormat(g));for(let t=c+1;t<h;t++){const r=n[t],o=r.getFormatFlags(e,g);r.setFormat(o)}\"text\"===a.type&&a.set(u.__key,d,\"text\"),\"text\"===l.type&&l.set(p.__key,m,\"text\"),this.format=f|g}insertNodes(e){if(0===e.length)return;if(\"root\"===this.anchor.key){this.insertParagraph();const t=Mb();return wb(t)||mg(134),t.insertNodes(e)}const t=Iv((this.isBackward()?this.focus:this.anchor).getNode(),Mv),n=e[e.length-1];if(\"__language\"in t&&dx(t)){if(\"__language\"in e[0])this.insertText(e[0].getTextContent());else{const r=Bb(this);t.splice(r,0,e),n.selectEnd()}return}if(!e.some((e=>(dx(e)||px(e))&&!e.isInline()))){dx(t)||mg(135);const r=Bb(this);return t.splice(r,0,e),void n.selectEnd()}const r=function(e){const t=Sx();let n=null;for(let r=0;r<e.length;r++){const o=e[r],i=qy(o);if(i||px(o)&&o.isInline()||dx(o)&&o.isInline()||db(o)||o.isParentRequired()){if(null===n&&(n=o.createParentElementNode(),t.append(n),i))continue;null!==n&&n.append(o)}else t.append(o),n=null}return t}(e),o=r.getLastDescendant(),i=r.getChildren(),s=dx(t)&&t.isEmpty()?null:this.insertParagraph(),a=i[i.length-1];let l=i[0];var c;dx(c=l)&&Mv(c)&&!c.isEmpty()&&dx(t)&&(!t.isEmpty()||t.canMergeWhenEmpty())&&(dx(t)||mg(135),t.append(...l.getChildren()),l=i[1]),l&&function(e,t){const n=t.getParentOrThrow().getLastChild();let r=t;const o=[t];for(;r!==n;)r.getNextSibling()||mg(140),r=r.getNextSibling(),o.push(r);let i=e;for(const e of o)i=i.insertAfter(e)}(t,l);const u=Iv(o,Mv);s&&dx(u)&&(s.canMergeWhenEmpty()||Mv(a))&&(u.append(...s.getChildren()),s.remove()),dx(t)&&t.isEmpty()&&t.remove(),o.selectEnd();const d=dx(t)?t.getLastChild():null;qy(d)&&u!==t&&d.remove()}insertParagraph(){if(\"root\"===this.anchor.key){const e=Sx();return Jg().splice(this.anchor.offset,0,[e]),e.select(),e}const e=Bb(this),t=Iv(this.anchor.getNode(),Mv);dx(t)||mg(136);const n=t.getChildAtIndex(e),r=n?[n,...n.getNextSiblings()]:[],o=t.insertNewAfter(this,!1);return o?(o.append(...r),o.selectStart(),o):null}insertLineBreak(e){const t=Hy();if(this.insertNodes([t]),e){const e=t.getParentOrThrow(),n=t.getIndexWithinParent();e.select(n,n)}}extract(){const e=this.getNodes(),t=e.length,n=t-1,r=this.anchor,o=this.focus;let i=e[0],s=e[n];const[a,l]=kb(this);if(0===t)return[];if(1===t){if(db(i)&&!this.isCollapsed()){const e=a>l?l:a,t=a>l?a:l,n=i.splitText(e,t),r=0===e?n[0]:n[1];return null!=r?[r]:[]}return[i]}const c=r.isBefore(o);if(db(i)){const t=c?a:l;t===i.getTextContentSize()?e.shift():0!==t&&([,i]=i.splitText(t),e[0]=i)}if(db(s)){const t=s.getTextContent().length,r=c?l:a;0===r?e.pop():r!==t&&([s]=s.splitText(r),e[n]=s)}return e}modify(e,t,n){const r=this.focus,o=this.anchor,i=\"move\"===e,s=yv(r,t);if(px(s)&&!s.isIsolated()){if(i&&s.isKeyboardSelectable()){const e=Ab();return e.add(s.__key),void Qg(e)}const e=t?s.getPreviousSibling():s.getNextSibling();if(db(e)){const n=e.__key,s=t?e.getTextContent().length:0;return r.set(n,s,\"text\"),void(i&&o.set(n,s,\"text\"))}{const n=s.getParentOrThrow();let a,l;return dx(e)?(l=e.__key,a=t?e.getChildrenSize():0):(a=s.getIndexWithinParent(),l=n.__key,t||a++),r.set(l,a,\"element\"),void(i&&o.set(l,a,\"element\"))}}const a=Zb(),l=Rv(a._window);if(!l)return;const c=a._blockCursorElement,u=a._rootElement;if(null===u||null===c||!dx(s)||s.isInline()||s.canBeEmpty()||_n(c,a,u),function(e,t,n,r){e.modify(t,n,r)}(l,e,t?\"backward\":\"forward\",n),l.rangeCount>0){const e=l.getRangeAt(0),n=this.anchor.getNode(),r=gx(n)?n:function(e){let t=e.getParentOrThrow();for(;null!==t;){if(Cv(t))return t;t=t.getParentOrThrow()}return t}(n);if(this.applyDOMRange(e),this.dirty=!0,!i){const n=this.getNodes(),o=[];let i=!1;for(let e=0;e<n.length;e++){const t=n[e];_v(t,r)?o.push(t):i=!0}if(i&&o.length>0)if(t){const e=o[0];dx(e)?e.selectStart():e.getParentOrThrow().selectStart()}else{const e=o[o.length-1];dx(e)?e.selectEnd():e.getParentOrThrow().selectEnd()}l.anchorNode===e.startContainer&&l.anchorOffset===e.startOffset||function(e){const t=e.focus,n=e.anchor,r=n.key,o=n.offset,i=n.type;bb(n,t.key,t.offset,t.type),bb(t,r,o,i),e._cachedNodes=null}(this)}}}forwardDeletion(e,t,n){if(!n&&(\"element\"===e.type&&dx(t)&&e.offset===t.getChildrenSize()||\"text\"===e.type&&e.offset===t.getTextContentSize())){const e=t.getParent(),n=t.getNextSibling()||(null===e?null:e.getNextSibling());if(dx(n)&&n.isShadowRoot())return!0}return!1}deleteCharacter(e){const t=this.isCollapsed();if(this.isCollapsed()){const t=this.anchor;let n=t.getNode();if(this.forwardDeletion(t,n,e))return;const r=this.focus,o=yv(r,e);if(px(o)&&!o.isIsolated()){if(o.isKeyboardSelectable()&&dx(n)&&0===n.getChildrenSize()){n.remove();const e=Ab();e.add(o.__key),Qg(e)}else o.remove(),Zb().dispatchCommand(Wp,void 0);return}if(!e&&dx(o)&&dx(n)&&n.isEmpty())return n.remove(),void o.selectStart();if(this.modify(\"extend\",e,\"character\"),this.isCollapsed()){if(e&&0===t.offset&&(\"element\"===t.type?t.getNode():t.getNode().getParentOrThrow()).collapseAtStart(this))return}else{const o=\"text\"===r.type?r.getNode():null;if(n=\"text\"===t.type?t.getNode():null,null!==o&&o.isSegmented()){const t=r.offset,i=o.getTextContentSize();if(o.is(n)||e&&t!==i||!e&&0!==t)return void Cb(o,e,t)}else if(null!==n&&n.isSegmented()){const r=t.offset,i=n.getTextContentSize();if(n.is(o)||e&&0!==r||!e&&r!==i)return void Cb(n,e,r)}!function(e,t){const n=e.anchor,r=e.focus,o=n.getNode();if(o===r.getNode()&&\"text\"===n.type&&\"text\"===r.type){const e=n.offset,i=r.offset,s=e<i,a=s?e:i,l=s?i:e,c=l-1;a!==c&&(nv(o.getTextContent().slice(a,l))||(t?r.offset=c:n.offset=c))}}(this,e)}}if(this.removeText(),e&&!t&&this.isCollapsed()&&\"element\"===this.anchor.type&&0===this.anchor.offset){const e=this.anchor.getNode();e.isEmpty()&&gx(e.getParent())&&0===e.getIndexWithinParent()&&e.collapseAtStart(this)}}deleteLine(e){if(this.isCollapsed()){const t=\"element\"===this.anchor.type;if(t&&this.insertText(\" \"),this.modify(\"extend\",e,\"lineboundary\"),0===(e?this.focus:this.anchor).offset&&this.modify(\"extend\",e,\"character\"),t){const t=e?this.anchor:this.focus;t.set(t.key,t.offset+1,t.type)}}this.removeText()}deleteWord(e){if(this.isCollapsed()){const t=this.anchor,n=t.getNode();if(this.forwardDeletion(t,n,e))return;this.modify(\"extend\",e,\"word\")}this.removeText()}isBackward(){return this.focus.isBefore(this.anchor)}getStartEndPoints(){return[this.anchor,this.focus]}}function Sb(e){return e instanceof xb}function _b(e){const t=e.offset;if(\"text\"===e.type)return t;const n=e.getNode();return t===n.getChildrenSize()?n.getTextContent().length:0}function kb(e){const t=e.getStartEndPoints();if(null===t)return[0,0];const[n,r]=t;return\"element\"===n.type&&\"element\"===r.type&&n.key===r.key&&n.offset===r.offset?[0,0]:[_b(n),_b(r)]}function Cb(e,t,n){const r=e,o=r.getTextContent().split(/(?=\\s)/g),i=o.length;let s=0,a=0;for(let e=0;e<i;e++){const r=e===i-1;if(a=s,s+=o[e].length,t&&s===n||s>n||r){o.splice(e,1),r&&(a=void 0);break}}const l=o.join(\"\").trim();\"\"===l?r.remove():(r.setTextContent(l),r.select(a,a))}function Pb(e,t,n,r){let o,i=t;if(e.nodeType===zm){let s=!1;const a=e.childNodes,l=a.length,c=r._blockCursorElement;i===l&&(s=!0,i=l-1);let u=a[i],d=!1;if(u===c)u=a[i+1],d=!0;else if(null!==c){const n=c.parentNode;e===n&&t>Array.prototype.indexOf.call(n.children,c)&&i--}if(o=ev(u),db(o))i=tv(o,s);else{let r=ev(e);if(null===r)return null;if(dx(r)){i=Math.min(r.getChildrenSize(),i);let e=r.getChildAtIndex(i);if(dx(e)&&function(e,t,n){const r=e.getParent();return null===n||null===r||!r.canBeEmpty()||r!==n.getNode()}(e,0,n)){const t=s?e.getLastDescendant():e.getFirstDescendant();null===t?r=e:(e=t,r=dx(e)?e:e.getParentOrThrow()),i=0}db(e)?(o=e,r=null,i=tv(e,s)):e!==r&&s&&!d&&i++}else{const n=r.getIndexWithinParent();i=0===t&&px(r)&&ev(e)===r?n:n+1,r=r.getParentOrThrow()}if(dx(r))return gb(r.__key,i,\"element\")}}else o=ev(e);return db(o)?gb(o.__key,i,\"text\"):null}function Tb(e,t,n){const r=e.offset,o=e.getNode();if(0===r){const r=o.getPreviousSibling(),i=o.getParent();if(t){if((n||!t)&&null===r&&dx(i)&&i.isInline()){const t=i.getPreviousSibling();db(t)&&(e.key=t.__key,e.offset=t.getTextContent().length)}}else dx(r)&&!n&&r.isInline()?(e.key=r.__key,e.offset=r.getChildrenSize(),e.type=\"element\"):db(r)&&(e.key=r.__key,e.offset=r.getTextContent().length)}else if(r===o.getTextContent().length){const r=o.getNextSibling(),i=o.getParent();if(t&&dx(r)&&r.isInline())e.key=r.__key,e.offset=0,e.type=\"element\";else if((n||t)&&null===r&&dx(i)&&i.isInline()&&!i.canInsertTextAfter()){const t=i.getNextSibling();db(t)&&(e.key=t.__key,e.offset=0)}}}function Ob(e,t,n){if(\"text\"===e.type&&\"text\"===t.type){const r=e.isBefore(t),o=e.is(t);Tb(e,r,o),Tb(t,!r,o),o&&(t.key=e.key,t.offset=e.offset,t.type=e.type);const i=Zb();if(i.isComposing()&&i._compositionKey!==e.key&&wb(n)){const r=n.anchor,o=n.focus;bb(e,r.key,r.offset,r.type),bb(t,o.key,o.offset,o.type)}}}function Rb(e,t,n,r,o,i){if(null===e||null===n||!Mg(o,e,n))return null;const s=Pb(e,t,wb(i)?i.anchor:null,o);if(null===s)return null;const a=Pb(n,r,wb(i)?i.focus:null,o);if(null===a)return null;if(\"element\"===s.type&&\"element\"===a.type){const t=ev(e),r=ev(n);if(px(t)&&px(r))return null}return Ob(s,a,i),[s,a]}function Nb(e,t,n,r,o,i){const s=Jb(),a=new Eb(gb(e,t,o),gb(n,r,i),0,\"\");return a.dirty=!0,s._selection=a,a}function Ab(){return new xb(new Set)}function jb(e,t,n,r){const o=n._window;if(null===o)return null;const i=r||o.event,s=i?i.type:void 0,a=\"selectionchange\"===s,l=!yg&&(a||\"beforeinput\"===s||\"compositionstart\"===s||\"compositionend\"===s||\"click\"===s&&i&&3===i.detail||\"drop\"===s||void 0===s);let c,u,d,f;if(wb(e)&&!l)return e.clone();if(null===t)return null;if(c=t.anchorNode,u=t.focusNode,d=t.anchorOffset,f=t.focusOffset,a&&wb(e)&&!Mg(n,c,u))return e.clone();const h=Rb(c,d,u,f,n,e);if(null===h)return null;const[p,m]=h;return new Eb(p,m,wb(e)?e.format:0,wb(e)?e.style:\"\")}function Mb(){return Jb()._selection}function Ib(){return Zb()._editorState._selection}function Db(e,t,n,r=1){const o=e.anchor,i=e.focus,s=o.getNode(),a=i.getNode();if(!t.is(s)&&!t.is(a))return;const l=t.__key;if(e.isCollapsed()){const t=o.offset;if(n<=t&&r>0||n<t&&r<0){const n=Math.max(0,t+r);o.set(l,n,\"element\"),i.set(l,n,\"element\"),Lb(e)}}else{const s=e.isBackward(),a=s?i:o,c=a.getNode(),u=s?o:i,d=u.getNode();if(t.is(c)){const e=a.offset;(n<=e&&r>0||n<e&&r<0)&&a.set(l,Math.max(0,e+r),\"element\")}if(t.is(d)){const e=u.offset;(n<=e&&r>0||n<e&&r<0)&&u.set(l,Math.max(0,e+r),\"element\")}}Lb(e)}function Lb(e){const t=e.anchor,n=t.offset,r=e.focus,o=r.offset,i=t.getNode(),s=r.getNode();if(e.isCollapsed()){if(!dx(i))return;const e=i.getChildrenSize(),o=n>=e,s=o?i.getChildAtIndex(e-1):i.getChildAtIndex(n);if(db(s)){let e=0;o&&(e=s.getTextContentSize()),t.set(s.__key,e,\"text\"),r.set(s.__key,e,\"text\")}}else{if(dx(i)){const e=i.getChildrenSize(),r=n>=e,o=r?i.getChildAtIndex(e-1):i.getChildAtIndex(n);if(db(o)){let e=0;r&&(e=o.getTextContentSize()),t.set(o.__key,e,\"text\")}}if(dx(s)){const e=s.getChildrenSize(),t=o>=e,n=t?s.getChildAtIndex(e-1):s.getChildAtIndex(o);if(db(n)){let e=0;t&&(e=n.getTextContentSize()),r.set(n.__key,e,\"text\")}}}}function Fb(e,t,n,r,o){let i=null,s=0,a=null;null!==r?(i=r.__key,db(r)?(s=r.getTextContentSize(),a=\"text\"):dx(r)&&(s=r.getChildrenSize(),a=\"element\")):null!==o&&(i=o.__key,db(o)?a=\"text\":dx(o)&&(a=\"element\")),null!==i&&null!==a?e.set(i,s,a):(s=t.getIndexWithinParent(),-1===s&&(s=n.getChildrenSize()),e.set(n.__key,s,\"element\"))}function zb(e,t,n,r,o){\"text\"===e.type?(e.key=n,t||(e.offset+=o)):e.offset>r.getIndexWithinParent()&&(e.offset-=1)}function Bb(e){let t=e;e.isCollapsed()||t.removeText();const n=Mb();wb(n)&&(t=n),wb(t)||mg(161);const r=t.anchor;let o=r.getNode(),i=r.offset;for(;!Mv(o);)[o,i]=Vb(o,i);return i}function Vb(e,t){const n=e.getParent();if(!n){const e=Sx();return Jg().append(e),e.select(),[Jg(),0]}if(db(e)){const r=e.splitText(t);if(0===r.length)return[n,e.getIndexWithinParent()];const o=0===t?0:1;return[n,r[0].getIndexWithinParent()+o]}if(!dx(e)||0===t)return[n,e.getIndexWithinParent()];const r=e.getChildAtIndex(t);if(r){const n=new Eb(gb(e.__key,t,\"element\"),gb(e.__key,t,\"element\"),0,\"\"),o=e.insertNewAfter(n);o&&o.append(r,...r.getNextSiblings())}return[n,e.getIndexWithinParent()+1]}let Wb=null,Ub=null,$b=!1,Kb=!1,Hb=0;const qb={characterData:!0,childList:!0,subtree:!0};function Yb(){return $b||null!==Wb&&Wb._readOnly}function Gb(){$b&&mg(13)}function Xb(){Hb>99&&mg(14)}function Jb(){return null===Wb&&mg(195,Qb()),Wb}function Zb(){return null===Ub&&mg(196,Qb()),Ub}function Qb(){let e=0;const t=new Set,n=Tx.version;if(\"undefined\"!=typeof window)for(const r of document.querySelectorAll(\"[contenteditable]\")){const o=Lg(r);if(Ig(o))e++;else if(o){let e=String(o.constructor.version||\"<0.17.1\");e===n&&(e+=\" (separately built, likely a bundler configuration issue)\"),t.add(e)}}let r=` Detected on the page: ${e} compatible editor(s) with version ${n}`;return t.size&&(r+=` and incompatible editors with versions ${Array.from(t).join(\", \")}`),r}function ex(e,t,n){const r=t.__type,o=function(e,t){const n=e._nodes.get(t);return void 0===n&&mg(30,t),n}(e,r);let i=n.get(r);void 0===i&&(i=Array.from(o.transforms),n.set(r,i));const s=i.length;for(let e=0;e<s&&(i[e](t),t.isAttached());e++);}function tx(e,t){return void 0!==e&&e.__key!==t&&e.isAttached()}function nx(e,t){const n=e.type,r=t.get(n);void 0===r&&mg(17,n);const o=r.klass;e.type!==o.getType()&&mg(18,o.name);const i=o.importJSON(e),s=e.children;if(dx(i)&&Array.isArray(s))for(let e=0;e<s.length;e++){const n=nx(s[e],t);i.append(n)}return i}function rx(e,t,n){const r=Wb,o=$b,i=Ub;Wb=t,$b=!0,Ub=e;try{return n()}finally{Wb=r,$b=o,Ub=i}}function ox(e,t){const n=e._pendingEditorState,r=e._rootElement,o=e._headless||null===r;if(null===n)return;const i=e._editorState,s=i._selection,a=n._selection,l=e._dirtyType!==Vm,c=Wb,u=$b,d=Ub,f=e._updating,h=e._observer;let p=null;if(e._pendingEditorState=null,e._editorState=n,!o&&l&&null!==h){Ub=e,Wb=n,$b=!1,e._updating=!0;try{const t=e._dirtyType,r=e._dirtyElements,o=e._dirtyLeaves;h.disconnect(),p=function(e,t,n,r,o,i){Xv=\"\",ey=\"\",Jv=\"\",ty=r===Wm,ry=null,Vv=n,Bv=n._config,Wv=n._nodes,Uv=Vv._listeners.mutation,$v=o,Kv=i,Hv=e._nodeMap,qv=t._nodeMap,ny=t._readOnly,Yv=new Map(n._keyToDOMMap);const s=new Map;return Gv=s,gy(\"root\",null),Vv=void 0,Wv=void 0,$v=void 0,Kv=void 0,Hv=void 0,qv=void 0,Bv=void 0,Yv=void 0,Gv=void 0,s}(i,n,e,t,r,o)}catch(t){if(t instanceof Error&&e._onError(t),Kb)throw t;return Px(e,null,r,n),Cg(e),e._dirtyType=Wm,Kb=!0,ox(e,i),void(Kb=!1)}finally{h.observe(r,qb),e._updating=f,Wb=c,$b=u,Ub=d}}n._readOnly||(n._readOnly=!0);const m=e._dirtyLeaves,g=e._dirtyElements,v=e._normalizedNodes,y=e._updateTags,b=e._deferred;l&&(e._dirtyType=Vm,e._cloneNotNeeded.clear(),e._dirtyLeaves=new Set,e._dirtyElements=new Map,e._normalizedNodes=new Set,e._updateTags=new Set),function(e,t){const n=e._decorators;let r=e._pendingDecorators||n;const o=t._nodeMap;let i;for(i in r)o.has(i)||(r===n&&(r=Gg(e)),delete r[i])}(e,n);const x=o?null:Rv(e._window);if(e._editable&&null!==x&&(l||null===a||a.dirty)){Ub=e,Wb=n;try{if(null!==h&&h.disconnect(),l||null===a||a.dirty){const t=e._blockCursorElement;null!==t&&_n(t,e,r),function(e,t,n,r,o,i){const s=r.anchorNode,a=r.focusNode,l=r.anchorOffset,c=r.focusOffset,u=document.activeElement;if(o.has(\"collaboration\")&&u!==i||null!==u&&jg(u))return;if(!wb(t))return void(null!==e&&Mg(n,s,a)&&r.removeAllRanges());const d=t.anchor,f=t.focus,h=d.key,p=f.key,m=Ev(n,h),g=Ev(n,p),v=d.offset,y=f.offset,b=t.format,x=t.style,w=t.isCollapsed();let E=m,S=g,_=!1;if(\"text\"===d.type){E=Bg(m);const e=d.getNode();_=e.getFormat()!==b||e.getStyle()!==x}else wb(e)&&\"text\"===e.anchor.type&&(_=!0);var k,C,P,T,O;if(\"text\"===f.type&&(S=Bg(g)),null!==E&&null!==S&&(w&&(null===e||_||wb(e)&&(e.format!==b||e.style!==x))&&(k=b,C=x,P=v,T=h,O=performance.now(),Ny=[k,C,P,T,O]),l!==v||c!==y||s!==E||a!==S||\"Range\"===r.type&&w||(null!==u&&i.contains(u)||i.focus({preventScroll:!0}),\"element\"===d.type))){try{r.setBaseAndExtent(E,v,S,y)}catch(e){}if(!o.has(\"skip-scroll-into-view\")&&t.isCollapsed()&&null!==i&&i===document.activeElement){const e=t instanceof Eb&&\"element\"===t.anchor.type?E.childNodes[v]||null:r.rangeCount>0?r.getRangeAt(0):null;if(null!==e){let t;if(e instanceof Text){const n=document.createRange();n.selectNode(e),t=n.getBoundingClientRect()}else t=e.getBoundingClientRect();!function(e,t,n){const r=n.ownerDocument,o=r.defaultView;if(null===o)return;let{top:i,bottom:s}=t,a=0,l=0,c=n;for(;null!==c;){const t=c===r.body;if(t)a=0,l=kv(e).innerHeight;else{const e=c.getBoundingClientRect();a=e.top,l=e.bottom}let n=0;if(i<a?n=-(a-i):s>l&&(n=s-l),0!==n)if(t)o.scrollBy(0,n);else{const e=c.scrollTop;c.scrollTop+=n;const t=c.scrollTop-e;i-=t,s-=t}if(t)break;c=Sv(c)}}(n,t,i)}}Py=!0}}(s,a,e,x,y,r)}(function(e,t,n){let r=e._blockCursorElement;if(wb(n)&&n.isCollapsed()&&\"element\"===n.anchor.type&&t.contains(document.activeElement)){const o=n.anchor,i=o.getNode(),s=o.offset;let a=!1,l=null;if(s===i.getChildrenSize())Ov(i.getChildAtIndex(s-1))&&(a=!0);else{const t=i.getChildAtIndex(s);if(Ov(t)){const n=t.getPreviousSibling();(null===n||Ov(n))&&(a=!0,l=e.getElementByKey(t.__key))}}if(a){const n=e.getElementByKey(i.__key);return null===r&&(e._blockCursorElement=r=function(e){const t=e.theme,n=document.createElement(\"div\");n.contentEditable=\"false\",n.setAttribute(\"data-lexical-cursor\",\"true\");let r=t.blockCursor;if(void 0!==r){if(\"string\"==typeof r){const e=gg(r);r=t.blockCursor=e}void 0!==r&&n.classList.add(...r)}return n}(e._config)),t.style.caretColor=\"transparent\",void(null===l?n.appendChild(r):n.insertBefore(r,l))}}null!==r&&_n(r,e,t)})(e,r,a),null!==h&&h.observe(r,qb)}finally{Ub=d,Wb=c}}null!==p&&function(e,t,n,r,o){const i=Array.from(e._listeners.mutation),s=i.length;for(let e=0;e<s;e++){const[s,a]=i[e],l=t.get(a);void 0!==l&&s(l,{dirtyLeaves:r,prevEditorState:o,updateTags:n})}}(e,p,y,m,i),wb(a)||null===a||null!==s&&s.is(a)||e.dispatchCommand(Wp,void 0);const w=e._pendingDecorators;null!==w&&(e._decorators=w,e._pendingDecorators=null,ix(\"decorator\",e,!0,w)),function(e,t,n){const r=Xg(t),o=Xg(n);r!==o&&ix(\"textcontent\",e,!0,o)}(e,t||i,n),ix(\"update\",e,!0,{dirtyElements:g,dirtyLeaves:m,editorState:n,normalizedNodes:v,prevEditorState:t||i,tags:y}),function(e,t){if(e._deferred=[],0!==t.length){const n=e._updating;e._updating=!0;try{for(let e=0;e<t.length;e++)t[e]()}finally{e._updating=n}}}(e,b),function(e){const t=e._updates;if(0!==t.length){const n=t.shift();if(n){const[t,r]=n;lx(e,t,r)}}}(e)}function ix(e,t,n,...r){const o=t._updating;t._updating=n;try{const n=Array.from(t._listeners[e]);for(let e=0;e<n.length;e++)n[e].apply(null,r)}finally{t._updating=o}}function sx(e,t,n){if(!1===e._updating||Ub!==e){let r=!1;return e.update((()=>{r=sx(e,t,n)})),r}const r=rv(e);for(let o=4;o>=0;o--)for(let i=0;i<r.length;i++){const s=r[i]._commands.get(t);if(void 0!==s){const t=s[o];if(void 0!==t){const r=Array.from(t),o=r.length;for(let t=0;t<o;t++)if(!0===r[t](n,e))return!0}}}return!1}function ax(e,t){const n=e._updates;let r=t||!1;for(;0!==n.length;){const t=n.shift();if(t){const[n,o]=t;let i,s;if(void 0!==o){if(i=o.onUpdate,s=o.tag,o.skipTransforms&&(r=!0),o.discrete){const t=e._pendingEditorState;null===t&&mg(191),t._flushSync=!0}i&&e._deferred.push(i),s&&e._updateTags.add(s)}n()}}return r}function lx(e,t,n){const r=e._updateTags;let o,i,s=!1,a=!1;void 0!==n&&(o=n.onUpdate,i=n.tag,null!=i&&r.add(i),s=n.skipTransforms||!1,a=n.discrete||!1),o&&e._deferred.push(o);const l=e._editorState;let c=e._pendingEditorState,u=!1;(null===c||c._readOnly)&&(c=e._pendingEditorState=new bx(new Map((c||l)._nodeMap)),u=!0),c._flushSync=a;const d=Wb,f=$b,h=Ub,p=e._updating;Wb=c,$b=!1,e._updating=!0,Ub=e;try{u&&(e._headless?null!==l._selection&&(c._selection=l._selection.clone()):c._selection=function(e){const t=e.getEditorState()._selection,n=Rv(e._window);return wb(t)||null==t?jb(t,n,e,null):t.clone()}(e));const n=e._compositionKey;t(),s=ax(e,s),function(e,t){const n=t.getEditorState()._selection,r=e._selection;if(wb(r)){const e=r.anchor,t=r.focus;let o;if(\"text\"===e.type&&(o=e.getNode(),o.selectionTransform(n,r)),\"text\"===t.type){const e=t.getNode();o!==e&&e.selectionTransform(n,r)}}}(c,e),e._dirtyType!==Vm&&(s?function(e,t){const n=t._dirtyLeaves,r=e._nodeMap;for(const e of n){const t=r.get(e);db(t)&&t.isAttached()&&t.isSimpleText()&&!t.isUnmergeable()&&Og(t)}}(c,e):function(e,t){const n=t._dirtyLeaves,r=t._dirtyElements,o=e._nodeMap,i=Kg(),s=new Map;let a=n,l=a.size,c=r,u=c.size;for(;l>0||u>0;){if(l>0){t._dirtyLeaves=new Set;for(const e of a){const r=o.get(e);db(r)&&r.isAttached()&&r.isSimpleText()&&!r.isUnmergeable()&&Og(r),void 0!==r&&tx(r,i)&&ex(t,r,s),n.add(e)}if(a=t._dirtyLeaves,l=a.size,l>0){Hb++;continue}}t._dirtyLeaves=new Set,t._dirtyElements=new Map;for(const e of c){const n=e[0],a=e[1];if(\"root\"!==n&&!a)continue;const l=o.get(n);void 0!==l&&tx(l,i)&&ex(t,l,s),r.set(n,a)}a=t._dirtyLeaves,l=a.size,c=t._dirtyElements,u=c.size,Hb++}t._dirtyLeaves=n,t._dirtyElements=r}(c,e),ax(e),function(e,t,n,r){const o=e._nodeMap,i=t._nodeMap,s=[];for(const[e]of r){const t=i.get(e);void 0!==t&&(t.isAttached()||(dx(t)&&zv(t,e,o,i,s,r),o.has(e)||r.delete(e),s.push(e)))}for(const e of s)i.delete(e);for(const e of n){const t=i.get(e);void 0===t||t.isAttached()||(o.has(e)||n.delete(e),i.delete(e))}}(l,c,e._dirtyLeaves,e._dirtyElements)),n!==e._compositionKey&&(c._flushSync=!0);const r=c._selection;if(wb(r)){const e=c._nodeMap,t=r.anchor.key,n=r.focus.key;void 0!==e.get(t)&&void 0!==e.get(n)||mg(19)}else Sb(r)&&0===r._nodes.size&&(c._selection=null)}catch(t){return t instanceof Error&&e._onError(t),e._pendingEditorState=l,e._dirtyType=Wm,e._cloneNotNeeded.clear(),e._dirtyLeaves=new Set,e._dirtyElements.clear(),void ox(e)}finally{Wb=d,$b=f,Ub=h,e._updating=p,Hb=0}const m=e._dirtyType!==Vm||function(e,t){const n=t.getEditorState()._selection,r=e._selection;if(null!==r){if(r.dirty||!r.is(n))return!0}else if(null!==n)return!0;return!1}(c,e);m?c._flushSync?(c._flushSync=!1,ox(e)):u&&Ag((()=>{ox(e)})):(c._flushSync=!1,u&&(r.clear(),e._deferred=[],e._pendingEditorState=null))}function cx(e,t,n){e._updating?e._updates.push([t,n]):lx(e,t,n)}class ux extends Uy{constructor(e){super(e),this.__first=null,this.__last=null,this.__size=0,this.__format=0,this.__style=\"\",this.__indent=0,this.__dir=null}afterCloneFrom(e){super.afterCloneFrom(e),this.__first=e.__first,this.__last=e.__last,this.__size=e.__size,this.__indent=e.__indent,this.__format=e.__format,this.__style=e.__style,this.__dir=e.__dir}getFormat(){return this.getLatest().__format}getFormatType(){const e=this.getFormat();return dg[e]||\"\"}getStyle(){return this.getLatest().__style}getIndent(){return this.getLatest().__indent}getChildren(){const e=[];let t=this.getFirstChild();for(;null!==t;)e.push(t),t=t.getNextSibling();return e}getChildrenKeys(){const e=[];let t=this.getFirstChild();for(;null!==t;)e.push(t.__key),t=t.getNextSibling();return e}getChildrenSize(){return this.getLatest().__size}isEmpty(){return 0===this.getChildrenSize()}isDirty(){const e=Zb()._dirtyElements;return null!==e&&e.has(this.__key)}isLastChild(){const e=this.getLatest(),t=this.getParentOrThrow().getLastChild();return null!==t&&t.is(e)}getAllTextNodes(){const e=[];let t=this.getFirstChild();for(;null!==t;){if(db(t)&&e.push(t),dx(t)){const n=t.getAllTextNodes();e.push(...n)}t=t.getNextSibling()}return e}getFirstDescendant(){let e=this.getFirstChild();for(;dx(e);){const t=e.getFirstChild();if(null===t)break;e=t}return e}getLastDescendant(){let e=this.getLastChild();for(;dx(e);){const t=e.getLastChild();if(null===t)break;e=t}return e}getDescendantByIndex(e){const t=this.getChildren(),n=t.length;if(e>=n){const e=t[n-1];return dx(e)&&e.getLastDescendant()||e||null}const r=t[e];return dx(r)&&r.getFirstDescendant()||r||null}getFirstChild(){const e=this.getLatest().__first;return null===e?null:Hg(e)}getFirstChildOrThrow(){const e=this.getFirstChild();return null===e&&mg(45,this.__key),e}getLastChild(){const e=this.getLatest().__last;return null===e?null:Hg(e)}getLastChildOrThrow(){const e=this.getLastChild();return null===e&&mg(96,this.__key),e}getChildAtIndex(e){const t=this.getChildrenSize();let n,r;if(e<t/2){for(n=this.getFirstChild(),r=0;null!==n&&r<=e;){if(r===e)return n;n=n.getNextSibling(),r++}return null}for(n=this.getLastChild(),r=t-1;null!==n&&r>=e;){if(r===e)return n;n=n.getPreviousSibling(),r--}return null}getTextContent(){let e=\"\";const t=this.getChildren(),n=t.length;for(let r=0;r<n;r++){const o=t[r];e+=o.getTextContent(),dx(o)&&r!==n-1&&!o.isInline()&&(e+=ng)}return e}getTextContentSize(){let e=0;const t=this.getChildren(),n=t.length;for(let r=0;r<n;r++){const o=t[r];e+=o.getTextContentSize(),dx(o)&&r!==n-1&&!o.isInline()&&(e+=ng.length)}return e}getDirection(){return this.getLatest().__dir}hasFormat(e){if(\"\"!==e){const t=ug[e];return!!(this.getFormat()&t)}return!1}select(e,t){Gb();const n=Mb();let r=e,o=t;const i=this.getChildrenSize();if(!this.canBeEmpty())if(0===e&&0===t){const e=this.getFirstChild();if(db(e)||dx(e))return e.select(0,0)}else if(!(void 0!==e&&e!==i||void 0!==t&&t!==i)){const e=this.getLastChild();if(db(e)||dx(e))return e.select()}void 0===r&&(r=i),void 0===o&&(o=i);const s=this.__key;return wb(n)?(n.anchor.set(s,r,\"element\"),n.focus.set(s,o,\"element\"),n.dirty=!0,n):Nb(s,r,s,o,\"element\",\"element\")}selectStart(){const e=this.getFirstDescendant();return e?e.selectStart():this.select()}selectEnd(){const e=this.getLastDescendant();return e?e.selectEnd():this.select()}clear(){const e=this.getWritable();return this.getChildren().forEach((e=>e.remove())),e}append(...e){return this.splice(this.getChildrenSize(),0,e)}setDirection(e){const t=this.getWritable();return t.__dir=e,t}setFormat(e){return this.getWritable().__format=\"\"!==e?ug[e]:0,this}setStyle(e){return this.getWritable().__style=e||\"\",this}setIndent(e){return this.getWritable().__indent=e,this}splice(e,t,n){const r=n.length,o=this.getChildrenSize(),i=this.getWritable(),s=i.__key,a=[],l=[],c=this.getChildAtIndex(e+t);let u=null,d=o-t+r;if(0!==e)if(e===o)u=this.getLastChild();else{const t=this.getChildAtIndex(e);null!==t&&(u=t.getPreviousSibling())}if(t>0){let e=null===u?this.getFirstChild():u.getNextSibling();for(let n=0;n<t;n++){null===e&&mg(100);const t=e.getNextSibling(),n=e.__key;Wg(e.getWritable()),l.push(n),e=t}}let f=u;for(let e=0;e<r;e++){const t=n[e];null!==f&&t.is(f)&&(u=f=f.getPreviousSibling());const r=t.getWritable();r.__parent===s&&d--,Wg(r);const o=t.__key;if(null===f)i.__first=o,r.__prev=null;else{const e=f.getWritable();e.__next=o,r.__prev=e.__key}t.__key===s&&mg(76),r.__parent=s,a.push(o),f=t}if(e+t===o)null!==f&&(f.getWritable().__next=null,i.__last=f.__key);else if(null!==c){const e=c.getWritable();if(null!==f){const t=f.getWritable();e.__prev=f.__key,t.__next=c.__key}else e.__prev=null}if(i.__size=d,l.length){const e=Mb();if(wb(e)){const t=new Set(l),n=new Set(a),{anchor:r,focus:o}=e;fx(r,t,n)&&Fb(r,r.getNode(),this,u,c),fx(o,t,n)&&Fb(o,o.getNode(),this,u,c),0!==d||this.canBeEmpty()||Cv(this)||this.remove()}}return i}exportJSON(){return{children:[],direction:this.getDirection(),format:this.getFormatType(),indent:this.getIndent(),type:\"element\",version:1}}insertNewAfter(e,t){return null}canIndent(){return!0}collapseAtStart(e){return!1}excludeFromCopy(e){return!1}canReplaceWith(e){return!0}canInsertAfter(e){return!0}canBeEmpty(){return!0}canInsertTextBefore(){return!0}canInsertTextAfter(){return!0}isInline(){return!1}isShadowRoot(){return!1}canMergeWith(e){return!1}extractWithChild(e,t,n){return!1}canMergeWhenEmpty(){return!1}}function dx(e){return e instanceof ux}function fx(e,t,n){let r=e.getNode();for(;r;){const e=r.__key;if(t.has(e)&&!n.has(e))return!0;r=r.getParent()}return!1}class hx extends Uy{constructor(e){super(e)}decorate(e,t){mg(47)}isIsolated(){return!1}isInline(){return!0}isKeyboardSelectable(){return!0}}function px(e){return e instanceof hx}class mx extends ux{static getType(){return\"root\"}static clone(){return new mx}constructor(){super(\"root\"),this.__cachedText=null}getTopLevelElementOrThrow(){mg(51)}getTextContent(){const e=this.__cachedText;return!Yb()&&Zb()._dirtyType!==Vm||null===e?super.getTextContent():e}remove(){mg(52)}replace(e){mg(53)}insertBefore(e){mg(54)}insertAfter(e){mg(55)}updateDOM(e,t){return!1}append(...e){for(let t=0;t<e.length;t++){const n=e[t];dx(n)||px(n)||mg(56)}return super.append(...e)}static importJSON(e){const t=Jg();return t.setFormat(e.format),t.setIndent(e.indent),t.setDirection(e.direction),t}exportJSON(){return{children:[],direction:this.getDirection(),format:this.getFormatType(),indent:this.getIndent(),type:\"root\",version:1}}collapseAtStart(){return!0}}function gx(e){return e instanceof mx}function vx(){return new bx(new Map([[\"root\",new mx]]))}function yx(e){const t=e.exportJSON(),n=e.constructor;if(t.type!==n.getType()&&mg(130,n.name),dx(e)){const r=t.children;Array.isArray(r)||mg(59,n.name);const o=e.getChildren();for(let e=0;e<o.length;e++){const t=yx(o[e]);r.push(t)}}return t}class bx{constructor(e,t){this._nodeMap=e,this._selection=t||null,this._flushSync=!1,this._readOnly=!1}isEmpty(){return 1===this._nodeMap.size&&null===this._selection}read(e,t){return rx(t&&t.editor||null,this,e)}clone(e){const t=new bx(this._nodeMap,void 0===e?this._selection:e);return t._readOnly=!0,t}toJSON(){return rx(null,this,(()=>({root:yx(Jg())})))}}class xx extends ux{static getType(){return\"artificial\"}createDOM(e){return document.createElement(\"div\")}}class wx extends ux{constructor(e){super(e),this.__textFormat=0,this.__textStyle=\"\"}static getType(){return\"paragraph\"}getTextFormat(){return this.getLatest().__textFormat}setTextFormat(e){const t=this.getWritable();return t.__textFormat=e,t}hasTextFormat(e){const t=lg[e];return!!(this.getTextFormat()&t)}getTextStyle(){return this.getLatest().__textStyle}setTextStyle(e){const t=this.getWritable();return t.__textStyle=e,t}static clone(e){return new wx(e.__key)}afterCloneFrom(e){super.afterCloneFrom(e),this.__textFormat=e.__textFormat,this.__textStyle=e.__textStyle}createDOM(e){const t=document.createElement(\"p\"),n=mv(e.theme,\"paragraph\");return void 0!==n&&t.classList.add(...n),t}updateDOM(e,t,n){return!1}static importDOM(){return{p:e=>({conversion:Ex,priority:0})}}exportDOM(e){const{element:t}=super.exportDOM(e);if(t&&Nv(t)){this.isEmpty()&&t.append(document.createElement(\"br\"));const e=this.getFormatType();t.style.textAlign=e;const n=this.getDirection();n&&(t.dir=n);const r=this.getIndent();r>0&&(t.style.textIndent=20*r+\"px\")}return{element:t}}static importJSON(e){const t=Sx();return t.setFormat(e.format),t.setIndent(e.indent),t.setDirection(e.direction),t.setTextFormat(e.textFormat),t}exportJSON(){return{...super.exportJSON(),textFormat:this.getTextFormat(),textStyle:this.getTextStyle(),type:\"paragraph\",version:1}}insertNewAfter(e,t){const n=Sx();n.setTextFormat(e.format),n.setTextStyle(e.style);const r=this.getDirection();return n.setDirection(r),n.setFormat(this.getFormatType()),n.setStyle(this.getTextStyle()),this.insertAfter(n,t),n}collapseAtStart(){const e=this.getChildren();if(0===e.length||db(e[0])&&\"\"===e[0].getTextContent().trim()){if(null!==this.getNextSibling())return this.selectNext(),this.remove(),!0;if(null!==this.getPreviousSibling())return this.selectPrevious(),this.remove(),!0}return!1}}function Ex(e){const t=Sx();if(e.style){t.setFormat(e.style.textAlign);const n=parseInt(e.style.textIndent,10)/20;n>0&&t.setIndent(n)}return{node:t}}function Sx(){return Pv(new wx)}function kx(e){return e instanceof wx}const Cx=1;function Px(e,t,n,r){const o=e._keyToDOMMap;o.clear(),e._editorState=vx(),e._pendingEditorState=r,e._compositionKey=null,e._dirtyType=Vm,e._cloneNotNeeded.clear(),e._dirtyLeaves=new Set,e._dirtyElements.clear(),e._normalizedNodes=new Set,e._updateTags=new Set,e._updates=[],e._blockCursorElement=null;const i=e._observer;null!==i&&(i.disconnect(),e._observer=null),null!==t&&(t.textContent=\"\"),null!==n&&(n.textContent=\"\",o.set(\"root\",n))}class Tx{constructor(e,t,n,r,o,i,s){this._parentEditor=t,this._rootElement=null,this._editorState=e,this._pendingEditorState=null,this._compositionKey=null,this._deferred=[],this._keyToDOMMap=new Map,this._updates=[],this._updating=!1,this._listeners={decorator:new Set,editable:new Set,mutation:new Map,root:new Set,textcontent:new Set,update:new Set},this._commands=new Map,this._config=r,this._nodes=n,this._decorators={},this._pendingDecorators=null,this._dirtyType=Vm,this._cloneNotNeeded=new Set,this._dirtyLeaves=new Set,this._dirtyElements=new Map,this._normalizedNodes=new Set,this._updateTags=new Set,this._observer=null,this._key=ov(),this._onError=o,this._htmlConversions=i,this._editable=s,this._headless=null!==t&&t._headless,this._window=null,this._blockCursorElement=null}isComposing(){return null!=this._compositionKey}registerUpdateListener(e){const t=this._listeners.update;return t.add(e),()=>{t.delete(e)}}registerEditableListener(e){const t=this._listeners.editable;return t.add(e),()=>{t.delete(e)}}registerDecoratorListener(e){const t=this._listeners.decorator;return t.add(e),()=>{t.delete(e)}}registerTextContentListener(e){const t=this._listeners.textcontent;return t.add(e),()=>{t.delete(e)}}registerRootListener(e){const t=this._listeners.root;return e(this._rootElement,null),t.add(e),()=>{e(null,this._rootElement),t.delete(e)}}registerCommand(e,t,n){void 0===n&&mg(35);const r=this._commands;r.has(e)||r.set(e,[new Set,new Set,new Set,new Set,new Set]);const o=r.get(e);void 0===o&&mg(36,String(e));const i=o[n];return i.add(t),()=>{i.delete(t),o.every((e=>0===e.size))&&r.delete(e)}}registerMutationListener(e,t,n){const r=this.resolveRegisteredNodeAfterReplacements(this.getRegisteredNode(e)).klass,o=this._listeners.mutation;o.set(t,r);const i=n&&n.skipInitialization;return void 0===i||i||this.initializeMutationListener(t,r),()=>{o.delete(t)}}getRegisteredNode(e){const t=this._nodes.get(e.getType());return void 0===t&&mg(37,e.name),t}resolveRegisteredNodeAfterReplacements(e){for(;e.replaceWithKlass;)e=this.getRegisteredNode(e.replaceWithKlass);return e}initializeMutationListener(e,t){const n=this._editorState,r=function(e){if(!e._readOnly&&e.isEmpty())return Lv;e._readOnly||mg(192);let t=Dv.get(e);if(!t){t=new Map,Dv.set(e,t);for(const[n,r]of e._nodeMap){const e=r.__type;let o=t.get(e);o||(o=new Map,t.set(e,o)),o.set(n,r)}}return t}(n).get(t.getType());if(!r)return;const o=new Map;for(const e of r.keys())o.set(e,\"created\");o.size>0&&e(o,{dirtyLeaves:new Set,prevEditorState:n,updateTags:new Set([\"registerMutationListener\"])})}registerNodeTransformToKlass(e,t){const n=this.getRegisteredNode(e);return n.transforms.add(t),n}registerNodeTransform(e,t){const n=this.registerNodeTransformToKlass(e,t),r=[n],o=n.replaceWithKlass;if(null!=o){const e=this.registerNodeTransformToKlass(o,t);r.push(e)}var i;return i=e.getType(),cx(this,(()=>{const e=Jb();if(e.isEmpty())return;if(\"root\"===i)return void Jg().markDirty();const t=e._nodeMap;for(const[,e]of t)e.markDirty()}),null===this._pendingEditorState?{tag:\"history-merge\"}:void 0),()=>{r.forEach((e=>e.transforms.delete(t)))}}hasNode(e){return this._nodes.has(e.getType())}hasNodes(e){return e.every(this.hasNode.bind(this))}dispatchCommand(e,t){return xv(this,e,t)}getDecorators(){return this._decorators}getRootElement(){return this._rootElement}getKey(){return this._key}setRootElement(e){const t=this._rootElement;if(e!==t){const n=mv(this._config.theme,\"root\"),r=this._pendingEditorState||this._editorState;if(this._rootElement=e,Px(this,t,e,r),null!==t&&(this._config.disableEvents||function(e){const t=e.ownerDocument,n=Cy.get(t);void 0===n&&mg(162);const r=n-1;r>=0||mg(164),Cy.set(t,r),0===r&&t.removeEventListener(\"selectionchange\",zy);const o=Lg(e);Ig(o)?(function(e){if(null!==e._parentEditor){const t=rv(e),n=t[t.length-1]._key;Fy.get(n)===e&&Fy.delete(n)}else Fy.delete(e._key)}(o),e.__lexicalEditor=null):o&&mg(198);const i=Ly(e);for(let e=0;e<i.length;e++)i[e]();e.__lexicalEventHandles=[]}(t),null!=n&&t.classList.remove(...n)),null!==e){const t=function(e){const t=e.ownerDocument;return t&&t.defaultView||null}(e),r=e.style;r.userSelect=\"text\",r.whiteSpace=\"pre-wrap\",r.wordBreak=\"break-word\",e.setAttribute(\"data-lexical-editor\",\"true\"),this._window=t,this._dirtyType=Wm,Cg(this),this._updateTags.add(\"history-merge\"),ox(this),this._config.disableEvents||function(e,t){const n=e.ownerDocument,r=Cy.get(n);(void 0===r||r<1)&&n.addEventListener(\"selectionchange\",zy),Cy.set(n,(r||0)+1),e.__lexicalEditor=t;const o=Ly(e);for(let n=0;n<wy.length;n++){const[r,i]=wy[n],s=\"function\"==typeof i?e=>{Vy(e)||(By(e),(t.isEditable()||\"click\"===r)&&i(e,t))}:e=>{if(Vy(e))return;By(e);const n=t.isEditable();switch(r){case\"cut\":return n&&xv(t,bm,e);case\"copy\":return xv(t,ym,e);case\"paste\":return n&&xv(t,Yp,e);case\"dragstart\":return n&&xv(t,mm,e);case\"dragover\":return n&&xv(t,gm,e);case\"dragend\":return n&&xv(t,vm,e);case\"focus\":return n&&xv(t,km,e);case\"blur\":return n&&xv(t,Cm,e);case\"drop\":return n&&xv(t,pm,e)}};e.addEventListener(r,s),o.push((()=>{e.removeEventListener(r,s)}))}}(e,this),null!=n&&e.classList.add(...n)}else this._editorState=r,this._pendingEditorState=null,this._window=null;ix(\"root\",this,!1,e,t)}}getElementByKey(e){return this._keyToDOMMap.get(e)||null}getEditorState(){return this._editorState}setEditorState(e,t){e.isEmpty()&&mg(38),kg(this);const n=this._pendingEditorState,r=this._updateTags,o=void 0!==t?t.tag:null;null===n||n.isEmpty()||(null!=o&&r.add(o),ox(this)),this._pendingEditorState=e,this._dirtyType=Wm,this._dirtyElements.set(\"root\",!1),this._compositionKey=null,null!=o&&r.add(o),ox(this)}parseEditorState(e,t){return function(e,t,n){const r=vx(),o=Wb,i=$b,s=Ub,a=t._dirtyElements,l=t._dirtyLeaves,c=t._cloneNotNeeded,u=t._dirtyType;t._dirtyElements=new Map,t._dirtyLeaves=new Set,t._cloneNotNeeded=new Set,t._dirtyType=0,Wb=r,$b=!1,Ub=t;try{const o=t._nodes;nx(e.root,o),n&&n(),r._readOnly=!0}catch(e){e instanceof Error&&t._onError(e)}finally{t._dirtyElements=a,t._dirtyLeaves=l,t._cloneNotNeeded=c,t._dirtyType=u,Wb=o,$b=i,Ub=s}return r}(\"string\"==typeof e?JSON.parse(e):e,this,t)}read(e){return ox(this),this.getEditorState().read(e,{editor:this})}update(e,t){cx(this,e,t)}focus(e,t={}){const n=this._rootElement;null!==n&&(n.setAttribute(\"autocapitalize\",\"off\"),cx(this,(()=>{const e=Mb(),n=Jg();null!==e?e.dirty=!0:0!==n.getChildrenSize()&&(\"rootStart\"===t.defaultSelection?n.selectStart():n.selectEnd())}),{onUpdate:()=>{n.removeAttribute(\"autocapitalize\"),e&&e()},tag:\"focus\"}),null===this._pendingEditorState&&n.removeAttribute(\"autocapitalize\"))}blur(){const e=this._rootElement;null!==e&&e.blur();const t=Rv(this._window);null!==t&&t.removeAllRanges()}isEditable(){return this._editable}setEditable(e){this._editable!==e&&(this._editable=e,ix(\"editable\",this,!0,e))}toJSON(){return{editorState:this._editorState.toJSON()}}}Tx.version=\"0.17.1+prod.esm\";const Ox=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement,Rx=Ox?o.useLayoutEffect:o.useEffect,Nx={tag:\"history-merge\"};function Ax({initialConfig:e,children:t}){const n=(0,o.useMemo)((()=>{const{theme:t,namespace:n,nodes:r,onError:o,editorState:i,html:s}=e,a=function(e,t){let n=null;return{getTheme:function(){return null!=t?t:null!=n?n.getTheme():null}}}(0,t),l=function(e){const t=e||{},n=Ub,r=t.theme||{},o=void 0===e?n:t.parentEditor||null,i=t.disableEvents||!1,s=vx(),a=t.namespace||(null!==o?o._config.namespace:ov()),l=t.editorState,c=[mx,tb,$y,hb,wx,xx,...t.nodes||[]],{onError:u,html:d}=t,f=void 0===t.editable||t.editable;let h;if(void 0===e&&null!==n)h=n._nodes;else{h=new Map;for(let e=0;e<c.length;e++){let t=c[e],n=null,r=null;if(\"function\"!=typeof t){const e=t;t=e.replace,n=e.with,r=e.withKlass||null}const o=t.getType(),i=t.transform(),s=new Set;null!==i&&s.add(i),h.set(o,{exportDOM:d&&d.export?d.export.get(t):void 0,klass:t,replace:n,replaceWithKlass:r,transforms:s})}}const p=new Tx(s,o,h,{disableEvents:i,namespace:a,theme:r},u||console.error,function(e,t){const n=new Map,r=new Set,o=e=>{Object.keys(e).forEach((t=>{let r=n.get(t);void 0===r&&(r=[],n.set(t,r)),r.push(e[t])}))};return e.forEach((e=>{const t=e.klass.importDOM;if(null==t||r.has(t))return;r.add(t);const n=t.call(e.klass);null!==n&&o(n)})),t&&o(t),n}(h,d?d.import:void 0),f);return void 0!==l&&(p._pendingEditorState=l,p._dirtyType=Wm),p}({editable:e.editable,html:s,namespace:n,nodes:r,onError:e=>o(e,l),theme:t});return function(e,t){if(null!==t)if(void 0===t)e.update((()=>{const t=Jg();if(t.isEmpty()){const n=Sx();t.append(n);const r=Ox?document.activeElement:null;(null!==Mb()||null!==r&&r===e.getRootElement())&&n.select()}}),Nx);else if(null!==t)switch(typeof t){case\"string\":{const n=e.parseEditorState(t);e.setEditorState(n,Nx);break}case\"object\":e.setEditorState(t,Nx);break;case\"function\":e.update((()=>{Jg().isEmpty()&&t(e)}),Nx)}}(l,i),[l,a]}),[]);return Rx((()=>{const t=e.editable,[r]=n;r.setEditable(void 0===t||t)}),[]),(0,iu.jsx)(zp.Provider,{value:n,children:t})}const jx=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?o.useLayoutEffect:o.useEffect;function Mx(e){return{initialValueFn:()=>e.isEditable(),subscribe:t=>e.registerEditableListener(t)}}function Ix(e){return()=>function(e){if(!function(e,t=!0){if(e)return!1;let n=Jg().getTextContent();return t&&(n=n.trim()),\"\"===n}(e,!1))return!1;const t=Jg().getChildren(),n=t.length;if(n>1)return!1;for(let e=0;e<n;e++){const n=t[e];if(px(n))return!1;if(dx(n)){if(!kx(n))return!1;if(0!==n.__indent)return!1;const t=n.getChildren(),r=t.length;for(let n=0;n<r;n++)if(!db(t[e]))return!1}}return!0}(e)}!function(e){e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")}((function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)})),function(e){e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")}((function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}));const Dx=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement,Lx=Dx&&\"documentMode\"in document?document.documentMode:null;Dx&&/Mac|iPod|iPhone|iPad/.test(navigator.platform),Dx&&/^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent),!(!Dx||!(\"InputEvent\"in window)||Lx)&&new window.InputEvent(\"input\"),Dx&&/Version\\/[\\d.]+.*Safari/.test(navigator.userAgent),Dx&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&window.MSStream,Dx&&/Android/.test(navigator.userAgent),Dx&&/^(?=.*Chrome).*/i.test(navigator.userAgent);function Fx(...e){return()=>{for(let t=e.length-1;t>=0;t--)e[t]();e.length=0}}function zx(e,t){const n=yv(e.focus,t);return px(n)&&!n.isIsolated()||dx(n)&&!n.isInline()&&!n.canBeEmpty()}function Bx(e,t,n){const r=function(e){const t=e.anchor.getNode();return\"rtl\"===(gx(t)?t:t.getParentOrThrow()).getDirection()}(e);!function(e,t,n){e.modify(t?\"extend\":\"move\",n,\"character\")}(e,t,n?!r:r)}function Vx(e,t,n,r=null){let o=null===r||t.isSelected(r);const i=dx(t)&&t.excludeFromCopy(\"html\");let s=t;if(null!==r){let e=Fv(t);e=db(e)&&null!==r?function(e,t){const n=e.getStartEndPoints();if(t.isSelected(e)&&!t.isSegmented()&&!t.isToken()&&null!==n){const[r,o]=n,i=e.isBackward(),s=r.getNode(),a=o.getNode(),l=t.is(s),c=t.is(a);if(l||c){const[n,r]=kb(e),o=s.is(a),l=t.is(i?a:s),c=t.is(i?s:a);let u,d=0;return o?(d=n>r?r:n,u=n>r?n:r):l?(d=i?r:n,u=void 0):c&&(d=0,u=i?n:r),t.__text=t.__text.slice(d,u),t}}return t}(r,e):e,s=e}const a=dx(s)?s.getChildren():[],l=e._nodes.get(s.getType());let c;c=l&&void 0!==l.exportDOM?l.exportDOM(e,s):s.exportDOM(e);const{element:u,after:d}=c;if(!u)return!1;const f=document.createDocumentFragment();for(let n=0;n<a.length;n++){const i=a[n],s=Vx(e,i,f,r);!o&&dx(t)&&s&&t.extractWithChild(i,r,\"html\")&&(o=!0)}if(o&&!i){if(Nv(u)&&u.append(f),n.append(u),d){const e=d.call(s,u);e&&u.replaceWith(e)}}else n.append(f);return o}Dx&&/AppleWebKit\\/[\\d.]+/.test(navigator.userAgent),function(e){e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")}((function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)})),new Map,new Set([\"STYLE\",\"SCRIPT\"]);var Wx=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}((function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}));function Ux(e,t){const n=e.getData(\"text/plain\")||e.getData(\"text/uri-list\");null!=n&&t.insertRawText(n)}\"undefined\"!=typeof window&&void 0!==window.document&&window.document.createElement;const $x=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement,Kx=$x&&\"documentMode\"in document?document.documentMode:null,Hx=!(!$x||!(\"InputEvent\"in window)||Kx)&&\"getTargetRanges\"in new window.InputEvent(\"input\"),qx=$x&&/Version\\/[\\d.]+.*Safari/.test(navigator.userAgent),Yx=$x&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,Gx=$x&&/^(?=.*Chrome).*/i.test(navigator.userAgent),Xx=$x&&/AppleWebKit\\/[\\d.]+/.test(navigator.userAgent)&&!Gx;function Jx(e,t){t.update((()=>{if(null!==e){const r=function(e,t){return null!==e&&Object.getPrototypeOf(e).constructor.name===t.name}(e,KeyboardEvent)?null:e.clipboardData,o=Mb();if(null!==o&&null!=r){e.preventDefault();const i=function(e,t=Mb()){return null==t&&Wx(166),wb(t)&&t.isCollapsed()||0===t.getNodes().length?\"\":function(e,t){if(\"undefined\"==typeof document||\"undefined\"==typeof window&&void 0===n.g.window)throw new Error(\"To use $generateHtmlFromNodes in headless mode please initialize a headless browser implementation such as JSDom before calling this function.\");const r=document.createElement(\"div\"),o=Jg().getChildren();for(let n=0;n<o.length;n++)Vx(e,o[n],r,t);return r.innerHTML}(e,t)}(t);null!==i&&r.setData(\"text/html\",i),r.setData(\"text/plain\",o.getTextContent())}}}))}const Zx=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?o.useLayoutEffect:o.useEffect;function Qx(e){return e.getEditorState().read(Ix(e.isComposing()))}function ew({contentEditable:e,placeholder:t=null,ErrorBoundary:n}){const[r]=Bp(),i=function(e,t){const[n,r]=(0,o.useState)((()=>e.getDecorators()));return Zx((()=>e.registerDecoratorListener((e=>{(0,zn.flushSync)((()=>{r(e)}))}))),[e]),(0,o.useEffect)((()=>{r(e.getDecorators())}),[e]),(0,o.useMemo)((()=>{const r=[],i=Object.keys(n);for(let s=0;s<i.length;s++){const a=i[s],l=(0,iu.jsx)(t,{onError:t=>e._onError(t),children:(0,iu.jsx)(o.Suspense,{fallback:null,children:n[a]})}),c=e.getElementByKey(a);null!==c&&r.push((0,zn.createPortal)(l,c,a))}return r}),[t,n,e])}(r,n);return function(e){Zx((()=>Fx(function(e){return Fx(e.registerCommand($p,(e=>{const t=Mb();return!!wb(t)&&(t.deleteCharacter(e),!0)}),0),e.registerCommand(Xp,(e=>{const t=Mb();return!!wb(t)&&(t.deleteWord(e),!0)}),0),e.registerCommand(Jp,(e=>{const t=Mb();return!!wb(t)&&(t.deleteLine(e),!0)}),0),e.registerCommand(qp,(e=>{const t=Mb();if(!wb(t))return!1;if(\"string\"==typeof e)t.insertText(e);else{const n=e.dataTransfer;if(null!=n)Ux(n,t);else{const n=e.data;n&&t.insertText(n)}}return!0}),0),e.registerCommand(Gp,(()=>{const e=Mb();return!!wb(e)&&(e.removeText(),!0)}),0),e.registerCommand(Kp,(e=>{const t=Mb();return!!wb(t)&&(t.insertLineBreak(e),!0)}),0),e.registerCommand(Hp,(()=>{const e=Mb();return!!wb(e)&&(e.insertLineBreak(),!0)}),0),e.registerCommand(om,(e=>{const t=Mb();if(!wb(t))return!1;const n=e,r=n.shiftKey;return!!zx(t,!0)&&(n.preventDefault(),Bx(t,r,!0),!0)}),0),e.registerCommand(nm,(e=>{const t=Mb();if(!wb(t))return!1;const n=e,r=n.shiftKey;return!!zx(t,!1)&&(n.preventDefault(),Bx(t,r,!1),!0)}),0),e.registerCommand(um,(t=>!!wb(Mb())&&(t.preventDefault(),e.dispatchCommand($p,!0))),0),e.registerCommand(fm,(t=>!!wb(Mb())&&(t.preventDefault(),e.dispatchCommand($p,!1))),0),e.registerCommand(lm,(t=>{if(!wb(Mb()))return!1;if(null!==t){if((Yx||qx||Xx)&&Hx)return!1;t.preventDefault()}return e.dispatchCommand(Kp,!1)}),0),e.registerCommand(xm,(()=>(function(){const e=Jg();Qg(function(e){return Rg(e.anchor),Rg(e.focus),e}(e.select(0,e.getChildrenSize())))}(),!0)),0),e.registerCommand(ym,(t=>!!wb(Mb())&&(Jx(t,e),!0)),0),e.registerCommand(bm,(t=>!!wb(Mb())&&(function(e,t){Jx(e,t),t.update((()=>{const e=Mb();wb(e)&&e.removeText()}))}(t,e),!0)),0),e.registerCommand(Yp,(t=>!!wb(Mb())&&(function(e,t){e.preventDefault(),t.update((()=>{const t=Mb(),{clipboardData:n}=e;null!=n&&wb(t)&&Ux(n,t)}),{tag:\"paste\"})}(t,e),!0)),0),e.registerCommand(pm,(e=>!!wb(Mb())&&(e.preventDefault(),!0)),0),e.registerCommand(mm,(e=>!!wb(Mb())&&(e.preventDefault(),!0)),0))}(e),function(e){const t=window.location.origin,n=n=>{if(n.origin!==t)return;const r=e.getRootElement();if(document.activeElement!==r)return;const o=n.data;if(\"string\"==typeof o){let t;try{t=JSON.parse(o)}catch(e){return}if(t&&\"nuanria_messaging\"===t.protocol&&\"request\"===t.type){const r=t.payload;if(r&&\"makeChanges\"===r.functionId){const t=r.args;if(t){const[r,o,i,s,a,l]=t;e.update((()=>{const e=Mb();if(wb(e)){const t=e.anchor;let l=t.getNode(),c=0,u=0;if(db(l)&&r>=0&&o>=0&&(c=r,u=r+o,e.setTextNodeRange(l,c,l,u)),c===u&&\"\"===i||(e.insertRawText(i),l=t.getNode()),db(l)){c=s,u=s+a;const t=l.getTextContentSize();c=c>t?t:c,u=u>t?t:u,e.setTextNodeRange(l,c,l,u)}n.stopImmediatePropagation()}}))}}}}};return window.addEventListener(\"message\",n,!0),()=>{window.removeEventListener(\"message\",n,!0)}}(e))),[e])}(r),(0,iu.jsxs)(iu.Fragment,{children:[e,(0,iu.jsx)(tw,{content:t}),i]})}function tw({content:e}){const[t]=Bp(),n=function(e){const[t,n]=(0,o.useState)((()=>Qx(e)));return Zx((()=>{function t(){const t=Qx(e);n(t)}return t(),Fx(e.registerUpdateListener((()=>{t()})),e.registerEditableListener((()=>{t()})))}),[e]),t}(t),r=function(e){const[t]=Bp(),n=(0,o.useMemo)((()=>e(t)),[t,e]),r=(0,o.useRef)(n.initialValueFn()),[i,s]=(0,o.useState)(r.current);return jx((()=>{const{initialValueFn:e,subscribe:t}=n,o=e();return r.current!==o&&(r.current=o,s(o)),t((e=>{r.current=e,s(e)}))}),[n,e]),i}(Mx);return n?\"function\"==typeof e?e(r):e:null}const nw=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?o.useLayoutEffect:o.useEffect,rw=(0,o.forwardRef)((function({editor:e,ariaActiveDescendant:t,ariaAutoComplete:n,ariaControls:r,ariaDescribedBy:i,ariaExpanded:s,ariaLabel:a,ariaLabelledBy:l,ariaMultiline:c,ariaOwns:u,ariaRequired:d,autoCapitalize:f,className:h,id:p,role:m=\"textbox\",spellCheck:g=!0,style:v,tabIndex:y,\"data-testid\":b,...x},w){const[E,S]=(0,o.useState)(e.isEditable()),_=(0,o.useCallback)((t=>{t&&t.ownerDocument&&t.ownerDocument.defaultView?e.setRootElement(t):e.setRootElement(null)}),[e]),k=(0,o.useMemo)((()=>function(...e){return t=>{e.forEach((e=>{\"function\"==typeof e?e(t):null!=e&&(e.current=t)}))}}(w,_)),[_,w]);return nw((()=>(S(e.isEditable()),e.registerEditableListener((e=>{S(e)})))),[e]),(0,iu.jsx)(\"div\",{...x,\"aria-activedescendant\":E?t:void 0,\"aria-autocomplete\":E?n:\"none\",\"aria-controls\":E?r:void 0,\"aria-describedby\":i,\"aria-expanded\":E&&\"combobox\"===m?!!s:void 0,\"aria-label\":a,\"aria-labelledby\":l,\"aria-multiline\":c,\"aria-owns\":E?u:void 0,\"aria-readonly\":!E||void 0,\"aria-required\":d,autoCapitalize:f,className:h,contentEditable:E,\"data-testid\":b,id:p,ref:k,role:E?m:void 0,spellCheck:g,style:v,tabIndex:y})}));function ow(e){return e.getEditorState().read(Ix(e.isComposing()))}const iw=(0,o.forwardRef)((function(e,t){const{placeholder:n,...r}=e,[o]=Bp();return(0,iu.jsxs)(iu.Fragment,{children:[(0,iu.jsx)(rw,{editor:o,...r,ref:t}),null!=n&&(0,iu.jsx)(sw,{editor:o,content:n})]})}));function sw({content:e,editor:t}){const n=function(e){const[t,n]=(0,o.useState)((()=>ow(e)));return nw((()=>{function t(){const t=ow(e);n(t)}return t(),Fx(e.registerUpdateListener((()=>{t()})),e.registerEditableListener((()=>{t()})))}),[e]),t}(t),[r,i]=(0,o.useState)(t.isEditable());if((0,o.useLayoutEffect)((()=>(i(t.isEditable()),t.registerEditableListener((e=>{i(e)})))),[t]),!n)return null;let s=null;return\"function\"==typeof e?s=e(r):null!==e&&(s=e),null===s?null:(0,iu.jsx)(\"div\",{\"aria-hidden\":!0,children:s})}const aw=0,lw=1,cw=2,uw=0,dw=1,fw=2,hw=3,pw=4;function mw(e){e.undoStack=[],e.redoStack=[],e.current=null}function gw({delay:e,externalHistoryState:t}){const[n]=Bp();return function(e,t,n=1e3){const r=(0,o.useMemo)((()=>t||{current:null,redoStack:[],undoStack:[]}),[t]);(0,o.useEffect)((()=>function(e,t,n){const r=function(e,t){let n=Date.now(),r=uw;return(o,i,s,a,l,c)=>{const u=Date.now();if(c.has(\"historic\"))return r=uw,n=u,cw;const d=function(e,t,n,r,o){if(null===e||0===n.size&&0===r.size&&!o)return uw;const i=t._selection,s=e._selection;if(o)return dw;if(!(wb(i)&&wb(s)&&s.isCollapsed()&&i.isCollapsed()))return uw;const a=function(e,t,n){const r=e._nodeMap,o=[];for(const e of t){const t=r.get(e);void 0!==t&&o.push(t)}for(const[e,t]of n){if(!t)continue;const n=r.get(e);void 0===n||gx(n)||o.push(n)}return o}(t,n,r);if(0===a.length)return uw;if(a.length>1){const n=t._nodeMap,r=n.get(i.anchor.key),o=n.get(s.anchor.key);return r&&o&&!e._nodeMap.has(r.__key)&&db(r)&&1===r.__text.length&&1===i.anchor.offset?fw:uw}const l=a[0],c=e._nodeMap.get(l.__key);if(!db(c)||!db(l)||c.__mode!==l.__mode)return uw;const u=c.__text,d=l.__text;if(u===d)return uw;const f=i.anchor,h=s.anchor;if(f.key!==h.key||\"text\"!==f.type)return uw;const p=f.offset,m=h.offset,g=d.length-u.length;return 1===g&&m===p-1?fw:-1===g&&m===p+1?hw:-1===g&&m===p?pw:uw}(o,i,a,l,e.isComposing()),f=(()=>{const f=null===s||s.editor===e,h=c.has(\"history-push\");if(!h&&f&&c.has(\"history-merge\"))return aw;if(null===o)return lw;const p=i._selection;return a.size>0||l.size>0?!1===h&&d!==uw&&d===r&&u<n+t&&f||1===a.size&&function(e,t,n){const r=t._nodeMap.get(e),o=n._nodeMap.get(e),i=t._selection,s=n._selection;return!(wb(i)&&wb(s)&&\"element\"===i.anchor.type&&\"element\"===i.focus.type&&\"text\"===s.anchor.type&&\"text\"===s.focus.type||!db(r)||!db(o)||r.__parent!==o.__parent)&&JSON.stringify(t.read((()=>r.exportJSON())))===JSON.stringify(n.read((()=>o.exportJSON())))}(Array.from(a)[0],o,i)?aw:lw:null!==p?aw:cw})();return n=u,r=d,f}}(e,n),o=Fx(e.registerCommand(Qp,(()=>(function(e,t){const n=t.redoStack,r=t.undoStack;if(0!==r.length){const o=t.current,i=r.pop();null!==o&&(n.push(o),e.dispatchCommand(Sm,!0)),0===r.length&&e.dispatchCommand(_m,!1),t.current=i||null,i&&i.editor.setEditorState(i.editorState,{tag:\"historic\"})}}(e,t),!0)),0),e.registerCommand(em,(()=>(function(e,t){const n=t.redoStack,r=t.undoStack;if(0!==n.length){const o=t.current;null!==o&&(r.push(o),e.dispatchCommand(_m,!0));const i=n.pop();0===n.length&&e.dispatchCommand(Sm,!1),t.current=i||null,i&&i.editor.setEditorState(i.editorState,{tag:\"historic\"})}}(e,t),!0)),0),e.registerCommand(wm,(()=>(mw(t),!1)),0),e.registerCommand(Em,(()=>(mw(t),e.dispatchCommand(Sm,!1),e.dispatchCommand(_m,!1),!0)),0),e.registerUpdateListener((({editorState:n,prevEditorState:o,dirtyLeaves:i,dirtyElements:s,tags:a})=>{const l=t.current,c=t.redoStack,u=t.undoStack,d=null===l?null:l.editorState;if(null!==l&&n===d)return;const f=r(o,n,l,i,s,a);if(f===lw)0!==c.length&&(t.redoStack=[],e.dispatchCommand(Sm,!1)),null!==l&&(u.push({...l}),e.dispatchCommand(_m,!0));else if(f===cw)return;t.current={editor:e,editorState:n}})));return o}(e,r,n)),[n,e,r])}(n,t,e),null}function vw(e,t){return vw=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},vw(e,t)}var yw={error:null},bw=function(e){var t,n;function r(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).state=yw,t.resetErrorBoundary=function(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];null==t.props.onReset||(e=t.props).onReset.apply(e,r),t.reset()},t}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,vw(t,n),r.getDerivedStateFromError=function(e){return{error:e}};var i=r.prototype;return i.reset=function(){this.setState(yw)},i.componentDidCatch=function(e,t){var n,r;null==(n=(r=this.props).onError)||n.call(r,e,t)},i.componentDidUpdate=function(e,t){var n,r,o,i,s=this.state.error,a=this.props.resetKeys;null!==s&&null!==t.error&&(void 0===(o=e.resetKeys)&&(o=[]),void 0===(i=a)&&(i=[]),o.length!==i.length||o.some((function(e,t){return!Object.is(e,i[t])})))&&(null==(n=(r=this.props).onResetKeysChange)||n.call(r,e.resetKeys,a),this.reset())},i.render=function(){var e=this.state.error,t=this.props,n=t.fallbackRender,r=t.FallbackComponent,i=t.fallback;if(null!==e){var s={error:e,resetErrorBoundary:this.resetErrorBoundary};if(o.isValidElement(i))return i;if(\"function\"==typeof n)return n(s);if(r)return o.createElement(r,s);throw new Error(\"react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop\")}return this.props.children},r}(o.Component);function xw({children:e,onError:t}){return(0,iu.jsx)(bw,{fallback:(0,iu.jsx)(\"div\",{style:{border:\"1px solid #f00\",color:\"#f00\",padding:\"8px\"},children:\"An error was thrown.\"}),onError:t,children:e})}const ww=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?o.useLayoutEffect:o.useEffect;function Ew({ignoreHistoryMergeTagChange:e=!0,ignoreSelectionChange:t=!1,onChange:n}){const[r]=Bp();return ww((()=>{if(n)return r.registerUpdateListener((({editorState:o,dirtyElements:i,dirtyLeaves:s,prevEditorState:a,tags:l})=>{t&&0===i.size&&0===s.size||e&&l.has(\"history-merge\")||a.isEmpty()||n(o,r,l)}))}),[r,e,t,n]),null}function Sw({editorRef:e}){const[t]=Bp();return o.useEffect((()=>{\"function\"==typeof e?e(t):\"object\"==typeof e&&(e.current=t)}),[t]),null}var _w={sm:\"py-1.5 px-2 rounded [&_.editor-content>p]:text-sm [&_.editor-content>p]:font-medium [&_.editor-content>p]:leading-[1.625rem]\",md:\"py-2 px-2.5 rounded-md [&_.editor-content>p]:text-sm [&_.editor-content>p]:font-medium [&_.editor-content>p]:leading-[1.625rem]\",lg:\"py-2.5 px-3 rounded-md [&_.editor-content>p]:text-sm [&_.editor-content>p]:font-medium [&_.editor-content>p]:leading-[1.6875rem]\"},kw={sm:\"p-1.5 rounded-md max-h-[10.75rem]\",md:\"p-2 rounded-lg max-h-[13.5rem]\",lg:\"p-2 rounded-lg max-h-[13.5rem]\"},Cw={sm:\"p-1.5 rounded text-sm leading-5 font-normal\",md:\"p-2 rounded-md text-base leading-6 font-normal\",lg:\"p-2 rounded-md text-base leading-6 font-normal\"};const Pw=\"startTransition\",Tw=\"undefined\"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?o.useLayoutEffect:o.useEffect,Ow=e=>{const t=document.getElementById(\"typeahead-menu\");if(!t)return;const n=t.getBoundingClientRect();n.top+n.height>window.innerHeight&&t.scrollIntoView({block:\"center\"}),n.top<0&&t.scrollIntoView({block:\"center\"}),e.scrollIntoView({block:\"nearest\"})};function Rw(e,t){const n=e.getBoundingClientRect(),r=t.getBoundingClientRect();return n.top>r.top&&n.top<r.bottom}const Nw={};function Aw({close:e,editor:t,anchorElementRef:n,resolution:r,options:i,menuRenderFn:s,onSelectOption:a,shouldSplitNodeWithQuery:l=!1,commandPriority:c=Cx}){const[u,d]=(0,o.useState)(null),f=r.match&&r.match.matchingString;(0,o.useEffect)((()=>{d(0)}),[f]);const h=(0,o.useCallback)((n=>{t.update((()=>{const t=null!=r.match&&l?function(e){const t=Mb();if(!wb(t)||!t.isCollapsed())return null;const n=t.anchor;if(\"text\"!==n.type)return null;const r=n.getNode();if(!r.isSimpleText())return null;const o=n.offset,i=r.getTextContent().slice(0,o),s=e.replaceableString.length,a=o-function(e,t,n){let r=n;for(let n=r;n<=t.length;n++)e.substr(-n)===t.substr(0,n)&&(r=n);return r}(i,e.matchingString,s);if(a<0)return null;let l;return 0===a?[l]=r.splitText(o):[,l]=r.splitText(a,o),l}(r.match):null;a(n,t,e,r.match?r.match.matchingString:\"\")}))}),[t,l,r.match,a,e]),p=(0,o.useCallback)((e=>{const n=t.getRootElement();null!==n&&(n.setAttribute(\"aria-activedescendant\",\"typeahead-item-\"+e),d(e))}),[t]);return(0,o.useEffect)((()=>()=>{const e=t.getRootElement();null!==e&&e.removeAttribute(\"aria-activedescendant\")}),[t]),Tw((()=>{null===i?d(null):null===u&&p(0)}),[i,u,p]),(0,o.useEffect)((()=>Fx(t.registerCommand(Nw,(({option:e})=>!(!e.ref||null==e.ref.current||(Ow(e.ref.current),0))),c))),[t,p,c]),(0,o.useEffect)((()=>Fx(t.registerCommand(am,(e=>{const n=e;if(null!==i&&i.length&&null!==u){const e=u!==i.length-1?u+1:0;p(e);const r=i[e];null!=r.ref&&r.ref.current&&t.dispatchCommand(Nw,{index:e,option:r}),n.preventDefault(),n.stopImmediatePropagation()}return!0}),c),t.registerCommand(sm,(e=>{const t=e;if(null!==i&&i.length&&null!==u){const e=0!==u?u-1:i.length-1;p(e);const n=i[e];null!=n.ref&&n.ref.current&&Ow(n.ref.current),t.preventDefault(),t.stopImmediatePropagation()}return!0}),c),t.registerCommand(dm,(t=>{const n=t;return n.preventDefault(),n.stopImmediatePropagation(),e(),!0}),c),t.registerCommand(hm,(e=>{const t=e;return null!==i&&null!==u&&null!=i[u]&&(t.preventDefault(),t.stopImmediatePropagation(),h(i[u]),!0)}),c),t.registerCommand(lm,(e=>null!==i&&null!==u&&null!=i[u]&&(null!==e&&(e.preventDefault(),e.stopImmediatePropagation()),h(i[u]),!0)),c))),[h,e,t,i,u,p,c]),s(n,(0,o.useMemo)((()=>({options:i,selectOptionAndCleanUp:h,selectedIndex:u,setHighlightedIndex:d})),[h,u,i]),r.match?r.match.matchingString:\"\")}function jw({options:e,onQueryChange:t,onSelectOption:n,onOpen:r,onClose:s,menuRenderFn:a,triggerFn:l,anchorClassName:c,commandPriority:u=Cx,parent:d}){const[f]=Bp(),[h,p]=(0,o.useState)(null),m=function(e,t,n,r=document.body){const[i]=Bp(),s=(0,o.useRef)(document.createElement(\"div\")),a=(0,o.useCallback)((()=>{s.current.style.top=s.current.style.bottom;const t=i.getRootElement(),o=s.current,a=o.firstChild;if(null!==t&&null!==e){const{left:i,top:l,width:c,height:u}=e.getRect(),d=s.current.offsetHeight;if(o.style.top=`${l+window.pageYOffset+d+3}px`,o.style.left=`${i+window.pageXOffset}px`,o.style.height=`${u}px`,o.style.width=`${c}px`,null!==a){a.style.top=`${l}`;const e=a.getBoundingClientRect(),n=e.height,r=e.width,s=t.getBoundingClientRect();i+r>s.right&&(o.style.left=`${s.right-r+window.pageXOffset}px`),(l+n>window.innerHeight||l+n>s.bottom)&&l-s.top>n+u&&(o.style.top=l-n+window.pageYOffset-u+\"px\")}o.isConnected||(null!=n&&(o.className=n),o.setAttribute(\"aria-label\",\"Typeahead menu\"),o.setAttribute(\"id\",\"typeahead-menu\"),o.setAttribute(\"role\",\"listbox\"),o.style.display=\"block\",o.style.position=\"absolute\",r.append(o)),s.current=o,t.setAttribute(\"aria-controls\",\"typeahead-menu\")}}),[i,e,n,r]);(0,o.useEffect)((()=>{const t=i.getRootElement();if(null!==e)return a(),()=>{null!==t&&t.removeAttribute(\"aria-controls\");const e=s.current;null!==e&&e.isConnected&&e.remove()}}),[i,a,e]);const l=(0,o.useCallback)((n=>{null!==e&&(n||t(null))}),[e,t]);return function(e,t,n,r){const[i]=Bp();(0,o.useEffect)((()=>{if(null!=t&&null!=e){const e=i.getRootElement(),o=null!=e?function(e){let t=getComputedStyle(e);const n=\"absolute\"===t.position,r=/(auto|scroll)/;if(\"fixed\"===t.position)return document.body;for(let o=e;o=o.parentElement;)if(t=getComputedStyle(o),(!n||\"static\"!==t.position)&&r.test(t.overflow+t.overflowY+t.overflowX))return o;return document.body}(e):document.body;let s=!1,a=Rw(t,o);const l=function(){s||(window.requestAnimationFrame((function(){n(),s=!1})),s=!0);const e=Rw(t,o);e!==a&&(a=e,null!=r&&r(e))},c=new ResizeObserver(n);return window.addEventListener(\"resize\",n),document.addEventListener(\"scroll\",l,{capture:!0,passive:!0}),c.observe(t),()=>{c.unobserve(t),window.removeEventListener(\"resize\",n),document.removeEventListener(\"scroll\",l,!0)}}}),[t,i,r,n,e])}(e,s.current,a,l),s}(h,p,c,d),g=(0,o.useCallback)((()=>{p(null),null!=s&&null!==h&&s()}),[s,h]),v=(0,o.useCallback)((e=>{p(e),null!=r&&null===h&&r(e)}),[r,h]);return(0,o.useEffect)((()=>{const e=f.registerUpdateListener((()=>{f.getEditorState().read((()=>{const e=f._window||window,n=e.document.createRange(),r=Mb(),o=function(e){let t=null;return e.getEditorState().read((()=>{const e=Mb();wb(e)&&(t=function(e){const t=e.anchor;if(\"text\"!==t.type)return null;const n=t.getNode();if(!n.isSimpleText())return null;const r=t.offset;return n.getTextContent().slice(0,r)}(e))})),t}(f);if(!wb(r)||!r.isCollapsed()||null===o||null===n)return void g();const s=l(o,f);if(t(s?s.matchingString:null),null!==s&&!function(e,t){return 0===t&&e.getEditorState().read((()=>{const e=Mb();if(wb(e)){const t=e.anchor.getNode().getPreviousSibling();return db(t)&&t.isTextEntity()}return!1}))}(f,s.leadOffset)){const t=function(e,t,n){const r=n.getSelection();if(null===r||!r.isCollapsed)return!1;const o=r.anchorNode,i=e,s=r.anchorOffset;if(null==o||null==s)return!1;try{t.setStart(o,i),t.setEnd(o,s)}catch(e){return!1}return!0}(s.leadOffset,n,e);if(null!==t)return a=()=>v({getRect:()=>n.getBoundingClientRect(),match:s}),void(Pw in i()?i()[Pw](a):a())}var a;g()}))}));return()=>{e()}}),[f,l,t,h,g,v]),null===h||null===f?null:(0,iu.jsx)(Aw,{close:g,resolution:h,editor:f,anchorElementRef:m,options:e,menuRenderFn:a,shouldSplitNodeWithQuery:!0,onSelectOption:n,commandPriority:u})}function Mw(e){return Mw=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Mw(e)}function Iw(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var Dw=function(e){switch(e){case\"sm\":return\"xs\";case\"md\":default:return\"sm\";case\"lg\":return\"md\"}},Lw=function(e){var t=e.data,n=e.by,r=e.size,o=e.nodeKey,i=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return Iw(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Iw(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}(Bp(),1)[0],s=!i.isEditable(),a=t;return\"object\"===Mw(t)&&(a=t[n]),React.createElement(Ge,{className:\"inline-flex\",type:\"rounded\",size:Dw(r),label:a,icon:null,closable:!0,onClose:function(e){e.stopPropagation(),e.preventDefault(),s||i.update((function(){var e=Hg(o);e&&e.remove()}))},disabled:s})};function Fw(e){return Fw=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Fw(e)}function zw(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,Kw(r.key),r)}}function Bw(e,t,n){return t=Ww(t),function(e,t){if(t&&(\"object\"==Fw(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(e,Vw()?Reflect.construct(t,n||[],Ww(e).constructor):t.apply(e,n))}function Vw(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Vw=function(){return!!e})()}function Ww(e){return Ww=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ww(e)}function Uw(e,t){return Uw=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Uw(e,t)}function $w(e,t,n){return(t=Kw(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Kw(e){var t=function(e){if(\"object\"!=Fw(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,\"string\");if(\"object\"!=Fw(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==Fw(t)?t:t+\"\"}var Hw=function(e){function t(e,n,r,o){var i;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),$w(i=Bw(this,t,[o]),\"__data\",void 0),$w(i,\"__by\",void 0),$w(i,\"__size\",void 0),i.__data=e,i.__by=n,i.__size=r,i}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Uw(e,t)}(t,e),function(e,t,n){return t&&zw(e.prototype,t),n&&zw(e,n),Object.defineProperty(e,\"prototype\",{writable:!1}),e}(t,[{key:\"createDOM\",value:function(){return document.createElement(\"span\")}},{key:\"updateDOM\",value:function(){return!1}},{key:\"exportDOM\",value:function(){return{element:document.createElement(\"span\")}}},{key:\"exportJSON\",value:function(){return{type:t.getType(),data:this.__data,by:this.__by,size:this.__size,version:1}}},{key:\"decorate\",value:function(){return React.createElement(Lw,{data:this.__data,by:this.__by,size:this.__size,nodeKey:this.__key})}}],[{key:\"getType\",value:function(){return\"mention\"}},{key:\"clone\",value:function(e){return new t(e.__data,e.__by,e.__size,e.__key)}},{key:\"importJSON\",value:function(e){return qw(e.data,e.by,e.size)}}])}(hx),qw=function(e,t,n){return new Hw(e,t,n)},Yw=Hw;function Gw(e){return Gw=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Gw(e)}function Xw(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,Qw(r.key),r)}}function Jw(e,t,n){return t&&Xw(e.prototype,t),n&&Xw(e,n),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function Zw(e,t,n){return(t=Qw(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Qw(e){var t=function(e){if(\"object\"!=Gw(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,\"string\");if(\"object\"!=Gw(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"==Gw(t)?t:t+\"\"}var eE=Jw((function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),Zw(this,\"data\",void 0),Zw(this,\"ref\",{current:null}),this.data=t}));function tE(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var nE=new Map,rE=function(e,t,n,r){setTimeout((function(){var o=e.filter((function(e){var n;if(\"string\"==typeof e)return e.toLowerCase().includes(t.toLowerCase());var o=null==e||null===(n=e[r])||void 0===n?void 0:n.toString();return!!o&&o.toLowerCase().includes(t.toLowerCase())}));n(o)}),500)},oE=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"name\",r=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return tE(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?tE(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}((0,o.useState)([]),2),i=r[0],s=r[1];return(0,o.useEffect)((function(){if(null!==t){var r=nE.get(t);null!==r&&(void 0===r?(nE.set(t,null),rE(e,t,(function(e){nE.set(t,e),s(e)}),n)):s(r))}else s([])}),[t]),i},iE=[\"size\",\"children\",\"selected\",\"className\"];function sE(){return sE=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},sE.apply(null,arguments)}var aE=(0,o.forwardRef)((function(e,t){var n=e.size,r=e.children,o=e.selected,i=void 0!==o&&o,s=e.className,a=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,iE);return React.createElement(\"li\",sE({role:\"option\",ref:t,className:te(\"m-0 text-text-primary cursor-pointer\",Cw[n],i&&\"bg-button-tertiary-hover\",s)},a),r)}));aE.displayName=\"Item\";var lE=Object.assign((function(e){var t=e.size,n=e.className,r=e.children;return React.createElement(\"ul\",{role:\"menu\",className:te(\"absolute inset-x-0 top-full mt-2 mx-0 mb-0 w-full h-auto overflow-y-auto overflow-x-hidden z-10 bg-background-primary border border-solid border-border-subtle shadow-lg\",kw[t],n)},r)}),{Item:aE});function cE(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return uE(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?uE(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function uE(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var dE=function(e){var t=e.optionsArray,n=e.by,r=void 0===n?\"name\":n,i=e.size,s=void 0===i?\"md\":i,a=e.trigger,l=void 0===a?\"@\":a,c=e.menuComponent,u=void 0===c?lE:c,d=e.menuItemComponent,f=void 0===d?lE.Item:d,h=\"\\\\.,\\\\+\\\\*\\\\?\\\\$\\\\@\\\\|#{}\\\\(\\\\)\\\\^\\\\-\\\\[\\\\]\\\\\\\\/!%'\\\"~=<>_:;\",p=[l].join(\"\"),m=\"[^\"+p+h+\"\\\\s]\",g=\"(?:\\\\.[ |$]| |[\"+h+\"]|)\",v=new RegExp(\"(^|\\\\s|\\\\()([\".concat(p,\"]((?:\").concat(m).concat(g,\"){0,\").concat(75,\"}))$\")),y=new RegExp(\"(^|\\\\s|\\\\()([\".concat(p,\"]((?:\").concat(m,\"){0,\").concat(50,\"}))$\")),b=cE(Bp(),1)[0],x=cE((0,o.useState)(null),2),w=x[0],E=x[1],S=oE(t,w,r),_=(0,o.useCallback)((function(e,t,n){b.update((function(){var o=qw(e.data,r,s);t&&t.replace(o),n()}))}),[b]),k=(0,o.useMemo)((function(){return S.map((function(e){return new eE(e)}))}),[b,S]);return React.createElement(jw,{onQueryChange:E,onSelectOption:_,triggerFn:function(e){var t=v.exec(e);if(null===t&&(t=y.exec(e)),null!==t){var n=t[1],r=t[3];if(r.length>=0)return{leadOffset:t.index+n.length,matchingString:r,replaceableString:t[2]}}return null},options:k,menuRenderFn:function(e,t){var n=t.selectedIndex,o=t.selectOptionAndCleanUp,i=t.setHighlightedIndex;return e.current&&!(null==k||!k.length)&&React.createElement(u,{size:s},k.map((function(e,t){var a;return React.createElement(f,{key:t,ref:e.ref,size:s,selected:t===n,onMouseEnter:function(){i(t)},onClick:function(){return o(e)}},\"string\"==typeof e.data?e.data:null===(a=e.data)||void 0===a?void 0:a[r])})))}})},fE={ltr:\"ltr\",rtl:\"rtl\",paragraph:\"editor-paragraph\",quote:\"editor-quote\",heading:{h1:\"editor-heading-h1\",h2:\"editor-heading-h2\",h3:\"editor-heading-h3\",h4:\"editor-heading-h4\",h5:\"editor-heading-h5\",h6:\"editor-heading-h6\"},list:{nested:{listitem:\"editor-nested-listitem\"},ol:\"editor-list-ol\",ul:\"editor-list-ul\",listitem:\"editor-listItem\",listitemChecked:\"editor-listItemChecked\",listitemUnchecked:\"editor-listItemUnchecked\"},hashtag:\"editor-hashtag\",image:\"editor-image\",link:\"editor-link\",text:{bold:\"editor-textBold\",code:\"editor-textCode\",italic:\"editor-textItalic\",strikethrough:\"editor-textStrikethrough\",subscript:\"editor-textSubscript\",superscript:\"editor-textSuperscript\",underline:\"editor-textUnderline\",underlineStrikethrough:\"editor-textUnderlineStrikethrough\"},code:\"editor-code\",codeHighlight:{atrule:\"editor-tokenAttr\",attr:\"editor-tokenAttr\",boolean:\"editor-tokenProperty\",builtin:\"editor-tokenSelector\",cdata:\"editor-tokenComment\",char:\"editor-tokenSelector\",class:\"editor-tokenFunction\",\"class-name\":\"editor-tokenFunction\",comment:\"editor-tokenComment\",constant:\"editor-tokenProperty\",deleted:\"editor-tokenProperty\",doctype:\"editor-tokenComment\",entity:\"editor-tokenOperator\",function:\"editor-tokenFunction\",important:\"editor-tokenVariable\",inserted:\"editor-tokenSelector\",keyword:\"editor-tokenAttr\",namespace:\"editor-tokenVariable\",number:\"editor-tokenProperty\",operator:\"editor-tokenOperator\",prolog:\"editor-tokenComment\",property:\"editor-tokenProperty\",punctuation:\"editor-tokenPunctuation\",regex:\"editor-tokenVariable\",selector:\"editor-tokenSelector\",string:\"editor-tokenSelector\",symbol:\"editor-tokenProperty\",tag:\"editor-tokenProperty\",url:\"editor-tokenOperator\",variable:\"editor-tokenVariable\"}},hE=function(e){var t=e.content;return React.createElement(\"div\",{className:\"pointer-events-none absolute inset-0 flex items-center justify-start text-field-placeholder\"},t)};function pE(e){console.error(e)}var mE=function(e,t){var n,r,i=e.defaultValue,s=void 0===i?\"\":i,a=e.placeholder,l=void 0===a?\"Press @ to view variable suggestions\":a,c=e.onChange,u=e.size,d=void 0===u?\"md\":u,f=e.autoFocus,h=void 0!==f&&f,p=e.options,m=void 0===p?[]:p,g=e.by,v=void 0===g?\"name\":g,y=e.trigger,b=void 0===y?\"@\":y,x=e.menuComponent,w=e.menuItemComponent,E=e.className,S=e.disabled,_=void 0!==S&&S,k={namespace:\"Editor\",editorTheme:fE,onError:pE,nodes:[Yw],editorState:s||'{\\n    \"root\": {\\n        \"children\": [\\n            {\\n                \"children\": [],\\n                \"direction\": null,\\n                \"format\": \"\",\\n                \"indent\": 0,\\n                \"type\": \"paragraph\",\\n                \"version\": 1,\\n                \"textFormat\": 0,\\n                \"textStyle\": \"\"\\n            }\\n        ],\\n        \"direction\": null,\\n        \"format\": \"\",\\n        \"indent\": 0,\\n        \"type\": \"root\",\\n        \"version\": 1\\n    }\\n}',editable:!_};return(0,o.isValidElement)(x)&&(n=x),(0,o.isValidElement)(w)&&(r=w),React.createElement(\"div\",{className:te(\"relative w-full\",\"border border-solid focus-within:ring-2 focus-within:ring-offset-2 border-field-border hover:border-border-strong focus-within:!border-focus-border focus-within:ring-focus transition duration-150 ease-in-out\",_w[d],_&&\"bg-field-secondary-background border-field-border-disabled hover:border-field-border-disabled [&_p]:text-badge-color-disabled cursor-not-allowed\")},React.createElement(Ax,{initialConfig:k},React.createElement(\"div\",{className:\"relative w-full [&_p]:m-0\"},React.createElement(ew,{contentEditable:React.createElement(iw,{className:te(\"editor-content focus-visible:outline-none outline-none\",\"w-full min-h-[1.625rem] [&>p]:w-full [&>p]:m-0\",E)}),placeholder:React.createElement(hE,{content:l}),ErrorBoundary:xw})),React.createElement(gw,null),React.createElement(dE,{menuComponent:n,menuItemComponent:r,size:d,by:v,optionsArray:m,trigger:b}),React.createElement(Ew,{onChange:function(e,t){\"function\"==typeof c&&c(e,t)},ignoreSelectionChange:!0}),t&&React.createElement(Sw,{editorRef:t}),h&&React.createElement(Vp,null)))},gE=(0,o.forwardRef)(mE);gE.displayName=\"EditorInput\";var vE=gE;const yE=xe(\"Plus\",[[\"path\",{d:\"M5 12h14\",key:\"1ays0h\"}],[\"path\",{d:\"M12 5v14\",key:\"s699le\"}]]);var bE=function(e,t){return te(\"rounded-full text-brand-primary-600 transition-colors duration-300\",e[t].dot,e[t].ring)},xE=[\"variant\",\"size\",\"type\",\"currentStep\",\"children\",\"className\"],wE=[\"labelText\",\"icon\",\"stepClasses\",\"isCurrent\",\"isCompleted\",\"className\",\"type\",\"variant\",\"sizeClasses\",\"size\",\"isLast\",\"index\"];function EE(){return EE=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},EE.apply(null,arguments)}function SE(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var _E=function(e){var t=e.variant,n=void 0===t?\"dot\":t,r=e.size,o=void 0===r?\"sm\":r,s=e.type,a=void 0===s?\"inline\":s,l=e.currentStep,c=void 0===l?1:l,u=e.children,d=e.className,f=SE(e,xE),h=i().Children.count(u),p={sm:{dot:\"size-2.5\",ring:\"size-5\",numberIcon:\"size-5 text-tiny\",icon:\"size-5\",label:\"text-xs\"},md:{dot:\"size-3\",ring:\"size-6\",numberIcon:\"size-6 text-sm\",icon:\"size-6\",label:\"text-sm\"},lg:{dot:\"size-3.5\",ring:\"size-7\",numberIcon:\"size-7 text-md\",icon:\"size-7\",label:\"text-sm\"}},m=i().Children.map(u,(function(e,t){var r={isCompleted:t+1<c,isCurrent:t+1===c,sizeClasses:p,size:o,variant:n,type:a,isLast:t+1===h,index:t};return i().createElement(i().Fragment,{key:t},i().cloneElement(e,r))}));return i().createElement(\"div\",EE({className:te(\"flex w-full\",d,\"inline\"===a?\"items-center justify-between\":\"\")},f),m)};_E.Step=function(e){var t=e.labelText,n=e.icon,r=void 0===n?i().createElement(yE,null):n,o=(e.stepClasses,e.isCurrent),s=e.isCompleted,a=e.className,l=e.type,c=e.variant,u=e.sizeClasses,d=e.size,f=e.isLast,h=e.index,p=SE(e,wE),m=function(e,t,n,r,o,s,a){if(t)return i().createElement(Ee,{className:bE(r,o)});var l=function(e,t,n){return te(\"relative flex items-center rounded-full justify-center transition-colors z-10 duration-500 ring-1\",e?\"ring-brand-primary-600\":\"ring-border-subtle\",t[n].ring)}(n,r,o),c=function(e,t,n,r){var o=\"absolute rounded-full transition-colors duration-500 \".concat(n[r].dot);return\"dot\"===e?te(o,n[r].dot,t?\"bg-brand-primary-600\":\"bg-text-tertiary\"):\"number\"===e?te(o,n[r].dot,t?\"text-brand-primary-600\":\"text-text-tertiary\",\"flex items-center justify-center\"):\"icon\"===e?te(o,t?\"text-brand-primary-600\":\"text-text-tertiary\",\"flex items-center justify-center\"):\"\"}(e,n,r,o),u=null;return\"number\"===e?u=a+1:\"icon\"===e&&s&&(u=s),i().createElement(\"span\",{className:l},i().createElement(\"span\",{className:c},u))}(c,s,o,u,d,r,h),g={lg:\"left-[calc(50%+14px)] right-[calc(-50%+14px)]\",md:\"left-[calc(50%+12px)] right-[calc(-50%+12px)]\",sm:\"left-[calc(50%+10px)] right-[calc(-50%+10px)]\"},v={lg:\"top-3.5\",md:\"top-3\",sm:\"top-2.5\"},y=function(){if(t){var e=te(u[d].label,\"text-text-tertiary\",o?\"text-brand-primary-600\":\"\",\"break-word\",\"stack\"===l?\"mt-2 transform max-w-xs\":\"mx-2 max-w-32\");return i().createElement(\"span\",{className:e},t)}return null},b=function(){if(!f){var e=te(\"block\",s?\"border-brand-primary-600\":\"border-border-subtle\");return\"stack\"===l?i().createElement(\"div\",{className:te(\"relative\",\"flex\",\"border-solid\",\"border-y\",\"absolute\",s?\"border-brand-primary-600\":\"border-border-subtle\",v[d],g[d])},i().createElement(\"span\",{className:\"block\"})):i().createElement(\"div\",{className:\"flex-1\"},i().createElement(\"span\",{className:te(e,\"mr-2\",\"border-y border-solid\")}))}return null};return\"stack\"===l?i().createElement(\"div\",{className:\"relative flex-1 justify-center\"},i().createElement(\"div\",EE({className:te(\"flex items-center flex-col\",a)},p),m,y()),b()):i().createElement(i().Fragment,null,i().createElement(\"div\",EE({className:te(\"flex items-center\",a)},p),m,y()),b())};var kE=_E,CE=[\"variant\",\"className\"];function PE(){return PE=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},PE.apply(null,arguments)}var TE=function(e){var t,n,r=e.variant,o=void 0===r?\"rectangular\":r,s=e.className,a=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,CE),l=null===(t={circular:\"rounded-full bg-gray-200 \",rectangular:\"rounded-md bg-gray-200\"})||void 0===t?void 0:t[o],c=null===(n={circular:\"size-10\",rectangular:\"w-96 h-3\"})||void 0===n?void 0:n[o];return i().createElement(\"div\",PE({className:te(l,\"animate-pulse\",c,s)},a))};function OE(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var RE=(0,o.createContext)(),NE=function(){return(0,o.useContext)(RE)},AE=function(e){var t=e.size,n=void 0===t?\"md\":t,r=e.children,o=e.className;return i().createElement(RE.Provider,{value:{size:n}},i().createElement(\"div\",{className:te(\"w-64 flex flex-col bg-background-primary p-2\",o)},r))};AE.List=function(e){var t,n,r=e.heading,s=e.arrow,a=void 0!==s&&s,l=e.open,c=void 0!==l&&l,u=e.onClick,d=e.children,f=e.className,h=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return OE(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?OE(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}((0,o.useState)(c),2),p=h[0],m=h[1],g=NE().size,v=null===(t={sm:\"text-xs\",md:\"text-sm\"})||void 0===t?void 0:t[g],y=null===(n={sm:\"[&>svg]:size-4\",md:\"[&>svg]:size-5\"})||void 0===n?void 0:n[g],b=function(){m(!p),u&&u(!p)};return i().createElement(\"div\",null,i().createElement(\"div\",{role:\"button\",tabIndex:\"0\",onClick:b,onKeyPress:function(e){\"Enter\"!==e.key&&\" \"!==e.key||b()},className:te(\"text-text-primary bg-transparent cursor-pointer flex justify-between items-center p-1 gap-1\",v,f),\"aria-expanded\":p},i().createElement(\"span\",{className:\"text-text-tertiary\"},r),a&&i().createElement(Hf.span,{variants:{open:{rotate:180},closed:{rotate:0}},animate:p?\"open\":\"closed\",transition:{duration:.15},className:te(\"flex items-center text-border-strong\",y)},i().createElement(eh,null))),i().createElement(Hh,{initial:!1},p&&i().createElement(Hf.ul,{variants:{open:{height:\"auto\",opacity:1},closed:{height:0,opacity:0}},initial:\"closed\",animate:\"open\",exit:\"closed\",transition:{duration:.3,ease:\"easeInOut\"},className:\"overflow-hidden flex gap-0.5 flex-col m-0 bg-white rounded-md p-0\"},d)))},AE.Item=function(e){var t,n=e.disabled,r=void 0!==n&&n,o=e.active,s=e.onClick,a=e.children,l=e.className,c=NE().size,u=null===(t={sm:\"[&>svg]:size-4 [&>svg]:m-1 [&>*:not(svg)]:mx-1 [&>*:not(svg)]:my-0.5 text-sm\",md:\"[&>svg]:size-5 [&>svg]:m-1.5 [&>*:not(svg)]:m-1 text-base\"})||void 0===t?void 0:t[c],d=r?\"text-text-disabled hover:text-text-disabled cursor-not-allowed hover:bg-transparent\":\"\",f=o?\"text-icon-primary [&>svg]:text-icon-interactive bg-background-secondary\":\"\";return i().createElement(\"li\",{role:\"menuitem\",tabIndex:\"0\",onClick:s,onKeyPress:function(e){\"Enter\"!==e.key&&\" \"!==e.key||s()},className:te(\"flex p-1 gap-1 items-center bg-transparent w-full border-none rounded text-text-secondary cursor-pointer m-0\",u,\"hover:bg-background-secondary hover:text-text-primary\",d,f,\"transition-colors duration-300 ease-in-out\",l)},a)},AE.Separator=function(e){var t,n=e.variant,r=void 0===n?\"solid\":n,o=e.className,s=null===(t={solid:\"border-solid\",dashed:\"border-dashed\",dotted:\"border-dotted\",double:\"border-double\",hidden:\"border-hidden\",none:\"border-none\"})||void 0===t?void 0:t[r];return i().createElement(i().Fragment,null,i().createElement(\"hr\",{className:te(\"w-full border-0 border-t border-border-subtle\",s,o)}))};var jE=AE;const ME=xe(\"PanelLeftOpen\",[[\"rect\",{width:\"18\",height:\"18\",x:\"3\",y:\"3\",rx:\"2\",key:\"afitv7\"}],[\"path\",{d:\"M9 3v18\",key:\"fh3hqa\"}],[\"path\",{d:\"m14 9 3 3-3 3\",key:\"8010ee\"}]]),IE=xe(\"PanelLeftClose\",[[\"rect\",{width:\"18\",height:\"18\",x:\"3\",y:\"3\",rx:\"2\",key:\"afitv7\"}],[\"path\",{d:\"M9 3v18\",key:\"fh3hqa\"}],[\"path\",{d:\"m16 15-3-3 3-3\",key:\"14y99z\"}]]);var DE=[\"children\",\"className\",\"onCollapseChange\",\"collapsible\",\"screenHeight\",\"borderOn\"];function LE(){return LE=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},LE.apply(null,arguments)}function FE(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var zE=(0,o.createContext)(),BE=function(e){var t=e.children,n=e.className,r=e.onCollapseChange,s=e.collapsible,a=void 0===s||s,l=e.screenHeight,c=void 0===l||l,u=e.borderOn,d=void 0===u||u,f=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,DE),h=(0,o.useRef)(null),p=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return FE(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?FE(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}((0,o.useState)((function(){var e=localStorage.getItem(\"sidebar-collapsed\"),t=window.innerWidth<1280;return e?JSON.parse(e):t})),2),m=p[0],g=p[1];return(0,o.useEffect)((function(){r&&r(m)}),[m,r]),(0,o.useEffect)((function(){var e=function(){var e=window.innerWidth<1280;if(a)if(e)g(!0),localStorage.setItem(\"sidebar-collapsed\",JSON.stringify(!0));else{var t=localStorage.getItem(\"sidebar-collapsed\");g(!!t&&JSON.parse(t))}else g(!1),localStorage.removeItem(\"sidebar-collapsed\");h.current&&(h.current.style.height=c?\"\".concat(window.innerHeight,\"px\"):\"auto\")};return window.addEventListener(\"resize\",e),e(),function(){window.removeEventListener(\"resize\",e)}}),[c,a]),i().createElement(zE.Provider,{value:{isCollapsed:m,setIsCollapsed:g,collapsible:a}},i().createElement(\"div\",LE({ref:h,className:te(\"overflow-auto w-72 px-4 py-4 gap-4 flex flex-col bg-background-primary\",d&&\"border-0 border-r border-solid border-border-subtle\",!!c&&\"h-screen\",\"transition-all duration-200\",m&&\"w-16 px-2\",n)},f),t))};BE.displayName=\"Sidebar\";var VE=function(e){var t=e.children;return i().createElement(\"div\",{className:\"space-y-2\"},t)};VE.displayName=\"Sidebar.Header\";var WE=function(e){var t=e.children;return i().createElement(\"div\",{className:te(\"space-y-4 grow items-start\")},t)};WE.displayName=\"Sidebar.Body\";var UE=function(e){var t=e.children,n=(0,o.useContext)(zE),r=n.isCollapsed,s=n.setIsCollapsed,a=n.collapsible;return i().createElement(\"div\",{className:\"space-y-4\"},t,a&&i().createElement(\"button\",{className:te(\"bg-transparent w-full border-0 p-0 m-0 flex items-center gap-2 text-base cursor-pointer\",r&&\"justify-center\"),onClick:function(){s(!r),localStorage.setItem(\"sidebar-collapsed\",JSON.stringify(!r))},\"aria-label\":r?\"Expand sidebar\":\"Collapse sidebar\"},r?i().createElement(i().Fragment,null,i().createElement(fi,{title:\"Expand\",placement:\"right\"},i().createElement(ME,{className:\"size-5\"}))):i().createElement(i().Fragment,null,i().createElement(IE,{className:\"size-5\"}),\" Collapse\")))};UE.displayName=\"Sidebar.Footer\";var $E=function(e){var t=e.children,n=e.className;return i().createElement(\"div\",{className:te(\"w-full\",n)},t)};$E.displayName=\"Sidebar.Item\";var KE=Object.assign(BE,{Header:VE,Body:WE,Footer:UE,Item:$E});const HE=xe(\"ChevronRight\",[[\"path\",{d:\"m9 18 6-6-6-6\",key:\"mthhwq\"}]]),qE=xe(\"Ellipsis\",[[\"circle\",{cx:\"12\",cy:\"12\",r:\"1\",key:\"41hilf\"}],[\"circle\",{cx:\"19\",cy:\"12\",r:\"1\",key:\"1wjl8i\"}],[\"circle\",{cx:\"5\",cy:\"12\",r:\"1\",key:\"1pcz8c\"}]]);var YE=[\"href\",\"children\",\"className\",\"as\"];function GE(){return GE=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},GE.apply(null,arguments)}var XE=(0,o.createContext)(),JE={sm:{text:\"text-sm\",separator:\"text-sm\",separatorIconSize:16},md:{text:\"text-base\",separator:\"text-base\",separatorIconSize:18}},ZE=function(e){var t=e.children,n=e.size,r=JE[void 0===n?\"sm\":n]||JE.sm;return i().createElement(XE.Provider,{value:{sizes:r}},i().createElement(\"nav\",{className:\"flex m-0\",\"aria-label\":\"Breadcrumb\"},i().createElement(\"ul\",{className:\"m-0 inline-flex items-center space-x-1 md:space-x-1\"},t)))};ZE.displayName=\"Breadcrumb\";var QE=function(e){var t=e.children;return i().createElement(i().Fragment,null,t)};QE.displayName=\"Breadcrumb.List\";var eS=function(e){var t=e.children;return i().createElement(\"li\",{className:\"m-0 inline-flex items-center gap-2\"},t)};eS.displayName=\"Breadcrumb.Item\";var tS=function(e){var t=e.href,n=e.children,r=e.className,s=e.as,a=void 0===s?\"a\":s,l=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,YE),c=(0,o.useContext)(XE).sizes;return i().createElement(a,GE({href:t,className:te(c.text,\"px-1 font-medium no-underline text-text-tertiary hover:text-text-primary hover:underline\",\"focus:outline-none focus:ring-1 focus:ring-border-interactive focus:border-border-interactive focus:rounded-sm\",\"transition-all duration-200\",r)},l),n)};tS.displayName=\"Breadcrumb.Link\";var nS=function(e){var t=e.type,n=(0,o.useContext)(XE).sizes,r={slash:i().createElement(\"span\",{className:te(\"mx-1\",n.separator)},\"/\"),arrow:i().createElement(HE,{size:n.separatorIconSize})};return i().createElement(\"span\",{className:\"flex items-center text-text-tertiary mx-2\"},r[t]||r.arrow)};nS.displayName=\"Breadcrumb.Separator\";var rS=function(){var e=(0,o.useContext)(XE).sizes;return i().createElement(qE,{className:\"mt-[2px] cursor-pointer text-text-tertiary hover:text-text-primary\",size:e.separatorIconSize+4})};rS.displayName=\"Breadcrumb.Ellipsis\";var oS=function(e){var t=e.children,n=(0,o.useContext)(XE).sizes;return i().createElement(\"span\",{className:te(n.text,\"font-medium text-text-primary\")},t)};oS.displayName=\"Breadcrumb.Page\";var iS=Object.assign(ZE,{List:QE,Item:eS,Link:tS,Separator:nS,Ellipsis:rS,Page:oS}),sS=[\"className\"],aS=[\"children\",\"className\"],lS=[\"children\",\"as\",\"className\"],cS=[\"children\",\"as\",\"className\"],uS=[\"className\"],dS=[\"children\",\"as\"],fS=[\"children\",\"className\"];function hS(){return hS=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},hS.apply(null,arguments)}function pS(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function mS(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var gS=(0,o.createContext)(),vS=function(){return(0,o.useContext)(gS)},yS={open:{opacity:1},exit:{opacity:0}},bS={duration:.2},xS=function(e){var t=e.open,n=e.setOpen,r=e.children,i=e.trigger,s=e.className,a=e.exitOnClickOutside,l=void 0!==a&&a,c=e.exitOnEsc,u=void 0===c||c,d=e.design,f=void 0===d?\"simple\":d,h=e.scrollLock,p=void 0===h||h,m=void 0!==t&&void 0!==n,g=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return mS(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?mS(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}((0,o.useState)(!1),2),v=g[0],y=g[1],b=(0,o.useRef)(null),x=(0,o.useRef)(null),w=(0,o.useMemo)((function(){return m?t:v}),[t,v]),E=(0,o.useMemo)((function(){return m?n:y}),[y,y]),S=function(){w||E(!0)},_=function(){w&&E(!1)},k=(0,o.useCallback)((function(){return(0,o.isValidElement)(i)?(0,o.cloneElement)(i,{onClick:ne(S,i.props.onClick)}):\"function\"==typeof i?i({onClick:S}):null}),[i,S,_]),C=function(e){\"Escape\"===e.key&&u&&_()},P=function(e){l&&b.current&&!b.current.contains(e.target)&&_()};return(0,o.useEffect)((function(){return window.addEventListener(\"keydown\",C),document.addEventListener(\"mousedown\",P),function(){window.removeEventListener(\"keydown\",C),document.removeEventListener(\"mousedown\",P)}}),[w]),(0,o.useEffect)((function(){if(p)return w&&(document.querySelector(\"html\").style.overflow=\"hidden\"),function(){document.querySelector(\"html\").style.overflow=\"\"}}),[w]),React.createElement(React.Fragment,null,k(),React.createElement(gS.Provider,{value:{open:w,setOpen:E,handleClose:_,design:f,dialogContainerRef:x,dialogRef:b}},React.createElement(\"div\",{ref:x,className:te(\"fixed z-999999 w-0 h-0 overflow-visible\",s)},r)))};xS.displayName=\"Dialog\";var wS=function(e){var t=e.children,n=e.className,r=vS(),o=r.open,i=r.handleClose,s=r.dialogRef;return React.createElement(Hh,null,o&&React.createElement(Hf.div,{className:\"fixed inset-0 overflow-y-auto\",initial:\"exit\",animate:\"open\",exit:\"exit\",variants:yS,role:\"dialog\",transition:bS},React.createElement(\"div\",{className:\"flex items-center justify-center min-h-full\"},React.createElement(\"div\",{ref:s,className:te(\"flex flex-col gap-5 w-120 h-fit bg-background-primary border border-solid border-border-subtle rounded-xl shadow-soft-shadow-2xl my-5 overflow-hidden\",n)},\"function\"==typeof t?t({close:i}):t))))};wS.displayName=\"Dialog.Panel\";var ES=function(e){var t=e.className,n=pS(e,sS),r=vS(),o=r.open,i=r.dialogContainerRef;return i.current&&(0,zn.createPortal)(React.createElement(Hh,null,o&&React.createElement(Hf.div,hS({className:te(\"fixed inset-0 -z-10 bg-background-inverse/90 backdrop-blur-sm\",t)},n,{initial:\"exit\",animate:\"open\",exit:\"exit\",variants:yS,transition:bS}))),i.current)};ES.displayName=\"Dialog.Backdrop\";var SS=function(e){var t=e.children,n=e.className,r=pS(e,aS);return React.createElement(\"div\",hS({className:te(\"space-y-2 px-5 pt-5 pb-1\",n)},r),t)};SS.displayName=\"Dialog.Header\";var _S=function(e){var t=e.children,n=e.as,r=void 0===n?\"h3\":n,o=e.className,i=pS(e,lS);return React.createElement(r,hS({className:te(\"text-base font-semibold text-text-primary m-0 p-0\",o)},i),t)};_S.displayName=\"Dialog.Title\";var kS=function(e){var t=e.children,n=e.as,r=void 0===n?\"p\":n,o=e.className,i=pS(e,cS);return React.createElement(r,hS({className:te(\"text-sm font-normal text-text-secondary my-0 ml-0 mr-1 p-0\",o)},i),t)};kS.displayName=\"Dialog.Description\";var CS=function(e){var t=e.className,n=pS(e,uS);return React.createElement(\"button\",hS({className:te(\"bg-transparent inline-flex justify-center items-center border-0 p-1 m-0 cursor-pointer focus:outline-none outline-none shadow-none\",t),\"aria-label\":\"Close dialog\"},n),React.createElement(He,{className:\"size-4 text-text-primary shrink-0\"}))},PS=function(e){var t=e.children,n=e.as,r=void 0===n?o.Fragment:n,i=pS(e,dS),s=vS().handleClose;return(0,o.isValidElement)(t)&&t?r===o.Fragment?\"function\"==typeof t?t({close:s}):(0,o.cloneElement)(t,{onClick:s}):React.createElement(r,hS({},i,{onClick:s}),t):React.createElement(CS,hS({onClick:s},i))};PS.displayName=\"Dialog.CloseButton\";var TS=function(e){var t=e.children,n=e.className,r=pS(e,fS);return React.createElement(\"div\",hS({className:te(\"px-5\",n)},r),t)};TS.displayName=\"Dialog.Body\";var OS=function(e){var t=e.children,n=e.className,r=vS(),o=r.design,i=r.handleClose;return React.createElement(\"div\",{className:te(\"p-4 flex justify-end gap-3\",{\"bg-background-secondary\":\"footer-divided\"===o},n)},t?\"function\"==typeof t?t({close:i}):t:null)};OS.displayName=\"Dialog.Footer\";var RS=Object.assign(xS,{Panel:wS,Backdrop:ES,Title:_S,Description:kS,CloseButton:PS,Header:SS,Body:TS,Footer:OS}),NS=[\"children\",\"gap\",\"className\"];function AS(){return AS=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},AS.apply(null,arguments)}var jS=function(e){var t=e.children,n=e.gap,r=void 0===n?\"lg\":n,o=e.className,s=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,NS);return i().createElement(\"div\",AS({className:te(\"w-full flex items-center justify-between bg-background-primary p-5 min-h-16\",re(r),o)},s),t)};jS.Left=function(e){var t=e.gap,n=void 0===t?\"sm\":t,r=e.children,o=e.className;return i().createElement(\"div\",{className:te(\"flex items-center\",re(n),o)},r)},jS.Middle=function(e){var t,n=e.gap,r=void 0===n?\"md\":n,o=e.children,s=e.align,a=void 0===s?\"center\":s,l=e.className,c=null===(t={left:\"justify-start\",center:\"justify-center\",right:\"justify-end\"})||void 0===t?void 0:t[a];return i().createElement(\"div\",{className:te(\"flex items-center grow\",re(r),c,l)},o)},jS.Right=function(e){var t=e.gap,n=void 0===t?\"sm\":t,r=e.children,o=e.className;return i().createElement(\"div\",{className:te(\"flex items-center\",re(n),o)},r)},jS.Item=function(e){var t=e.children,n=e.className;return i().createElement(\"div\",{className:te(\"flex items-center [&>svg]:block h-full\",n)},t)};var MS=jS;function IS(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var DS=(0,o.createContext)(),LS=function(){return(0,o.useContext)(DS)},FS=Object.assign((function(e){var t=e.open,n=e.setOpen,r=e.children,i=e.trigger,s=e.className,a=e.exitOnClickOutside,l=void 0!==a&&a,c=e.exitOnEsc,u=void 0===c||c,d=e.design,f=void 0===d?\"simple\":d,h=e.position,p=void 0===h?\"right\":h,m=e.transitionDuration,g=void 0===m?.2:m,v=e.scrollLock,y=void 0===v||v,b=void 0!==t&&void 0!==n,x=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,o,i,s,a=[],l=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return IS(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?IS(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}((0,o.useState)(!1),2),w=x[0],E=x[1],S=(0,o.useRef)(null),_=(0,o.useRef)(null),k=(0,o.useMemo)((function(){return b?t:w}),[t,w]),C=(0,o.useMemo)((function(){return b?n:E}),[E,E]),P=function(){k||C(!0)},T=function(){k&&C(!1)},O=(0,o.useCallback)((function(){return(0,o.isValidElement)(i)?(0,o.cloneElement)(i,{onClick:ne(P,i.props.onClick)}):\"function\"==typeof i?i({onClick:P}):null}),[i,P,T]),R=function(e){\"Escape\"===e.key&&u&&T()},N=function(e){l&&S.current&&!S.current.contains(e.target)&&T()};return(0,o.useEffect)((function(){return window.addEventListener(\"keydown\",R),document.addEventListener(\"mousedown\",N),function(){window.removeEventListener(\"keydown\",R),document.removeEventListener(\"mousedown\",N)}}),[k]),(0,o.useEffect)((function(){if(y)return k&&(document.querySelector(\"html\").style.overflow=\"hidden\"),function(){document.querySelector(\"html\").style.overflow=\"\"}}),[k]),React.createElement(React.Fragment,null,O(),React.createElement(DS.Provider,{value:{open:k,setOpen:C,handleClose:T,design:f,position:p,drawerContainerRef:_,drawerRef:S,transitionDuration:{duration:g}}},React.createElement(\"div\",{className:te(\"fixed z-999999 w-0 h-0 overflow-visible\",s),role:\"dialog\",ref:_},r)))}),{displayName:\"Drawer\"}),zS={left:{open:{x:0},exit:{x:\"-100%\"}},right:{open:{x:0},exit:{x:\"100%\"}}},BS=Object.assign((function(e){var t=e.children,n=e.className,r=LS(),o=r.open,i=r.position,s=r.handleClose,a=r.drawerRef,l=r.transitionDuration;return React.createElement(Hh,null,o&&React.createElement(\"div\",{className:\"fixed inset-0\"},React.createElement(\"div\",{className:te(\"flex items-center justify-center h-full\",{\"justify-start\":\"left\"===i,\"justify-end\":\"right\"===i})},React.createElement(Hf.div,{ref:a,className:te(\"flex flex-col gap-5 w-120 h-full bg-background-primary shadow-2xl my-5 overflow-hidden\",n),initial:\"exit\",animate:\"open\",exit:\"exit\",variants:zS[i],transition:l},\"function\"==typeof t?t({close:s}):t))))}),{displayName:\"Drawer.Panel\"}),VS=[\"children\",\"className\"];function WS(){return WS=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},WS.apply(null,arguments)}var US=Object.assign((function(e){var t=e.children,n=e.className,r=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,VS);return React.createElement(\"div\",WS({className:te(\"space-y-2 px-5 pt-5 pb-1\",n)},r),t)}),{displayName:\"Drawer.Header\"}),$S=[\"children\",\"as\",\"className\"];function KS(){return KS=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},KS.apply(null,arguments)}var HS=Object.assign((function(e){var t=e.children,n=e.as,r=void 0===n?\"h3\":n,o=e.className,i=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,$S);return React.createElement(r,KS({className:te(\"text-base font-semibold text-text-primary m-0 p-0\",o)},i),t)}),{displayName:\"Drawer.Title\"}),qS=[\"children\",\"as\",\"className\"];function YS(){return YS=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},YS.apply(null,arguments)}var GS=Object.assign((function(e){var t=e.children,n=e.as,r=void 0===n?\"p\":n,o=e.className,i=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,qS);return React.createElement(r,YS({className:te(\"text-sm font-normal text-text-secondary my-0 ml-0 mr-1 p-0\",o)},i),t)}),{displayName:\"Drawer.Description\"}),XS=[\"children\",\"className\"];function JS(){return JS=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},JS.apply(null,arguments)}var ZS=Object.assign((function(e){var t=e.children,n=e.className,r=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,XS);return React.createElement(\"div\",JS({className:te(\"px-5 flex flex-col flex-1 overflow-y-auto overflow-x-hidden\",n)},r),t)}),{displayName:\"Drawer.Body\"}),QS=Object.assign((function(e){var t=e.children,n=e.className,r=LS(),o=r.design,i=r.handleClose;return React.createElement(\"div\",{className:te(\"p-5 flex justify-end gap-3 mt-auto\",{\"bg-background-secondary\":\"footer-divided\"===o},n)},t?\"function\"==typeof t?t({close:i}):t:null)}),{displayName:\"Drawer.Footer\"}),e_=[\"className\"],t_=[\"children\",\"as\"];function n_(){return n_=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},n_.apply(null,arguments)}function r_(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var o_=function(e){var t=e.className,n=r_(e,e_);return React.createElement(\"button\",n_({className:te(\"bg-transparent inline-flex justify-center items-center border-0 p-1 m-0 cursor-pointer focus:outline-none outline-none shadow-none\",t),\"aria-label\":\"Close drawer\"},n),React.createElement(He,{className:\"size-4 text-text-primary shrink-0\"}))},i_=Object.assign((function(e){var t=e.children,n=e.as,r=void 0===n?o.Fragment:n,i=r_(e,t_),s=LS().handleClose;return(0,o.isValidElement)(t)&&t?r===o.Fragment?\"function\"==typeof t?t({close:s}):(0,o.cloneElement)(t,{onClick:s}):React.createElement(r,n_({},i,{onClick:s}),t):React.createElement(o_,n_({onClick:s},i))}),{displayName:\"Drawer.CloseButton\"}),s_=[\"className\"];function a_(){return a_=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a_.apply(null,arguments)}var l_={open:{opacity:1},exit:{opacity:0}},c_=Object.assign((function(e){var t=e.className,n=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n={};for(var r in e)if({}.hasOwnProperty.call(e,r)){if(t.includes(r))continue;n[r]=e[r]}return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.includes(n)||{}.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,s_),r=LS(),o=r.open,i=r.drawerContainerRef,s=r.transitionDuration;return i.current&&(0,zn.createPortal)(React.createElement(Hh,null,o&&React.createElement(Hf.div,a_({className:te(\"fixed inset-0 -z-10 bg-background-inverse/90 backdrop-blur-sm\",t)},n,{initial:\"exit\",animate:\"open\",exit:\"exit\",variants:l_,transition:s}))),i.current)}),{displayName:\"Drawer.Backdrop\"}),u_=Object.assign(FS,{Panel:BS,Header:US,Title:HS,Description:GS,Body:ZS,CloseButton:i_,Footer:QS,Backdrop:c_});return r}()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJzZi9mb3JjZS11aS9kaXN0L2ZvcmNlLXVpLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsS0FBaUQsb0JBQW9CLENBQXlJLENBQUMsZ0RBQWdELGtCQUFrQixhQUFhLE9BQU8sb0JBQW9CLGNBQWMsMEJBQTBCLG1CQUFtQix3Q0FBd0MsT0FBTyxhQUFhLFVBQVUsRUFBRSxpZ0lBQWlnSSxtRkFBbUYsR0FBRyxvQkFBb0Isd0xBQXdMLHFDQUFxQyxrQkFBa0IsVUFBVSxlQUFlLHNJQUFzSSwwRUFBMEUsT0FBTyx3REFBd0QsOEJBQThCLHFCQUFxQixnQkFBZ0IsaUJBQWlCLHdCQUF3QixNQUFNLGNBQWMsV0FBVywrQkFBK0IsWUFBWSxZQUFZLHFDQUFxQyxnQkFBZ0IsaUNBQWlDLGlCQUFpQixZQUFZLFVBQVUsY0FBYyxJQUFJLElBQUksbUJBQW1CLCtEQUErRCx1QkFBdUIsRUFBRSxnQkFBZ0IsaURBQWlELElBQUksMkNBQTJDLFNBQVMsMENBQTBDLHFCQUFxQixpREFBaUQsaUJBQWlCLDRGQUE0RixlQUFlLHdDQUF3QyxTQUFTLEdBQUcsU0FBUyxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixVQUFVLGtCQUFrQixVQUFVLHVCQUF1QixVQUFVLG1CQUFtQixVQUFVLHdCQUF3QixVQUFVLHFCQUFxQixVQUFVLHNCQUFzQixVQUFVLG1CQUFtQixVQUFVLG1CQUFtQixVQUFVLHdCQUF3QixVQUFVLGtCQUFrQixVQUFVLGtCQUFrQixVQUFVLG1CQUFtQixVQUFVLGlCQUFpQixVQUFVLHdCQUF3QixVQUFVLDBCQUEwQixVQUFVLHdCQUF3QixVQUFVLG1CQUFtQixVQUFVLG9CQUFvQixVQUFVLHFCQUFxQixVQUFVLG1CQUFtQixVQUFVLGlCQUFpQixVQUFVLHFCQUFxQixVQUFVLGtCQUFrQixVQUFVLG9CQUFvQixVQUFVLG9CQUFvQixVQUFVLG1CQUFtQixVQUFVLGtCQUFrQixXQUFXLEVBQUUsc0JBQXNCLFlBQVksY0FBYywwREFBMEQsR0FB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QUFxQyw4RUFBOEUsT0FBTyxHQUFHLDBCQUEwQixnQ0FBZ0MsaUVBQWlFLGtDQUFrQyxtREFBbUQsK0NBQStDLElBQUksMkJBQTJCLFFBQVEsVUFBVSxHQUFHLDRCQUE0Qix3Q0FBd0MsY0FBYyx5REFBeUQsWUFBWSxtQkFBbUIsS0FBSyxtQkFBbUIsa0JBQWtCLHdDQUF3QyxTQUFTLDBCQUEwQixpQkFBaUIsb0JBQW9CLHdCQUF3QixvQkFBb0IsU0FBUyxvQkFBb0IsMkJBQTJCLDBCQUEwQixVQUFVLFNBQVMsTUFBTSxpQ0FBaUMsc0NBQXNDLFFBQVEsV0FBVyw0QkFBNEIsNkNBQTZDLFNBQVMsbUJBQW1CLDZCQUE2Qix3Q0FBd0MsaUxBQWlMLDRCQUE0Qiw4Q0FBOEMsR0FBRywrQkFBK0IsZ0ZBQWdGLHdFQUF3RSxRQUFRLHdCQUF3QixVQUFVLDZCQUE2QixJQUFJLFVBQVUsZ0NBQWdDLFVBQVUsS0FBSyxHQUFHLGlDQUFpQyxtQkFBbUIsY0FBYyx5REFBeUQsWUFBWSxtQkFBbUIsS0FBSyxtQkFBbUIsa0JBQWtCLHdDQUF3QyxTQUFTLDBCQUEwQixRQUFRLE1BQU0sVUFBVSxPQUFPLFdBQVcsK0JBQStCLGtDQUFrQyxvQkFBb0Isd0JBQXdCLG9CQUFvQixTQUFTLG9CQUFvQiwyQkFBMkIsMEJBQTBCLFVBQVUsU0FBUyxNQUFNLGlDQUFpQyxzQ0FBc0MsUUFBUSxXQUFXLDRCQUE0Qiw2Q0FBNkMsU0FBUyxxRUFBcUUsb0dBQW9HLGdGQUFnRixJQUFJLG1FQUFtRSxlQUFlLEdBQUcsOEJBQThCLHVCQUF1Qix3RkFBd0YsRUFBRSxTQUFTLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9AYnNmL2ZvcmNlLXVpL2Rpc3QvZm9yY2UtdWkuanM/ZDA4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSx0KTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzW1wiZm9yY2UtdWkuW2ZpbGVdLmpzXCJdPXQoKTplW1wiZm9yY2UtdWkuW2ZpbGVdLmpzXCJdPXQoKX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLChmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciBlPXszMTY6ZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHZvaWQgMD09PXRbbl0mJih0W25dPWUobikpLHRbbl19fW4uZCh0LHtBOmZ1bmN0aW9uKCl7cmV0dXJuIGl9fSk7dmFyIG89L14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWJicnxhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkaXNhYmxlUmVtb3RlUGxheWJhY2t8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8ZW50ZXJLZXlIaW50fGZvcm18Zm9ybUFjdGlvbnxmb3JtRW5jVHlwZXxmb3JtTWV0aG9kfGZvcm1Ob1ZhbGlkYXRlfGZvcm1UYXJnZXR8ZnJhbWVCb3JkZXJ8aGVhZGVyc3xoZWlnaHR8aGlkZGVufGhpZ2h8aHJlZnxocmVmTGFuZ3xodG1sRm9yfGh0dHBFcXVpdnxpZHxpbnB1dE1vZGV8aW50ZWdyaXR5fGlzfGtleVBhcmFtc3xrZXlUeXBlfGtpbmR8bGFiZWx8bGFuZ3xsaXN0fGxvYWRpbmd8bG9vcHxsb3d8bWFyZ2luSGVpZ2h0fG1hcmdpbldpZHRofG1heHxtYXhMZW5ndGh8bWVkaWF8bWVkaWFHcm91cHxtZXRob2R8bWlufG1pbkxlbmd0aHxtdWx0aXBsZXxtdXRlZHxuYW1lfG5vbmNlfG5vVmFsaWRhdGV8b3BlbnxvcHRpbXVtfHBhdHRlcm58cGxhY2Vob2xkZXJ8cGxheXNJbmxpbmV8cG9zdGVyfHByZWxvYWR8cHJvZmlsZXxyYWRpb0dyb3VwfHJlYWRPbmx5fHJlZmVycmVyUG9saWN5fHJlbHxyZXF1aXJlZHxyZXZlcnNlZHxyb2xlfHJvd3N8cm93U3BhbnxzYW5kYm94fHNjb3BlfHNjb3BlZHxzY3JvbGxpbmd8c2VhbWxlc3N8c2VsZWN0ZWR8c2hhcGV8c2l6ZXxzaXplc3xzbG90fHNwYW58c3BlbGxDaGVja3xzcmN8c3JjRG9jfHNyY0xhbmd8c3JjU2V0fHN0YXJ0fHN0ZXB8c3R5bGV8c3VtbWFyeXx0YWJJbmRleHx0YXJnZXR8dGl0bGV8dHJhbnNsYXRlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5jcmVtZW50YWx8ZmFsbGJhY2t8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufG9wdGlvbnxyZXN1bHRzfHNlY3VyaXR5fHVuc2VsZWN0YWJsZXxhY2NlbnRIZWlnaHR8YWNjdW11bGF0ZXxhZGRpdGl2ZXxhbGlnbm1lbnRCYXNlbGluZXxhbGxvd1Jlb3JkZXJ8YWxwaGFiZXRpY3xhbXBsaXR1ZGV8YXJhYmljRm9ybXxhc2NlbnR8YXR0cmlidXRlTmFtZXxhdHRyaWJ1dGVUeXBlfGF1dG9SZXZlcnNlfGF6aW11dGh8YmFzZUZyZXF1ZW5jeXxiYXNlbGluZVNoaWZ0fGJhc2VQcm9maWxlfGJib3h8YmVnaW58Ymlhc3xieXxjYWxjTW9kZXxjYXBIZWlnaHR8Y2xpcHxjbGlwUGF0aFVuaXRzfGNsaXBQYXRofGNsaXBSdWxlfGNvbG9ySW50ZXJwb2xhdGlvbnxjb2xvckludGVycG9sYXRpb25GaWx0ZXJzfGNvbG9yUHJvZmlsZXxjb2xvclJlbmRlcmluZ3xjb250ZW50U2NyaXB0VHlwZXxjb250ZW50U3R5bGVUeXBlfGN1cnNvcnxjeHxjeXxkfGRlY2VsZXJhdGV8ZGVzY2VudHxkaWZmdXNlQ29uc3RhbnR8ZGlyZWN0aW9ufGRpc3BsYXl8ZGl2aXNvcnxkb21pbmFudEJhc2VsaW5lfGR1cnxkeHxkeXxlZGdlTW9kZXxlbGV2YXRpb258ZW5hYmxlQmFja2dyb3VuZHxlbmR8ZXhwb25lbnR8ZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZHxmaWxsfGZpbGxPcGFjaXR5fGZpbGxSdWxlfGZpbHRlcnxmaWx0ZXJSZXN8ZmlsdGVyVW5pdHN8Zmxvb2RDb2xvcnxmbG9vZE9wYWNpdHl8Zm9jdXNhYmxlfGZvbnRGYW1pbHl8Zm9udFNpemV8Zm9udFNpemVBZGp1c3R8Zm9udFN0cmV0Y2h8Zm9udFN0eWxlfGZvbnRWYXJpYW50fGZvbnRXZWlnaHR8Zm9ybWF0fGZyb218ZnJ8Znh8Znl8ZzF8ZzJ8Z2x5cGhOYW1lfGdseXBoT3JpZW50YXRpb25Ib3Jpem9udGFsfGdseXBoT3JpZW50YXRpb25WZXJ0aWNhbHxnbHlwaFJlZnxncmFkaWVudFRyYW5zZm9ybXxncmFkaWVudFVuaXRzfGhhbmdpbmd8aG9yaXpBZHZYfGhvcml6T3JpZ2luWHxpZGVvZ3JhcGhpY3xpbWFnZVJlbmRlcmluZ3xpbnxpbjJ8aW50ZXJjZXB0fGt8azF8azJ8azN8azR8a2VybmVsTWF0cml4fGtlcm5lbFVuaXRMZW5ndGh8a2VybmluZ3xrZXlQb2ludHN8a2V5U3BsaW5lc3xrZXlUaW1lc3xsZW5ndGhBZGp1c3R8bGV0dGVyU3BhY2luZ3xsaWdodGluZ0NvbG9yfGxpbWl0aW5nQ29uZUFuZ2xlfGxvY2FsfG1hcmtlckVuZHxtYXJrZXJNaWR8bWFya2VyU3RhcnR8bWFya2VySGVpZ2h0fG1hcmtlclVuaXRzfG1hcmtlcldpZHRofG1hc2t8bWFza0NvbnRlbnRVbml0c3xtYXNrVW5pdHN8bWF0aGVtYXRpY2FsfG1vZGV8bnVtT2N0YXZlc3xvZmZzZXR8b3BhY2l0eXxvcGVyYXRvcnxvcmRlcnxvcmllbnR8b3JpZW50YXRpb258b3JpZ2lufG92ZXJmbG93fG92ZXJsaW5lUG9zaXRpb258b3ZlcmxpbmVUaGlja25lc3N8cGFub3NlMXxwYWludE9yZGVyfHBhdGhMZW5ndGh8cGF0dGVybkNvbnRlbnRVbml0c3xwYXR0ZXJuVHJhbnNmb3JtfHBhdHRlcm5Vbml0c3xwb2ludGVyRXZlbnRzfHBvaW50c3xwb2ludHNBdFh8cG9pbnRzQXRZfHBvaW50c0F0WnxwcmVzZXJ2ZUFscGhhfHByZXNlcnZlQXNwZWN0UmF0aW98cHJpbWl0aXZlVW5pdHN8cnxyYWRpdXN8cmVmWHxyZWZZfHJlbmRlcmluZ0ludGVudHxyZXBlYXRDb3VudHxyZXBlYXREdXJ8cmVxdWlyZWRFeHRlbnNpb25zfHJlcXVpcmVkRmVhdHVyZXN8cmVzdGFydHxyZXN1bHR8cm90YXRlfHJ4fHJ5fHNjYWxlfHNlZWR8c2hhcGVSZW5kZXJpbmd8c2xvcGV8c3BhY2luZ3xzcGVjdWxhckNvbnN0YW50fHNwZWN1bGFyRXhwb25lbnR8c3BlZWR8c3ByZWFkTWV0aG9kfHN0YXJ0T2Zmc2V0fHN0ZERldmlhdGlvbnxzdGVtaHxzdGVtdnxzdGl0Y2hUaWxlc3xzdG9wQ29sb3J8c3RvcE9wYWNpdHl8c3RyaWtldGhyb3VnaFBvc2l0aW9ufHN0cmlrZXRocm91Z2hUaGlja25lc3N8c3RyaW5nfHN0cm9rZXxzdHJva2VEYXNoYXJyYXl8c3Ryb2tlRGFzaG9mZnNldHxzdHJva2VMaW5lY2FwfHN0cm9rZUxpbmVqb2lufHN0cm9rZU1pdGVybGltaXR8c3Ryb2tlT3BhY2l0eXxzdHJva2VXaWR0aHxzdXJmYWNlU2NhbGV8c3lzdGVtTGFuZ3VhZ2V8dGFibGVWYWx1ZXN8dGFyZ2V0WHx0YXJnZXRZfHRleHRBbmNob3J8dGV4dERlY29yYXRpb258dGV4dFJlbmRlcmluZ3x0ZXh0TGVuZ3RofHRvfHRyYW5zZm9ybXx1MXx1Mnx1bmRlcmxpbmVQb3NpdGlvbnx1bmRlcmxpbmVUaGlja25lc3N8dW5pY29kZXx1bmljb2RlQmlkaXx1bmljb2RlUmFuZ2V8dW5pdHNQZXJFbXx2QWxwaGFiZXRpY3x2SGFuZ2luZ3x2SWRlb2dyYXBoaWN8dk1hdGhlbWF0aWNhbHx2YWx1ZXN8dmVjdG9yRWZmZWN0fHZlcnNpb258dmVydEFkdll8dmVydE9yaWdpblh8dmVydE9yaWdpbll8dmlld0JveHx2aWV3VGFyZ2V0fHZpc2liaWxpdHl8d2lkdGhzfHdvcmRTcGFjaW5nfHdyaXRpbmdNb2RlfHh8eEhlaWdodHx4MXx4Mnx4Q2hhbm5lbFNlbGVjdG9yfHhsaW5rQWN0dWF0ZXx4bGlua0FyY3JvbGV8eGxpbmtIcmVmfHhsaW5rUm9sZXx4bGlua1Nob3d8eGxpbmtUaXRsZXx4bGlua1R5cGV8eG1sQmFzZXx4bWxuc3x4bWxuc1hsaW5rfHhtbExhbmd8eG1sU3BhY2V8eXx5MXx5Mnx5Q2hhbm5lbFNlbGVjdG9yfHp8em9vbUFuZFBhbnxmb3J8Y2xhc3N8YXV0b2ZvY3VzKXwoKFtEZF1bQWFdW1R0XVtBYV18W0FhXVtScl1bSWldW0FhXXx4KS0uKikpJC8saT1yKChmdW5jdGlvbihlKXtyZXR1cm4gby50ZXN0KGUpfHwxMTE9PT1lLmNoYXJDb2RlQXQoMCkmJjExMD09PWUuY2hhckNvZGVBdCgxKSYmZS5jaGFyQ29kZUF0KDIpPDkxfSkpfSwyMDpmdW5jdGlvbihlLHQsbil7dmFyIHI9big2MDkpLG89U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksaT1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIikscz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGE9ci5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcixsPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07ZnVuY3Rpb24gYyhlLHQsbil7dmFyIHIsaT17fSxjPW51bGwsdT1udWxsO2ZvcihyIGluIHZvaWQgMCE9PW4mJihjPVwiXCIrbiksdm9pZCAwIT09dC5rZXkmJihjPVwiXCIrdC5rZXkpLHZvaWQgMCE9PXQucmVmJiYodT10LnJlZiksdClzLmNhbGwodCxyKSYmIWwuaGFzT3duUHJvcGVydHkocikmJihpW3JdPXRbcl0pO2lmKGUmJmUuZGVmYXVsdFByb3BzKWZvcihyIGluIHQ9ZS5kZWZhdWx0UHJvcHMpdm9pZCAwPT09aVtyXSYmKGlbcl09dFtyXSk7cmV0dXJueyQkdHlwZW9mOm8sdHlwZTplLGtleTpjLHJlZjp1LHByb3BzOmksX293bmVyOmEuY3VycmVudH19dC5GcmFnbWVudD1pLHQuanN4PWMsdC5qc3hzPWN9LDg0ODpmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4oMjApfSw2MDk6ZnVuY3Rpb24oZSl7ZS5leHBvcnRzPXdpbmRvdy5SZWFjdH19LHQ9e307ZnVuY3Rpb24gbihyKXt2YXIgbz10W3JdO2lmKHZvaWQgMCE9PW8pcmV0dXJuIG8uZXhwb3J0czt2YXIgaT10W3JdPXtleHBvcnRzOnt9fTtyZXR1cm4gZVtyXShpLGkuZXhwb3J0cyxuKSxpLmV4cG9ydHN9bi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCx7YTp0fSksdH0sbi5kPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByIGluIHQpbi5vKHQscikmJiFuLm8oZSxyKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUscix7ZW51bWVyYWJsZTohMCxnZXQ6dFtyXX0pfSxuLmc9ZnVuY3Rpb24oKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZ2xvYmFsVGhpcylyZXR1cm4gZ2xvYmFsVGhpczt0cnl7cmV0dXJuIHRoaXN8fG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCl9Y2F0Y2goZSl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdylyZXR1cm4gd2luZG93fX0oKSxuLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LG4ucj1mdW5jdGlvbihlKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfTt2YXIgcj17fTtuLnIociksbi5kKHIse0FsZXJ0OmZ1bmN0aW9uKCl7cmV0dXJuIExwfSxBdmF0YXI6ZnVuY3Rpb24oKXtyZXR1cm4gbnR9LEJhZGdlOmZ1bmN0aW9uKCl7cmV0dXJuIEdlfSxCcmVhZGNydW1iOmZ1bmN0aW9uKCl7cmV0dXJuIGlTfSxCdXR0b246ZnVuY3Rpb24oKXtyZXR1cm4gbGV9LEJ1dHRvbkdyb3VwOmZ1bmN0aW9uKCl7cmV0dXJuIGJpfSxDaGVja2JveDpmdW5jdGlvbigpe3JldHVybiBUZX0sQ29udGFpbmVyOmZ1bmN0aW9uKCl7cmV0dXJuIERwfSxEaWFsb2c6ZnVuY3Rpb24oKXtyZXR1cm4gUlN9LERyYXdlcjpmdW5jdGlvbigpe3JldHVybiB1X30sRWRpdG9ySW5wdXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdkV9LElucHV0OmZ1bmN0aW9uKCl7cmV0dXJuIHV0fSxMYWJlbDpmdW5jdGlvbigpe3JldHVybiBwdH0sTG9hZGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHZ0fSxNZW51OmZ1bmN0aW9uKCl7cmV0dXJuIGpFfSxQcm9ncmVzc0JhcjpmdW5jdGlvbigpe3JldHVybiB5dH0sUHJvZ3Jlc3NTdGVwczpmdW5jdGlvbigpe3JldHVybiBrRX0sUmFkaW9CdXR0b246ZnVuY3Rpb24oKXtyZXR1cm4gS2V9LFNlbGVjdDpmdW5jdGlvbigpe3JldHVybiB2aH0sU2lkZWJhcjpmdW5jdGlvbigpe3JldHVybiBLRX0sU2tlbGV0b246ZnVuY3Rpb24oKXtyZXR1cm4gVEV9LFN3aXRjaDpmdW5jdGlvbigpe3JldHVybiBnZX0sVGFiczpmdW5jdGlvbigpe3JldHVybiBaZn0sVGV4dEFyZWE6ZnVuY3Rpb24oKXtyZXR1cm4gdHR9LFRpdGxlOmZ1bmN0aW9uKCl7cmV0dXJuIG10fSxUb2FzdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRwfSxUb29sdGlwOmZ1bmN0aW9uKCl7cmV0dXJuIGZpfSxUb3BiYXI6ZnVuY3Rpb24oKXtyZXR1cm4gTVN9LHRvYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIE1ofX0pO3ZhciBvPW4oNjA5KSxpPW4ubihvKTtjb25zdCBzPWU9Pntjb25zdCB0PXUoZSkse2NvbmZsaWN0aW5nQ2xhc3NHcm91cHM6bixjb25mbGljdGluZ0NsYXNzR3JvdXBNb2RpZmllcnM6cn09ZTtyZXR1cm57Z2V0Q2xhc3NHcm91cElkOmU9Pntjb25zdCBuPWUuc3BsaXQoXCItXCIpO3JldHVyblwiXCI9PT1uWzBdJiYxIT09bi5sZW5ndGgmJm4uc2hpZnQoKSxhKG4sdCl8fGMoZSl9LGdldENvbmZsaWN0aW5nQ2xhc3NHcm91cElkczooZSx0KT0+e2NvbnN0IG89bltlXXx8W107cmV0dXJuIHQmJnJbZV0/Wy4uLm8sLi4ucltlXV06b319fSxhPShlLHQpPT57aWYoMD09PWUubGVuZ3RoKXJldHVybiB0LmNsYXNzR3JvdXBJZDtjb25zdCBuPWVbMF0scj10Lm5leHRQYXJ0LmdldChuKSxvPXI/YShlLnNsaWNlKDEpLHIpOnZvaWQgMDtpZihvKXJldHVybiBvO2lmKDA9PT10LnZhbGlkYXRvcnMubGVuZ3RoKXJldHVybjtjb25zdCBpPWUuam9pbihcIi1cIik7cmV0dXJuIHQudmFsaWRhdG9ycy5maW5kKCgoe3ZhbGlkYXRvcjplfSk9PmUoaSkpKT8uY2xhc3NHcm91cElkfSxsPS9eXFxbKC4rKVxcXSQvLGM9ZT0+e2lmKGwudGVzdChlKSl7Y29uc3QgdD1sLmV4ZWMoZSlbMV0sbj10Py5zdWJzdHJpbmcoMCx0LmluZGV4T2YoXCI6XCIpKTtpZihuKXJldHVyblwiYXJiaXRyYXJ5Li5cIitufX0sdT1lPT57Y29uc3R7dGhlbWU6dCxwcmVmaXg6bn09ZSxyPXtuZXh0UGFydDpuZXcgTWFwLHZhbGlkYXRvcnM6W119O3JldHVybiBwKE9iamVjdC5lbnRyaWVzKGUuY2xhc3NHcm91cHMpLG4pLmZvckVhY2goKChbZSxuXSk9PntkKG4scixlLHQpfSkpLHJ9LGQ9KGUsdCxuLHIpPT57ZS5mb3JFYWNoKChlPT57aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGUpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUpcmV0dXJuIGgoZSk/dm9pZCBkKGUociksdCxuLHIpOnZvaWQgdC52YWxpZGF0b3JzLnB1c2goe3ZhbGlkYXRvcjplLGNsYXNzR3JvdXBJZDpufSk7T2JqZWN0LmVudHJpZXMoZSkuZm9yRWFjaCgoKFtlLG9dKT0+e2QobyxmKHQsZSksbixyKX0pKX1lbHNlKFwiXCI9PT1lP3Q6Zih0LGUpKS5jbGFzc0dyb3VwSWQ9bn0pKX0sZj0oZSx0KT0+e2xldCBuPWU7cmV0dXJuIHQuc3BsaXQoXCItXCIpLmZvckVhY2goKGU9PntuLm5leHRQYXJ0LmhhcyhlKXx8bi5uZXh0UGFydC5zZXQoZSx7bmV4dFBhcnQ6bmV3IE1hcCx2YWxpZGF0b3JzOltdfSksbj1uLm5leHRQYXJ0LmdldChlKX0pKSxufSxoPWU9PmUuaXNUaGVtZUdldHRlcixwPShlLHQpPT50P2UubWFwKCgoW2Usbl0pPT5bZSxuLm1hcCgoZT0+XCJzdHJpbmdcIj09dHlwZW9mIGU/dCtlOlwib2JqZWN0XCI9PXR5cGVvZiBlP09iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhlKS5tYXAoKChbZSxuXSk9Plt0K2Usbl0pKSk6ZSkpXSkpOmUsbT1lPT57aWYoZTwxKXJldHVybntnZXQ6KCk9Pnt9LHNldDooKT0+e319O2xldCB0PTAsbj1uZXcgTWFwLHI9bmV3IE1hcDtjb25zdCBvPShvLGkpPT57bi5zZXQobyxpKSx0KyssdD5lJiYodD0wLHI9bixuPW5ldyBNYXApfTtyZXR1cm57Z2V0KGUpe2xldCB0PW4uZ2V0KGUpO3JldHVybiB2b2lkIDAhPT10P3Q6dm9pZCAwIT09KHQ9ci5nZXQoZSkpPyhvKGUsdCksdCk6dm9pZCAwfSxzZXQoZSx0KXtuLmhhcyhlKT9uLnNldChlLHQpOm8oZSx0KX19fSxnPWU9Pntjb25zdHtzZXBhcmF0b3I6dCxleHBlcmltZW50YWxQYXJzZUNsYXNzTmFtZTpufT1lLHI9MT09PXQubGVuZ3RoLG89dFswXSxpPXQubGVuZ3RoLHM9ZT0+e2NvbnN0IG49W107bGV0IHMsYT0wLGw9MDtmb3IobGV0IGM9MDtjPGUubGVuZ3RoO2MrKyl7bGV0IHU9ZVtjXTtpZigwPT09YSl7aWYodT09PW8mJihyfHxlLnNsaWNlKGMsYytpKT09PXQpKXtuLnB1c2goZS5zbGljZShsLGMpKSxsPWMraTtjb250aW51ZX1pZihcIi9cIj09PXUpe3M9Yztjb250aW51ZX19XCJbXCI9PT11P2ErKzpcIl1cIj09PXUmJmEtLX1jb25zdCBjPTA9PT1uLmxlbmd0aD9lOmUuc3Vic3RyaW5nKGwpLHU9Yy5zdGFydHNXaXRoKFwiIVwiKTtyZXR1cm57bW9kaWZpZXJzOm4saGFzSW1wb3J0YW50TW9kaWZpZXI6dSxiYXNlQ2xhc3NOYW1lOnU/Yy5zdWJzdHJpbmcoMSk6YyxtYXliZVBvc3RmaXhNb2RpZmllclBvc2l0aW9uOnMmJnM+bD9zLWw6dm9pZCAwfX07cmV0dXJuIG4/ZT0+bih7Y2xhc3NOYW1lOmUscGFyc2VDbGFzc05hbWU6c30pOnN9LHY9ZT0+e2lmKGUubGVuZ3RoPD0xKXJldHVybiBlO2NvbnN0IHQ9W107bGV0IG49W107cmV0dXJuIGUuZm9yRWFjaCgoZT0+e1wiW1wiPT09ZVswXT8odC5wdXNoKC4uLm4uc29ydCgpLGUpLG49W10pOm4ucHVzaChlKX0pKSx0LnB1c2goLi4ubi5zb3J0KCkpLHR9LHk9L1xccysvO2Z1bmN0aW9uIGIoKXtsZXQgZSx0LG49MCxyPVwiXCI7Zm9yKDtuPGFyZ3VtZW50cy5sZW5ndGg7KShlPWFyZ3VtZW50c1tuKytdKSYmKHQ9eChlKSkmJihyJiYocis9XCIgXCIpLHIrPXQpO3JldHVybiByfWNvbnN0IHg9ZT0+e2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBlO2xldCB0LG49XCJcIjtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKyllW3JdJiYodD14KGVbcl0pKSYmKG4mJihuKz1cIiBcIiksbis9dCk7cmV0dXJuIG59O2Z1bmN0aW9uIHcoZSwuLi50KXtsZXQgbixyLG8saT1mdW5jdGlvbihsKXtjb25zdCBjPXQucmVkdWNlKCgoZSx0KT0+dChlKSksZSgpKTtyZXR1cm4gbj0oZT0+KHtjYWNoZTptKGUuY2FjaGVTaXplKSxwYXJzZUNsYXNzTmFtZTpnKGUpLC4uLnMoZSl9KSkoYykscj1uLmNhY2hlLmdldCxvPW4uY2FjaGUuc2V0LGk9YSxhKGwpfTtmdW5jdGlvbiBhKGUpe2NvbnN0IHQ9cihlKTtpZih0KXJldHVybiB0O2NvbnN0IGk9KChlLHQpPT57Y29uc3R7cGFyc2VDbGFzc05hbWU6bixnZXRDbGFzc0dyb3VwSWQ6cixnZXRDb25mbGljdGluZ0NsYXNzR3JvdXBJZHM6b309dCxpPVtdLHM9ZS50cmltKCkuc3BsaXQoeSk7bGV0IGE9XCJcIjtmb3IobGV0IGU9cy5sZW5ndGgtMTtlPj0wO2UtPTEpe2NvbnN0IHQ9c1tlXSx7bW9kaWZpZXJzOmwsaGFzSW1wb3J0YW50TW9kaWZpZXI6YyxiYXNlQ2xhc3NOYW1lOnUsbWF5YmVQb3N0Zml4TW9kaWZpZXJQb3NpdGlvbjpkfT1uKHQpO2xldCBmPUJvb2xlYW4oZCksaD1yKGY/dS5zdWJzdHJpbmcoMCxkKTp1KTtpZighaCl7aWYoIWYpe2E9dCsoYS5sZW5ndGg+MD9cIiBcIithOmEpO2NvbnRpbnVlfWlmKGg9cih1KSwhaCl7YT10KyhhLmxlbmd0aD4wP1wiIFwiK2E6YSk7Y29udGludWV9Zj0hMX1jb25zdCBwPXYobCkuam9pbihcIjpcIiksbT1jP3ArXCIhXCI6cCxnPW0raDtpZihpLmluY2x1ZGVzKGcpKWNvbnRpbnVlO2kucHVzaChnKTtjb25zdCB5PW8oaCxmKTtmb3IobGV0IGU9MDtlPHkubGVuZ3RoOysrZSl7Y29uc3QgdD15W2VdO2kucHVzaChtK3QpfWE9dCsoYS5sZW5ndGg+MD9cIiBcIithOmEpfXJldHVybiBhfSkoZSxuKTtyZXR1cm4gbyhlLGkpLGl9cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkoYi5hcHBseShudWxsLGFyZ3VtZW50cykpfX1jb25zdCBFPWU9Pntjb25zdCB0PXQ9PnRbZV18fFtdO3JldHVybiB0LmlzVGhlbWVHZXR0ZXI9ITAsdH0sUz0vXlxcWyg/OihbYS16LV0rKTopPyguKylcXF0kL2ksXz0vXlxcZCtcXC9cXGQrJC8saz1uZXcgU2V0KFtcInB4XCIsXCJmdWxsXCIsXCJzY3JlZW5cIl0pLEM9L14oXFxkKyhcXC5cXGQrKT8pPyh4c3xzbXxtZHxsZ3x4bCkkLyxQPS9cXGQrKCV8cHh8cj9lbXxbc2RsXT92KFtod2liXXxtaW58bWF4KXxwdHxwY3xpbnxjbXxtbXxjYXB8Y2h8ZXh8cj9saHxjcSh3fGh8aXxifG1pbnxtYXgpKXxcXGIoY2FsY3xtaW58bWF4fGNsYW1wKVxcKC4rXFwpfF4wJC8sVD0vXihyZ2JhP3xoc2xhP3xod2J8KG9rKT8obGFifGxjaCkpXFwoLitcXCkkLyxPPS9eKGluc2V0Xyk/LT8oKFxcZCspP1xcLj8oXFxkKylbYS16XSt8MClfLT8oKFxcZCspP1xcLj8oXFxkKylbYS16XSt8MCkvLFI9L14odXJsfGltYWdlfGltYWdlLXNldHxjcm9zcy1mYWRlfGVsZW1lbnR8KHJlcGVhdGluZy0pPyhsaW5lYXJ8cmFkaWFsfGNvbmljKS1ncmFkaWVudClcXCguK1xcKSQvLE49ZT0+aihlKXx8ay5oYXMoZSl8fF8udGVzdChlKSxBPWU9PkgoZSxcImxlbmd0aFwiLHEpLGo9ZT0+Qm9vbGVhbihlKSYmIU51bWJlci5pc05hTihOdW1iZXIoZSkpLE09ZT0+SChlLFwibnVtYmVyXCIsaiksST1lPT5Cb29sZWFuKGUpJiZOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcihlKSksRD1lPT5lLmVuZHNXaXRoKFwiJVwiKSYmaihlLnNsaWNlKDAsLTEpKSxMPWU9PlMudGVzdChlKSxGPWU9PkMudGVzdChlKSx6PW5ldyBTZXQoW1wibGVuZ3RoXCIsXCJzaXplXCIsXCJwZXJjZW50YWdlXCJdKSxCPWU9PkgoZSx6LFkpLFY9ZT0+SChlLFwicG9zaXRpb25cIixZKSxXPW5ldyBTZXQoW1wiaW1hZ2VcIixcInVybFwiXSksVT1lPT5IKGUsVyxYKSwkPWU9PkgoZSxcIlwiLEcpLEs9KCk9PiEwLEg9KGUsdCxuKT0+e2NvbnN0IHI9Uy5leGVjKGUpO3JldHVybiEhciYmKHJbMV0/XCJzdHJpbmdcIj09dHlwZW9mIHQ/clsxXT09PXQ6dC5oYXMoclsxXSk6bihyWzJdKSl9LHE9ZT0+UC50ZXN0KGUpJiYhVC50ZXN0KGUpLFk9KCk9PiExLEc9ZT0+Ty50ZXN0KGUpLFg9ZT0+Ui50ZXN0KGUpLEo9KFN5bWJvbC50b1N0cmluZ1RhZywoKT0+e2NvbnN0IGU9RShcImNvbG9yc1wiKSx0PUUoXCJzcGFjaW5nXCIpLG49RShcImJsdXJcIikscj1FKFwiYnJpZ2h0bmVzc1wiKSxvPUUoXCJib3JkZXJDb2xvclwiKSxpPUUoXCJib3JkZXJSYWRpdXNcIikscz1FKFwiYm9yZGVyU3BhY2luZ1wiKSxhPUUoXCJib3JkZXJXaWR0aFwiKSxsPUUoXCJjb250cmFzdFwiKSxjPUUoXCJncmF5c2NhbGVcIiksdT1FKFwiaHVlUm90YXRlXCIpLGQ9RShcImludmVydFwiKSxmPUUoXCJnYXBcIiksaD1FKFwiZ3JhZGllbnRDb2xvclN0b3BzXCIpLHA9RShcImdyYWRpZW50Q29sb3JTdG9wUG9zaXRpb25zXCIpLG09RShcImluc2V0XCIpLGc9RShcIm1hcmdpblwiKSx2PUUoXCJvcGFjaXR5XCIpLHk9RShcInBhZGRpbmdcIiksYj1FKFwic2F0dXJhdGVcIikseD1FKFwic2NhbGVcIiksdz1FKFwic2VwaWFcIiksUz1FKFwic2tld1wiKSxfPUUoXCJzcGFjZVwiKSxrPUUoXCJ0cmFuc2xhdGVcIiksQz0oKT0+W1wiYXV0b1wiLEwsdF0sUD0oKT0+W0wsdF0sVD0oKT0+W1wiXCIsTixBXSxPPSgpPT5bXCJhdXRvXCIsaixMXSxSPSgpPT5bXCJcIixcIjBcIixMXSx6PSgpPT5baixMXTtyZXR1cm57Y2FjaGVTaXplOjUwMCxzZXBhcmF0b3I6XCI6XCIsdGhlbWU6e2NvbG9yczpbS10sc3BhY2luZzpbTixBXSxibHVyOltcIm5vbmVcIixcIlwiLEYsTF0sYnJpZ2h0bmVzczp6KCksYm9yZGVyQ29sb3I6W2VdLGJvcmRlclJhZGl1czpbXCJub25lXCIsXCJcIixcImZ1bGxcIixGLExdLGJvcmRlclNwYWNpbmc6UCgpLGJvcmRlcldpZHRoOlQoKSxjb250cmFzdDp6KCksZ3JheXNjYWxlOlIoKSxodWVSb3RhdGU6eigpLGludmVydDpSKCksZ2FwOlAoKSxncmFkaWVudENvbG9yU3RvcHM6W2VdLGdyYWRpZW50Q29sb3JTdG9wUG9zaXRpb25zOltELEFdLGluc2V0OkMoKSxtYXJnaW46QygpLG9wYWNpdHk6eigpLHBhZGRpbmc6UCgpLHNhdHVyYXRlOnooKSxzY2FsZTp6KCksc2VwaWE6UigpLHNrZXc6eigpLHNwYWNlOlAoKSx0cmFuc2xhdGU6UCgpfSxjbGFzc0dyb3Vwczp7YXNwZWN0Olt7YXNwZWN0OltcImF1dG9cIixcInNxdWFyZVwiLFwidmlkZW9cIixMXX1dLGNvbnRhaW5lcjpbXCJjb250YWluZXJcIl0sY29sdW1uczpbe2NvbHVtbnM6W0ZdfV0sXCJicmVhay1hZnRlclwiOlt7XCJicmVhay1hZnRlclwiOltcImF1dG9cIixcImF2b2lkXCIsXCJhbGxcIixcImF2b2lkLXBhZ2VcIixcInBhZ2VcIixcImxlZnRcIixcInJpZ2h0XCIsXCJjb2x1bW5cIl19XSxcImJyZWFrLWJlZm9yZVwiOlt7XCJicmVhay1iZWZvcmVcIjpbXCJhdXRvXCIsXCJhdm9pZFwiLFwiYWxsXCIsXCJhdm9pZC1wYWdlXCIsXCJwYWdlXCIsXCJsZWZ0XCIsXCJyaWdodFwiLFwiY29sdW1uXCJdfV0sXCJicmVhay1pbnNpZGVcIjpbe1wiYnJlYWstaW5zaWRlXCI6W1wiYXV0b1wiLFwiYXZvaWRcIixcImF2b2lkLXBhZ2VcIixcImF2b2lkLWNvbHVtblwiXX1dLFwiYm94LWRlY29yYXRpb25cIjpbe1wiYm94LWRlY29yYXRpb25cIjpbXCJzbGljZVwiLFwiY2xvbmVcIl19XSxib3g6W3tib3g6W1wiYm9yZGVyXCIsXCJjb250ZW50XCJdfV0sZGlzcGxheTpbXCJibG9ja1wiLFwiaW5saW5lLWJsb2NrXCIsXCJpbmxpbmVcIixcImZsZXhcIixcImlubGluZS1mbGV4XCIsXCJ0YWJsZVwiLFwiaW5saW5lLXRhYmxlXCIsXCJ0YWJsZS1jYXB0aW9uXCIsXCJ0YWJsZS1jZWxsXCIsXCJ0YWJsZS1jb2x1bW5cIixcInRhYmxlLWNvbHVtbi1ncm91cFwiLFwidGFibGUtZm9vdGVyLWdyb3VwXCIsXCJ0YWJsZS1oZWFkZXItZ3JvdXBcIixcInRhYmxlLXJvdy1ncm91cFwiLFwidGFibGUtcm93XCIsXCJmbG93LXJvb3RcIixcImdyaWRcIixcImlubGluZS1ncmlkXCIsXCJjb250ZW50c1wiLFwibGlzdC1pdGVtXCIsXCJoaWRkZW5cIl0sZmxvYXQ6W3tmbG9hdDpbXCJyaWdodFwiLFwibGVmdFwiLFwibm9uZVwiLFwic3RhcnRcIixcImVuZFwiXX1dLGNsZWFyOlt7Y2xlYXI6W1wibGVmdFwiLFwicmlnaHRcIixcImJvdGhcIixcIm5vbmVcIixcInN0YXJ0XCIsXCJlbmRcIl19XSxpc29sYXRpb246W1wiaXNvbGF0ZVwiLFwiaXNvbGF0aW9uLWF1dG9cIl0sXCJvYmplY3QtZml0XCI6W3tvYmplY3Q6W1wiY29udGFpblwiLFwiY292ZXJcIixcImZpbGxcIixcIm5vbmVcIixcInNjYWxlLWRvd25cIl19XSxcIm9iamVjdC1wb3NpdGlvblwiOlt7b2JqZWN0OltcImJvdHRvbVwiLFwiY2VudGVyXCIsXCJsZWZ0XCIsXCJsZWZ0LWJvdHRvbVwiLFwibGVmdC10b3BcIixcInJpZ2h0XCIsXCJyaWdodC1ib3R0b21cIixcInJpZ2h0LXRvcFwiLFwidG9wXCIsTF19XSxvdmVyZmxvdzpbe292ZXJmbG93OltcImF1dG9cIixcImhpZGRlblwiLFwiY2xpcFwiLFwidmlzaWJsZVwiLFwic2Nyb2xsXCJdfV0sXCJvdmVyZmxvdy14XCI6W3tcIm92ZXJmbG93LXhcIjpbXCJhdXRvXCIsXCJoaWRkZW5cIixcImNsaXBcIixcInZpc2libGVcIixcInNjcm9sbFwiXX1dLFwib3ZlcmZsb3cteVwiOlt7XCJvdmVyZmxvdy15XCI6W1wiYXV0b1wiLFwiaGlkZGVuXCIsXCJjbGlwXCIsXCJ2aXNpYmxlXCIsXCJzY3JvbGxcIl19XSxvdmVyc2Nyb2xsOlt7b3ZlcnNjcm9sbDpbXCJhdXRvXCIsXCJjb250YWluXCIsXCJub25lXCJdfV0sXCJvdmVyc2Nyb2xsLXhcIjpbe1wib3ZlcnNjcm9sbC14XCI6W1wiYXV0b1wiLFwiY29udGFpblwiLFwibm9uZVwiXX1dLFwib3ZlcnNjcm9sbC15XCI6W3tcIm92ZXJzY3JvbGwteVwiOltcImF1dG9cIixcImNvbnRhaW5cIixcIm5vbmVcIl19XSxwb3NpdGlvbjpbXCJzdGF0aWNcIixcImZpeGVkXCIsXCJhYnNvbHV0ZVwiLFwicmVsYXRpdmVcIixcInN0aWNreVwiXSxpbnNldDpbe2luc2V0OlttXX1dLFwiaW5zZXQteFwiOlt7XCJpbnNldC14XCI6W21dfV0sXCJpbnNldC15XCI6W3tcImluc2V0LXlcIjpbbV19XSxzdGFydDpbe3N0YXJ0OlttXX1dLGVuZDpbe2VuZDpbbV19XSx0b3A6W3t0b3A6W21dfV0scmlnaHQ6W3tyaWdodDpbbV19XSxib3R0b206W3tib3R0b206W21dfV0sbGVmdDpbe2xlZnQ6W21dfV0sdmlzaWJpbGl0eTpbXCJ2aXNpYmxlXCIsXCJpbnZpc2libGVcIixcImNvbGxhcHNlXCJdLHo6W3t6OltcImF1dG9cIixJLExdfV0sYmFzaXM6W3tiYXNpczpDKCl9XSxcImZsZXgtZGlyZWN0aW9uXCI6W3tmbGV4OltcInJvd1wiLFwicm93LXJldmVyc2VcIixcImNvbFwiLFwiY29sLXJldmVyc2VcIl19XSxcImZsZXgtd3JhcFwiOlt7ZmxleDpbXCJ3cmFwXCIsXCJ3cmFwLXJldmVyc2VcIixcIm5vd3JhcFwiXX1dLGZsZXg6W3tmbGV4OltcIjFcIixcImF1dG9cIixcImluaXRpYWxcIixcIm5vbmVcIixMXX1dLGdyb3c6W3tncm93OlIoKX1dLHNocmluazpbe3NocmluazpSKCl9XSxvcmRlcjpbe29yZGVyOltcImZpcnN0XCIsXCJsYXN0XCIsXCJub25lXCIsSSxMXX1dLFwiZ3JpZC1jb2xzXCI6W3tcImdyaWQtY29sc1wiOltLXX1dLFwiY29sLXN0YXJ0LWVuZFwiOlt7Y29sOltcImF1dG9cIix7c3BhbjpbXCJmdWxsXCIsSSxMXX0sTF19XSxcImNvbC1zdGFydFwiOlt7XCJjb2wtc3RhcnRcIjpPKCl9XSxcImNvbC1lbmRcIjpbe1wiY29sLWVuZFwiOk8oKX1dLFwiZ3JpZC1yb3dzXCI6W3tcImdyaWQtcm93c1wiOltLXX1dLFwicm93LXN0YXJ0LWVuZFwiOlt7cm93OltcImF1dG9cIix7c3BhbjpbSSxMXX0sTF19XSxcInJvdy1zdGFydFwiOlt7XCJyb3ctc3RhcnRcIjpPKCl9XSxcInJvdy1lbmRcIjpbe1wicm93LWVuZFwiOk8oKX1dLFwiZ3JpZC1mbG93XCI6W3tcImdyaWQtZmxvd1wiOltcInJvd1wiLFwiY29sXCIsXCJkZW5zZVwiLFwicm93LWRlbnNlXCIsXCJjb2wtZGVuc2VcIl19XSxcImF1dG8tY29sc1wiOlt7XCJhdXRvLWNvbHNcIjpbXCJhdXRvXCIsXCJtaW5cIixcIm1heFwiLFwiZnJcIixMXX1dLFwiYXV0by1yb3dzXCI6W3tcImF1dG8tcm93c1wiOltcImF1dG9cIixcIm1pblwiLFwibWF4XCIsXCJmclwiLExdfV0sZ2FwOlt7Z2FwOltmXX1dLFwiZ2FwLXhcIjpbe1wiZ2FwLXhcIjpbZl19XSxcImdhcC15XCI6W3tcImdhcC15XCI6W2ZdfV0sXCJqdXN0aWZ5LWNvbnRlbnRcIjpbe2p1c3RpZnk6W1wibm9ybWFsXCIsXCJzdGFydFwiLFwiZW5kXCIsXCJjZW50ZXJcIixcImJldHdlZW5cIixcImFyb3VuZFwiLFwiZXZlbmx5XCIsXCJzdHJldGNoXCJdfV0sXCJqdXN0aWZ5LWl0ZW1zXCI6W3tcImp1c3RpZnktaXRlbXNcIjpbXCJzdGFydFwiLFwiZW5kXCIsXCJjZW50ZXJcIixcInN0cmV0Y2hcIl19XSxcImp1c3RpZnktc2VsZlwiOlt7XCJqdXN0aWZ5LXNlbGZcIjpbXCJhdXRvXCIsXCJzdGFydFwiLFwiZW5kXCIsXCJjZW50ZXJcIixcInN0cmV0Y2hcIl19XSxcImFsaWduLWNvbnRlbnRcIjpbe2NvbnRlbnQ6W1wibm9ybWFsXCIsXCJzdGFydFwiLFwiZW5kXCIsXCJjZW50ZXJcIixcImJldHdlZW5cIixcImFyb3VuZFwiLFwiZXZlbmx5XCIsXCJzdHJldGNoXCIsXCJiYXNlbGluZVwiXX1dLFwiYWxpZ24taXRlbXNcIjpbe2l0ZW1zOltcInN0YXJ0XCIsXCJlbmRcIixcImNlbnRlclwiLFwiYmFzZWxpbmVcIixcInN0cmV0Y2hcIl19XSxcImFsaWduLXNlbGZcIjpbe3NlbGY6W1wiYXV0b1wiLFwic3RhcnRcIixcImVuZFwiLFwiY2VudGVyXCIsXCJzdHJldGNoXCIsXCJiYXNlbGluZVwiXX1dLFwicGxhY2UtY29udGVudFwiOlt7XCJwbGFjZS1jb250ZW50XCI6W1wic3RhcnRcIixcImVuZFwiLFwiY2VudGVyXCIsXCJiZXR3ZWVuXCIsXCJhcm91bmRcIixcImV2ZW5seVwiLFwic3RyZXRjaFwiLFwiYmFzZWxpbmVcIl19XSxcInBsYWNlLWl0ZW1zXCI6W3tcInBsYWNlLWl0ZW1zXCI6W1wic3RhcnRcIixcImVuZFwiLFwiY2VudGVyXCIsXCJiYXNlbGluZVwiLFwic3RyZXRjaFwiXX1dLFwicGxhY2Utc2VsZlwiOlt7XCJwbGFjZS1zZWxmXCI6W1wiYXV0b1wiLFwic3RhcnRcIixcImVuZFwiLFwiY2VudGVyXCIsXCJzdHJldGNoXCJdfV0scDpbe3A6W3ldfV0scHg6W3tweDpbeV19XSxweTpbe3B5Olt5XX1dLHBzOlt7cHM6W3ldfV0scGU6W3twZTpbeV19XSxwdDpbe3B0Olt5XX1dLHByOlt7cHI6W3ldfV0scGI6W3twYjpbeV19XSxwbDpbe3BsOlt5XX1dLG06W3ttOltnXX1dLG14Olt7bXg6W2ddfV0sbXk6W3tteTpbZ119XSxtczpbe21zOltnXX1dLG1lOlt7bWU6W2ddfV0sbXQ6W3ttdDpbZ119XSxtcjpbe21yOltnXX1dLG1iOlt7bWI6W2ddfV0sbWw6W3ttbDpbZ119XSxcInNwYWNlLXhcIjpbe1wic3BhY2UteFwiOltfXX1dLFwic3BhY2UteC1yZXZlcnNlXCI6W1wic3BhY2UteC1yZXZlcnNlXCJdLFwic3BhY2UteVwiOlt7XCJzcGFjZS15XCI6W19dfV0sXCJzcGFjZS15LXJldmVyc2VcIjpbXCJzcGFjZS15LXJldmVyc2VcIl0sdzpbe3c6W1wiYXV0b1wiLFwibWluXCIsXCJtYXhcIixcImZpdFwiLFwic3Z3XCIsXCJsdndcIixcImR2d1wiLEwsdF19XSxcIm1pbi13XCI6W3tcIm1pbi13XCI6W0wsdCxcIm1pblwiLFwibWF4XCIsXCJmaXRcIl19XSxcIm1heC13XCI6W3tcIm1heC13XCI6W0wsdCxcIm5vbmVcIixcImZ1bGxcIixcIm1pblwiLFwibWF4XCIsXCJmaXRcIixcInByb3NlXCIse3NjcmVlbjpbRl19LEZdfV0saDpbe2g6W0wsdCxcImF1dG9cIixcIm1pblwiLFwibWF4XCIsXCJmaXRcIixcInN2aFwiLFwibHZoXCIsXCJkdmhcIl19XSxcIm1pbi1oXCI6W3tcIm1pbi1oXCI6W0wsdCxcIm1pblwiLFwibWF4XCIsXCJmaXRcIixcInN2aFwiLFwibHZoXCIsXCJkdmhcIl19XSxcIm1heC1oXCI6W3tcIm1heC1oXCI6W0wsdCxcIm1pblwiLFwibWF4XCIsXCJmaXRcIixcInN2aFwiLFwibHZoXCIsXCJkdmhcIl19XSxzaXplOlt7c2l6ZTpbTCx0LFwiYXV0b1wiLFwibWluXCIsXCJtYXhcIixcImZpdFwiXX1dLFwiZm9udC1zaXplXCI6W3t0ZXh0OltcImJhc2VcIixGLEFdfV0sXCJmb250LXNtb290aGluZ1wiOltcImFudGlhbGlhc2VkXCIsXCJzdWJwaXhlbC1hbnRpYWxpYXNlZFwiXSxcImZvbnQtc3R5bGVcIjpbXCJpdGFsaWNcIixcIm5vdC1pdGFsaWNcIl0sXCJmb250LXdlaWdodFwiOlt7Zm9udDpbXCJ0aGluXCIsXCJleHRyYWxpZ2h0XCIsXCJsaWdodFwiLFwibm9ybWFsXCIsXCJtZWRpdW1cIixcInNlbWlib2xkXCIsXCJib2xkXCIsXCJleHRyYWJvbGRcIixcImJsYWNrXCIsTV19XSxcImZvbnQtZmFtaWx5XCI6W3tmb250OltLXX1dLFwiZnZuLW5vcm1hbFwiOltcIm5vcm1hbC1udW1zXCJdLFwiZnZuLW9yZGluYWxcIjpbXCJvcmRpbmFsXCJdLFwiZnZuLXNsYXNoZWQtemVyb1wiOltcInNsYXNoZWQtemVyb1wiXSxcImZ2bi1maWd1cmVcIjpbXCJsaW5pbmctbnVtc1wiLFwib2xkc3R5bGUtbnVtc1wiXSxcImZ2bi1zcGFjaW5nXCI6W1wicHJvcG9ydGlvbmFsLW51bXNcIixcInRhYnVsYXItbnVtc1wiXSxcImZ2bi1mcmFjdGlvblwiOltcImRpYWdvbmFsLWZyYWN0aW9uc1wiLFwic3RhY2tlZC1mcmFjdG9uc1wiXSx0cmFja2luZzpbe3RyYWNraW5nOltcInRpZ2h0ZXJcIixcInRpZ2h0XCIsXCJub3JtYWxcIixcIndpZGVcIixcIndpZGVyXCIsXCJ3aWRlc3RcIixMXX1dLFwibGluZS1jbGFtcFwiOlt7XCJsaW5lLWNsYW1wXCI6W1wibm9uZVwiLGosTV19XSxsZWFkaW5nOlt7bGVhZGluZzpbXCJub25lXCIsXCJ0aWdodFwiLFwic251Z1wiLFwibm9ybWFsXCIsXCJyZWxheGVkXCIsXCJsb29zZVwiLE4sTF19XSxcImxpc3QtaW1hZ2VcIjpbe1wibGlzdC1pbWFnZVwiOltcIm5vbmVcIixMXX1dLFwibGlzdC1zdHlsZS10eXBlXCI6W3tsaXN0OltcIm5vbmVcIixcImRpc2NcIixcImRlY2ltYWxcIixMXX1dLFwibGlzdC1zdHlsZS1wb3NpdGlvblwiOlt7bGlzdDpbXCJpbnNpZGVcIixcIm91dHNpZGVcIl19XSxcInBsYWNlaG9sZGVyLWNvbG9yXCI6W3twbGFjZWhvbGRlcjpbZV19XSxcInBsYWNlaG9sZGVyLW9wYWNpdHlcIjpbe1wicGxhY2Vob2xkZXItb3BhY2l0eVwiOlt2XX1dLFwidGV4dC1hbGlnbm1lbnRcIjpbe3RleHQ6W1wibGVmdFwiLFwiY2VudGVyXCIsXCJyaWdodFwiLFwianVzdGlmeVwiLFwic3RhcnRcIixcImVuZFwiXX1dLFwidGV4dC1jb2xvclwiOlt7dGV4dDpbZV19XSxcInRleHQtb3BhY2l0eVwiOlt7XCJ0ZXh0LW9wYWNpdHlcIjpbdl19XSxcInRleHQtZGVjb3JhdGlvblwiOltcInVuZGVybGluZVwiLFwib3ZlcmxpbmVcIixcImxpbmUtdGhyb3VnaFwiLFwibm8tdW5kZXJsaW5lXCJdLFwidGV4dC1kZWNvcmF0aW9uLXN0eWxlXCI6W3tkZWNvcmF0aW9uOltcInNvbGlkXCIsXCJkYXNoZWRcIixcImRvdHRlZFwiLFwiZG91YmxlXCIsXCJub25lXCIsXCJ3YXZ5XCJdfV0sXCJ0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzXCI6W3tkZWNvcmF0aW9uOltcImF1dG9cIixcImZyb20tZm9udFwiLE4sQV19XSxcInVuZGVybGluZS1vZmZzZXRcIjpbe1widW5kZXJsaW5lLW9mZnNldFwiOltcImF1dG9cIixOLExdfV0sXCJ0ZXh0LWRlY29yYXRpb24tY29sb3JcIjpbe2RlY29yYXRpb246W2VdfV0sXCJ0ZXh0LXRyYW5zZm9ybVwiOltcInVwcGVyY2FzZVwiLFwibG93ZXJjYXNlXCIsXCJjYXBpdGFsaXplXCIsXCJub3JtYWwtY2FzZVwiXSxcInRleHQtb3ZlcmZsb3dcIjpbXCJ0cnVuY2F0ZVwiLFwidGV4dC1lbGxpcHNpc1wiLFwidGV4dC1jbGlwXCJdLFwidGV4dC13cmFwXCI6W3t0ZXh0OltcIndyYXBcIixcIm5vd3JhcFwiLFwiYmFsYW5jZVwiLFwicHJldHR5XCJdfV0saW5kZW50Olt7aW5kZW50OlAoKX1dLFwidmVydGljYWwtYWxpZ25cIjpbe2FsaWduOltcImJhc2VsaW5lXCIsXCJ0b3BcIixcIm1pZGRsZVwiLFwiYm90dG9tXCIsXCJ0ZXh0LXRvcFwiLFwidGV4dC1ib3R0b21cIixcInN1YlwiLFwic3VwZXJcIixMXX1dLHdoaXRlc3BhY2U6W3t3aGl0ZXNwYWNlOltcIm5vcm1hbFwiLFwibm93cmFwXCIsXCJwcmVcIixcInByZS1saW5lXCIsXCJwcmUtd3JhcFwiLFwiYnJlYWstc3BhY2VzXCJdfV0sYnJlYWs6W3ticmVhazpbXCJub3JtYWxcIixcIndvcmRzXCIsXCJhbGxcIixcImtlZXBcIl19XSxoeXBoZW5zOlt7aHlwaGVuczpbXCJub25lXCIsXCJtYW51YWxcIixcImF1dG9cIl19XSxjb250ZW50Olt7Y29udGVudDpbXCJub25lXCIsTF19XSxcImJnLWF0dGFjaG1lbnRcIjpbe2JnOltcImZpeGVkXCIsXCJsb2NhbFwiLFwic2Nyb2xsXCJdfV0sXCJiZy1jbGlwXCI6W3tcImJnLWNsaXBcIjpbXCJib3JkZXJcIixcInBhZGRpbmdcIixcImNvbnRlbnRcIixcInRleHRcIl19XSxcImJnLW9wYWNpdHlcIjpbe1wiYmctb3BhY2l0eVwiOlt2XX1dLFwiYmctb3JpZ2luXCI6W3tcImJnLW9yaWdpblwiOltcImJvcmRlclwiLFwicGFkZGluZ1wiLFwiY29udGVudFwiXX1dLFwiYmctcG9zaXRpb25cIjpbe2JnOltcImJvdHRvbVwiLFwiY2VudGVyXCIsXCJsZWZ0XCIsXCJsZWZ0LWJvdHRvbVwiLFwibGVmdC10b3BcIixcInJpZ2h0XCIsXCJyaWdodC1ib3R0b21cIixcInJpZ2h0LXRvcFwiLFwidG9wXCIsVl19XSxcImJnLXJlcGVhdFwiOlt7Ymc6W1wibm8tcmVwZWF0XCIse3JlcGVhdDpbXCJcIixcInhcIixcInlcIixcInJvdW5kXCIsXCJzcGFjZVwiXX1dfV0sXCJiZy1zaXplXCI6W3tiZzpbXCJhdXRvXCIsXCJjb3ZlclwiLFwiY29udGFpblwiLEJdfV0sXCJiZy1pbWFnZVwiOlt7Ymc6W1wibm9uZVwiLHtcImdyYWRpZW50LXRvXCI6W1widFwiLFwidHJcIixcInJcIixcImJyXCIsXCJiXCIsXCJibFwiLFwibFwiLFwidGxcIl19LFVdfV0sXCJiZy1jb2xvclwiOlt7Ymc6W2VdfV0sXCJncmFkaWVudC1mcm9tLXBvc1wiOlt7ZnJvbTpbcF19XSxcImdyYWRpZW50LXZpYS1wb3NcIjpbe3ZpYTpbcF19XSxcImdyYWRpZW50LXRvLXBvc1wiOlt7dG86W3BdfV0sXCJncmFkaWVudC1mcm9tXCI6W3tmcm9tOltoXX1dLFwiZ3JhZGllbnQtdmlhXCI6W3t2aWE6W2hdfV0sXCJncmFkaWVudC10b1wiOlt7dG86W2hdfV0scm91bmRlZDpbe3JvdW5kZWQ6W2ldfV0sXCJyb3VuZGVkLXNcIjpbe1wicm91bmRlZC1zXCI6W2ldfV0sXCJyb3VuZGVkLWVcIjpbe1wicm91bmRlZC1lXCI6W2ldfV0sXCJyb3VuZGVkLXRcIjpbe1wicm91bmRlZC10XCI6W2ldfV0sXCJyb3VuZGVkLXJcIjpbe1wicm91bmRlZC1yXCI6W2ldfV0sXCJyb3VuZGVkLWJcIjpbe1wicm91bmRlZC1iXCI6W2ldfV0sXCJyb3VuZGVkLWxcIjpbe1wicm91bmRlZC1sXCI6W2ldfV0sXCJyb3VuZGVkLXNzXCI6W3tcInJvdW5kZWQtc3NcIjpbaV19XSxcInJvdW5kZWQtc2VcIjpbe1wicm91bmRlZC1zZVwiOltpXX1dLFwicm91bmRlZC1lZVwiOlt7XCJyb3VuZGVkLWVlXCI6W2ldfV0sXCJyb3VuZGVkLWVzXCI6W3tcInJvdW5kZWQtZXNcIjpbaV19XSxcInJvdW5kZWQtdGxcIjpbe1wicm91bmRlZC10bFwiOltpXX1dLFwicm91bmRlZC10clwiOlt7XCJyb3VuZGVkLXRyXCI6W2ldfV0sXCJyb3VuZGVkLWJyXCI6W3tcInJvdW5kZWQtYnJcIjpbaV19XSxcInJvdW5kZWQtYmxcIjpbe1wicm91bmRlZC1ibFwiOltpXX1dLFwiYm9yZGVyLXdcIjpbe2JvcmRlcjpbYV19XSxcImJvcmRlci13LXhcIjpbe1wiYm9yZGVyLXhcIjpbYV19XSxcImJvcmRlci13LXlcIjpbe1wiYm9yZGVyLXlcIjpbYV19XSxcImJvcmRlci13LXNcIjpbe1wiYm9yZGVyLXNcIjpbYV19XSxcImJvcmRlci13LWVcIjpbe1wiYm9yZGVyLWVcIjpbYV19XSxcImJvcmRlci13LXRcIjpbe1wiYm9yZGVyLXRcIjpbYV19XSxcImJvcmRlci13LXJcIjpbe1wiYm9yZGVyLXJcIjpbYV19XSxcImJvcmRlci13LWJcIjpbe1wiYm9yZGVyLWJcIjpbYV19XSxcImJvcmRlci13LWxcIjpbe1wiYm9yZGVyLWxcIjpbYV19XSxcImJvcmRlci1vcGFjaXR5XCI6W3tcImJvcmRlci1vcGFjaXR5XCI6W3ZdfV0sXCJib3JkZXItc3R5bGVcIjpbe2JvcmRlcjpbXCJzb2xpZFwiLFwiZGFzaGVkXCIsXCJkb3R0ZWRcIixcImRvdWJsZVwiLFwibm9uZVwiLFwiaGlkZGVuXCJdfV0sXCJkaXZpZGUteFwiOlt7XCJkaXZpZGUteFwiOlthXX1dLFwiZGl2aWRlLXgtcmV2ZXJzZVwiOltcImRpdmlkZS14LXJldmVyc2VcIl0sXCJkaXZpZGUteVwiOlt7XCJkaXZpZGUteVwiOlthXX1dLFwiZGl2aWRlLXktcmV2ZXJzZVwiOltcImRpdmlkZS15LXJldmVyc2VcIl0sXCJkaXZpZGUtb3BhY2l0eVwiOlt7XCJkaXZpZGUtb3BhY2l0eVwiOlt2XX1dLFwiZGl2aWRlLXN0eWxlXCI6W3tkaXZpZGU6W1wic29saWRcIixcImRhc2hlZFwiLFwiZG90dGVkXCIsXCJkb3VibGVcIixcIm5vbmVcIl19XSxcImJvcmRlci1jb2xvclwiOlt7Ym9yZGVyOltvXX1dLFwiYm9yZGVyLWNvbG9yLXhcIjpbe1wiYm9yZGVyLXhcIjpbb119XSxcImJvcmRlci1jb2xvci15XCI6W3tcImJvcmRlci15XCI6W29dfV0sXCJib3JkZXItY29sb3ItdFwiOlt7XCJib3JkZXItdFwiOltvXX1dLFwiYm9yZGVyLWNvbG9yLXJcIjpbe1wiYm9yZGVyLXJcIjpbb119XSxcImJvcmRlci1jb2xvci1iXCI6W3tcImJvcmRlci1iXCI6W29dfV0sXCJib3JkZXItY29sb3ItbFwiOlt7XCJib3JkZXItbFwiOltvXX1dLFwiZGl2aWRlLWNvbG9yXCI6W3tkaXZpZGU6W29dfV0sXCJvdXRsaW5lLXN0eWxlXCI6W3tvdXRsaW5lOltcIlwiLFwic29saWRcIixcImRhc2hlZFwiLFwiZG90dGVkXCIsXCJkb3VibGVcIixcIm5vbmVcIl19XSxcIm91dGxpbmUtb2Zmc2V0XCI6W3tcIm91dGxpbmUtb2Zmc2V0XCI6W04sTF19XSxcIm91dGxpbmUtd1wiOlt7b3V0bGluZTpbTixBXX1dLFwib3V0bGluZS1jb2xvclwiOlt7b3V0bGluZTpbZV19XSxcInJpbmctd1wiOlt7cmluZzpUKCl9XSxcInJpbmctdy1pbnNldFwiOltcInJpbmctaW5zZXRcIl0sXCJyaW5nLWNvbG9yXCI6W3tyaW5nOltlXX1dLFwicmluZy1vcGFjaXR5XCI6W3tcInJpbmctb3BhY2l0eVwiOlt2XX1dLFwicmluZy1vZmZzZXQtd1wiOlt7XCJyaW5nLW9mZnNldFwiOltOLEFdfV0sXCJyaW5nLW9mZnNldC1jb2xvclwiOlt7XCJyaW5nLW9mZnNldFwiOltlXX1dLHNoYWRvdzpbe3NoYWRvdzpbXCJcIixcImlubmVyXCIsXCJub25lXCIsRiwkXX1dLFwic2hhZG93LWNvbG9yXCI6W3tzaGFkb3c6W0tdfV0sb3BhY2l0eTpbe29wYWNpdHk6W3ZdfV0sXCJtaXgtYmxlbmRcIjpbe1wibWl4LWJsZW5kXCI6W1wibm9ybWFsXCIsXCJtdWx0aXBseVwiLFwic2NyZWVuXCIsXCJvdmVybGF5XCIsXCJkYXJrZW5cIixcImxpZ2h0ZW5cIixcImNvbG9yLWRvZGdlXCIsXCJjb2xvci1idXJuXCIsXCJoYXJkLWxpZ2h0XCIsXCJzb2Z0LWxpZ2h0XCIsXCJkaWZmZXJlbmNlXCIsXCJleGNsdXNpb25cIixcImh1ZVwiLFwic2F0dXJhdGlvblwiLFwiY29sb3JcIixcImx1bWlub3NpdHlcIixcInBsdXMtbGlnaHRlclwiLFwicGx1cy1kYXJrZXJcIl19XSxcImJnLWJsZW5kXCI6W3tcImJnLWJsZW5kXCI6W1wibm9ybWFsXCIsXCJtdWx0aXBseVwiLFwic2NyZWVuXCIsXCJvdmVybGF5XCIsXCJkYXJrZW5cIixcImxpZ2h0ZW5cIixcImNvbG9yLWRvZGdlXCIsXCJjb2xvci1idXJuXCIsXCJoYXJkLWxpZ2h0XCIsXCJzb2Z0LWxpZ2h0XCIsXCJkaWZmZXJlbmNlXCIsXCJleGNsdXNpb25cIixcImh1ZVwiLFwic2F0dXJhdGlvblwiLFwiY29sb3JcIixcImx1bWlub3NpdHlcIl19XSxmaWx0ZXI6W3tmaWx0ZXI6W1wiXCIsXCJub25lXCJdfV0sYmx1cjpbe2JsdXI6W25dfV0sYnJpZ2h0bmVzczpbe2JyaWdodG5lc3M6W3JdfV0sY29udHJhc3Q6W3tjb250cmFzdDpbbF19XSxcImRyb3Atc2hhZG93XCI6W3tcImRyb3Atc2hhZG93XCI6W1wiXCIsXCJub25lXCIsRixMXX1dLGdyYXlzY2FsZTpbe2dyYXlzY2FsZTpbY119XSxcImh1ZS1yb3RhdGVcIjpbe1wiaHVlLXJvdGF0ZVwiOlt1XX1dLGludmVydDpbe2ludmVydDpbZF19XSxzYXR1cmF0ZTpbe3NhdHVyYXRlOltiXX1dLHNlcGlhOlt7c2VwaWE6W3ddfV0sXCJiYWNrZHJvcC1maWx0ZXJcIjpbe1wiYmFja2Ryb3AtZmlsdGVyXCI6W1wiXCIsXCJub25lXCJdfV0sXCJiYWNrZHJvcC1ibHVyXCI6W3tcImJhY2tkcm9wLWJsdXJcIjpbbl19XSxcImJhY2tkcm9wLWJyaWdodG5lc3NcIjpbe1wiYmFja2Ryb3AtYnJpZ2h0bmVzc1wiOltyXX1dLFwiYmFja2Ryb3AtY29udHJhc3RcIjpbe1wiYmFja2Ryb3AtY29udHJhc3RcIjpbbF19XSxcImJhY2tkcm9wLWdyYXlzY2FsZVwiOlt7XCJiYWNrZHJvcC1ncmF5c2NhbGVcIjpbY119XSxcImJhY2tkcm9wLWh1ZS1yb3RhdGVcIjpbe1wiYmFja2Ryb3AtaHVlLXJvdGF0ZVwiOlt1XX1dLFwiYmFja2Ryb3AtaW52ZXJ0XCI6W3tcImJhY2tkcm9wLWludmVydFwiOltkXX1dLFwiYmFja2Ryb3Atb3BhY2l0eVwiOlt7XCJiYWNrZHJvcC1vcGFjaXR5XCI6W3ZdfV0sXCJiYWNrZHJvcC1zYXR1cmF0ZVwiOlt7XCJiYWNrZHJvcC1zYXR1cmF0ZVwiOltiXX1dLFwiYmFja2Ryb3Atc2VwaWFcIjpbe1wiYmFja2Ryb3Atc2VwaWFcIjpbd119XSxcImJvcmRlci1jb2xsYXBzZVwiOlt7Ym9yZGVyOltcImNvbGxhcHNlXCIsXCJzZXBhcmF0ZVwiXX1dLFwiYm9yZGVyLXNwYWNpbmdcIjpbe1wiYm9yZGVyLXNwYWNpbmdcIjpbc119XSxcImJvcmRlci1zcGFjaW5nLXhcIjpbe1wiYm9yZGVyLXNwYWNpbmcteFwiOltzXX1dLFwiYm9yZGVyLXNwYWNpbmcteVwiOlt7XCJib3JkZXItc3BhY2luZy15XCI6W3NdfV0sXCJ0YWJsZS1sYXlvdXRcIjpbe3RhYmxlOltcImF1dG9cIixcImZpeGVkXCJdfV0sY2FwdGlvbjpbe2NhcHRpb246W1widG9wXCIsXCJib3R0b21cIl19XSx0cmFuc2l0aW9uOlt7dHJhbnNpdGlvbjpbXCJub25lXCIsXCJhbGxcIixcIlwiLFwiY29sb3JzXCIsXCJvcGFjaXR5XCIsXCJzaGFkb3dcIixcInRyYW5zZm9ybVwiLExdfV0sZHVyYXRpb246W3tkdXJhdGlvbjp6KCl9XSxlYXNlOlt7ZWFzZTpbXCJsaW5lYXJcIixcImluXCIsXCJvdXRcIixcImluLW91dFwiLExdfV0sZGVsYXk6W3tkZWxheTp6KCl9XSxhbmltYXRlOlt7YW5pbWF0ZTpbXCJub25lXCIsXCJzcGluXCIsXCJwaW5nXCIsXCJwdWxzZVwiLFwiYm91bmNlXCIsTF19XSx0cmFuc2Zvcm06W3t0cmFuc2Zvcm06W1wiXCIsXCJncHVcIixcIm5vbmVcIl19XSxzY2FsZTpbe3NjYWxlOlt4XX1dLFwic2NhbGUteFwiOlt7XCJzY2FsZS14XCI6W3hdfV0sXCJzY2FsZS15XCI6W3tcInNjYWxlLXlcIjpbeF19XSxyb3RhdGU6W3tyb3RhdGU6W0ksTF19XSxcInRyYW5zbGF0ZS14XCI6W3tcInRyYW5zbGF0ZS14XCI6W2tdfV0sXCJ0cmFuc2xhdGUteVwiOlt7XCJ0cmFuc2xhdGUteVwiOltrXX1dLFwic2tldy14XCI6W3tcInNrZXcteFwiOltTXX1dLFwic2tldy15XCI6W3tcInNrZXcteVwiOltTXX1dLFwidHJhbnNmb3JtLW9yaWdpblwiOlt7b3JpZ2luOltcImNlbnRlclwiLFwidG9wXCIsXCJ0b3AtcmlnaHRcIixcInJpZ2h0XCIsXCJib3R0b20tcmlnaHRcIixcImJvdHRvbVwiLFwiYm90dG9tLWxlZnRcIixcImxlZnRcIixcInRvcC1sZWZ0XCIsTF19XSxhY2NlbnQ6W3thY2NlbnQ6W1wiYXV0b1wiLGVdfV0sYXBwZWFyYW5jZTpbe2FwcGVhcmFuY2U6W1wibm9uZVwiLFwiYXV0b1wiXX1dLGN1cnNvcjpbe2N1cnNvcjpbXCJhdXRvXCIsXCJkZWZhdWx0XCIsXCJwb2ludGVyXCIsXCJ3YWl0XCIsXCJ0ZXh0XCIsXCJtb3ZlXCIsXCJoZWxwXCIsXCJub3QtYWxsb3dlZFwiLFwibm9uZVwiLFwiY29udGV4dC1tZW51XCIsXCJwcm9ncmVzc1wiLFwiY2VsbFwiLFwiY3Jvc3NoYWlyXCIsXCJ2ZXJ0aWNhbC10ZXh0XCIsXCJhbGlhc1wiLFwiY29weVwiLFwibm8tZHJvcFwiLFwiZ3JhYlwiLFwiZ3JhYmJpbmdcIixcImFsbC1zY3JvbGxcIixcImNvbC1yZXNpemVcIixcInJvdy1yZXNpemVcIixcIm4tcmVzaXplXCIsXCJlLXJlc2l6ZVwiLFwicy1yZXNpemVcIixcInctcmVzaXplXCIsXCJuZS1yZXNpemVcIixcIm53LXJlc2l6ZVwiLFwic2UtcmVzaXplXCIsXCJzdy1yZXNpemVcIixcImV3LXJlc2l6ZVwiLFwibnMtcmVzaXplXCIsXCJuZXN3LXJlc2l6ZVwiLFwibndzZS1yZXNpemVcIixcInpvb20taW5cIixcInpvb20tb3V0XCIsTF19XSxcImNhcmV0LWNvbG9yXCI6W3tjYXJldDpbZV19XSxcInBvaW50ZXItZXZlbnRzXCI6W3tcInBvaW50ZXItZXZlbnRzXCI6W1wibm9uZVwiLFwiYXV0b1wiXX1dLHJlc2l6ZTpbe3Jlc2l6ZTpbXCJub25lXCIsXCJ5XCIsXCJ4XCIsXCJcIl19XSxcInNjcm9sbC1iZWhhdmlvclwiOlt7c2Nyb2xsOltcImF1dG9cIixcInNtb290aFwiXX1dLFwic2Nyb2xsLW1cIjpbe1wic2Nyb2xsLW1cIjpQKCl9XSxcInNjcm9sbC1teFwiOlt7XCJzY3JvbGwtbXhcIjpQKCl9XSxcInNjcm9sbC1teVwiOlt7XCJzY3JvbGwtbXlcIjpQKCl9XSxcInNjcm9sbC1tc1wiOlt7XCJzY3JvbGwtbXNcIjpQKCl9XSxcInNjcm9sbC1tZVwiOlt7XCJzY3JvbGwtbWVcIjpQKCl9XSxcInNjcm9sbC1tdFwiOlt7XCJzY3JvbGwtbXRcIjpQKCl9XSxcInNjcm9sbC1tclwiOlt7XCJzY3JvbGwtbXJcIjpQKCl9XSxcInNjcm9sbC1tYlwiOlt7XCJzY3JvbGwtbWJcIjpQKCl9XSxcInNjcm9sbC1tbFwiOlt7XCJzY3JvbGwtbWxcIjpQKCl9XSxcInNjcm9sbC1wXCI6W3tcInNjcm9sbC1wXCI6UCgpfV0sXCJzY3JvbGwtcHhcIjpbe1wic2Nyb2xsLXB4XCI6UCgpfV0sXCJzY3JvbGwtcHlcIjpbe1wic2Nyb2xsLXB5XCI6UCgpfV0sXCJzY3JvbGwtcHNcIjpbe1wic2Nyb2xsLXBzXCI6UCgpfV0sXCJzY3JvbGwtcGVcIjpbe1wic2Nyb2xsLXBlXCI6UCgpfV0sXCJzY3JvbGwtcHRcIjpbe1wic2Nyb2xsLXB0XCI6UCgpfV0sXCJzY3JvbGwtcHJcIjpbe1wic2Nyb2xsLXByXCI6UCgpfV0sXCJzY3JvbGwtcGJcIjpbe1wic2Nyb2xsLXBiXCI6UCgpfV0sXCJzY3JvbGwtcGxcIjpbe1wic2Nyb2xsLXBsXCI6UCgpfV0sXCJzbmFwLWFsaWduXCI6W3tzbmFwOltcInN0YXJ0XCIsXCJlbmRcIixcImNlbnRlclwiLFwiYWxpZ24tbm9uZVwiXX1dLFwic25hcC1zdG9wXCI6W3tzbmFwOltcIm5vcm1hbFwiLFwiYWx3YXlzXCJdfV0sXCJzbmFwLXR5cGVcIjpbe3NuYXA6W1wibm9uZVwiLFwieFwiLFwieVwiLFwiYm90aFwiXX1dLFwic25hcC1zdHJpY3RuZXNzXCI6W3tzbmFwOltcIm1hbmRhdG9yeVwiLFwicHJveGltaXR5XCJdfV0sdG91Y2g6W3t0b3VjaDpbXCJhdXRvXCIsXCJub25lXCIsXCJtYW5pcHVsYXRpb25cIl19XSxcInRvdWNoLXhcIjpbe1widG91Y2gtcGFuXCI6W1wieFwiLFwibGVmdFwiLFwicmlnaHRcIl19XSxcInRvdWNoLXlcIjpbe1widG91Y2gtcGFuXCI6W1wieVwiLFwidXBcIixcImRvd25cIl19XSxcInRvdWNoLXB6XCI6W1widG91Y2gtcGluY2gtem9vbVwiXSxzZWxlY3Q6W3tzZWxlY3Q6W1wibm9uZVwiLFwidGV4dFwiLFwiYWxsXCIsXCJhdXRvXCJdfV0sXCJ3aWxsLWNoYW5nZVwiOlt7XCJ3aWxsLWNoYW5nZVwiOltcImF1dG9cIixcInNjcm9sbFwiLFwiY29udGVudHNcIixcInRyYW5zZm9ybVwiLExdfV0sZmlsbDpbe2ZpbGw6W2UsXCJub25lXCJdfV0sXCJzdHJva2Utd1wiOlt7c3Ryb2tlOltOLEEsTV19XSxzdHJva2U6W3tzdHJva2U6W2UsXCJub25lXCJdfV0sc3I6W1wic3Itb25seVwiLFwibm90LXNyLW9ubHlcIl0sXCJmb3JjZWQtY29sb3ItYWRqdXN0XCI6W3tcImZvcmNlZC1jb2xvci1hZGp1c3RcIjpbXCJhdXRvXCIsXCJub25lXCJdfV19LGNvbmZsaWN0aW5nQ2xhc3NHcm91cHM6e292ZXJmbG93OltcIm92ZXJmbG93LXhcIixcIm92ZXJmbG93LXlcIl0sb3ZlcnNjcm9sbDpbXCJvdmVyc2Nyb2xsLXhcIixcIm92ZXJzY3JvbGwteVwiXSxpbnNldDpbXCJpbnNldC14XCIsXCJpbnNldC15XCIsXCJzdGFydFwiLFwiZW5kXCIsXCJ0b3BcIixcInJpZ2h0XCIsXCJib3R0b21cIixcImxlZnRcIl0sXCJpbnNldC14XCI6W1wicmlnaHRcIixcImxlZnRcIl0sXCJpbnNldC15XCI6W1widG9wXCIsXCJib3R0b21cIl0sZmxleDpbXCJiYXNpc1wiLFwiZ3Jvd1wiLFwic2hyaW5rXCJdLGdhcDpbXCJnYXAteFwiLFwiZ2FwLXlcIl0scDpbXCJweFwiLFwicHlcIixcInBzXCIsXCJwZVwiLFwicHRcIixcInByXCIsXCJwYlwiLFwicGxcIl0scHg6W1wicHJcIixcInBsXCJdLHB5OltcInB0XCIsXCJwYlwiXSxtOltcIm14XCIsXCJteVwiLFwibXNcIixcIm1lXCIsXCJtdFwiLFwibXJcIixcIm1iXCIsXCJtbFwiXSxteDpbXCJtclwiLFwibWxcIl0sbXk6W1wibXRcIixcIm1iXCJdLHNpemU6W1wid1wiLFwiaFwiXSxcImZvbnQtc2l6ZVwiOltcImxlYWRpbmdcIl0sXCJmdm4tbm9ybWFsXCI6W1wiZnZuLW9yZGluYWxcIixcImZ2bi1zbGFzaGVkLXplcm9cIixcImZ2bi1maWd1cmVcIixcImZ2bi1zcGFjaW5nXCIsXCJmdm4tZnJhY3Rpb25cIl0sXCJmdm4tb3JkaW5hbFwiOltcImZ2bi1ub3JtYWxcIl0sXCJmdm4tc2xhc2hlZC16ZXJvXCI6W1wiZnZuLW5vcm1hbFwiXSxcImZ2bi1maWd1cmVcIjpbXCJmdm4tbm9ybWFsXCJdLFwiZnZuLXNwYWNpbmdcIjpbXCJmdm4tbm9ybWFsXCJdLFwiZnZuLWZyYWN0aW9uXCI6W1wiZnZuLW5vcm1hbFwiXSxcImxpbmUtY2xhbXBcIjpbXCJkaXNwbGF5XCIsXCJvdmVyZmxvd1wiXSxyb3VuZGVkOltcInJvdW5kZWQtc1wiLFwicm91bmRlZC1lXCIsXCJyb3VuZGVkLXRcIixcInJvdW5kZWQtclwiLFwicm91bmRlZC1iXCIsXCJyb3VuZGVkLWxcIixcInJvdW5kZWQtc3NcIixcInJvdW5kZWQtc2VcIixcInJvdW5kZWQtZWVcIixcInJvdW5kZWQtZXNcIixcInJvdW5kZWQtdGxcIixcInJvdW5kZWQtdHJcIixcInJvdW5kZWQtYnJcIixcInJvdW5kZWQtYmxcIl0sXCJyb3VuZGVkLXNcIjpbXCJyb3VuZGVkLXNzXCIsXCJyb3VuZGVkLWVzXCJdLFwicm91bmRlZC1lXCI6W1wicm91bmRlZC1zZVwiLFwicm91bmRlZC1lZVwiXSxcInJvdW5kZWQtdFwiOltcInJvdW5kZWQtdGxcIixcInJvdW5kZWQtdHJcIl0sXCJyb3VuZGVkLXJcIjpbXCJyb3VuZGVkLXRyXCIsXCJyb3VuZGVkLWJyXCJdLFwicm91bmRlZC1iXCI6W1wicm91bmRlZC1iclwiLFwicm91bmRlZC1ibFwiXSxcInJvdW5kZWQtbFwiOltcInJvdW5kZWQtdGxcIixcInJvdW5kZWQtYmxcIl0sXCJib3JkZXItc3BhY2luZ1wiOltcImJvcmRlci1zcGFjaW5nLXhcIixcImJvcmRlci1zcGFjaW5nLXlcIl0sXCJib3JkZXItd1wiOltcImJvcmRlci13LXNcIixcImJvcmRlci13LWVcIixcImJvcmRlci13LXRcIixcImJvcmRlci13LXJcIixcImJvcmRlci13LWJcIixcImJvcmRlci13LWxcIl0sXCJib3JkZXItdy14XCI6W1wiYm9yZGVyLXctclwiLFwiYm9yZGVyLXctbFwiXSxcImJvcmRlci13LXlcIjpbXCJib3JkZXItdy10XCIsXCJib3JkZXItdy1iXCJdLFwiYm9yZGVyLWNvbG9yXCI6W1wiYm9yZGVyLWNvbG9yLXRcIixcImJvcmRlci1jb2xvci1yXCIsXCJib3JkZXItY29sb3ItYlwiLFwiYm9yZGVyLWNvbG9yLWxcIl0sXCJib3JkZXItY29sb3IteFwiOltcImJvcmRlci1jb2xvci1yXCIsXCJib3JkZXItY29sb3ItbFwiXSxcImJvcmRlci1jb2xvci15XCI6W1wiYm9yZGVyLWNvbG9yLXRcIixcImJvcmRlci1jb2xvci1iXCJdLFwic2Nyb2xsLW1cIjpbXCJzY3JvbGwtbXhcIixcInNjcm9sbC1teVwiLFwic2Nyb2xsLW1zXCIsXCJzY3JvbGwtbWVcIixcInNjcm9sbC1tdFwiLFwic2Nyb2xsLW1yXCIsXCJzY3JvbGwtbWJcIixcInNjcm9sbC1tbFwiXSxcInNjcm9sbC1teFwiOltcInNjcm9sbC1tclwiLFwic2Nyb2xsLW1sXCJdLFwic2Nyb2xsLW15XCI6W1wic2Nyb2xsLW10XCIsXCJzY3JvbGwtbWJcIl0sXCJzY3JvbGwtcFwiOltcInNjcm9sbC1weFwiLFwic2Nyb2xsLXB5XCIsXCJzY3JvbGwtcHNcIixcInNjcm9sbC1wZVwiLFwic2Nyb2xsLXB0XCIsXCJzY3JvbGwtcHJcIixcInNjcm9sbC1wYlwiLFwic2Nyb2xsLXBsXCJdLFwic2Nyb2xsLXB4XCI6W1wic2Nyb2xsLXByXCIsXCJzY3JvbGwtcGxcIl0sXCJzY3JvbGwtcHlcIjpbXCJzY3JvbGwtcHRcIixcInNjcm9sbC1wYlwiXSx0b3VjaDpbXCJ0b3VjaC14XCIsXCJ0b3VjaC15XCIsXCJ0b3VjaC1welwiXSxcInRvdWNoLXhcIjpbXCJ0b3VjaFwiXSxcInRvdWNoLXlcIjpbXCJ0b3VjaFwiXSxcInRvdWNoLXB6XCI6W1widG91Y2hcIl19LGNvbmZsaWN0aW5nQ2xhc3NHcm91cE1vZGlmaWVyczp7XCJmb250LXNpemVcIjpbXCJsZWFkaW5nXCJdfX19KSxaPXcoSik7ZnVuY3Rpb24gUShlKXt2YXIgdCxuLHI9XCJcIjtpZihcInN0cmluZ1wiPT10eXBlb2YgZXx8XCJudW1iZXJcIj09dHlwZW9mIGUpcis9ZTtlbHNlIGlmKFwib2JqZWN0XCI9PXR5cGVvZiBlKWlmKEFycmF5LmlzQXJyYXkoZSkpe3ZhciBvPWUubGVuZ3RoO2Zvcih0PTA7dDxvO3QrKyllW3RdJiYobj1RKGVbdF0pKSYmKHImJihyKz1cIiBcIikscis9bil9ZWxzZSBmb3IobiBpbiBlKWVbbl0mJihyJiYocis9XCIgXCIpLHIrPW4pO3JldHVybiByfWZ1bmN0aW9uIGVlKCl7Zm9yKHZhciBlLHQsbj0wLHI9XCJcIixvPWFyZ3VtZW50cy5sZW5ndGg7bjxvO24rKykoZT1hcmd1bWVudHNbbl0pJiYodD1RKGUpKSYmKHImJihyKz1cIiBcIikscis9dCk7cmV0dXJuIHJ9dmFyIHRlPWZ1bmN0aW9uKCl7cmV0dXJuIFooZWUuYXBwbHkodm9pZCAwLGFyZ3VtZW50cykpfSxuZT1mdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLHQ9bmV3IEFycmF5KGUpLG49MDtuPGU7bisrKXRbbl09YXJndW1lbnRzW25dO3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgZT1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KGUpLHI9MDtyPGU7cisrKW5bcl09YXJndW1lbnRzW3JdO3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lP3ZvaWQgMDplLmFwcGx5KHZvaWQgMCxuKX0pKX19LHJlPWZ1bmN0aW9uKGUpe3ZhciB0PXswOlwiZ2FwLTBcIix4eHM6XCJnYXAtMVwiLHhzOlwiZ2FwLTJcIixzbTpcImdhcC0zXCIsbWQ6XCJnYXAtNFwiLGxnOlwiZ2FwLTVcIix4bDpcImdhcC02XCIsXCIyeGxcIjpcImdhcC04XCJ9O3JldHVybiB0W2VdfHx0Lm1kfSxvZT17MTpcImdyaWQtY29scy0xXCIsMjpcImdyaWQtY29scy0yXCIsMzpcImdyaWQtY29scy0zXCIsNDpcImdyaWQtY29scy00XCIsNTpcImdyaWQtY29scy01XCIsNjpcImdyaWQtY29scy02XCIsNzpcImdyaWQtY29scy03XCIsODpcImdyaWQtY29scy04XCIsOTpcImdyaWQtY29scy05XCIsMTA6XCJncmlkLWNvbHMtMTBcIiwxMTpcImdyaWQtY29scy0xMVwiLDEyOlwiZ3JpZC1jb2xzLTEyXCJ9LGllPVtcInZhcmlhbnRcIixcInNpemVcIixcInR5cGVcIixcInRhZ1wiLFwiY2xhc3NOYW1lXCIsXCJjaGlsZHJlblwiLFwiZGlzYWJsZWRcIixcImRlc3RydWN0aXZlXCIsXCJpY29uXCIsXCJpY29uUG9zaXRpb25cIixcImxvYWRpbmdcIl07ZnVuY3Rpb24gc2UoKXtyZXR1cm4gc2U9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxzZS5hcHBseShudWxsLGFyZ3VtZW50cyl9dmFyIGFlPSgwLG8uZm9yd2FyZFJlZikoKGZ1bmN0aW9uKGUsdCl7dmFyIG4scixvLHMsYT1lLnZhcmlhbnQsbD12b2lkIDA9PT1hP1wicHJpbWFyeVwiOmEsYz1lLnNpemUsdT12b2lkIDA9PT1jP1wibWRcIjpjLGQ9ZS50eXBlLGY9dm9pZCAwPT09ZD9cImJ1dHRvblwiOmQsaD1lLnRhZyxwPXZvaWQgMD09PWg/XCJidXR0b25cIjpoLG09ZS5jbGFzc05hbWUsZz1lLmNoaWxkcmVuLHY9ZS5kaXNhYmxlZCx5PXZvaWQgMCE9PXYmJnYsYj1lLmRlc3RydWN0aXZlLHg9dm9pZCAwIT09YiYmYix3PWUuaWNvbixFPXZvaWQgMD09PXc/bnVsbDp3LFM9ZS5pY29uUG9zaXRpb24sXz12b2lkIDA9PT1TP1wibGVmdFwiOlMsaz1lLmxvYWRpbmcsQz12b2lkIDAhPT1rJiZrLFA9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99KGUsaWUpLFQ9Qz9cIm9wYWNpdHktNTAgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkXCI6XCJcIixPPW51bGw9PT0obj17cHJpbWFyeTpcInRleHQtdGV4dC1vbi1jb2xvciBiZy1idXR0b24tcHJpbWFyeSBob3ZlcjpiZy1idXR0b24tcHJpbWFyeS1ob3ZlciBib3JkZXItYnV0dG9uLXByaW1hcnkgaG92ZXI6Ym9yZGVyLWJ1dHRvbi1wcmltYXJ5LWhvdmVyIGRpc2FibGVkOmJnLWJ1dHRvbi1kaXNhYmxlZCBkaXNhYmxlZDpib3JkZXItYnV0dG9uLWRpc2FibGVkXCIsc2Vjb25kYXJ5OlwidGV4dC10ZXh0LW9uLWNvbG9yIGJnLWJ1dHRvbi1zZWNvbmRhcnkgaG92ZXI6YmctYnV0dG9uLXNlY29uZGFyeS1ob3ZlciBib3JkZXItYnV0dG9uLXNlY29uZGFyeSBob3Zlcjpib3JkZXItYnV0dG9uLXNlY29uZGFyeS1ob3ZlciBkaXNhYmxlZDpiZy1idXR0b24tZGlzYWJsZWQgZGlzYWJsZWQ6Ym9yZGVyLWJ1dHRvbi1kaXNhYmxlZFwiLG91dGxpbmU6XCJ0ZXh0LWJ1dHRvbi10ZXJ0aWFyeS1jb2xvciBib3JkZXIgYm9yZGVyLWJvcmRlci1zdWJ0bGUgYmctYnV0dG9uLXRlcnRpYXJ5IGhvdmVyOmJnLWJ1dHRvbi10ZXJ0aWFyeS1ob3ZlciBob3Zlcjpib3JkZXItYm9yZGVyLXN1YnRsZSBkaXNhYmxlZDpiZy1idXR0b24tdGVydGlhcnkgZGlzYWJsZWQ6Ym9yZGVyLWJvcmRlci1kaXNhYmxlZFwiLGdob3N0OlwidGV4dC10ZXh0LXByaW1hcnkgYmctdHJhbnNwYXJlbnQgYm9yZGVyIGJvcmRlci10cmFuc3BhcmVudCBob3ZlcjpiZy1idXR0b24tdGVydGlhcnktaG92ZXJcIixsaW5rOlwidGV4dC1saW5rLXByaW1hcnkgYmctdHJhbnNwYXJlbnQgaG92ZXI6dGV4dC1saW5rLXByaW1hcnktaG92ZXIgaG92ZXI6dW5kZXJsaW5lIHAtMCBib3JkZXItMCBsZWFkaW5nLW5vbmVcIn0pfHx2b2lkIDA9PT1uP3ZvaWQgMDpuW2xdLFI9eCYmIXk/bnVsbD09PShyPXtwcmltYXJ5OlwiYmctYnV0dG9uLWRhbmdlciBob3ZlcjpiZy1idXR0b24tZGFuZ2VyLWhvdmVyIGJvcmRlci1idXR0b24tZGFuZ2VyIGhvdmVyOmJvcmRlci1idXR0b24tZGFuZ2VyLWhvdmVyXCIsb3V0bGluZTpcInRleHQtYnV0dG9uLWRhbmdlciBib3JkZXIgYm9yZGVyLWJ1dHRvbi1kYW5nZXIgaG92ZXI6Ym9yZGVyLWJ1dHRvbi1kYW5nZXIgYmctYnV0dG9uLXRlcnRpYXJ5IGhvdmVyOmJnLWZpZWxkLWJhY2tncm91bmQtZXJyb3JcIixnaG9zdDpcInRleHQtYnV0dG9uLWRhbmdlciBob3ZlcjpiZy1maWVsZC1iYWNrZ3JvdW5kLWVycm9yXCIsbGluazpcInRleHQtYnV0dG9uLWRhbmdlciBob3Zlcjp0ZXh0LWJ1dHRvbi1kYW5nZXItc2Vjb25kYXJ5XCJ9KXx8dm9pZCAwPT09cj92b2lkIDA6cltsXTpcIlwiLE49bnVsbD09PShvPXt4czpcInAtMSByb3VuZGVkLXNtIFsmPnN2Z106aC00IFsmPnN2Z106dy00XCIsc206XCJwLTIgcm91bmRlZC1zbSBbJj5zdmddOmgtNCBbJj5zdmddOnctNFwiLG1kOlwicC0yLjUgcm91bmRlZC1tZCB0ZXh0LXNtIFsmPnN2Z106aC01IFsmPnN2Z106dy01XCIsbGc6XCJwLTMgcm91bmRlZC1sZyB0ZXh0LWJhc2UgWyY+c3ZnXTpoLTYgWyY+c3ZnXTp3LTZcIn0pfHx2b2lkIDA9PT1vP3ZvaWQgMDpvW3VdLEE9bnVsbCxqPVwiXCI7RSYmKGo9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAtMVwiLFwibGVmdFwiPT09Xz9zPUU6QT1FKTt2YXIgTT1wO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChNLHNlKHtyZWY6dCx0eXBlOmYsY2xhc3NOYW1lOnRlKGosXCJib3JkZXIgYm9yZGVyLXNvbGlkIGN1cnNvci1wb2ludGVyIHRyYW5zaXRpb24tY29sb3JzIGR1cmF0aW9uLTMwMCBlYXNlLWluLW91dCB0ZXh0LXhzIGZvbnQtc2VtaWJvbGQgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctdG9nZ2xlLW9uIGZvY3VzOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6dGV4dC10ZXh0LWRpc2FibGVkXCIsTixPLFIsVCxtKSxkaXNhYmxlZDp5fSxQKSxzLGcsQSl9KSksbGU9YWU7bGV0IGNlPShlPTIxKT0+e2xldCB0PVwiXCIsbj1jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KGUpKTtmb3IoO2UtLTspdCs9XCJ1c2VhbmRvbS0yNlQxOTgzNDBQWDc1cHhKQUNLVkVSWU1JTkRCVVNIV09MRl9HUVpiZmdoamtscXZ3eXpyaWN0XCJbNjMmbltlXV07cmV0dXJuIHR9O3ZhciB1ZT1bXCJpZFwiLFwib25DaGFuZ2VcIixcInZhbHVlXCIsXCJkZWZhdWx0VmFsdWVcIixcInNpemVcIixcImRpc2FibGVkXCIsXCJsYWJlbFwiLFwibmFtZVwiLFwiY2xhc3NOYW1lXCJdO2Z1bmN0aW9uIGRlKCl7cmV0dXJuIGRlPU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKSh7fSkuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sZGUuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIGZlKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn12YXIgaGU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sYWJlbCxuPWUuc3dpdGNoSWQscj1lLmRpc2FibGVkLGk9dm9pZCAwIT09ciYmcixzPWUuY2hpbGRyZW47aWYoKDAsby5pc1ZhbGlkRWxlbWVudCkodCkpcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGdhcC0zXCIsXCJpdGVtcy1zdGFydFwiKX0scyx0KTt2YXIgYSxsLGMsdSxkLGY9IShudWxsIT10JiZ0LmhlYWRpbmd8fG51bGwhPXQmJnQuZGVzY3JpcHRpb24pLGg9bnVsbCE9dCYmdC5oZWFkaW5nJiZudWxsIT10JiZ0LmRlc2NyaXB0aW9uP1wiaXRlbXMtc3RhcnRcIjpcIml0ZW1zLWNlbnRlclwiO3JldHVybiBmP3M6UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJpbmxpbmUtZmxleFwiLGgsXCJnYXAtM1wiKX0scyxSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIix7aHRtbEZvcjpuLGNsYXNzTmFtZTp0ZSghaSYmXCJjdXJzb3ItcG9pbnRlclwiKX0sKGM9dm9pZCAwPT09KGw9KGE9dHx8e30pLmhlYWRpbmcpP1wiXCI6bCxkPXZvaWQgMD09PSh1PWEuZGVzY3JpcHRpb24pP1wiXCI6dSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInNwYWNlLXktMS41XCJ9LGMmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIse2NsYXNzTmFtZTpcInRleHQtdGV4dC1wcmltYXJ5IHRleHQtYmFzZSBmb250LW1lZGl1bSBsZWFkaW5nLTQgbS0wXCJ9LGMpLGQmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIse2NsYXNzTmFtZTpcInRleHQtdGV4dC1zZWNvbmRhcnkgdGV4dC1zbSBmb250LW5vcm1hbCBsZWFkaW5nLTUgbS0wXCJ9LGQpKSkpKX0scGU9ZnVuY3Rpb24oZSx0KXt2YXIgbixyLGk9ZS5pZCxzPWUub25DaGFuZ2UsYT1lLnZhbHVlLGw9ZS5kZWZhdWx0VmFsdWUsYz12b2lkIDAhPT1sJiZsLHU9ZS5zaXplLGQ9dm9pZCAwPT09dT9cImxnXCI6dSxmPWUuZGlzYWJsZWQsaD12b2lkIDAhPT1mJiZmLHA9ZS5sYWJlbCxtPXZvaWQgMD09PXA/e2hlYWRpbmc6XCJcIixkZXNjcmlwdGlvbjpcIlwifTpwLGc9ZS5uYW1lLHY9ZS5jbGFzc05hbWUseT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSx1ZSksYj0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT1hfSksW2FdKSx4PSgwLG8udXNlTWVtbykoKGZ1bmN0aW9uKCl7cmV0dXJuIGl8fFwic3dpdGNoLVwiLmNvbmNhdChjZSgpKX0pLFtdKSx3PShuPSgwLG8udXNlU3RhdGUpKGMpLHI9MixmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlfShuKXx8ZnVuY3Rpb24oZSx0KXt2YXIgbj1udWxsPT1lP251bGw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmZVtTeW1ib2wuaXRlcmF0b3JdfHxlW1wiQEBpdGVyYXRvclwiXTtpZihudWxsIT1uKXt2YXIgcixvLGkscyxhPVtdLGw9ITAsYz0hMTt0cnl7aWYoaT0obj1uLmNhbGwoZSkpLm5leHQsMD09PXQpe2lmKE9iamVjdChuKSE9PW4pcmV0dXJuO2w9ITF9ZWxzZSBmb3IoOyEobD0ocj1pLmNhbGwobikpLmRvbmUpJiYoYS5wdXNoKHIudmFsdWUpLGEubGVuZ3RoIT09dCk7bD0hMCk7fWNhdGNoKGUpe2M9ITAsbz1lfWZpbmFsbHl7dHJ5e2lmKCFsJiZudWxsIT1uLnJldHVybiYmKHM9bi5yZXR1cm4oKSxPYmplY3QocykhPT1zKSlyZXR1cm59ZmluYWxseXtpZihjKXRocm93IG99fXJldHVybiBhfX0obixyKXx8ZnVuY3Rpb24oZSx0KXtpZihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZmUoZSx0KTt2YXIgbj17fS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9mZShlLHQpOnZvaWQgMH19KG4scil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSksRT13WzBdLFM9d1sxXSxfPVwicHJpbWFyeVwiLGs9KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKCl7cmV0dXJuIGI/YTpFfSksW2IsYSxFXSksQz17cHJpbWFyeTp7aW5wdXQ6XCJiZy10b2dnbGUtb2ZmIGhvdmVyOmJnLXRvZ2dsZS1vZmYtaG92ZXIgY2hlY2tlZDpiZy10b2dnbGUtb24gY2hlY2tlZDpob3ZlcjpiZy10b2dnbGUtb24taG92ZXIgZm9jdXM6cmluZyBmb2N1czpyaW5nLXRvZ2dsZS1vbiBmb2N1czpyaW5nLW9mZnNldC00IGJvcmRlciBib3JkZXItc29saWQgYm9yZGVyLXRvZ2dsZS1vZmYtYm9yZGVyIGNoZWNrZWQ6Ym9yZGVyLXRvZ2dsZS1vbi1ib3JkZXIgc2hhZG93LXRvZ2dsZUNvbnRhaW5lciBmb2N1czpvdXRsaW5lLW5vbmUgY2hlY2tlZDpmb2N1czpib3JkZXItdG9nZ2xlLW9uLWJvcmRlciBmb2N1czpib3JkZXItdG9nZ2xlLW9mZi1ib3JkZXJcIix0b2dnbGVEaWFsOlwiYmctdG9nZ2xlLWRpYWwtYmFja2dyb3VuZCBzaGFkb3ctdG9nZ2xlRGlhbFwifX0sUD17bGc6e2NvbnRhaW5lcjpcInctMTEgaC02XCIsdG9nZ2xlRGlhbDpcInNpemUtNCB0b3AtMi80IGxlZnQtMSAtdHJhbnNsYXRlLXktMi80IHBlZXItY2hlY2tlZDp0cmFuc2xhdGUteC01IGJlZm9yZTp3LTEwIGJlZm9yZTpoLTEwIGJlZm9yZTpyb3VuZGVkLWZ1bGwgYmVmb3JlOmFic29sdXRlIGJlZm9yZTp0b3AtMi80IGJlZm9yZTpsZWZ0LTIvNCBiZWZvcmU6LXRyYW5zbGF0ZS15LTIvNCBiZWZvcmU6LXRyYW5zbGF0ZS14LTIvNFwifSxzbTp7Y29udGFpbmVyOlwidy05IGgtNVwiLHRvZ2dsZURpYWw6XCJzaXplLTMgdG9wLTIvNCBsZWZ0LTEgLXRyYW5zbGF0ZS15LTIvNCBwZWVyLWNoZWNrZWQ6dHJhbnNsYXRlLXgtNCBiZWZvcmU6dy0xMCBiZWZvcmU6aC0xMCBiZWZvcmU6cm91bmRlZC1mdWxsIGJlZm9yZTphYnNvbHV0ZSBiZWZvcmU6dG9wLTIvNCBiZWZvcmU6bGVmdC0yLzQgYmVmb3JlOi10cmFuc2xhdGUteS0yLzQgYmVmb3JlOi10cmFuc2xhdGUteC0yLzRcIn19O3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGhlLHtsYWJlbDptLHN3aXRjaElkOngsZGlzYWJsZWQ6aH0sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJyZWxhdGl2ZSBpbmxpbmUtYmxvY2sgY3Vyc29yLXBvaW50ZXIgcm91bmRlZC1mdWxsIHNocmluay0wXCIsUFtkXS5jb250YWluZXIsdil9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLGRlKHtyZWY6dCxpZDp4LHR5cGU6XCJjaGVja2JveFwiLGNsYXNzTmFtZTp0ZShcInBlZXIgYXBwZWFyYW5jZS1ub25lIGFic29sdXRlIGJnLWJsdWUtZ3JheS0xMDAgcm91bmRlZC1mdWxsIGN1cnNvci1wb2ludGVyIHRyYW5zaXRpb24tY29sb3JzIGR1cmF0aW9uLTMwMCBoLWZ1bGwgdy1mdWxsICBiZWZvcmU6Y29udGVudC1bJyddIGNoZWNrZWQ6YmVmb3JlOmNvbnRlbnQtWycnXSBtLTAgY2hlY2tlZDpbYmFja2dyb3VuZC1pbWFnZTpub25lXVwiLENbX10uaW5wdXQsaCYmXCJiZy10b2dnbGUtb2ZmLWRpc2FibGVkIGRpc2FibGVkOmJvcmRlci10cmFuc3BhcmVudCBzaGFkb3ctbm9uZSBkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWRcIiksY2hlY2tlZDprKCksb25DaGFuZ2U6ZnVuY3Rpb24oZSl7aWYoIWgpe3ZhciB0PWUudGFyZ2V0LmNoZWNrZWQ7Ynx8Uyh0KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBzJiZzKHQpfX0sZGlzYWJsZWQ6aCxuYW1lOmd9LHkpKSxSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIix7aHRtbEZvcjp4LGNsYXNzTmFtZTp0ZShcImJnLXdoaXRlIGJvcmRlciBib3JkZXItYmx1ZS1ncmF5LTEwMCByb3VuZGVkLWZ1bGwgYWJzb2x1dGUgY3Vyc29yLXBvaW50ZXIgc2hhZG93LW1kIGJlZm9yZTpjb250ZW50WycnXSBiZWZvcmU6dHJhbnNpdGlvbi1vcGFjaXR5IGJlZm9yZTpvcGFjaXR5LTAgaG92ZXI6YmVmb3JlOm9wYWNpdHktMTAgYmVmb3JlOmhpZGRlbiBib3JkZXItbm9uZSB0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0zMDBcIixQW2RdLnRvZ2dsZURpYWwsQ1tfXS50b2dnbGVEaWFsLGgmJlwicGVlci1kaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWRcIil9KSkpfSxtZT0oMCxvLmZvcndhcmRSZWYpKHBlKTttZS5kaXNwbGF5TmFtZT1cIlN3aXRjaFwiO3ZhciBnZT1tZTtjb25zdCB2ZT0oLi4uZSk9PmUuZmlsdGVyKCgoZSx0LG4pPT5Cb29sZWFuKGUpJiZuLmluZGV4T2YoZSk9PT10KSkuam9pbihcIiBcIik7dmFyIHllPXt4bWxuczpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsd2lkdGg6MjQsaGVpZ2h0OjI0LHZpZXdCb3g6XCIwIDAgMjQgMjRcIixmaWxsOlwibm9uZVwiLHN0cm9rZTpcImN1cnJlbnRDb2xvclwiLHN0cm9rZVdpZHRoOjIsc3Ryb2tlTGluZWNhcDpcInJvdW5kXCIsc3Ryb2tlTGluZWpvaW46XCJyb3VuZFwifTtjb25zdCBiZT0oMCxvLmZvcndhcmRSZWYpKCgoe2NvbG9yOmU9XCJjdXJyZW50Q29sb3JcIixzaXplOnQ9MjQsc3Ryb2tlV2lkdGg6bj0yLGFic29sdXRlU3Ryb2tlV2lkdGg6cixjbGFzc05hbWU6aT1cIlwiLGNoaWxkcmVuOnMsaWNvbk5vZGU6YSwuLi5sfSxjKT0+KDAsby5jcmVhdGVFbGVtZW50KShcInN2Z1wiLHtyZWY6YywuLi55ZSx3aWR0aDp0LGhlaWdodDp0LHN0cm9rZTplLHN0cm9rZVdpZHRoOnI/MjQqTnVtYmVyKG4pL051bWJlcih0KTpuLGNsYXNzTmFtZTp2ZShcImx1Y2lkZVwiLGkpLC4uLmx9LFsuLi5hLm1hcCgoKFtlLHRdKT0+KDAsby5jcmVhdGVFbGVtZW50KShlLHQpKSksLi4uQXJyYXkuaXNBcnJheShzKT9zOltzXV0pKSkseGU9KGUsdCk9Pntjb25zdCBuPSgwLG8uZm9yd2FyZFJlZikoKCh7Y2xhc3NOYW1lOm4sLi4ucn0saSk9PntyZXR1cm4oMCxvLmNyZWF0ZUVsZW1lbnQpKGJlLHtyZWY6aSxpY29uTm9kZTp0LGNsYXNzTmFtZTp2ZShgbHVjaWRlLSR7cz1lLHMucmVwbGFjZSgvKFthLXowLTldKShbQS1aXSkvZyxcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCl9YCxuKSwuLi5yfSk7dmFyIHN9KSk7cmV0dXJuIG4uZGlzcGxheU5hbWU9YCR7ZX1gLG59LHdlPXhlKFwiTWludXNcIixbW1wicGF0aFwiLHtkOlwiTTUgMTJoMTRcIixrZXk6XCIxYXlzMGhcIn1dXSksRWU9eGUoXCJDaGVja1wiLFtbXCJwYXRoXCIse2Q6XCJNMjAgNiA5IDE3bC01LTVcIixrZXk6XCIxZ21mMmNcIn1dXSk7dmFyIFNlPVtcImlkXCIsXCJsYWJlbFwiLFwiZGVmYXVsdENoZWNrZWRcIixcImNoZWNrZWRcIixcIm9uQ2hhbmdlXCIsXCJ2YWx1ZVwiLFwiaW5kZXRlcm1pbmF0ZVwiLFwiZGlzYWJsZWRcIixcInNpemVcIl07ZnVuY3Rpb24gX2UoKXtyZXR1cm4gX2U9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxfZS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2UoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfXZhciBDZT1mdW5jdGlvbihlLHQpe3ZhciBuLHIsaSxzLGE9ZS5pZCxsPWUubGFiZWwsYz1lLmRlZmF1bHRDaGVja2VkLHU9dm9pZCAwIT09YyYmYyxkPWUuY2hlY2tlZCxmPWUub25DaGFuZ2UsaD0oZS52YWx1ZSxlLmluZGV0ZXJtaW5hdGUpLHA9ZS5kaXNhYmxlZCxtPWUuc2l6ZSxnPXZvaWQgMD09PW0/XCJtZFwiOm0sdj1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxTZSkseT0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiBhfHxcImNoZWNrYm94LVwiLmNvbmNhdChjZSgpKX0pLFthXSksYj0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT1kfSksW2RdKSx4PShpPSgwLG8udXNlU3RhdGUpKHV8fCExKSxzPTIsZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oaSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KGkscyl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGtlKGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/a2UoZSx0KTp2b2lkIDB9fShpLHMpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCkpLHc9eFswXSxFPXhbMV0sUz1cInByaW1hcnlcIixfPXtzbTp7Y2hlY2tib3g6XCJzaXplLTQgcm91bmRlZC1zbVwiLGljb246XCJzaXplLTNcIn0sbWQ6e2NoZWNrYm94Olwic2l6ZS01IHJvdW5kZWRcIixpY29uOlwic2l6ZS00XCJ9fSxrPXtwcmltYXJ5OntjaGVja2JveDpcImJvcmRlci1ib3JkZXItc3Ryb25nIGhvdmVyOmJvcmRlci1ib3JkZXItaW50ZXJhY3RpdmUgY2hlY2tlZDpib3JkZXItYm9yZGVyLWludGVyYWN0aXZlIGJnLXdoaXRlIGNoZWNrZWQ6YmctdG9nZ2xlLW9uIGNoZWNrZWQ6aG92ZXI6YmctdG9nZ2xlLW9uLWhvdmVyIGNoZWNrZWQ6aG92ZXI6Ym9yZGVyLXRvZ2dsZS1vbi1ob3ZlciBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1vZmZzZXQtNCBmb2N1czpyaW5nLWZvY3VzXCIsaWNvbjpcInRleHQtd2hpdGVcIn19LEM9KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKCl7cmV0dXJuIGI/ZDp3fSksW2IsZCx3XSksUD0oMCxvLnVzZUNhbGxiYWNrKSgoZnVuY3Rpb24oKXtyZXR1cm4oMCxvLmlzVmFsaWRFbGVtZW50KShsKT9sOmwuaGVhZGluZ3x8bC5kZXNjcmlwdGlvbj9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInNwYWNlLXktMS41XCJ9LGwuaGVhZGluZyYmUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIix7Y2xhc3NOYW1lOlwidGV4dC10ZXh0LXByaW1hcnkgdGV4dC1iYXNlIGZvbnQtbWVkaXVtIGxlYWRpbmctNCBtLTBcIn0sbC5oZWFkaW5nKSxsLmRlc2NyaXB0aW9uJiZSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLHtjbGFzc05hbWU6XCJ0ZXh0LXRleHQtc2Vjb25kYXJ5IHRleHQtc20gZm9udC1ub3JtYWwgbGVhZGluZy01IG0tMFwifSxsLmRlc2NyaXB0aW9uKSk6bnVsbH0pLFtsXSk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyXCIsISFsJiZcIml0ZW1zLXN0YXJ0XCIpfSxSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIix7Y2xhc3NOYW1lOnRlKFwicmVsYXRpdmUgZmxleCBpdGVtcy1jZW50ZXIgcm91bmRlZC1mdWxsXCIsIXAmJlwiY3Vyc29yLXBvaW50ZXJcIiksaHRtbEZvcjp5fSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIixfZSh7cmVmOnQsaWQ6eSx0eXBlOlwiY2hlY2tib3hcIixjbGFzc05hbWU6dGUoXCJwZWVyIHJlbGF0aXZlIGN1cnNvci1wb2ludGVyIGFwcGVhcmFuY2Utbm9uZSB0cmFuc2l0aW9uLWFsbCBtLTAgYmVmb3JlOmNvbnRlbnQtWycnXSBjaGVja2VkOmJlZm9yZTpjb250ZW50LVsnJ10gY2hlY2tlZDpiZWZvcmU6aGlkZGVuIGJlZm9yZTpoaWRkZW4gIWJvcmRlci0xLjUgYm9yZGVyLXNvbGlkXCIsa1tTXS5jaGVja2JveCxfW2ddLmNoZWNrYm94LHAmJlwiZGlzYWJsZWQ6Ymctd2hpdGUgY2hlY2tlZDpkaXNhYmxlZDpiZy13aGl0ZSBkaXNhYmxlZDpib3JkZXItYm9yZGVyLWRpc2FibGVkIGNoZWNrZWQ6ZGlzYWJsZWQ6Ym9yZGVyLWJvcmRlci1kaXNhYmxlZFwiKSxjaGVja2VkOkMoKSxvbkNoYW5nZTpmdW5jdGlvbihlKXtpZighcCl7dmFyIHQ9ZS50YXJnZXQuY2hlY2tlZDtifHxFKHQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGYmJmYodCl9fSxkaXNhYmxlZDpwfSx2KSksUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOnRlKFwicG9pbnRlci1ldmVudHMtbm9uZSBpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgYWJzb2x1dGUgdG9wLTIvNCBsZWZ0LTIvNCAtdHJhbnNsYXRlLXktMi80IC10cmFuc2xhdGUteC0yLzQgdGV4dC13aGl0ZSBvcGFjaXR5LTAgdHJhbnNpdGlvbi1vcGFjaXR5IHBlZXItY2hlY2tlZDpvcGFjaXR5LTEwMFwiLGtbU10uaWNvbixwJiZcInBlZXItZGlzYWJsZWQ6dGV4dC1ib3JkZXItZGlzYWJsZWRcIil9LGg/UmVhY3QuY3JlYXRlRWxlbWVudCh3ZSx7Y2xhc3NOYW1lOnRlKG51bGw9PT0obj1fW2ddKXx8dm9pZCAwPT09bj92b2lkIDA6bi5pY29uKX0pOlJlYWN0LmNyZWF0ZUVsZW1lbnQoRWUse2NsYXNzTmFtZTp0ZShudWxsPT09KHI9X1tnXSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuaWNvbil9KSkpLCEhbCYmUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIse2NsYXNzTmFtZTp0ZShcIm1sLTNcIiwhcCYmXCJjdXJzb3ItcG9pbnRlclwiKSxodG1sRm9yOnl9LFAoKSkpfSxQZT0oMCxvLmZvcndhcmRSZWYpKENlKTtQZS5kaXNwbGF5TmFtZT1cIkNoZWNrYm94XCI7dmFyIFRlPVBlLE9lPXtwcmltYXJ5OntjaGVja2JveDpcImJvcmRlci1ib3JkZXItc3Ryb25nIGhvdmVyOmJvcmRlci1ib3JkZXItaW50ZXJhY3RpdmUgY2hlY2tlZDpib3JkZXItYm9yZGVyLWludGVyYWN0aXZlIGJnLXdoaXRlIGNoZWNrZWQ6YmctdG9nZ2xlLW9uIGNoZWNrZWQ6aG92ZXI6YmctdG9nZ2xlLW9uLWhvdmVyIGNoZWNrZWQ6aG92ZXI6Ym9yZGVyLXRvZ2dsZS1vbi1ob3ZlciBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1vZmZzZXQtNCBmb2N1czpyaW5nLWZvY3VzXCIsaWNvbjpcInRleHQtd2hpdGVcIn19LFJlPXtzbTp7Y2hlY2tib3g6XCJzaXplLTRcIixpY29uOlwic2l6ZS0xLjVcIn0sbWQ6e2NoZWNrYm94Olwic2l6ZS01XCIsaWNvbjpcInNpemUtMlwifX0sTmU9e3hzOlwicHktMSBweC0xIHRleHQtc20gZ2FwLTAuNSBbJj5zdmddOmgtNCBbJj5zdmddOnctNFwiLHNtOlwicHktMiBweC0yIHRleHQtYmFzZSBnYXAtMSBbJj5zdmddOmgtNCBbJj5zdmddOnctNFwiLG1kOlwicHktMi41IHB4LTIuNSB0ZXh0LWJhc2UgZ2FwLTEgWyY+c3ZnXTpoLTUgWyY+c3ZnXTp3LTVcIn0sQWU9W1wiaWRcIixcImxhYmVsXCIsXCJ2YWx1ZVwiLFwiY2hpbGRyZW5cIixcImRpc2FibGVkXCIsXCJpY29uXCIsXCJpbmxpbmVJY29uXCIsXCJoaWRlU2VsZWN0aW9uXCIsXCJyZXZlcnNlUG9zaXRpb25cIixcImJvcmRlck9uXCIsXCJiYWRnZUl0ZW1cIixcInVzZVN3aXRjaFwiXSxqZT1bXCJpZFwiLFwiY2hpbGRyZW5cIixcInZhbHVlXCIsXCJkaXNhYmxlZFwiLFwic2l6ZVwiXTtmdW5jdGlvbiBNZSgpe3JldHVybiBNZT1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LE1lLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBJZShlKXtyZXR1cm4gSWU9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0sSWUoZSl9ZnVuY3Rpb24gRGUoZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99ZnVuY3Rpb24gTGUoZSx0KXtpZihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gRmUoZSx0KTt2YXIgbj17fS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9GZShlLHQpOnZvaWQgMH19ZnVuY3Rpb24gRmUoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfXZhciB6ZT0oMCxvLmNyZWF0ZUNvbnRleHQpKCksQmU9ZnVuY3Rpb24oKXtyZXR1cm4oMCxvLnVzZUNvbnRleHQpKHplKX0sVmU9ZnVuY3Rpb24oZSl7dmFyIHQsbj1lLmNoaWxkcmVuLHI9ZS5uYW1lLHM9ZS5zdHlsZSxhPXZvaWQgMD09PXM/XCJzaW1wbGVcIjpzLGw9ZS5zaXplLGM9dm9pZCAwPT09bD9cIm1kXCI6bCx1PWUudmFsdWUsZD1lLmRlZmF1bHRWYWx1ZSxmPWUuYnksaD12b2lkIDA9PT1mP1wiaWRcIjpmLHA9ZS5hcyxtPXZvaWQgMD09PXA/XCJkaXZcIjpwLGc9ZS5vbkNoYW5nZSx2PWUuY2xhc3NOYW1lLHk9ZS5kaXNhYmxlR3JvdXAsYj12b2lkIDAhPT15JiZ5LHg9ZS52ZXJ0aWNhbCx3PXZvaWQgMCE9PXgmJngsRT1lLmNvbHVtbnMsUz12b2lkIDA9PT1FPzQ6RSxfPWUubXVsdGlTZWxlY3Rpb24saz12b2lkIDAhPT1fJiZfLEM9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dX0pLFt1XSksUD0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiByfHxcInJhZGlvLWJ1dHRvbi1ncm91cC1cIi5jb25jYXQoY2UoKSl9KSxbcl0pO3Q9Qz91Oms/bnVsbCE9ZD9kOltdOmQ7dmFyIFQsTyxSPShUPSgwLG8udXNlU3RhdGUpKHQpLE89MixmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlfShUKXx8ZnVuY3Rpb24oZSx0KXt2YXIgbj1udWxsPT1lP251bGw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmZVtTeW1ib2wuaXRlcmF0b3JdfHxlW1wiQEBpdGVyYXRvclwiXTtpZihudWxsIT1uKXt2YXIgcixvLGkscyxhPVtdLGw9ITAsYz0hMTt0cnl7aWYoaT0obj1uLmNhbGwoZSkpLm5leHQsMD09PXQpe2lmKE9iamVjdChuKSE9PW4pcmV0dXJuO2w9ITF9ZWxzZSBmb3IoOyEobD0ocj1pLmNhbGwobikpLmRvbmUpJiYoYS5wdXNoKHIudmFsdWUpLGEubGVuZ3RoIT09dCk7bD0hMCk7fWNhdGNoKGUpe2M9ITAsbz1lfWZpbmFsbHl7dHJ5e2lmKCFsJiZudWxsIT1uLnJldHVybiYmKHM9bi5yZXR1cm4oKSxPYmplY3QocykhPT1zKSlyZXR1cm59ZmluYWxseXtpZihjKXRocm93IG99fXJldHVybiBhfX0oVCxPKXx8TGUoVCxPKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpKSxOPVJbMF0sQT1SWzFdLGo9KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKGUpe2lmKGspQSgoZnVuY3Rpb24odCl7dmFyIG49dC5pbmNsdWRlcyhlKT90LmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1lfSkpOltdLmNvbmNhdChmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gRmUoZSl9KGUpfHxmdW5jdGlvbihlKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1lW1N5bWJvbC5pdGVyYXRvcl18fG51bGwhPWVbXCJAQGl0ZXJhdG9yXCJdKXJldHVybiBBcnJheS5mcm9tKGUpfShlKXx8TGUoZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9KHQpLFtlXSk7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZyYmZyhuKSxufSkpO2Vsc2V7aWYoQ3x8QShlKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBnKXJldHVybjtnKGUpfX0pLFtnXSk7dj10ZShcImdyaWQgZ3JpZC1jb2xzLTQgZ2FwLTJcIixvZVtTXSxcInRpbGVcIj09PWEmJlwiZ2FwLTBcIix3JiZcImdyaWQtY29scy0xXCIsdik7dmFyIE09dGUoXCJ0aWxlXCI9PT1hP1wiYm9yZGVyIGJvcmRlci1ib3JkZXItc3VidGxlIGJvcmRlci1zb2xpZCByb3VuZGVkLW1kIHNoYWRvdy1zbVwiOlwiZ2FwLTZcIix2KSxJPWZ1bmN0aW9uKCl7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KHplLlByb3ZpZGVyLHt2YWx1ZTp7bmFtZTpQLHZhbHVlOkM/dTpOLGJ5Omgsb25DaGFuZ2U6aixpc0NvbnRyb2xsZWQ6QyxkaXNhYmxlQWxsOmIsc3R5bGU6YSxjb2x1bW5zOlMsbXVsdGlTZWxlY3Rpb246ayxzaXplOmN9fSxpKCkuQ2hpbGRyZW4ubWFwKG4sKGZ1bmN0aW9uKGUpe3JldHVybigwLG8uaXNWYWxpZEVsZW1lbnQpKGUpP2U6bnVsbH0pKSl9O3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChpKCkuRnJhZ21lbnQsbnVsbCxcInRpbGVcIj09PWE/aSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOk19LEkoKSk6aSgpLmNyZWF0ZUVsZW1lbnQobSxtPT09by5GcmFnbWVudD97fTp7Y2xhc3NOYW1lOnZ9LEkoKSkpfTtWZS5kaXNwbGF5TmFtZT1cIlJhZGlvQnV0dG9uLkdyb3VwXCI7dmFyIFdlPWZ1bmN0aW9uKGUsdCl7dmFyIG4scj1lLmlkLHM9ZS5sYWJlbCxhPWUudmFsdWUsbD1lLmNoaWxkcmVuLGM9ZS5kaXNhYmxlZCx1PWUuaWNvbixkPXZvaWQgMD09PXU/bnVsbDp1LGY9ZS5pbmxpbmVJY29uLGg9dm9pZCAwIT09ZiYmZixwPWUuaGlkZVNlbGVjdGlvbixtPXZvaWQgMCE9PXAmJnAsZz1lLnJldmVyc2VQb3NpdGlvbix2PXZvaWQgMCE9PWcmJmcseT1lLmJvcmRlck9uLGI9dm9pZCAwIT09eSYmeSx4PWUuYmFkZ2VJdGVtLHc9dm9pZCAwPT09eD9udWxsOngsRT1lLnVzZVN3aXRjaCxTPXZvaWQgMCE9PUUmJkUsXz1EZShlLEFlKSxrPUJlKCksQz1rLm5hbWUsUD1rLnZhbHVlLFQ9ay5ieSxPPWsub25DaGFuZ2UsUj1rLmRpc2FibGVBbGwsTj1rLmNoZWNrZWQsQT1rLm11bHRpU2VsZWN0aW9uLGo9ay5zaXplLE09XCJwcmltYXJ5XCIsST0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiByfHxcInJhZGlvLWJ1dHRvbi1cIi5jb25jYXQoY2UoKSl9KSxbcl0pLEQ9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gUnx8Y30pLFtSLGNdKSxMPSgwLG8udXNlTWVtbykoKGZ1bmN0aW9uKCl7cmV0dXJuIEE/QXJyYXkuaXNBcnJheShQKSYmUC5pbmNsdWRlcyhhKTp2b2lkIDAhPT1OP046SWUoUCk9PT1JZShhKSYmKFwic3RyaW5nXCI9PXR5cGVvZiBQP1A9PT1hOkFycmF5LmlzQXJyYXkoUCk/UC5pbmNsdWRlcyhhKTpQW1RdPT09YVtUXSl9KSxbUCxhLE5dKSxGPSgwLG8udXNlQ2FsbGJhY2spKChmdW5jdGlvbigpe3JldHVybigwLG8uaXNWYWxpZEVsZW1lbnQpKHMpP3M6cy5oZWFkaW5nP2koKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZSghaCYmXCJzcGFjZS15LTEuNSBtdC1bMnB4XVwiLHYmJihTP1wibWwtMTBcIjpcIm1sLTRcIiksaCYmXCJmbGV4IGdhcC0yXCIpfSxkJiZpKCkuY3JlYXRlRWxlbWVudChcInNwYW5cIixudWxsLGQsXCIgXCIpLGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcInNwYWNlLXktMS41XCIpfSxpKCkuY3JlYXRlRWxlbWVudChcInBcIix7Y2xhc3NOYW1lOnRlKFwidGV4dC10ZXh0LXByaW1hcnkgdGV4dC1zbSBmb250LW1lZGl1bSBsZWFkaW5nLTQgbS0wXCIsZCYmXCJtdC0xXCIpfSxzLmhlYWRpbmcpLHMuZGVzY3JpcHRpb24mJmkoKS5jcmVhdGVFbGVtZW50KFwicFwiLHtjbGFzc05hbWU6XCJ0ZXh0LXRleHQtdGVydGlhcnkgdGV4dC1zbSBmb250LW5vcm1hbCBsZWFkaW5nLTUgbS0wXCJ9LHMuZGVzY3JpcHRpb24pKSk6bnVsbH0pLFtzXSk7cmV0dXJuXCJ0aWxlXCI9PT1rLnN0eWxlP2koKS5jcmVhdGVFbGVtZW50KCRlLHtpZDpyLGxhYmVsOnMsdmFsdWU6YSxkaXNhYmxlZDpjLHNpemU6an0sbCk6aSgpLmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLHtjbGFzc05hbWU6dGUoXCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgcmVsYXRpdmUgY3Vyc29yLXBvaW50ZXIgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMzAwXCIsISFzJiZcIml0ZW1zLXN0YXJ0IGp1c3RpZnktYmV0d2VlbiBtaW4tdy1bMTgwcHhdIFwiLGImJlwiYm9yZGVyIGJvcmRlci1ib3JkZXItc3VidGxlIGJvcmRlci1zb2xpZCByb3VuZGVkLW1kIHNoYWRvdy1zbSBob3ZlcjpyaW5nLTIgaG92ZXI6cmluZy1ib3JkZXItaW50ZXJhY3RpdmVcIixiJiZMJiZcInJpbmctMiByaW5nLWJvcmRlci1pbnRlcmFjdGl2ZVwiLFwic21cIj09PWo/XCJweC0zIHB5LTNcIjpcInB4LTQgcHktNFwiLFwicHItMTJcIixEJiZcImN1cnNvci1ub3QtYWxsb3dlZFwiKSxodG1sRm9yOkksb25DbGljazpmdW5jdGlvbigpe0R8fChBP08oYSwhTCk6TyhhKSl9fSwhIXMmJmkoKS5jcmVhdGVFbGVtZW50KFwibGFiZWxcIix7Y2xhc3NOYW1lOnRlKFwiY3Vyc29yLXBvaW50ZXJcIixEJiZcImN1cnNvci1ub3QtYWxsb3dlZFwiKSxodG1sRm9yOkl9LEYoKSksaSgpLmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLHtjbGFzc05hbWU6dGUoXCJhYnNvbHV0ZSBtci1bMnB4XSByaWdodC0zIGZsZXggaXRlbXMtY2VudGVyIGN1cnNvci1wb2ludGVyIHJvdW5kZWQtZnVsbFwiLHYmJlwibGVmdC0wXCIsRCYmXCJjdXJzb3Itbm90LWFsbG93ZWRcIil9LCEhdyYmdywhbSYmKFM/aSgpLmNyZWF0ZUVsZW1lbnQoZ2Use2RlZmF1bHRWYWx1ZTohMSxzaXplOlwibWRcIj09PWo/XCJsZ1wiOlwic21cIixvbkNoYW5nZTpmdW5jdGlvbigpe0E/TyhhLCFMKTpPKGEpfSxjaGVja2VkOkx9KTppKCkuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwicmVsYXRpdmVcIn0saSgpLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLE1lKHtyZWY6dCxpZDpJLHR5cGU6QT9cImNoZWNrYm94XCI6XCJyYWRpb1wiLGNsYXNzTmFtZTp0ZShcInBlZXIgZmxleCByZWxhdGl2ZSBjdXJzb3ItcG9pbnRlciBhcHBlYXJhbmNlLW5vbmUgdHJhbnNpdGlvbi1hbGwgbS0wIGJlZm9yZTpjb250ZW50LVsnJ10gY2hlY2tlZDpiZWZvcmU6Y29udGVudC1bJyddIGNoZWNrZWQ6YmVmb3JlOmhpZGRlbiBiZWZvcmU6aGlkZGVuICFib3JkZXItMS41IGJvcmRlci1zb2xpZFwiLCFBJiZcInJvdW5kZWQtZnVsbFwiLE9lW01dLmNoZWNrYm94LFJlW2pdLmNoZWNrYm94LEQmJlwiZGlzYWJsZWQ6Ymctd2hpdGUgY2hlY2tlZDpkaXNhYmxlZDpiZy13aGl0ZSBkaXNhYmxlZDpib3JkZXItYm9yZGVyLWRpc2FibGVkIGNoZWNrZWQ6ZGlzYWJsZWQ6Ym9yZGVyLWJvcmRlci1kaXNhYmxlZCBjdXJzb3Itbm90LWFsbG93ZWRcIiksbmFtZTpDLHZhbHVlOmEsb25DaGFuZ2U6ZnVuY3Rpb24oZSl7cmV0dXJuIE8oZS50YXJnZXQudmFsdWUpfSxjaGVja2VkOkwsZGlzYWJsZWQ6RH0sXykpLGkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6dGUoXCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgYWJzb2x1dGUgdG9wLTIvNCBsZWZ0LTIvNCAtdHJhbnNsYXRlLXktMi80IC10cmFuc2xhdGUteC0yLzQgdGV4dC13aGl0ZSBvcGFjaXR5LTAgdHJhbnNpdGlvbi1vcGFjaXR5IHBlZXItY2hlY2tlZDpvcGFjaXR5LTEwMFwiLE9lW01dLmljb24sRCYmXCJwZWVyLWRpc2FibGVkOnRleHQtYm9yZGVyLWRpc2FibGVkIGN1cnNvci1ub3QtYWxsb3dlZFwiKX0sQT9pKCkuY3JlYXRlRWxlbWVudChFZSx7Y2xhc3NOYW1lOlwic21cIj09PWo/XCJzaXplLTNcIjpcInNpemUtNFwifSk6aSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwicm91bmRlZC1mdWxsIGJnLWN1cnJlbnRcIixcInNtXCI9PT1qJiZcIm10LVsycHhdXCIsbnVsbD09PShuPVJlW2pdKXx8dm9pZCAwPT09bj92b2lkIDA6bi5pY29uKX0pKSkpKSl9LFVlPSgwLG8uZm9yd2FyZFJlZikoV2UpO1VlLmRpc3BsYXlOYW1lPVwiUmFkaW9CdXR0b24uQnV0dG9uXCI7dmFyICRlPWZ1bmN0aW9uKGUpe3ZhciB0PWUuaWQsbj1lLmNoaWxkcmVuLHI9ZS52YWx1ZSxzPWUuZGlzYWJsZWQsYT1lLnNpemUsbD12b2lkIDA9PT1hP1wibWRcIjphLGM9RGUoZSxqZSksdT1CZSgpfHx7fSxkPXUubmFtZSxmPXUudmFsdWUsaD11LmJ5LHA9dS5vbkNoYW5nZSxtPXUuZGlzYWJsZUFsbCxnPXUuY2hlY2tlZCx2PSgwLG8udXNlTWVtbykoKGZ1bmN0aW9uKCl7cmV0dXJuIHR8fFwicmFkaW8tYnV0dG9uLVwiLmNvbmNhdChjZSgpKX0pLFt0XSkseT0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiBtfHxzfSksW20sc10pLGI9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09Zz9nOkllKGYpPT09SWUocikmJihcInN0cmluZ1wiPT10eXBlb2YgZj9mPT09cjpBcnJheS5pc0FycmF5KGYpP2YuaW5jbHVkZXMocik6ZltoXT09PXJbaF0pfSksW2YscixnLGhdKSx4PXRlKFwiYmctYmFja2dyb3VuZC1wcmltYXJ5IHRleHQtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiLFwiaG92ZXI6YmctYnV0dG9uLXRlcnRpYXJ5LWhvdmVyXCIsXCJmb2N1czpvdXRsaW5lLW5vbmVcIix5P1widGV4dC10ZXh0LWRpc2FibGVkIGN1cnNvci1ub3QtYWxsb3dlZFwiOlwiXCIsTmVbbF0sXCJib3JkZXItMCBib3JkZXItciBib3JkZXItYm9yZGVyLXN1YnRsZSBib3JkZXItc29saWRcIik7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KGkoKS5GcmFnbWVudCxudWxsLGkoKS5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsTWUoe3R5cGU6XCJidXR0b25cIixpZDp2LGNsYXNzTmFtZTp0ZSh4LFwiZmlyc3Q6cm91bmRlZC10bCBmaXJzdDpyb3VuZGVkLWJsIGZpcnN0OmJvcmRlci0wIGZpcnN0OmJvcmRlci1yIGZpcnN0OmJvcmRlci1ib3JkZXItc3VidGxlIGxhc3Q6cm91bmRlZC10ciBsYXN0OnJvdW5kZWQtYnIgbGFzdDpib3JkZXItMFwiLGImJlwiYmctYnV0dG9uLWRpc2FibGVkXCIpLG9uQ2xpY2s6ZnVuY3Rpb24oKXtwJiZwKHIpfSxkaXNhYmxlZDp5fSxjKSxpKCkuY3JlYXRlRWxlbWVudChcImlucHV0XCIse3R5cGU6XCJoaWRkZW5cIix2YWx1ZTpyLG5hbWU6ZCxjaGVja2VkOmIsb25DaGFuZ2U6cH0pLG4pKX0sS2U9T2JqZWN0LmFzc2lnbihVZSx7R3JvdXA6VmUsQnV0dG9uOlVlfSk7Y29uc3QgSGU9eGUoXCJYXCIsW1tcInBhdGhcIix7ZDpcIk0xOCA2IDYgMThcIixrZXk6XCIxYmw1ZjhcIn1dLFtcInBhdGhcIix7ZDpcIm02IDYgMTIgMTJcIixrZXk6XCJkOGJrNnZcIn1dXSk7dmFyIHFlPWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5sYWJlbCxyPXZvaWQgMD09PW4/XCJcIjpuLG89ZS5zaXplLGk9dm9pZCAwPT09bz9cInNtXCI6byxzPWUuY2xhc3NOYW1lLGE9dm9pZCAwPT09cz9cIlwiOnMsbD1lLnR5cGUsYz12b2lkIDA9PT1sP1wicGlsbFwiOmwsdT1lLnZhcmlhbnQsZD12b2lkIDA9PT11P1wibmV1dHJhbFwiOnUsZj1lLmljb24saD12b2lkIDA9PT1mP251bGw6ZixwPWUuZGlzYWJsZWQsbT12b2lkIDAhPT1wJiZwLGc9ZS5vbkNsb3NlLHY9dm9pZCAwPT09Zz9mdW5jdGlvbigpe306Zyx5PWUuY2xvc2FibGUsYj12b2lkIDAhPT15JiZ5LHg9ZS5vbk1vdXNlRG93bix3PXZvaWQgMD09PXg/ZnVuY3Rpb24oKXt9OngsRT17bmV1dHJhbDpcImJnLWJhZGdlLWJhY2tncm91bmQtZ3JheSBob3ZlcjpiZy1iYWRnZS1ob3Zlci1ncmF5IHRleHQtYmFkZ2UtY29sb3ItZ3JheSBib3JkZXItYmFkZ2UtYm9yZGVyLWdyYXlcIixyZWQ6XCJiZy1iYWRnZS1iYWNrZ3JvdW5kLXJlZCBob3ZlcjpiZy1iYWRnZS1ob3Zlci1yZWQgdGV4dC1iYWRnZS1jb2xvci1yZWQgYm9yZGVyLWJhZGdlLWJvcmRlci1yZWRcIix5ZWxsb3c6XCJiZy1iYWRnZS1iYWNrZ3JvdW5kLXllbGxvdyBob3ZlcjpiZy1iYWRnZS1ob3Zlci15ZWxsb3cgdGV4dC1iYWRnZS1jb2xvci15ZWxsb3cgYm9yZGVyLWJhZGdlLWJvcmRlci15ZWxsb3dcIixncmVlbjpcImJnLWJhZGdlLWJhY2tncm91bmQtZ3JlZW4gaG92ZXI6YmctYmFkZ2UtaG92ZXItZ3JlZW4gdGV4dC1iYWRnZS1jb2xvci1ncmVlbiBib3JkZXItYmFkZ2UtYm9yZGVyLWdyZWVuXCIsYmx1ZTpcImJnLWJhZGdlLWJhY2tncm91bmQtc2t5IGhvdmVyOmJnLWJhZGdlLWhvdmVyLXNreSB0ZXh0LWJhZGdlLWNvbG9yLXNreSBib3JkZXItYmFkZ2UtYm9yZGVyLXNreVwiLGludmVyc2U6XCJiZy1iYWNrZ3JvdW5kLWludmVyc2UgaG92ZXI6YmctYmFkZ2UtaG92ZXItaW52ZXJzZSB0ZXh0LXRleHQtaW52ZXJzZSBib3JkZXItYmFja2dyb3VuZC1pbnZlcnNlXCIsZGlzYWJsZWQ6XCJiZy1iYWRnZS1iYWNrZ3JvdW5kLWRpc2FibGVkIGhvdmVyOmJnLWJhZGdlLWhvdmVyLWRpc2FibGVkIHRleHQtYmFkZ2UtY29sb3ItZGlzYWJsZWQgYm9yZGVyLWJhZGdlLWJvcmRlci1kaXNhYmxlZCBkaXNhYmxlZCBjdXJzb3Itbm90LWFsbG93ZWRcIn0sUz1cIlwiLF89XCJncm91cCByZWxhdGl2ZSBqdXN0aWZ5LWNlbnRlciBmbGV4IGl0ZW1zLWNlbnRlciBbJj5zdmddOmgtNCBbJj5zdmddOnctNCBjdXJzb3ItcG9pbnRlclwiO3JldHVybiBtPyhTPUUuZGlzYWJsZWQsXys9XCIgY3Vyc29yLW5vdC1hbGxvd2VkIGRpc2FibGVkXCIpOlM9RVtkXSxyP1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTp0ZShcImZvbnQtbWVkaXVtIGJvcmRlci1iYWRnZS1ib3JkZXItZ3JheSBmbGV4IGdhcC0xIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBib3JkZXIgYm9yZGVyLXNvbGlkXCIse3hzOlwicHktMC41IHB4LTEgdGV4dC14c1wiLHNtOlwicHktMSBweC0xLjUgdGV4dC14c1wiLG1kOlwicHktMSBweC0xLjUgdGV4dC1zbVwiLGxnOlwicHktMSBweC0xLjUgdGV4dC1iYXNlXCJ9W2ldLHtwaWxsOlwicm91bmRlZC1mdWxsXCIscm91bmRlZDpcInJvdW5kZWRcIn1bY10sUyxhKSxyZWY6dH0saD9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJqdXN0aWZ5LWNlbnRlciBmbGV4IGl0ZW1zLWNlbnRlciBbJj5zdmddOmgtNCBbJj5zdmddOnctNFwifSxoKTpudWxsLHIsYiYmUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOl8sb25DbGljazptP251bGw6dixvbk1vdXNlRG93bjp3LHJvbGU6XCJidXR0b25cIix0YWJJbmRleDowfSxSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJzci1vbmx5XCJ9LFwiUmVtb3ZlIFwiLmNvbmNhdChyKSksUmVhY3QuY3JlYXRlRWxlbWVudChIZSxudWxsKSxSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJhYnNvbHV0ZSAtaW5zZXQtMVwifSkpKTpudWxsfSxZZT0oMCxvLmZvcndhcmRSZWYpKHFlKTtZZS5kaXNwbGF5TmFtZT1cIkJhZGdlXCI7dmFyIEdlPVllLFhlPVtcImlkXCIsXCJkZWZhdWx0VmFsdWVcIixcInZhbHVlXCIsXCJzaXplXCIsXCJjbGFzc05hbWVcIixcImRpc2FibGVkXCIsXCJvbkNoYW5nZVwiLFwiZXJyb3JcIixcIm9uRXJyb3JcIl07ZnVuY3Rpb24gSmUoKXtyZXR1cm4gSmU9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxKZS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gWmUoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfXZhciBRZT1mdW5jdGlvbihlLHQpe3ZhciBuLHIsaT1lLmlkLHM9ZS5kZWZhdWx0VmFsdWUsYT12b2lkIDA9PT1zP1wiXCI6cyxsPWUudmFsdWUsYz1lLnNpemUsdT12b2lkIDA9PT1jP1wic21cIjpjLGQ9ZS5jbGFzc05hbWUsZj12b2lkIDA9PT1kP1wiXCI6ZCxoPWUuZGlzYWJsZWQscD12b2lkIDAhPT1oJiZoLG09ZS5vbkNoYW5nZSxnPXZvaWQgMD09PW0/ZnVuY3Rpb24oKXt9Om0sdj1lLmVycm9yLHk9dm9pZCAwIT09diYmdixiPWUub25FcnJvcix4PXZvaWQgMD09PWI/ZnVuY3Rpb24oKXt9OmIsdz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxYZSksRT0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiBpfHxcImlucHV0LXRleHRhcmVhLVwiLmNvbmNhdChjZSgpKX0pLFtpXSksUz0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT1sfSksW2xdKSxfPShuPSgwLG8udXNlU3RhdGUpKGEpLHI9MixmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlfShuKXx8ZnVuY3Rpb24oZSx0KXt2YXIgbj1udWxsPT1lP251bGw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmZVtTeW1ib2wuaXRlcmF0b3JdfHxlW1wiQEBpdGVyYXRvclwiXTtpZihudWxsIT1uKXt2YXIgcixvLGkscyxhPVtdLGw9ITAsYz0hMTt0cnl7aWYoaT0obj1uLmNhbGwoZSkpLm5leHQsMD09PXQpe2lmKE9iamVjdChuKSE9PW4pcmV0dXJuO2w9ITF9ZWxzZSBmb3IoOyEobD0ocj1pLmNhbGwobikpLmRvbmUpJiYoYS5wdXNoKHIudmFsdWUpLGEubGVuZ3RoIT09dCk7bD0hMCk7fWNhdGNoKGUpe2M9ITAsbz1lfWZpbmFsbHl7dHJ5e2lmKCFsJiZudWxsIT1uLnJldHVybiYmKHM9bi5yZXR1cm4oKSxPYmplY3QocykhPT1zKSlyZXR1cm59ZmluYWxseXtpZihjKXRocm93IG99fXJldHVybiBhfX0obixyKXx8ZnVuY3Rpb24oZSx0KXtpZihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gWmUoZSx0KTt2YXIgbj17fS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9aZShlLHQpOnZvaWQgMH19KG4scil8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKSksaz1fWzBdLEM9X1sxXSxQPSgwLG8udXNlQ2FsbGJhY2spKChmdW5jdGlvbigpe3JldHVybiBTP2w6a30pLFtTLGwsa10pLFQ9cD9cImhvdmVyOmJvcmRlci1ib3JkZXItZGlzYWJsZWRcIjpcImhvdmVyOmJvcmRlci1ib3JkZXItc3Ryb25nXCIsTz15P1wiZm9jdXM6Ym9yZGVyLWZvY3VzLWVycm9yLWJvcmRlciBmb2N1czpyaW5nLWZpZWxkLWNvbG9yLWVycm9yIGJnLWZpZWxkLWJhY2tncm91bmQtZXJyb3JcIjpcIlwiLFI9cD9cImJvcmRlci1ib3JkZXItZGlzYWJsZWQgYmctZmllbGQtYmFja2dyb3VuZC1kaXNhYmxlZCBjdXJzb3Itbm90LWFsbG93ZWQgdGV4dC10ZXh0LWRpc2FibGVkXCI6XCJcIjtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIsSmUoe3JlZjp0LGlkOkUsY2xhc3NOYW1lOnRlKFwicHktMiByb3VuZGVkIGJvcmRlciBib3JkZXItc29saWQgYm9yZGVyLWJvcmRlci1zdWJ0bGUgYmctZmllbGQtc2Vjb25kYXJ5LWJhY2tncm91bmQgZm9udC1ub3JtYWwgcGxhY2Vob2xkZXItdGV4dC10ZXJ0aWFyeSB0ZXh0LXRleHQtcHJpbWFyeVwiLFIse3NtOlwicHgtMyByb3VuZGVkIHRleHQteHNcIixtZDpcInB4LTMgcm91bmRlZC1tZCB0ZXh0LXNtXCIsbGc6XCJweC00IHJvdW5kZWQtbGcgdGV4dC1iYXNlXCJ9W3VdLFwiZm9jdXM6Ym9yZGVyLWZvY3VzLWJvcmRlciBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy10b2dnbGUtb24gZm9jdXM6cmluZy1vZmZzZXQtMlwiLFQsTyxmKSxkaXNhYmxlZDpwLG9uQ2hhbmdlOmZ1bmN0aW9uKGUpe2lmKCFwKXt2YXIgdD1lLnRhcmdldC52YWx1ZTtTfHxDKHQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGcmJmcodCl9fSxvbkludmFsaWQ6eCx2YWx1ZTpQKCl9LHcpKX0sZXQ9KDAsby5mb3J3YXJkUmVmKShRZSk7ZXQuZGlzcGxheU5hbWU9XCJUZXh0QXJlYVwiO3ZhciB0dD1ldCxudD1mdW5jdGlvbihlKXt2YXIgdCxuLHIsbyxpPWUudmFyaWFudCxzPXZvaWQgMD09PWk/XCJwcmltYXJ5XCI6aSxhPWUuc2l6ZSxsPXZvaWQgMD09PWE/XCJtZFwiOmEsYz1lLmJvcmRlcix1PXZvaWQgMD09PWM/XCJzdWJ0bGVcIjpjLGQ9ZS51cmwsZj12b2lkIDA9PT1kP1wiXCI6ZCxoPWUuY2hpbGRyZW4scD1lLmNsYXNzTmFtZSxtPW51bGw9PT0odD17d2hpdGU6XCJ0ZXh0LXRleHQtcHJpbWFyeSBiZy1iYWNrZ3JvdW5kLXByaW1hcnlcIixncmF5OlwidGV4dC10ZXh0LXByaW1hcnkgYmctYmFja2dyb3VuZC1zZWNvbmRhcnlcIixwcmltYXJ5OlwidGV4dC10ZXh0LW9uLWNvbG9yIGJnLWJhY2tncm91bmQtYnJhbmRcIixwcmltYXJ5TGlnaHQ6XCJ0ZXh0LXRleHQtcHJpbWFyeSBiZy1icmFuZC1iYWNrZ3JvdW5kLTUwXCIsZGFyazpcInRleHQtdGV4dC1vbi1jb2xvciBiZy1idXR0b24tc2Vjb25kYXJ5XCJ9KXx8dm9pZCAwPT09dD92b2lkIDA6dFtzXSxnPW51bGw9PT0obj17eHM6XCJ3LTUgaC01IFsmPnN2Z106aC0zIFsmPnN2Z106dy0zIHRleHQteHNcIixzbTpcInctNiBoLTYgWyY+c3ZnXTpoLTQgWyY+c3ZnXTp3LTQgdGV4dC1zbVwiLG1kOlwidy04IGgtOCBbJj5zdmddOmgtNSBbJj5zdmddOnctNSB0ZXh0LWJhc2VcIixsZzpcInctMTAgaC0xMCBbJj5zdmddOmgtNiBbJj5zdmddOnctNiB0ZXh0LWxnXCJ9KXx8dm9pZCAwPT09bj92b2lkIDA6bltsXSx2PW51bGw9PT0ocj17bm9uZTpcIlwiLHN1YnRsZTpcImJvcmRlciBib3JkZXItc29saWQgYm9yZGVyLWJvcmRlci10cmFuc3BhcmVudC1zdWJ0bGVcIixyaW5nOlwiYm9yZGVyLTQgYm9yZGVyLXNvbGlkIGJvcmRlci1ib3JkZXItd2hpdGVcIn0pfHx2b2lkIDA9PT1yP3ZvaWQgMDpyW2YmJlwibm9uZVwiPT09dT9cInN1YnRsZVwiOnVdLHk9Zj9cImJnLWNvdmVyIGJnLWNlbnRlciBiZy1uby1yZXBlYXRcIjpcIlwiO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcInJvdW5kZWQtZnVsbCBvdmVyZmxvdy1oaWRkZW4gZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIiwhZiYmbSxnLHYseSxwKSxzdHlsZTpmP3tiYWNrZ3JvdW5kSW1hZ2U6XCJ1cmwoXCIuY29uY2F0KGYsXCIpXCIpfTp7fX0saD9cInN0cmluZ1wiPT10eXBlb2YgaD9udWxsPT1ofHxudWxsPT09KG89aFswXSl8fHZvaWQgMD09PW8/dm9pZCAwOm8udG9VcHBlckNhc2UoKTpoOm51bGwpfTtjb25zdCBydD14ZShcIlVwbG9hZFwiLFtbXCJwYXRoXCIse2Q6XCJNMjEgMTV2NGEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMnYtNFwiLGtleTpcImloN24zaFwifV0sW1wicG9seWxpbmVcIix7cG9pbnRzOlwiMTcgOCAxMiAzIDcgOFwiLGtleTpcInQ4ZGQ4cFwifV0sW1wibGluZVwiLHt4MTpcIjEyXCIseDI6XCIxMlwiLHkxOlwiM1wiLHkyOlwiMTVcIixrZXk6XCJ3aWRidG9cIn1dXSk7dmFyIG90PVtcImlkXCIsXCJ0eXBlXCIsXCJkZWZhdWx0VmFsdWVcIixcInZhbHVlXCIsXCJzaXplXCIsXCJjbGFzc05hbWVcIixcImRpc2FibGVkXCIsXCJvbkNoYW5nZVwiLFwiZXJyb3JcIixcIm9uRXJyb3JcIixcInByZWZpeFwiLFwic3VmZml4XCJdO2Z1bmN0aW9uIGl0KCl7cmV0dXJuIGl0PU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKSh7fSkuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0saXQuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIHN0KGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe3ZhciBuPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saSxzLGE9W10sbD0hMCxjPSExO3RyeXtpZihpPShuPW4uY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KG4pIT09bilyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShyPWkuY2FsbChuKSkuZG9uZSkmJihhLnB1c2goci52YWx1ZSksYS5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxvPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPW4ucmV0dXJuJiYocz1uLnJldHVybigpLE9iamVjdChzKSE9PXMpKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgb319cmV0dXJuIGF9fShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBhdChlLHQpO3ZhciBuPXt9LnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP2F0KGUsdCk6dm9pZCAwfX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIGF0KGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn12YXIgbHQ9ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmlkLHI9ZS50eXBlLGk9dm9pZCAwPT09cj9cInRleHRcIjpyLHM9ZS5kZWZhdWx0VmFsdWUsYT12b2lkIDA9PT1zP1wiXCI6cyxsPWUudmFsdWUsYz1lLnNpemUsdT12b2lkIDA9PT1jP1wic21cIjpjLGQ9ZS5jbGFzc05hbWUsZj12b2lkIDA9PT1kP1wiXCI6ZCxoPWUuZGlzYWJsZWQscD12b2lkIDAhPT1oJiZoLG09ZS5vbkNoYW5nZSxnPXZvaWQgMD09PW0/ZnVuY3Rpb24oKXt9Om0sdj1lLmVycm9yLHk9dm9pZCAwIT09diYmdixiPWUub25FcnJvcix4PXZvaWQgMD09PWI/ZnVuY3Rpb24oKXt9OmIsdz1lLnByZWZpeCxFPXZvaWQgMD09PXc/bnVsbDp3LFM9ZS5zdWZmaXgsXz12b2lkIDA9PT1TP251bGw6UyxrPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfShlLG90KSxDPSgwLG8udXNlTWVtbykoKGZ1bmN0aW9uKCl7cmV0dXJuIG58fFwiaW5wdXQtXCIuY29uY2F0KGksXCItXCIpLmNvbmNhdChjZSgpKX0pLFtuXSksUD0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT1sfSksW2xdKSxUPXN0KCgwLG8udXNlU3RhdGUpKGEpLDIpLE89VFswXSxSPVRbMV0sTj1zdCgoMCxvLnVzZVN0YXRlKShudWxsKSwyKSxBPU5bMF0saj1OWzFdLE09KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKCl7cmV0dXJuIFA/bDpPfSksW1AsbCxPXSksST1mdW5jdGlvbihlKXt2YXIgdDtwfHwoXCJmaWxlXCI9PT1pPyh0PWUudGFyZ2V0LmZpbGVzKS5sZW5ndGg+MD9qKHRbMF0ubmFtZSk6aihudWxsKTp0PWUudGFyZ2V0LnZhbHVlLFB8fFwiZmlsZVwiPT09aXx8Uih0KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBnJiZnKHQpKX0sRD1cImJvcmRlciBib3JkZXItc29saWQgYm9yZGVyLWJvcmRlci1zdWJ0bGUgYmctZmllbGQtc2Vjb25kYXJ5LWJhY2tncm91bmQgZm9udC1ub3JtYWwgcGxhY2Vob2xkZXItdGV4dC10ZXJ0aWFyeSB0ZXh0LXRleHQtcHJpbWFyeSB3LWZ1bGwgZm9jdXM6b3V0bGluZS1ub25lXCIsTD17c206XCJweC0yIHB5LTIgcm91bmRlZFwiLG1kOlwicHgtMi41IHB5LTIuNSByb3VuZGVkLW1kXCIsbGc6XCJweC0zIHB5LTMgcm91bmRlZC1sZ1wifSxGPXtzbTpcInRleHQteHNcIixtZDpcInRleHQtYmFzZVwiLGxnOlwidGV4dC1iYXNlXCJ9LHo9e3NtOkU/XCJwbC04XCI6XCJcIixtZDpFP1wicGwtOVwiOlwiXCIsbGc6RT9cInBsLTEwXCI6XCJcIn0sQj17c206Xz9cInByLThcIjpcIlwiLG1kOl8/XCJwci05XCI6XCJcIixsZzpfP1wicHItMTBcIjpcIlwifSxWPXA/XCJob3Zlcjpib3JkZXItYm9yZGVyLWRpc2FibGVkXCI6XCJob3Zlcjpib3JkZXItYm9yZGVyLXN0cm9uZ1wiLFc9XCJmb2N1czpib3JkZXItZm9jdXMtYm9yZGVyIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXRvZ2dsZS1vbiBmb2N1czpyaW5nLW9mZnNldC0yXCIsVT15P1wiZm9jdXM6Ym9yZGVyLWZvY3VzLWVycm9yLWJvcmRlciBmb2N1czpyaW5nLWZpZWxkLWNvbG9yLWVycm9yIGJnLWZpZWxkLWJhY2tncm91bmQtZXJyb3JcIjpcIlwiLCQ9eT9cImZvY3VzOmJvcmRlci1mb2N1cy1lcnJvci1ib3JkZXIgZm9jdXM6cmluZy1maWVsZC1jb2xvci1lcnJvclwiOlwiXCIsSz1wP1wiYm9yZGVyLWJvcmRlci1kaXNhYmxlZCBiZy1maWVsZC1iYWNrZ3JvdW5kLWRpc2FibGVkIGN1cnNvci1ub3QtYWxsb3dlZCB0ZXh0LXRleHQtZGlzYWJsZWRcIjpcIlwiLEg9cD9cImJvcmRlci1ib3JkZXItZGlzYWJsZWQgY3Vyc29yLW5vdC1hbGxvd2VkIHRleHQtdGV4dC1kaXNhYmxlZCBmaWxlOnRleHQtdGV4dC10ZXJ0aWFyeVwiOlwiXCIscT1cImZvbnQtbm9ybWFsIHBsYWNlaG9sZGVyLXRleHQtdGVydGlhcnkgdGV4dC10ZXh0LXByaW1hcnkgcG9pbnRlci1ldmVudHMtbm9uZSBhYnNvbHV0ZSBpbnNldC15LTAgZmxleCBmbGV4LTEgaXRlbXMtY2VudGVyIFsmPnN2Z106aC00IFsmPnN2Z106dy00XCIsWT1wP1wiZm9udC1ub3JtYWwgcGxhY2Vob2xkZXItdGV4dC10ZXJ0aWFyeSB0ZXh0LWljb24tZGlzYWJsZWQgcG9pbnRlci1ldmVudHMtbm9uZSBhYnNvbHV0ZSBpbnNldC15LTAgZmxleCBmbGV4LTEgaXRlbXMtY2VudGVyXCI6XCJmb250LW5vcm1hbCBwbGFjZWhvbGRlci10ZXh0LXRlcnRpYXJ5IHRleHQtZmllbGQtcGxhY2Vob2xkZXIgcG9pbnRlci1ldmVudHMtbm9uZSBhYnNvbHV0ZSBpbnNldC15LTAgZmxleCBmbGV4LTEgaXRlbXMtY2VudGVyXCIsRz1BP1wiZmlsZTpib3JkZXItMCBmaWxlOmJnLXRyYW5zcGFyZW50XCI6XCJ0ZXh0LXRleHQtdGVydGlhcnkgZmlsZTpib3JkZXItMCBmaWxlOmJnLXRyYW5zcGFyZW50XCI7cmV0dXJuXCJmaWxlXCI9PT1pP1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwicmVsYXRpdmUgZmxleCBmb2N1cy13aXRoaW46ei0xMFwiLGYpfSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIixpdCh7cmVmOnQsaWQ6Qyx0eXBlOlwiZmlsZVwiLGNsYXNzTmFtZTp0ZShELEgsTFt1XSxGW3VdLFcsViwkLEcpLGRpc2FibGVkOnAsb25DaGFuZ2U6SSxvbkludmFsaWQ6eH0saykpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFksXCJyaWdodC0wIHByLTNcIix7c206XCJbJj5zdmddOmgtNCBbJj5zdmddOnctNFwiLG1kOlwiWyY+c3ZnXTpoLTUgWyY+c3ZnXTp3LTVcIixsZzpcIlsmPnN2Z106aC02IFsmPnN2Z106dy02XCJ9W3VdKX0sUmVhY3QuY3JlYXRlRWxlbWVudChydCxudWxsKSkpOlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwicmVsYXRpdmUgZmxleCBmb2N1cy13aXRoaW46ei0xMFwiLGYpfSxFP1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKHEsXCJsZWZ0LTAgcGwtM1wiLEZbdV0pfSxFKTpudWxsLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLGl0KHtyZWY6dCxpZDpDLHR5cGU6aSxjbGFzc05hbWU6dGUoRCxLLExbdV0sRlt1XSx6W3VdLEJbdV0sVyxWLFUpLGRpc2FibGVkOnAsb25DaGFuZ2U6SSxvbkludmFsaWQ6eCx2YWx1ZTpNKCl9LGspKSxfP1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKHEsXCJyaWdodC0wIHByLTNcIixGW3VdKX0sXyk6bnVsbCl9LGN0PSgwLG8uZm9yd2FyZFJlZikobHQpO2N0LmRpc3BsYXlOYW1lPVwiSW5wdXRcIjt2YXIgdXQ9Y3QsZHQ9W1wiY2hpbGRyZW5cIixcInRhZ1wiLFwic2l6ZVwiLFwiY2xhc3NOYW1lXCIsXCJ2YXJpYW50XCIsXCJyZXF1aXJlZFwiXTtmdW5jdGlvbiBmdCgpe3JldHVybiBmdD1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LGZ0LmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgaHQ9KDAsby5mb3J3YXJkUmVmKSgoZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmNoaWxkcmVuLHI9dm9pZCAwPT09bj9udWxsOm4sbz1lLnRhZyxzPXZvaWQgMD09PW8/XCJsYWJlbFwiOm8sYT1lLnNpemUsbD12b2lkIDA9PT1hP1wic21cIjphLGM9ZS5jbGFzc05hbWUsdT12b2lkIDA9PT1jP1wiXCI6YyxkPWUudmFyaWFudCxmPXZvaWQgMD09PWQ/XCJuZXV0cmFsXCI6ZCxoPWUucmVxdWlyZWQscD12b2lkIDAhPT1oJiZoLG09ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99KGUsZHQpO2lmKCFyKXJldHVybiBudWxsO3ZhciBnPVwiXCI7cCYmKGc9XCJhZnRlcjpjb250ZW50LVsnKiddIGFmdGVyOnRleHQtZmllbGQtcmVxdWlyZWQgYWZ0ZXI6bWwtMC41XCIpO3ZhciB2PXM7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KHYsZnQoe3JlZjp0LGNsYXNzTmFtZTp0ZShcImZvbnQtbWVkaXVtIHRleHQtZmllbGQtbGFiZWwgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTAuNVwiLHt4czpcInRleHQteHMgWyY+Kl06dGV4dC14cyBbJj5zdmddOmgtMyBbJj5zdmddOnctM1wiLHNtOlwidGV4dC1zbSBbJj4qXTp0ZXh0LXNtIFsmPnN2Z106aC00IFsmPnN2Z106dy00XCIsbWQ6XCJ0ZXh0LWJhc2UgWyY+Kl06dGV4dC1iYXNlIFsmPnN2Z106aC01IFsmPnN2Z106dy01XCJ9W2xdLHtuZXV0cmFsOlwidGV4dC1maWVsZC1sYWJlbCBbJj4qXTp0ZXh0LWZpZWxkLWxhYmVsXCIsaGVscDpcInRleHQtZmllbGQtaGVscGVyIFsmPipdOnRleHQtZmllbGQtaGVscGVyXCIsZXJyb3I6XCJ0ZXh0LXN1cHBvcnQtZXJyb3IgWyY+Kl06dGV4dC1zdXBwb3J0LWVycm9yXCIsZGlzYWJsZWQ6XCJ0ZXh0LWZpZWxkLWNvbG9yLWRpc2FibGVkIGRpc2FibGVkIGN1cnNvci1ub3QtYWxsb3dlZCBbJj4qXTp0ZXh0LWZpZWxkLWNvbG9yLWRpc2FibGVkXCJ9W2ZdLGcsdSl9LG0pLHIpfSkpLHB0PWh0LG10PWZ1bmN0aW9uKGUpe3ZhciB0PWUudGl0bGUsbj12b2lkIDA9PT10P251bGw6dCxyPWUuZGVzY3JpcHRpb24sbz12b2lkIDA9PT1yP251bGw6cixpPWUuaWNvbixzPXZvaWQgMD09PWk/bnVsbDppLGE9ZS5pY29uUG9zaXRpb24sbD12b2lkIDA9PT1hP1wicmlnaHRcIjphLGM9ZS50YWcsdT12b2lkIDA9PT1jP1wiaDJcIjpjLGQ9ZS5zaXplLGY9dm9pZCAwPT09ZD9cInNtXCI6ZCxoPWUuY2xhc3NOYW1lLHA9dm9pZCAwPT09aD9cIlwiOmgsbT17eHM6XCJnYXAtMSBbJj5zdmddOnNpemUtMy41XCIsc206XCJnYXAtMSBbJj5zdmddOnNpemUtNFwiLG1kOlwiZ2FwLTEuNSBbJj5zdmddOnNpemUtNVwiLGxnOlwiZ2FwLTEuNSBbJj5zdmddOnNpemUtNVwifTtpZighbilyZXR1cm4gbnVsbDt2YXIgZz1mdW5jdGlvbigpe3ZhciBlPXU7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoZSx7Y2xhc3NOYW1lOnRlKFwiZm9udC1zZW1pYm9sZCBwLTAgbS0wXCIse3hzOlwidGV4dC1iYXNlIFsmPipdOnRleHQtYmFzZSBnYXAtMVwiLHNtOlwidGV4dC1sZyBbJj4qXTp0ZXh0LWxnIGdhcC0xXCIsbWQ6XCJ0ZXh0LXhsIFsmPipdOnRleHQteGwgZ2FwLTEuNVwiLGxnOlwidGV4dC0yeGwgWyY+Kl06dGV4dC0yeGwgZ2FwLTEuNVwifVtmXSl9LG4pfTtyZXR1cm4gbz9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpwfSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsbnVsbCxzJiZcImxlZnRcIj09PWwmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiZmxleCBpdGVtcy1jZW50ZXJcIixtW2ZdKX0scyxnKCkpLHMmJlwicmlnaHRcIj09PWwmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiZmxleCBpdGVtcy1jZW50ZXJcIixtW2ZdKX0sZygpLHMpLCFzJiZnKCkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTp0ZShcInRleHQtdGV4dC1zZWNvbmRhcnkgZm9udC1ub3JtYWxcIix7eHM6XCJ0ZXh0LWJhc2VcIixzbTpcInRleHQtbGdcIixtZDpcInRleHQteGxcIixsZzpcInRleHQtMnhsXCJ9W2ZdKX0sbykpOlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnB9LHMmJlwibGVmdFwiPT09bCYmUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJmbGV4IGl0ZW1zLWNlbnRlclwiLG1bZl0pfSxzLGcoKSkscyYmXCJyaWdodFwiPT09bCYmUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJmbGV4IGl0ZW1zLWNlbnRlclwiLG1bZl0pfSxnKCkscyksIXMmJmcoKSl9O2NvbnN0IGd0PXhlKFwiTG9hZGVyQ2lyY2xlXCIsW1tcInBhdGhcIix7ZDpcIk0yMSAxMmE5IDkgMCAxIDEtNi4yMTktOC41NlwiLGtleTpcIjEzemFsZFwifV1dKTt2YXIgdnQ9ZnVuY3Rpb24oZSl7dmFyIHQsbixyPWUudmFyaWFudCxvPXZvaWQgMD09PXI/XCJwcmltYXJ5XCI6cixpPWUuc2l6ZSxzPXZvaWQgMD09PWk/XCJtZFwiOmksYT1lLmljb24sbD12b2lkIDA9PT1hP251bGw6YSxjPWUuY2xhc3NOYW1lLHU9dm9pZCAwPT09Yz9cIlwiOmMsZD1udWxsPT09KHQ9e3ByaW1hcnk6XCJ0ZXh0LWJyYW5kLXByaW1hcnktNjAwIGJnLWJhY2tncm91bmQtcHJpbWFyeVwiLHNlY29uZGFyeTpcInRleHQtYmFja2dyb3VuZC1wcmltYXJ5IGJnLWJyYW5kLXByaW1hcnktNjAwXCJ9KXx8dm9pZCAwPT09dD92b2lkIDA6dFtvXSxmPW51bGw9PT0obj17c206XCJbJj5zdmddOmgtNCBbJj5zdmddOnctNFwiLG1kOlwiWyY+c3ZnXTpoLTUgWyY+c3ZnXTp3LTVcIixsZzpcIlsmPnN2Z106aC02IFsmPnN2Z106dy02XCIseGw6XCJbJj5zdmddOmgtOCBbJj5zdmddOnctOFwifSl8fHZvaWQgMD09PW4/dm9pZCAwOm5bc107cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTp0ZShcImZsZXhcIixmLGQsdSl9LGx8fFJlYWN0LmNyZWF0ZUVsZW1lbnQoZ3Qse2NsYXNzTmFtZTpcImFuaW1hdGUtc3BpblwifSkpfSx5dD1mdW5jdGlvbihlKXt2YXIgdD1lLnByb2dyZXNzLG49dm9pZCAwPT09dD8wOnQscj1lLnNwZWVkLG89dm9pZCAwPT09cj8yMDA6cixpPWUuY2xhc3NOYW1lLHM9dm9pZCAwPT09aT9cIlwiOmk7aWYoIW4pcmV0dXJuIG51bGw7dmFyIGE9bjtuPDAmJihhPTApLG4+MTAwJiYoYT0xMDApO3ZhciBsPVwidHJhbnNsYXRlWCgtXCIuY29uY2F0KDEwMC1hLFwiJSlcIiksYz1cImgtMiByb3VuZGVkLWZ1bGwgYmctYmFja2dyb3VuZC1icmFuZCBhYnNvbHV0ZSBsZWZ0LTAgdG9wLTAgdy1mdWxsIGJvdHRvbS0wIG9yaWdpbi1sZWZ0IHRyYW5zaXRpb24tdHJhbnNmb3JtIGR1cmF0aW9uLVwiLmNvbmNhdChvLFwiIGVhc2UtbGluZWFyXCIpO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcImgtMiByb3VuZGVkLWZ1bGwgYmctbWlzYy1wcm9ncmVzcy1iYWNrZ3JvdW5kIG92ZXJmbG93LWhpZGRlbiByZWxhdGl2ZVwiLHMpLHJvbGU6XCJwcm9ncmVzc2JhclwiLFwiYXJpYS12YWx1ZW5vd1wiOmEsXCJhcmlhLXZhbHVlbWluXCI6XCIwXCIsXCJhcmlhLXZhbHVlbWF4XCI6XCIxMDBcIn0sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6YyxzdHlsZTp7dHJhbnNmb3JtOmx9fSkpfTtmdW5jdGlvbiBidChlKXtyZXR1cm4gRXQoZSk/KGUubm9kZU5hbWV8fFwiXCIpLnRvTG93ZXJDYXNlKCk6XCIjZG9jdW1lbnRcIn1mdW5jdGlvbiB4dChlKXt2YXIgdDtyZXR1cm4obnVsbD09ZXx8bnVsbD09KHQ9ZS5vd25lckRvY3VtZW50KT92b2lkIDA6dC5kZWZhdWx0Vmlldyl8fHdpbmRvd31mdW5jdGlvbiB3dChlKXt2YXIgdDtyZXR1cm4gbnVsbD09KHQ9KEV0KGUpP2Uub3duZXJEb2N1bWVudDplLmRvY3VtZW50KXx8d2luZG93LmRvY3VtZW50KT92b2lkIDA6dC5kb2N1bWVudEVsZW1lbnR9ZnVuY3Rpb24gRXQoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBOb2RlfHxlIGluc3RhbmNlb2YgeHQoZSkuTm9kZX1mdW5jdGlvbiBTdChlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIEVsZW1lbnR8fGUgaW5zdGFuY2VvZiB4dChlKS5FbGVtZW50fWZ1bmN0aW9uIF90KGUpe3JldHVybiBlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnR8fGUgaW5zdGFuY2VvZiB4dChlKS5IVE1MRWxlbWVudH1mdW5jdGlvbiBrdChlKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgU2hhZG93Um9vdCYmKGUgaW5zdGFuY2VvZiBTaGFkb3dSb290fHxlIGluc3RhbmNlb2YgeHQoZSkuU2hhZG93Um9vdCl9ZnVuY3Rpb24gQ3QoZSl7Y29uc3R7b3ZlcmZsb3c6dCxvdmVyZmxvd1g6bixvdmVyZmxvd1k6cixkaXNwbGF5Om99PUF0KGUpO3JldHVybi9hdXRvfHNjcm9sbHxvdmVybGF5fGhpZGRlbnxjbGlwLy50ZXN0KHQrcituKSYmIVtcImlubGluZVwiLFwiY29udGVudHNcIl0uaW5jbHVkZXMobyl9ZnVuY3Rpb24gUHQoZSl7cmV0dXJuW1widGFibGVcIixcInRkXCIsXCJ0aFwiXS5pbmNsdWRlcyhidChlKSl9ZnVuY3Rpb24gVHQoZSl7cmV0dXJuW1wiOnBvcG92ZXItb3BlblwiLFwiOm1vZGFsXCJdLnNvbWUoKHQ9Pnt0cnl7cmV0dXJuIGUubWF0Y2hlcyh0KX1jYXRjaChlKXtyZXR1cm4hMX19KSl9ZnVuY3Rpb24gT3QoZSl7Y29uc3QgdD1SdCgpLG49U3QoZSk/QXQoZSk6ZTtyZXR1cm5cIm5vbmVcIiE9PW4udHJhbnNmb3JtfHxcIm5vbmVcIiE9PW4ucGVyc3BlY3RpdmV8fCEhbi5jb250YWluZXJUeXBlJiZcIm5vcm1hbFwiIT09bi5jb250YWluZXJUeXBlfHwhdCYmISFuLmJhY2tkcm9wRmlsdGVyJiZcIm5vbmVcIiE9PW4uYmFja2Ryb3BGaWx0ZXJ8fCF0JiYhIW4uZmlsdGVyJiZcIm5vbmVcIiE9PW4uZmlsdGVyfHxbXCJ0cmFuc2Zvcm1cIixcInBlcnNwZWN0aXZlXCIsXCJmaWx0ZXJcIl0uc29tZSgoZT0+KG4ud2lsbENoYW5nZXx8XCJcIikuaW5jbHVkZXMoZSkpKXx8W1wicGFpbnRcIixcImxheW91dFwiLFwic3RyaWN0XCIsXCJjb250ZW50XCJdLnNvbWUoKGU9PihuLmNvbnRhaW58fFwiXCIpLmluY2x1ZGVzKGUpKSl9ZnVuY3Rpb24gUnQoKXtyZXR1cm4hKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBDU1N8fCFDU1Muc3VwcG9ydHMpJiZDU1Muc3VwcG9ydHMoXCItd2Via2l0LWJhY2tkcm9wLWZpbHRlclwiLFwibm9uZVwiKX1mdW5jdGlvbiBOdChlKXtyZXR1cm5bXCJodG1sXCIsXCJib2R5XCIsXCIjZG9jdW1lbnRcIl0uaW5jbHVkZXMoYnQoZSkpfWZ1bmN0aW9uIEF0KGUpe3JldHVybiB4dChlKS5nZXRDb21wdXRlZFN0eWxlKGUpfWZ1bmN0aW9uIGp0KGUpe3JldHVybiBTdChlKT97c2Nyb2xsTGVmdDplLnNjcm9sbExlZnQsc2Nyb2xsVG9wOmUuc2Nyb2xsVG9wfTp7c2Nyb2xsTGVmdDplLnNjcm9sbFgsc2Nyb2xsVG9wOmUuc2Nyb2xsWX19ZnVuY3Rpb24gTXQoZSl7aWYoXCJodG1sXCI9PT1idChlKSlyZXR1cm4gZTtjb25zdCB0PWUuYXNzaWduZWRTbG90fHxlLnBhcmVudE5vZGV8fGt0KGUpJiZlLmhvc3R8fHd0KGUpO3JldHVybiBrdCh0KT90Lmhvc3Q6dH1mdW5jdGlvbiBJdChlKXtjb25zdCB0PU10KGUpO3JldHVybiBOdCh0KT9lLm93bmVyRG9jdW1lbnQ/ZS5vd25lckRvY3VtZW50LmJvZHk6ZS5ib2R5Ol90KHQpJiZDdCh0KT90Okl0KHQpfWZ1bmN0aW9uIER0KGUsdCxuKXt2YXIgcjt2b2lkIDA9PT10JiYodD1bXSksdm9pZCAwPT09biYmKG49ITApO2NvbnN0IG89SXQoZSksaT1vPT09KG51bGw9PShyPWUub3duZXJEb2N1bWVudCk/dm9pZCAwOnIuYm9keSkscz14dChvKTtpZihpKXtjb25zdCBlPUx0KHMpO3JldHVybiB0LmNvbmNhdChzLHMudmlzdWFsVmlld3BvcnR8fFtdLEN0KG8pP286W10sZSYmbj9EdChlKTpbXSl9cmV0dXJuIHQuY29uY2F0KG8sRHQobyxbXSxuKSl9ZnVuY3Rpb24gTHQoZSl7cmV0dXJuIGUucGFyZW50JiZPYmplY3QuZ2V0UHJvdG90eXBlT2YoZS5wYXJlbnQpP2UuZnJhbWVFbGVtZW50Om51bGx9ZnVuY3Rpb24gRnQoZSl7bGV0IHQ9ZS5hY3RpdmVFbGVtZW50O2Zvcig7bnVsbCE9KG51bGw9PShuPXQpfHxudWxsPT0obj1uLnNoYWRvd1Jvb3QpP3ZvaWQgMDpuLmFjdGl2ZUVsZW1lbnQpOyl7dmFyIG47dD10LnNoYWRvd1Jvb3QuYWN0aXZlRWxlbWVudH1yZXR1cm4gdH1mdW5jdGlvbiB6dChlLHQpe2lmKCFlfHwhdClyZXR1cm4hMTtjb25zdCBuPW51bGw9PXQuZ2V0Um9vdE5vZGU/dm9pZCAwOnQuZ2V0Um9vdE5vZGUoKTtpZihlLmNvbnRhaW5zKHQpKXJldHVybiEwO2lmKG4mJmt0KG4pKXtsZXQgbj10O2Zvcig7bjspe2lmKGU9PT1uKXJldHVybiEwO249bi5wYXJlbnROb2RlfHxuLmhvc3R9fXJldHVybiExfWZ1bmN0aW9uIEJ0KCl7Y29uc3QgZT1uYXZpZ2F0b3IudXNlckFnZW50RGF0YTtyZXR1cm4gbnVsbCE9ZSYmZS5wbGF0Zm9ybT9lLnBsYXRmb3JtOm5hdmlnYXRvci5wbGF0Zm9ybX1mdW5jdGlvbiBWdCgpe2NvbnN0IGU9bmF2aWdhdG9yLnVzZXJBZ2VudERhdGE7cmV0dXJuIGUmJkFycmF5LmlzQXJyYXkoZS5icmFuZHMpP2UuYnJhbmRzLm1hcCgoZT0+e2xldHticmFuZDp0LHZlcnNpb246bn09ZTtyZXR1cm4gdCtcIi9cIitufSkpLmpvaW4oXCIgXCIpOm5hdmlnYXRvci51c2VyQWdlbnR9ZnVuY3Rpb24gV3QoZSl7cmV0dXJuISgwIT09ZS5tb3pJbnB1dFNvdXJjZXx8IWUuaXNUcnVzdGVkKXx8KEt0KCkmJmUucG9pbnRlclR5cGU/XCJjbGlja1wiPT09ZS50eXBlJiYxPT09ZS5idXR0b25zOjA9PT1lLmRldGFpbCYmIWUucG9pbnRlclR5cGUpfWZ1bmN0aW9uIFV0KGUpe3JldHVybiFWdCgpLmluY2x1ZGVzKFwianNkb20vXCIpJiYoIUt0KCkmJjA9PT1lLndpZHRoJiYwPT09ZS5oZWlnaHR8fEt0KCkmJjE9PT1lLndpZHRoJiYxPT09ZS5oZWlnaHQmJjA9PT1lLnByZXNzdXJlJiYwPT09ZS5kZXRhaWwmJlwibW91c2VcIj09PWUucG9pbnRlclR5cGV8fGUud2lkdGg8MSYmZS5oZWlnaHQ8MSYmMD09PWUucHJlc3N1cmUmJjA9PT1lLmRldGFpbCYmXCJ0b3VjaFwiPT09ZS5wb2ludGVyVHlwZSl9ZnVuY3Rpb24gJHQoKXtyZXR1cm4vYXBwbGUvaS50ZXN0KG5hdmlnYXRvci52ZW5kb3IpfWZ1bmN0aW9uIEt0KCl7Y29uc3QgZT0vYW5kcm9pZC9pO3JldHVybiBlLnRlc3QoQnQoKSl8fGUudGVzdChWdCgpKX1mdW5jdGlvbiBIdCgpe3JldHVybiBCdCgpLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChcIm1hY1wiKSYmIW5hdmlnYXRvci5tYXhUb3VjaFBvaW50c31mdW5jdGlvbiBxdChlLHQpe2NvbnN0IG49W1wibW91c2VcIixcInBlblwiXTtyZXR1cm4gdHx8bi5wdXNoKFwiXCIsdm9pZCAwKSxuLmluY2x1ZGVzKGUpfWZ1bmN0aW9uIFl0KGUpe3JldHVybihudWxsPT1lP3ZvaWQgMDplLm93bmVyRG9jdW1lbnQpfHxkb2N1bWVudH1mdW5jdGlvbiBHdChlLHQpe2lmKG51bGw9PXQpcmV0dXJuITE7aWYoXCJjb21wb3NlZFBhdGhcImluIGUpcmV0dXJuIGUuY29tcG9zZWRQYXRoKCkuaW5jbHVkZXModCk7Y29uc3Qgbj1lO3JldHVybiBudWxsIT1uLnRhcmdldCYmdC5jb250YWlucyhuLnRhcmdldCl9ZnVuY3Rpb24gWHQoZSl7cmV0dXJuXCJjb21wb3NlZFBhdGhcImluIGU/ZS5jb21wb3NlZFBhdGgoKVswXTplLnRhcmdldH1jb25zdCBKdD1cImlucHV0Om5vdChbdHlwZT0naGlkZGVuJ10pOm5vdChbZGlzYWJsZWRdKSxbY29udGVudGVkaXRhYmxlXTpub3QoW2NvbnRlbnRlZGl0YWJsZT0nZmFsc2UnXSksdGV4dGFyZWE6bm90KFtkaXNhYmxlZF0pXCI7ZnVuY3Rpb24gWnQoZSl7cmV0dXJuIF90KGUpJiZlLm1hdGNoZXMoSnQpfWZ1bmN0aW9uIFF0KGUpe2UucHJldmVudERlZmF1bHQoKSxlLnN0b3BQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIGVuKGUpe3JldHVybiEhZSYmXCJjb21ib2JveFwiPT09ZS5nZXRBdHRyaWJ1dGUoXCJyb2xlXCIpJiZadChlKX1jb25zdCB0bj1NYXRoLm1pbixubj1NYXRoLm1heCxybj1NYXRoLnJvdW5kLG9uPU1hdGguZmxvb3Isc249ZT0+KHt4OmUseTplfSksYW49e2xlZnQ6XCJyaWdodFwiLHJpZ2h0OlwibGVmdFwiLGJvdHRvbTpcInRvcFwiLHRvcDpcImJvdHRvbVwifSxsbj17c3RhcnQ6XCJlbmRcIixlbmQ6XCJzdGFydFwifTtmdW5jdGlvbiBjbihlLHQsbil7cmV0dXJuIG5uKGUsdG4odCxuKSl9ZnVuY3Rpb24gdW4oZSx0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UodCk6ZX1mdW5jdGlvbiBkbihlKXtyZXR1cm4gZS5zcGxpdChcIi1cIilbMF19ZnVuY3Rpb24gZm4oZSl7cmV0dXJuIGUuc3BsaXQoXCItXCIpWzFdfWZ1bmN0aW9uIGhuKGUpe3JldHVyblwieFwiPT09ZT9cInlcIjpcInhcIn1mdW5jdGlvbiBwbihlKXtyZXR1cm5cInlcIj09PWU/XCJoZWlnaHRcIjpcIndpZHRoXCJ9ZnVuY3Rpb24gbW4oZSl7cmV0dXJuW1widG9wXCIsXCJib3R0b21cIl0uaW5jbHVkZXMoZG4oZSkpP1wieVwiOlwieFwifWZ1bmN0aW9uIGduKGUpe3JldHVybiBobihtbihlKSl9ZnVuY3Rpb24gdm4oZSl7cmV0dXJuIGUucmVwbGFjZSgvc3RhcnR8ZW5kL2csKGU9PmxuW2VdKSl9ZnVuY3Rpb24geW4oZSl7cmV0dXJuIGUucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csKGU9PmFuW2VdKSl9ZnVuY3Rpb24gYm4oZSl7cmV0dXJuXCJudW1iZXJcIiE9dHlwZW9mIGU/ZnVuY3Rpb24oZSl7cmV0dXJue3RvcDowLHJpZ2h0OjAsYm90dG9tOjAsbGVmdDowLC4uLmV9fShlKTp7dG9wOmUscmlnaHQ6ZSxib3R0b206ZSxsZWZ0OmV9fWZ1bmN0aW9uIHhuKGUpe2NvbnN0e3g6dCx5Om4sd2lkdGg6cixoZWlnaHQ6b309ZTtyZXR1cm57d2lkdGg6cixoZWlnaHQ6byx0b3A6bixsZWZ0OnQscmlnaHQ6dCtyLGJvdHRvbTpuK28seDp0LHk6bn19dmFyIHduPVtcImlucHV0Om5vdChbaW5lcnRdKVwiLFwic2VsZWN0Om5vdChbaW5lcnRdKVwiLFwidGV4dGFyZWE6bm90KFtpbmVydF0pXCIsXCJhW2hyZWZdOm5vdChbaW5lcnRdKVwiLFwiYnV0dG9uOm5vdChbaW5lcnRdKVwiLFwiW3RhYmluZGV4XTpub3Qoc2xvdCk6bm90KFtpbmVydF0pXCIsXCJhdWRpb1tjb250cm9sc106bm90KFtpbmVydF0pXCIsXCJ2aWRlb1tjb250cm9sc106bm90KFtpbmVydF0pXCIsJ1tjb250ZW50ZWRpdGFibGVdOm5vdChbY29udGVudGVkaXRhYmxlPVwiZmFsc2VcIl0pOm5vdChbaW5lcnRdKScsXCJkZXRhaWxzPnN1bW1hcnk6Zmlyc3Qtb2YtdHlwZTpub3QoW2luZXJ0XSlcIixcImRldGFpbHM6bm90KFtpbmVydF0pXCJdLmpvaW4oXCIsXCIpLEVuPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBFbGVtZW50LFNuPUVuP2Z1bmN0aW9uKCl7fTpFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzfHxFbGVtZW50LnByb3RvdHlwZS5tc01hdGNoZXNTZWxlY3Rvcnx8RWxlbWVudC5wcm90b3R5cGUud2Via2l0TWF0Y2hlc1NlbGVjdG9yLGtuPSFFbiYmRWxlbWVudC5wcm90b3R5cGUuZ2V0Um9vdE5vZGU/ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuIG51bGw9PWV8fG51bGw9PT0odD1lLmdldFJvb3ROb2RlKXx8dm9pZCAwPT09dD92b2lkIDA6dC5jYWxsKGUpfTpmdW5jdGlvbihlKXtyZXR1cm4gbnVsbD09ZT92b2lkIDA6ZS5vd25lckRvY3VtZW50fSxDbj1mdW5jdGlvbiBlKHQsbil7dmFyIHI7dm9pZCAwPT09biYmKG49ITApO3ZhciBvPW51bGw9PXR8fG51bGw9PT0ocj10LmdldEF0dHJpYnV0ZSl8fHZvaWQgMD09PXI/dm9pZCAwOnIuY2FsbCh0LFwiaW5lcnRcIik7cmV0dXJuXCJcIj09PW98fFwidHJ1ZVwiPT09b3x8biYmdCYmZSh0LnBhcmVudE5vZGUpfSxQbj1mdW5jdGlvbiBlKHQsbixyKXtmb3IodmFyIG89W10saT1BcnJheS5mcm9tKHQpO2kubGVuZ3RoOyl7dmFyIHM9aS5zaGlmdCgpO2lmKCFDbihzLCExKSlpZihcIlNMT1RcIj09PXMudGFnTmFtZSl7dmFyIGE9cy5hc3NpZ25lZEVsZW1lbnRzKCksbD1lKGEubGVuZ3RoP2E6cy5jaGlsZHJlbiwhMCxyKTtyLmZsYXR0ZW4/by5wdXNoLmFwcGx5KG8sbCk6by5wdXNoKHtzY29wZVBhcmVudDpzLGNhbmRpZGF0ZXM6bH0pfWVsc2V7U24uY2FsbChzLHduKSYmci5maWx0ZXIocykmJihufHwhdC5pbmNsdWRlcyhzKSkmJm8ucHVzaChzKTt2YXIgYz1zLnNoYWRvd1Jvb3R8fFwiZnVuY3Rpb25cIj09dHlwZW9mIHIuZ2V0U2hhZG93Um9vdCYmci5nZXRTaGFkb3dSb290KHMpLHU9IUNuKGMsITEpJiYoIXIuc2hhZG93Um9vdEZpbHRlcnx8ci5zaGFkb3dSb290RmlsdGVyKHMpKTtpZihjJiZ1KXt2YXIgZD1lKCEwPT09Yz9zLmNoaWxkcmVuOmMuY2hpbGRyZW4sITAscik7ci5mbGF0dGVuP28ucHVzaC5hcHBseShvLGQpOm8ucHVzaCh7c2NvcGVQYXJlbnQ6cyxjYW5kaWRhdGVzOmR9KX1lbHNlIGkudW5zaGlmdC5hcHBseShpLHMuY2hpbGRyZW4pfX1yZXR1cm4gb30sVG49ZnVuY3Rpb24oZSl7cmV0dXJuIWlzTmFOKHBhcnNlSW50KGUuZ2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIiksMTApKX0sT249ZnVuY3Rpb24oZSl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKFwiTm8gbm9kZSBwcm92aWRlZFwiKTtyZXR1cm4gZS50YWJJbmRleDwwJiYoL14oQVVESU98VklERU98REVUQUlMUykkLy50ZXN0KGUudGFnTmFtZSl8fGZ1bmN0aW9uKGUpe3ZhciB0LG49bnVsbD09ZXx8bnVsbD09PSh0PWUuZ2V0QXR0cmlidXRlKXx8dm9pZCAwPT09dD92b2lkIDA6dC5jYWxsKGUsXCJjb250ZW50ZWRpdGFibGVcIik7cmV0dXJuXCJcIj09PW58fFwidHJ1ZVwiPT09bn0oZSkpJiYhVG4oZSk/MDplLnRhYkluZGV4fSxSbj1mdW5jdGlvbihlLHQpe3JldHVybiBlLnRhYkluZGV4PT09dC50YWJJbmRleD9lLmRvY3VtZW50T3JkZXItdC5kb2N1bWVudE9yZGVyOmUudGFiSW5kZXgtdC50YWJJbmRleH0sTm49ZnVuY3Rpb24oZSl7cmV0dXJuXCJJTlBVVFwiPT09ZS50YWdOYW1lfSxBbj1mdW5jdGlvbihlKXt2YXIgdD1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG49dC53aWR0aCxyPXQuaGVpZ2h0O3JldHVybiAwPT09biYmMD09PXJ9LGpuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuISh0LmRpc2FibGVkfHxDbih0KXx8ZnVuY3Rpb24oZSl7cmV0dXJuIE5uKGUpJiZcImhpZGRlblwiPT09ZS50eXBlfSh0KXx8ZnVuY3Rpb24oZSx0KXt2YXIgbj10LmRpc3BsYXlDaGVjayxyPXQuZ2V0U2hhZG93Um9vdDtpZihcImhpZGRlblwiPT09Z2V0Q29tcHV0ZWRTdHlsZShlKS52aXNpYmlsaXR5KXJldHVybiEwO3ZhciBvPVNuLmNhbGwoZSxcImRldGFpbHM+c3VtbWFyeTpmaXJzdC1vZi10eXBlXCIpP2UucGFyZW50RWxlbWVudDplO2lmKFNuLmNhbGwobyxcImRldGFpbHM6bm90KFtvcGVuXSkgKlwiKSlyZXR1cm4hMDtpZihuJiZcImZ1bGxcIiE9PW4mJlwibGVnYWN5LWZ1bGxcIiE9PW4pe2lmKFwibm9uLXplcm8tYXJlYVwiPT09bilyZXR1cm4gQW4oZSl9ZWxzZXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByKXtmb3IodmFyIGk9ZTtlOyl7dmFyIHM9ZS5wYXJlbnRFbGVtZW50LGE9a24oZSk7aWYocyYmIXMuc2hhZG93Um9vdCYmITA9PT1yKHMpKXJldHVybiBBbihlKTtlPWUuYXNzaWduZWRTbG90P2UuYXNzaWduZWRTbG90OnN8fGE9PT1lLm93bmVyRG9jdW1lbnQ/czphLmhvc3R9ZT1pfWlmKGZ1bmN0aW9uKGUpe3ZhciB0LG4scixvLGk9ZSYma24oZSkscz1udWxsPT09KHQ9aSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuaG9zdCxhPSExO2lmKGkmJmkhPT1lKWZvcihhPSEhKG51bGwhPT0obj1zKSYmdm9pZCAwIT09biYmbnVsbCE9PShyPW4ub3duZXJEb2N1bWVudCkmJnZvaWQgMCE9PXImJnIuY29udGFpbnMocyl8fG51bGwhPWUmJm51bGwhPT0obz1lLm93bmVyRG9jdW1lbnQpJiZ2b2lkIDAhPT1vJiZvLmNvbnRhaW5zKGUpKTshYSYmczspe3ZhciBsLGMsdTthPSEobnVsbD09PShjPXM9bnVsbD09PShsPWk9a24ocykpfHx2b2lkIDA9PT1sP3ZvaWQgMDpsLmhvc3QpfHx2b2lkIDA9PT1jfHxudWxsPT09KHU9Yy5vd25lckRvY3VtZW50KXx8dm9pZCAwPT09dXx8IXUuY29udGFpbnMocykpfXJldHVybiBhfShlKSlyZXR1cm4hZS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aDtpZihcImxlZ2FjeS1mdWxsXCIhPT1uKXJldHVybiEwfXJldHVybiExfSh0LGUpfHxmdW5jdGlvbihlKXtyZXR1cm5cIkRFVEFJTFNcIj09PWUudGFnTmFtZSYmQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGUuY2hpbGRyZW4pLnNvbWUoKGZ1bmN0aW9uKGUpe3JldHVyblwiU1VNTUFSWVwiPT09ZS50YWdOYW1lfSkpfSh0KXx8ZnVuY3Rpb24oZSl7aWYoL14oSU5QVVR8QlVUVE9OfFNFTEVDVHxURVhUQVJFQSkkLy50ZXN0KGUudGFnTmFtZSkpZm9yKHZhciB0PWUucGFyZW50RWxlbWVudDt0Oyl7aWYoXCJGSUVMRFNFVFwiPT09dC50YWdOYW1lJiZ0LmRpc2FibGVkKXtmb3IodmFyIG49MDtuPHQuY2hpbGRyZW4ubGVuZ3RoO24rKyl7dmFyIHI9dC5jaGlsZHJlbi5pdGVtKG4pO2lmKFwiTEVHRU5EXCI9PT1yLnRhZ05hbWUpcmV0dXJuISFTbi5jYWxsKHQsXCJmaWVsZHNldFtkaXNhYmxlZF0gKlwiKXx8IXIuY29udGFpbnMoZSl9cmV0dXJuITB9dD10LnBhcmVudEVsZW1lbnR9cmV0dXJuITF9KHQpKX0sTW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4hKGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gTm4oZSkmJlwicmFkaW9cIj09PWUudHlwZX0oZSkmJiFmdW5jdGlvbihlKXtpZighZS5uYW1lKXJldHVybiEwO3ZhciB0LG49ZS5mb3JtfHxrbihlKSxyPWZ1bmN0aW9uKGUpe3JldHVybiBuLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJyYWRpb1wiXVtuYW1lPVwiJytlKydcIl0nKX07aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmdm9pZCAwIT09d2luZG93LkNTUyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygd2luZG93LkNTUy5lc2NhcGUpdD1yKHdpbmRvdy5DU1MuZXNjYXBlKGUubmFtZSkpO2Vsc2UgdHJ5e3Q9cihlLm5hbWUpfWNhdGNoKGUpe3JldHVybiBjb25zb2xlLmVycm9yKFwiTG9va3MgbGlrZSB5b3UgaGF2ZSBhIHJhZGlvIGJ1dHRvbiB3aXRoIGEgbmFtZSBhdHRyaWJ1dGUgY29udGFpbmluZyBpbnZhbGlkIENTUyBzZWxlY3RvciBjaGFyYWN0ZXJzIGFuZCBuZWVkIHRoZSBDU1MuZXNjYXBlIHBvbHlmaWxsOiAlc1wiLGUubWVzc2FnZSksITF9dmFyIG89ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKylpZihlW25dLmNoZWNrZWQmJmVbbl0uZm9ybT09PXQpcmV0dXJuIGVbbl19KHQsZS5mb3JtKTtyZXR1cm4hb3x8bz09PWV9KGUpfSh0KXx8T24odCk8MHx8IWpuKGUsdCkpfSxJbj1mdW5jdGlvbihlKXt2YXIgdD1wYXJzZUludChlLmdldEF0dHJpYnV0ZShcInRhYmluZGV4XCIpLDEwKTtyZXR1cm4hIShpc05hTih0KXx8dD49MCl9LERuPWZ1bmN0aW9uIGUodCl7dmFyIG49W10scj1bXTtyZXR1cm4gdC5mb3JFYWNoKChmdW5jdGlvbih0LG8pe3ZhciBpPSEhdC5zY29wZVBhcmVudCxzPWk/dC5zY29wZVBhcmVudDp0LGE9ZnVuY3Rpb24oZSx0KXt2YXIgbj1PbihlKTtyZXR1cm4gbjwwJiZ0JiYhVG4oZSk/MDpufShzLGkpLGw9aT9lKHQuY2FuZGlkYXRlcyk6czswPT09YT9pP24ucHVzaC5hcHBseShuLGwpOm4ucHVzaChzKTpyLnB1c2goe2RvY3VtZW50T3JkZXI6byx0YWJJbmRleDphLGl0ZW06dCxpc1Njb3BlOmksY29udGVudDpsfSl9KSksci5zb3J0KFJuKS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuaXNTY29wZT9lLnB1c2guYXBwbHkoZSx0LmNvbnRlbnQpOmUucHVzaCh0LmNvbnRlbnQpLGV9KSxbXSkuY29uY2F0KG4pfSxMbj1mdW5jdGlvbihlLHQpe3ZhciBuO3JldHVybiBuPSh0PXR8fHt9KS5nZXRTaGFkb3dSb290P1BuKFtlXSx0LmluY2x1ZGVDb250YWluZXIse2ZpbHRlcjpNbi5iaW5kKG51bGwsdCksZmxhdHRlbjohMSxnZXRTaGFkb3dSb290OnQuZ2V0U2hhZG93Um9vdCxzaGFkb3dSb290RmlsdGVyOklufSk6ZnVuY3Rpb24oZSx0LG4pe2lmKENuKGUpKXJldHVybltdO3ZhciByPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShlLnF1ZXJ5U2VsZWN0b3JBbGwod24pKTtyZXR1cm4gdCYmU24uY2FsbChlLHduKSYmci51bnNoaWZ0KGUpLHIuZmlsdGVyKG4pfShlLHQuaW5jbHVkZUNvbnRhaW5lcixNbi5iaW5kKG51bGwsdCkpLERuKG4pfSxGbj1mdW5jdGlvbihlLHQpe2lmKHQ9dHx8e30sIWUpdGhyb3cgbmV3IEVycm9yKFwiTm8gbm9kZSBwcm92aWRlZFwiKTtyZXR1cm4hMSE9PVNuLmNhbGwoZSx3bikmJk1uKHQsZSl9LHpuPXdpbmRvdy5SZWFjdERPTTtmdW5jdGlvbiBCbihlLHQsbil7bGV0e3JlZmVyZW5jZTpyLGZsb2F0aW5nOm99PWU7Y29uc3QgaT1tbih0KSxzPWduKHQpLGE9cG4ocyksbD1kbih0KSxjPVwieVwiPT09aSx1PXIueCtyLndpZHRoLzItby53aWR0aC8yLGQ9ci55K3IuaGVpZ2h0LzItby5oZWlnaHQvMixmPXJbYV0vMi1vW2FdLzI7bGV0IGg7c3dpdGNoKGwpe2Nhc2VcInRvcFwiOmg9e3g6dSx5OnIueS1vLmhlaWdodH07YnJlYWs7Y2FzZVwiYm90dG9tXCI6aD17eDp1LHk6ci55K3IuaGVpZ2h0fTticmVhaztjYXNlXCJyaWdodFwiOmg9e3g6ci54K3Iud2lkdGgseTpkfTticmVhaztjYXNlXCJsZWZ0XCI6aD17eDpyLngtby53aWR0aCx5OmR9O2JyZWFrO2RlZmF1bHQ6aD17eDpyLngseTpyLnl9fXN3aXRjaChmbih0KSl7Y2FzZVwic3RhcnRcIjpoW3NdLT1mKihuJiZjPy0xOjEpO2JyZWFrO2Nhc2VcImVuZFwiOmhbc10rPWYqKG4mJmM/LTE6MSl9cmV0dXJuIGh9YXN5bmMgZnVuY3Rpb24gVm4oZSx0KXt2YXIgbjt2b2lkIDA9PT10JiYodD17fSk7Y29uc3R7eDpyLHk6byxwbGF0Zm9ybTppLHJlY3RzOnMsZWxlbWVudHM6YSxzdHJhdGVneTpsfT1lLHtib3VuZGFyeTpjPVwiY2xpcHBpbmdBbmNlc3RvcnNcIixyb290Qm91bmRhcnk6dT1cInZpZXdwb3J0XCIsZWxlbWVudENvbnRleHQ6ZD1cImZsb2F0aW5nXCIsYWx0Qm91bmRhcnk6Zj0hMSxwYWRkaW5nOmg9MH09dW4odCxlKSxwPWJuKGgpLG09YVtmP1wiZmxvYXRpbmdcIj09PWQ/XCJyZWZlcmVuY2VcIjpcImZsb2F0aW5nXCI6ZF0sZz14bihhd2FpdCBpLmdldENsaXBwaW5nUmVjdCh7ZWxlbWVudDpudWxsPT0obj1hd2FpdChudWxsPT1pLmlzRWxlbWVudD92b2lkIDA6aS5pc0VsZW1lbnQobSkpKXx8bj9tOm0uY29udGV4dEVsZW1lbnR8fGF3YWl0KG51bGw9PWkuZ2V0RG9jdW1lbnRFbGVtZW50P3ZvaWQgMDppLmdldERvY3VtZW50RWxlbWVudChhLmZsb2F0aW5nKSksYm91bmRhcnk6Yyxyb290Qm91bmRhcnk6dSxzdHJhdGVneTpsfSkpLHY9XCJmbG9hdGluZ1wiPT09ZD97eDpyLHk6byx3aWR0aDpzLmZsb2F0aW5nLndpZHRoLGhlaWdodDpzLmZsb2F0aW5nLmhlaWdodH06cy5yZWZlcmVuY2UseT1hd2FpdChudWxsPT1pLmdldE9mZnNldFBhcmVudD92b2lkIDA6aS5nZXRPZmZzZXRQYXJlbnQoYS5mbG9hdGluZykpLGI9YXdhaXQobnVsbD09aS5pc0VsZW1lbnQ/dm9pZCAwOmkuaXNFbGVtZW50KHkpKSYmYXdhaXQobnVsbD09aS5nZXRTY2FsZT92b2lkIDA6aS5nZXRTY2FsZSh5KSl8fHt4OjEseToxfSx4PXhuKGkuY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3Q/YXdhaXQgaS5jb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdCh7ZWxlbWVudHM6YSxyZWN0OnYsb2Zmc2V0UGFyZW50Onksc3RyYXRlZ3k6bH0pOnYpO3JldHVybnt0b3A6KGcudG9wLXgudG9wK3AudG9wKS9iLnksYm90dG9tOih4LmJvdHRvbS1nLmJvdHRvbStwLmJvdHRvbSkvYi55LGxlZnQ6KGcubGVmdC14LmxlZnQrcC5sZWZ0KS9iLngscmlnaHQ6KHgucmlnaHQtZy5yaWdodCtwLnJpZ2h0KS9iLnh9fWZ1bmN0aW9uIFduKGUpe2NvbnN0IHQ9QXQoZSk7bGV0IG49cGFyc2VGbG9hdCh0LndpZHRoKXx8MCxyPXBhcnNlRmxvYXQodC5oZWlnaHQpfHwwO2NvbnN0IG89X3QoZSksaT1vP2Uub2Zmc2V0V2lkdGg6bixzPW8/ZS5vZmZzZXRIZWlnaHQ6cixhPXJuKG4pIT09aXx8cm4ocikhPT1zO3JldHVybiBhJiYobj1pLHI9cykse3dpZHRoOm4saGVpZ2h0OnIsJDphfX1mdW5jdGlvbiBVbihlKXtyZXR1cm4gU3QoZSk/ZTplLmNvbnRleHRFbGVtZW50fWZ1bmN0aW9uICRuKGUpe2NvbnN0IHQ9VW4oZSk7aWYoIV90KHQpKXJldHVybiBzbigxKTtjb25zdCBuPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkse3dpZHRoOnIsaGVpZ2h0Om8sJDppfT1Xbih0KTtsZXQgcz0oaT9ybihuLndpZHRoKTpuLndpZHRoKS9yLGE9KGk/cm4obi5oZWlnaHQpOm4uaGVpZ2h0KS9vO3JldHVybiBzJiZOdW1iZXIuaXNGaW5pdGUocyl8fChzPTEpLGEmJk51bWJlci5pc0Zpbml0ZShhKXx8KGE9MSkse3g6cyx5OmF9fWNvbnN0IEtuPXNuKDApO2Z1bmN0aW9uIEhuKGUpe2NvbnN0IHQ9eHQoZSk7cmV0dXJuIFJ0KCkmJnQudmlzdWFsVmlld3BvcnQ/e3g6dC52aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0LHk6dC52aXN1YWxWaWV3cG9ydC5vZmZzZXRUb3B9OktufWZ1bmN0aW9uIHFuKGUsdCxuLHIpe3ZvaWQgMD09PXQmJih0PSExKSx2b2lkIDA9PT1uJiYobj0hMSk7Y29uc3Qgbz1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGk9VW4oZSk7bGV0IHM9c24oMSk7dCYmKHI/U3QocikmJihzPSRuKHIpKTpzPSRuKGUpKTtjb25zdCBhPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9ITEpLCEoIW58fHQmJm4hPT14dChlKSkmJnR9KGksbixyKT9IbihpKTpzbigwKTtsZXQgbD0oby5sZWZ0K2EueCkvcy54LGM9KG8udG9wK2EueSkvcy55LHU9by53aWR0aC9zLngsZD1vLmhlaWdodC9zLnk7aWYoaSl7Y29uc3QgZT14dChpKSx0PXImJlN0KHIpP3h0KHIpOnI7bGV0IG49ZSxvPUx0KG4pO2Zvcig7byYmciYmdCE9PW47KXtjb25zdCBlPSRuKG8pLHQ9by5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxyPUF0KG8pLGk9dC5sZWZ0KyhvLmNsaWVudExlZnQrcGFyc2VGbG9hdChyLnBhZGRpbmdMZWZ0KSkqZS54LHM9dC50b3ArKG8uY2xpZW50VG9wK3BhcnNlRmxvYXQoci5wYWRkaW5nVG9wKSkqZS55O2wqPWUueCxjKj1lLnksdSo9ZS54LGQqPWUueSxsKz1pLGMrPXMsbj14dChvKSxvPUx0KG4pfX1yZXR1cm4geG4oe3dpZHRoOnUsaGVpZ2h0OmQseDpsLHk6Y30pfWZ1bmN0aW9uIFluKGUpe3JldHVybiBxbih3dChlKSkubGVmdCtqdChlKS5zY3JvbGxMZWZ0fWZ1bmN0aW9uIEduKGUsdCxuKXtsZXQgcjtpZihcInZpZXdwb3J0XCI9PT10KXI9ZnVuY3Rpb24oZSx0KXtjb25zdCBuPXh0KGUpLHI9d3QoZSksbz1uLnZpc3VhbFZpZXdwb3J0O2xldCBpPXIuY2xpZW50V2lkdGgscz1yLmNsaWVudEhlaWdodCxhPTAsbD0wO2lmKG8pe2k9by53aWR0aCxzPW8uaGVpZ2h0O2NvbnN0IGU9UnQoKTsoIWV8fGUmJlwiZml4ZWRcIj09PXQpJiYoYT1vLm9mZnNldExlZnQsbD1vLm9mZnNldFRvcCl9cmV0dXJue3dpZHRoOmksaGVpZ2h0OnMseDphLHk6bH19KGUsbik7ZWxzZSBpZihcImRvY3VtZW50XCI9PT10KXI9ZnVuY3Rpb24oZSl7Y29uc3QgdD13dChlKSxuPWp0KGUpLHI9ZS5vd25lckRvY3VtZW50LmJvZHksbz1ubih0LnNjcm9sbFdpZHRoLHQuY2xpZW50V2lkdGgsci5zY3JvbGxXaWR0aCxyLmNsaWVudFdpZHRoKSxpPW5uKHQuc2Nyb2xsSGVpZ2h0LHQuY2xpZW50SGVpZ2h0LHIuc2Nyb2xsSGVpZ2h0LHIuY2xpZW50SGVpZ2h0KTtsZXQgcz0tbi5zY3JvbGxMZWZ0K1luKGUpO2NvbnN0IGE9LW4uc2Nyb2xsVG9wO3JldHVyblwicnRsXCI9PT1BdChyKS5kaXJlY3Rpb24mJihzKz1ubih0LmNsaWVudFdpZHRoLHIuY2xpZW50V2lkdGgpLW8pLHt3aWR0aDpvLGhlaWdodDppLHg6cyx5OmF9fSh3dChlKSk7ZWxzZSBpZihTdCh0KSlyPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1xbihlLCEwLFwiZml4ZWRcIj09PXQpLHI9bi50b3ArZS5jbGllbnRUb3Asbz1uLmxlZnQrZS5jbGllbnRMZWZ0LGk9X3QoZSk/JG4oZSk6c24oMSk7cmV0dXJue3dpZHRoOmUuY2xpZW50V2lkdGgqaS54LGhlaWdodDplLmNsaWVudEhlaWdodCppLnkseDpvKmkueCx5OnIqaS55fX0odCxuKTtlbHNle2NvbnN0IG49SG4oZSk7cj17Li4udCx4OnQueC1uLngseTp0Lnktbi55fX1yZXR1cm4geG4ocil9ZnVuY3Rpb24gWG4oZSx0KXtjb25zdCBuPU10KGUpO3JldHVybiEobj09PXR8fCFTdChuKXx8TnQobikpJiYoXCJmaXhlZFwiPT09QXQobikucG9zaXRpb258fFhuKG4sdCkpfWZ1bmN0aW9uIEpuKGUsdCxuKXtjb25zdCByPV90KHQpLG89d3QodCksaT1cImZpeGVkXCI9PT1uLHM9cW4oZSwhMCxpLHQpO2xldCBhPXtzY3JvbGxMZWZ0OjAsc2Nyb2xsVG9wOjB9O2NvbnN0IGw9c24oMCk7aWYocnx8IXImJiFpKWlmKChcImJvZHlcIiE9PWJ0KHQpfHxDdChvKSkmJihhPWp0KHQpKSxyKXtjb25zdCBlPXFuKHQsITAsaSx0KTtsLng9ZS54K3QuY2xpZW50TGVmdCxsLnk9ZS55K3QuY2xpZW50VG9wfWVsc2UgbyYmKGwueD1ZbihvKSk7cmV0dXJue3g6cy5sZWZ0K2Euc2Nyb2xsTGVmdC1sLngseTpzLnRvcCthLnNjcm9sbFRvcC1sLnksd2lkdGg6cy53aWR0aCxoZWlnaHQ6cy5oZWlnaHR9fWZ1bmN0aW9uIFpuKGUpe3JldHVyblwic3RhdGljXCI9PT1BdChlKS5wb3NpdGlvbn1mdW5jdGlvbiBRbihlLHQpe3JldHVybiBfdChlKSYmXCJmaXhlZFwiIT09QXQoZSkucG9zaXRpb24/dD90KGUpOmUub2Zmc2V0UGFyZW50Om51bGx9ZnVuY3Rpb24gZXIoZSx0KXtjb25zdCBuPXh0KGUpO2lmKFR0KGUpKXJldHVybiBuO2lmKCFfdChlKSl7bGV0IHQ9TXQoZSk7Zm9yKDt0JiYhTnQodCk7KXtpZihTdCh0KSYmIVpuKHQpKXJldHVybiB0O3Q9TXQodCl9cmV0dXJuIG59bGV0IHI9UW4oZSx0KTtmb3IoO3ImJlB0KHIpJiZabihyKTspcj1RbihyLHQpO3JldHVybiByJiZOdChyKSYmWm4ocikmJiFPdChyKT9uOnJ8fGZ1bmN0aW9uKGUpe2xldCB0PU10KGUpO2Zvcig7X3QodCkmJiFOdCh0KTspe2lmKE90KHQpKXJldHVybiB0O2lmKFR0KHQpKXJldHVybiBudWxsO3Q9TXQodCl9cmV0dXJuIG51bGx9KGUpfHxufWNvbnN0IHRyPXtjb252ZXJ0T2Zmc2V0UGFyZW50UmVsYXRpdmVSZWN0VG9WaWV3cG9ydFJlbGF0aXZlUmVjdDpmdW5jdGlvbihlKXtsZXR7ZWxlbWVudHM6dCxyZWN0Om4sb2Zmc2V0UGFyZW50OnIsc3RyYXRlZ3k6b309ZTtjb25zdCBpPVwiZml4ZWRcIj09PW8scz13dChyKSxhPSEhdCYmVHQodC5mbG9hdGluZyk7aWYocj09PXN8fGEmJmkpcmV0dXJuIG47bGV0IGw9e3Njcm9sbExlZnQ6MCxzY3JvbGxUb3A6MH0sYz1zbigxKTtjb25zdCB1PXNuKDApLGQ9X3Qocik7aWYoKGR8fCFkJiYhaSkmJigoXCJib2R5XCIhPT1idChyKXx8Q3QocykpJiYobD1qdChyKSksX3QocikpKXtjb25zdCBlPXFuKHIpO2M9JG4ociksdS54PWUueCtyLmNsaWVudExlZnQsdS55PWUueStyLmNsaWVudFRvcH1yZXR1cm57d2lkdGg6bi53aWR0aCpjLngsaGVpZ2h0Om4uaGVpZ2h0KmMueSx4Om4ueCpjLngtbC5zY3JvbGxMZWZ0KmMueCt1LngseTpuLnkqYy55LWwuc2Nyb2xsVG9wKmMueSt1Lnl9fSxnZXREb2N1bWVudEVsZW1lbnQ6d3QsZ2V0Q2xpcHBpbmdSZWN0OmZ1bmN0aW9uKGUpe2xldHtlbGVtZW50OnQsYm91bmRhcnk6bixyb290Qm91bmRhcnk6cixzdHJhdGVneTpvfT1lO2NvbnN0IGk9Wy4uLlwiY2xpcHBpbmdBbmNlc3RvcnNcIj09PW4/VHQodCk/W106ZnVuY3Rpb24oZSx0KXtjb25zdCBuPXQuZ2V0KGUpO2lmKG4pcmV0dXJuIG47bGV0IHI9RHQoZSxbXSwhMSkuZmlsdGVyKChlPT5TdChlKSYmXCJib2R5XCIhPT1idChlKSkpLG89bnVsbDtjb25zdCBpPVwiZml4ZWRcIj09PUF0KGUpLnBvc2l0aW9uO2xldCBzPWk/TXQoZSk6ZTtmb3IoO1N0KHMpJiYhTnQocyk7KXtjb25zdCB0PUF0KHMpLG49T3Qocyk7bnx8XCJmaXhlZFwiIT09dC5wb3NpdGlvbnx8KG89bnVsbCksKGk/IW4mJiFvOiFuJiZcInN0YXRpY1wiPT09dC5wb3NpdGlvbiYmbyYmW1wiYWJzb2x1dGVcIixcImZpeGVkXCJdLmluY2x1ZGVzKG8ucG9zaXRpb24pfHxDdChzKSYmIW4mJlhuKGUscykpP3I9ci5maWx0ZXIoKGU9PmUhPT1zKSk6bz10LHM9TXQocyl9cmV0dXJuIHQuc2V0KGUscikscn0odCx0aGlzLl9jKTpbXS5jb25jYXQobikscl0scz1pWzBdLGE9aS5yZWR1Y2UoKChlLG4pPT57Y29uc3Qgcj1Hbih0LG4sbyk7cmV0dXJuIGUudG9wPW5uKHIudG9wLGUudG9wKSxlLnJpZ2h0PXRuKHIucmlnaHQsZS5yaWdodCksZS5ib3R0b209dG4oci5ib3R0b20sZS5ib3R0b20pLGUubGVmdD1ubihyLmxlZnQsZS5sZWZ0KSxlfSksR24odCxzLG8pKTtyZXR1cm57d2lkdGg6YS5yaWdodC1hLmxlZnQsaGVpZ2h0OmEuYm90dG9tLWEudG9wLHg6YS5sZWZ0LHk6YS50b3B9fSxnZXRPZmZzZXRQYXJlbnQ6ZXIsZ2V0RWxlbWVudFJlY3RzOmFzeW5jIGZ1bmN0aW9uKGUpe2NvbnN0IHQ9dGhpcy5nZXRPZmZzZXRQYXJlbnR8fGVyLG49dGhpcy5nZXREaW1lbnNpb25zLHI9YXdhaXQgbihlLmZsb2F0aW5nKTtyZXR1cm57cmVmZXJlbmNlOkpuKGUucmVmZXJlbmNlLGF3YWl0IHQoZS5mbG9hdGluZyksZS5zdHJhdGVneSksZmxvYXRpbmc6e3g6MCx5OjAsd2lkdGg6ci53aWR0aCxoZWlnaHQ6ci5oZWlnaHR9fX0sZ2V0Q2xpZW50UmVjdHM6ZnVuY3Rpb24oZSl7cmV0dXJuIEFycmF5LmZyb20oZS5nZXRDbGllbnRSZWN0cygpKX0sZ2V0RGltZW5zaW9uczpmdW5jdGlvbihlKXtjb25zdHt3aWR0aDp0LGhlaWdodDpufT1XbihlKTtyZXR1cm57d2lkdGg6dCxoZWlnaHQ6bn19LGdldFNjYWxlOiRuLGlzRWxlbWVudDpTdCxpc1JUTDpmdW5jdGlvbihlKXtyZXR1cm5cInJ0bFwiPT09QXQoZSkuZGlyZWN0aW9ufX07ZnVuY3Rpb24gbnIoZSx0LG4scil7dm9pZCAwPT09ciYmKHI9e30pO2NvbnN0e2FuY2VzdG9yU2Nyb2xsOm89ITAsYW5jZXN0b3JSZXNpemU6aT0hMCxlbGVtZW50UmVzaXplOnM9XCJmdW5jdGlvblwiPT10eXBlb2YgUmVzaXplT2JzZXJ2ZXIsbGF5b3V0U2hpZnQ6YT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBJbnRlcnNlY3Rpb25PYnNlcnZlcixhbmltYXRpb25GcmFtZTpsPSExfT1yLGM9VW4oZSksdT1vfHxpP1suLi5jP0R0KGMpOltdLC4uLkR0KHQpXTpbXTt1LmZvckVhY2goKGU9PntvJiZlLmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixuLHtwYXNzaXZlOiEwfSksaSYmZS5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsbil9KSk7Y29uc3QgZD1jJiZhP2Z1bmN0aW9uKGUsdCl7bGV0IG4scj1udWxsO2NvbnN0IG89d3QoZSk7ZnVuY3Rpb24gaSgpe3ZhciBlO2NsZWFyVGltZW91dChuKSxudWxsPT0oZT1yKXx8ZS5kaXNjb25uZWN0KCkscj1udWxsfXJldHVybiBmdW5jdGlvbiBzKGEsbCl7dm9pZCAwPT09YSYmKGE9ITEpLHZvaWQgMD09PWwmJihsPTEpLGkoKTtjb25zdHtsZWZ0OmMsdG9wOnUsd2lkdGg6ZCxoZWlnaHQ6Zn09ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZihhfHx0KCksIWR8fCFmKXJldHVybjtjb25zdCBoPXtyb290TWFyZ2luOi1vbih1KStcInB4IFwiKy1vbihvLmNsaWVudFdpZHRoLShjK2QpKStcInB4IFwiKy1vbihvLmNsaWVudEhlaWdodC0odStmKSkrXCJweCBcIistb24oYykrXCJweFwiLHRocmVzaG9sZDpubigwLHRuKDEsbCkpfHwxfTtsZXQgcD0hMDtmdW5jdGlvbiBtKGUpe2NvbnN0IHQ9ZVswXS5pbnRlcnNlY3Rpb25SYXRpbztpZih0IT09bCl7aWYoIXApcmV0dXJuIHMoKTt0P3MoITEsdCk6bj1zZXRUaW1lb3V0KCgoKT0+e3MoITEsMWUtNyl9KSwxZTMpfXA9ITF9dHJ5e3I9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKG0sey4uLmgscm9vdDpvLm93bmVyRG9jdW1lbnR9KX1jYXRjaChlKXtyPW5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihtLGgpfXIub2JzZXJ2ZShlKX0oITApLGl9KGMsbik6bnVsbDtsZXQgZixoPS0xLHA9bnVsbDtzJiYocD1uZXcgUmVzaXplT2JzZXJ2ZXIoKGU9PntsZXRbcl09ZTtyJiZyLnRhcmdldD09PWMmJnAmJihwLnVub2JzZXJ2ZSh0KSxjYW5jZWxBbmltYXRpb25GcmFtZShoKSxoPXJlcXVlc3RBbmltYXRpb25GcmFtZSgoKCk9Pnt2YXIgZTtudWxsPT0oZT1wKXx8ZS5vYnNlcnZlKHQpfSkpKSxuKCl9KSksYyYmIWwmJnAub2JzZXJ2ZShjKSxwLm9ic2VydmUodCkpO2xldCBtPWw/cW4oZSk6bnVsbDtyZXR1cm4gbCYmZnVuY3Rpb24gdCgpe2NvbnN0IHI9cW4oZSk7IW18fHIueD09PW0ueCYmci55PT09bS55JiZyLndpZHRoPT09bS53aWR0aCYmci5oZWlnaHQ9PT1tLmhlaWdodHx8bigpLG09cixmPXJlcXVlc3RBbmltYXRpb25GcmFtZSh0KX0oKSxuKCksKCk9Pnt2YXIgZTt1LmZvckVhY2goKGU9PntvJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixuKSxpJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixuKX0pKSxudWxsPT1kfHxkKCksbnVsbD09KGU9cCl8fGUuZGlzY29ubmVjdCgpLHA9bnVsbCxsJiZjYW5jZWxBbmltYXRpb25GcmFtZShmKX19Y29uc3QgcnI9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPTApLHtuYW1lOlwib2Zmc2V0XCIsb3B0aW9uczplLGFzeW5jIGZuKHQpe3ZhciBuLHI7Y29uc3R7eDpvLHk6aSxwbGFjZW1lbnQ6cyxtaWRkbGV3YXJlRGF0YTphfT10LGw9YXdhaXQgYXN5bmMgZnVuY3Rpb24oZSx0KXtjb25zdHtwbGFjZW1lbnQ6bixwbGF0Zm9ybTpyLGVsZW1lbnRzOm99PWUsaT1hd2FpdChudWxsPT1yLmlzUlRMP3ZvaWQgMDpyLmlzUlRMKG8uZmxvYXRpbmcpKSxzPWRuKG4pLGE9Zm4obiksbD1cInlcIj09PW1uKG4pLGM9W1wibGVmdFwiLFwidG9wXCJdLmluY2x1ZGVzKHMpPy0xOjEsdT1pJiZsPy0xOjEsZD11bih0LGUpO2xldHttYWluQXhpczpmLGNyb3NzQXhpczpoLGFsaWdubWVudEF4aXM6cH09XCJudW1iZXJcIj09dHlwZW9mIGQ/e21haW5BeGlzOmQsY3Jvc3NBeGlzOjAsYWxpZ25tZW50QXhpczpudWxsfTp7bWFpbkF4aXM6MCxjcm9zc0F4aXM6MCxhbGlnbm1lbnRBeGlzOm51bGwsLi4uZH07cmV0dXJuIGEmJlwibnVtYmVyXCI9PXR5cGVvZiBwJiYoaD1cImVuZFwiPT09YT8tMSpwOnApLGw/e3g6aCp1LHk6ZipjfTp7eDpmKmMseTpoKnV9fSh0LGUpO3JldHVybiBzPT09KG51bGw9PShuPWEub2Zmc2V0KT92b2lkIDA6bi5wbGFjZW1lbnQpJiZudWxsIT0ocj1hLmFycm93KSYmci5hbGlnbm1lbnRPZmZzZXQ/e306e3g6bytsLngseTppK2wueSxkYXRhOnsuLi5sLHBsYWNlbWVudDpzfX19fX0sb3I9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPXt9KSx7bmFtZTpcInNoaWZ0XCIsb3B0aW9uczplLGFzeW5jIGZuKHQpe2NvbnN0e3g6bix5OnIscGxhY2VtZW50Om99PXQse21haW5BeGlzOmk9ITAsY3Jvc3NBeGlzOnM9ITEsbGltaXRlcjphPXtmbjplPT57bGV0e3g6dCx5Om59PWU7cmV0dXJue3g6dCx5Om59fX0sLi4ubH09dW4oZSx0KSxjPXt4Om4seTpyfSx1PWF3YWl0IFZuKHQsbCksZD1tbihkbihvKSksZj1obihkKTtsZXQgaD1jW2ZdLHA9Y1tkXTtpZihpKXtjb25zdCBlPVwieVwiPT09Zj9cImJvdHRvbVwiOlwicmlnaHRcIjtoPWNuKGgrdVtcInlcIj09PWY/XCJ0b3BcIjpcImxlZnRcIl0saCxoLXVbZV0pfWlmKHMpe2NvbnN0IGU9XCJ5XCI9PT1kP1wiYm90dG9tXCI6XCJyaWdodFwiO3A9Y24ocCt1W1wieVwiPT09ZD9cInRvcFwiOlwibGVmdFwiXSxwLHAtdVtlXSl9Y29uc3QgbT1hLmZuKHsuLi50LFtmXTpoLFtkXTpwfSk7cmV0dXJuey4uLm0sZGF0YTp7eDptLngtbix5Om0ueS1yfX19fX0saXI9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPXt9KSx7bmFtZTpcImZsaXBcIixvcHRpb25zOmUsYXN5bmMgZm4odCl7dmFyIG4scjtjb25zdHtwbGFjZW1lbnQ6byxtaWRkbGV3YXJlRGF0YTppLHJlY3RzOnMsaW5pdGlhbFBsYWNlbWVudDphLHBsYXRmb3JtOmwsZWxlbWVudHM6Y309dCx7bWFpbkF4aXM6dT0hMCxjcm9zc0F4aXM6ZD0hMCxmYWxsYmFja1BsYWNlbWVudHM6ZixmYWxsYmFja1N0cmF0ZWd5Omg9XCJiZXN0Rml0XCIsZmFsbGJhY2tBeGlzU2lkZURpcmVjdGlvbjpwPVwibm9uZVwiLGZsaXBBbGlnbm1lbnQ6bT0hMCwuLi5nfT11bihlLHQpO2lmKG51bGwhPShuPWkuYXJyb3cpJiZuLmFsaWdubWVudE9mZnNldClyZXR1cm57fTtjb25zdCB2PWRuKG8pLHk9bW4oYSksYj1kbihhKT09PWEseD1hd2FpdChudWxsPT1sLmlzUlRMP3ZvaWQgMDpsLmlzUlRMKGMuZmxvYXRpbmcpKSx3PWZ8fChifHwhbT9beW4oYSldOmZ1bmN0aW9uKGUpe2NvbnN0IHQ9eW4oZSk7cmV0dXJuW3ZuKGUpLHQsdm4odCldfShhKSksRT1cIm5vbmVcIiE9PXA7IWYmJkUmJncucHVzaCguLi5mdW5jdGlvbihlLHQsbixyKXtjb25zdCBvPWZuKGUpO2xldCBpPWZ1bmN0aW9uKGUsdCxuKXtjb25zdCByPVtcImxlZnRcIixcInJpZ2h0XCJdLG89W1wicmlnaHRcIixcImxlZnRcIl0saT1bXCJ0b3BcIixcImJvdHRvbVwiXSxzPVtcImJvdHRvbVwiLFwidG9wXCJdO3N3aXRjaChlKXtjYXNlXCJ0b3BcIjpjYXNlXCJib3R0b21cIjpyZXR1cm4gbj90P286cjp0P3I6bztjYXNlXCJsZWZ0XCI6Y2FzZVwicmlnaHRcIjpyZXR1cm4gdD9pOnM7ZGVmYXVsdDpyZXR1cm5bXX19KGRuKGUpLFwic3RhcnRcIj09PW4scik7cmV0dXJuIG8mJihpPWkubWFwKChlPT5lK1wiLVwiK28pKSx0JiYoaT1pLmNvbmNhdChpLm1hcCh2bikpKSksaX0oYSxtLHAseCkpO2NvbnN0IFM9W2EsLi4ud10sXz1hd2FpdCBWbih0LGcpLGs9W107bGV0IEM9KG51bGw9PShyPWkuZmxpcCk/dm9pZCAwOnIub3ZlcmZsb3dzKXx8W107aWYodSYmay5wdXNoKF9bdl0pLGQpe2NvbnN0IGU9ZnVuY3Rpb24oZSx0LG4pe3ZvaWQgMD09PW4mJihuPSExKTtjb25zdCByPWZuKGUpLG89Z24oZSksaT1wbihvKTtsZXQgcz1cInhcIj09PW8/cj09PShuP1wiZW5kXCI6XCJzdGFydFwiKT9cInJpZ2h0XCI6XCJsZWZ0XCI6XCJzdGFydFwiPT09cj9cImJvdHRvbVwiOlwidG9wXCI7cmV0dXJuIHQucmVmZXJlbmNlW2ldPnQuZmxvYXRpbmdbaV0mJihzPXluKHMpKSxbcyx5bihzKV19KG8scyx4KTtrLnB1c2goX1tlWzBdXSxfW2VbMV1dKX1pZihDPVsuLi5DLHtwbGFjZW1lbnQ6byxvdmVyZmxvd3M6a31dLCFrLmV2ZXJ5KChlPT5lPD0wKSkpe3ZhciBQLFQ7Y29uc3QgZT0oKG51bGw9PShQPWkuZmxpcCk/dm9pZCAwOlAuaW5kZXgpfHwwKSsxLHQ9U1tlXTtpZih0KXJldHVybntkYXRhOntpbmRleDplLG92ZXJmbG93czpDfSxyZXNldDp7cGxhY2VtZW50OnR9fTtsZXQgbj1udWxsPT0oVD1DLmZpbHRlcigoZT0+ZS5vdmVyZmxvd3NbMF08PTApKS5zb3J0KCgoZSx0KT0+ZS5vdmVyZmxvd3NbMV0tdC5vdmVyZmxvd3NbMV0pKVswXSk/dm9pZCAwOlQucGxhY2VtZW50O2lmKCFuKXN3aXRjaChoKXtjYXNlXCJiZXN0Rml0XCI6e3ZhciBPO2NvbnN0IGU9bnVsbD09KE89Qy5maWx0ZXIoKGU9PntpZihFKXtjb25zdCB0PW1uKGUucGxhY2VtZW50KTtyZXR1cm4gdD09PXl8fFwieVwiPT09dH1yZXR1cm4hMH0pKS5tYXAoKGU9PltlLnBsYWNlbWVudCxlLm92ZXJmbG93cy5maWx0ZXIoKGU9PmU+MCkpLnJlZHVjZSgoKGUsdCk9PmUrdCksMCldKSkuc29ydCgoKGUsdCk9PmVbMV0tdFsxXSkpWzBdKT92b2lkIDA6T1swXTtlJiYobj1lKTticmVha31jYXNlXCJpbml0aWFsUGxhY2VtZW50XCI6bj1hfWlmKG8hPT1uKXJldHVybntyZXNldDp7cGxhY2VtZW50Om59fX1yZXR1cm57fX19fSxzcj1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9e30pLHtuYW1lOlwic2l6ZVwiLG9wdGlvbnM6ZSxhc3luYyBmbih0KXtjb25zdHtwbGFjZW1lbnQ6bixyZWN0czpyLHBsYXRmb3JtOm8sZWxlbWVudHM6aX09dCx7YXBwbHk6cz0oKT0+e30sLi4uYX09dW4oZSx0KSxsPWF3YWl0IFZuKHQsYSksYz1kbihuKSx1PWZuKG4pLGQ9XCJ5XCI9PT1tbihuKSx7d2lkdGg6ZixoZWlnaHQ6aH09ci5mbG9hdGluZztsZXQgcCxtO1widG9wXCI9PT1jfHxcImJvdHRvbVwiPT09Yz8ocD1jLG09dT09PShhd2FpdChudWxsPT1vLmlzUlRMP3ZvaWQgMDpvLmlzUlRMKGkuZmxvYXRpbmcpKT9cInN0YXJ0XCI6XCJlbmRcIik/XCJsZWZ0XCI6XCJyaWdodFwiKToobT1jLHA9XCJlbmRcIj09PXU/XCJ0b3BcIjpcImJvdHRvbVwiKTtjb25zdCBnPWgtbC50b3AtbC5ib3R0b20sdj1mLWwubGVmdC1sLnJpZ2h0LHk9dG4oaC1sW3BdLGcpLGI9dG4oZi1sW21dLHYpLHg9IXQubWlkZGxld2FyZURhdGEuc2hpZnQ7bGV0IHc9eSxFPWI7aWYoZD9FPXV8fHg/dG4oYix2KTp2Onc9dXx8eD90bih5LGcpOmcseCYmIXUpe2NvbnN0IGU9bm4obC5sZWZ0LDApLHQ9bm4obC5yaWdodCwwKSxuPW5uKGwudG9wLDApLHI9bm4obC5ib3R0b20sMCk7ZD9FPWYtMiooMCE9PWV8fDAhPT10P2UrdDpubihsLmxlZnQsbC5yaWdodCkpOnc9aC0yKigwIT09bnx8MCE9PXI/bityOm5uKGwudG9wLGwuYm90dG9tKSl9YXdhaXQgcyh7Li4udCxhdmFpbGFibGVXaWR0aDpFLGF2YWlsYWJsZUhlaWdodDp3fSk7Y29uc3QgUz1hd2FpdCBvLmdldERpbWVuc2lvbnMoaS5mbG9hdGluZyk7cmV0dXJuIGYhPT1TLndpZHRofHxoIT09Uy5oZWlnaHQ/e3Jlc2V0OntyZWN0czohMH19Ont9fX19LGFyPWU9Pih7bmFtZTpcImFycm93XCIsb3B0aW9uczplLGFzeW5jIGZuKHQpe2NvbnN0e3g6bix5OnIscGxhY2VtZW50Om8scmVjdHM6aSxwbGF0Zm9ybTpzLGVsZW1lbnRzOmEsbWlkZGxld2FyZURhdGE6bH09dCx7ZWxlbWVudDpjLHBhZGRpbmc6dT0wfT11bihlLHQpfHx7fTtpZihudWxsPT1jKXJldHVybnt9O2NvbnN0IGQ9Ym4odSksZj17eDpuLHk6cn0saD1nbihvKSxwPXBuKGgpLG09YXdhaXQgcy5nZXREaW1lbnNpb25zKGMpLGc9XCJ5XCI9PT1oLHY9Zz9cInRvcFwiOlwibGVmdFwiLHk9Zz9cImJvdHRvbVwiOlwicmlnaHRcIixiPWc/XCJjbGllbnRIZWlnaHRcIjpcImNsaWVudFdpZHRoXCIseD1pLnJlZmVyZW5jZVtwXStpLnJlZmVyZW5jZVtoXS1mW2hdLWkuZmxvYXRpbmdbcF0sdz1mW2hdLWkucmVmZXJlbmNlW2hdLEU9YXdhaXQobnVsbD09cy5nZXRPZmZzZXRQYXJlbnQ/dm9pZCAwOnMuZ2V0T2Zmc2V0UGFyZW50KGMpKTtsZXQgUz1FP0VbYl06MDtTJiZhd2FpdChudWxsPT1zLmlzRWxlbWVudD92b2lkIDA6cy5pc0VsZW1lbnQoRSkpfHwoUz1hLmZsb2F0aW5nW2JdfHxpLmZsb2F0aW5nW3BdKTtjb25zdCBfPXgvMi13LzIsaz1TLzItbVtwXS8yLTEsQz10bihkW3ZdLGspLFA9dG4oZFt5XSxrKSxUPUMsTz1TLW1bcF0tUCxSPVMvMi1tW3BdLzIrXyxOPWNuKFQsUixPKSxBPSFsLmFycm93JiZudWxsIT1mbihvKSYmUiE9PU4mJmkucmVmZXJlbmNlW3BdLzItKFI8VD9DOlApLW1bcF0vMjwwLGo9QT9SPFQ/Ui1UOlItTzowO3JldHVybntbaF06ZltoXStqLGRhdGE6e1toXTpOLGNlbnRlck9mZnNldDpSLU4taiwuLi5BJiZ7YWxpZ25tZW50T2Zmc2V0Omp9fSxyZXNldDpBfX19KSxscj0oZSx0LG4pPT57Y29uc3Qgcj1uZXcgTWFwLG89e3BsYXRmb3JtOnRyLC4uLm59LGk9ey4uLm8ucGxhdGZvcm0sX2M6cn07cmV0dXJuKGFzeW5jKGUsdCxuKT0+e2NvbnN0e3BsYWNlbWVudDpyPVwiYm90dG9tXCIsc3RyYXRlZ3k6bz1cImFic29sdXRlXCIsbWlkZGxld2FyZTppPVtdLHBsYXRmb3JtOnN9PW4sYT1pLmZpbHRlcihCb29sZWFuKSxsPWF3YWl0KG51bGw9PXMuaXNSVEw/dm9pZCAwOnMuaXNSVEwodCkpO2xldCBjPWF3YWl0IHMuZ2V0RWxlbWVudFJlY3RzKHtyZWZlcmVuY2U6ZSxmbG9hdGluZzp0LHN0cmF0ZWd5Om99KSx7eDp1LHk6ZH09Qm4oYyxyLGwpLGY9cixoPXt9LHA9MDtmb3IobGV0IG49MDtuPGEubGVuZ3RoO24rKyl7Y29uc3R7bmFtZTppLGZuOm19PWFbbl0se3g6Zyx5OnYsZGF0YTp5LHJlc2V0OmJ9PWF3YWl0IG0oe3g6dSx5OmQsaW5pdGlhbFBsYWNlbWVudDpyLHBsYWNlbWVudDpmLHN0cmF0ZWd5Om8sbWlkZGxld2FyZURhdGE6aCxyZWN0czpjLHBsYXRmb3JtOnMsZWxlbWVudHM6e3JlZmVyZW5jZTplLGZsb2F0aW5nOnR9fSk7dT1udWxsIT1nP2c6dSxkPW51bGwhPXY/djpkLGg9ey4uLmgsW2ldOnsuLi5oW2ldLC4uLnl9fSxiJiZwPD01MCYmKHArKyxcIm9iamVjdFwiPT10eXBlb2YgYiYmKGIucGxhY2VtZW50JiYoZj1iLnBsYWNlbWVudCksYi5yZWN0cyYmKGM9ITA9PT1iLnJlY3RzP2F3YWl0IHMuZ2V0RWxlbWVudFJlY3RzKHtyZWZlcmVuY2U6ZSxmbG9hdGluZzp0LHN0cmF0ZWd5Om99KTpiLnJlY3RzKSwoe3g6dSx5OmR9PUJuKGMsZixsKSkpLG49LTEpfXJldHVybnt4OnUseTpkLHBsYWNlbWVudDpmLHN0cmF0ZWd5Om8sbWlkZGxld2FyZURhdGE6aH19KShlLHQsey4uLm8scGxhdGZvcm06aX0pfTt2YXIgY3I9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50P28udXNlTGF5b3V0RWZmZWN0Om8udXNlRWZmZWN0O2Z1bmN0aW9uIHVyKGUsdCl7aWYoZT09PXQpcmV0dXJuITA7aWYodHlwZW9mIGUhPXR5cGVvZiB0KXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJmUudG9TdHJpbmcoKT09PXQudG9TdHJpbmcoKSlyZXR1cm4hMDtsZXQgbixyLG87aWYoZSYmdCYmXCJvYmplY3RcIj09dHlwZW9mIGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2lmKG49ZS5sZW5ndGgsbiE9PXQubGVuZ3RoKXJldHVybiExO2ZvcihyPW47MCE9ci0tOylpZighdXIoZVtyXSx0W3JdKSlyZXR1cm4hMTtyZXR1cm4hMH1pZihvPU9iamVjdC5rZXlzKGUpLG49by5sZW5ndGgsbiE9PU9iamVjdC5rZXlzKHQpLmxlbmd0aClyZXR1cm4hMTtmb3Iocj1uOzAhPXItLTspaWYoIXt9Lmhhc093blByb3BlcnR5LmNhbGwodCxvW3JdKSlyZXR1cm4hMTtmb3Iocj1uOzAhPXItLTspe2NvbnN0IG49b1tyXTtpZighKFwiX293bmVyXCI9PT1uJiZlLiQkdHlwZW9mfHx1cihlW25dLHRbbl0pKSlyZXR1cm4hMX1yZXR1cm4hMH1yZXR1cm4gZSE9ZSYmdCE9dH1mdW5jdGlvbiBkcihlKXtyZXR1cm5cInVuZGVmaW5lZFwiPT10eXBlb2Ygd2luZG93PzE6KGUub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5kZXZpY2VQaXhlbFJhdGlvfHwxfWZ1bmN0aW9uIGZyKGUsdCl7Y29uc3Qgbj1kcihlKTtyZXR1cm4gTWF0aC5yb3VuZCh0Km4pL259ZnVuY3Rpb24gaHIoZSl7Y29uc3QgdD1vLnVzZVJlZihlKTtyZXR1cm4gY3IoKCgpPT57dC5jdXJyZW50PWV9KSksdH1jb25zdCBwcj1lPT4oe25hbWU6XCJhcnJvd1wiLG9wdGlvbnM6ZSxmbih0KXtjb25zdHtlbGVtZW50Om4scGFkZGluZzpyfT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UodCk6ZTtyZXR1cm4gbiYmKG89bix7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8sXCJjdXJyZW50XCIpKT9udWxsIT1uLmN1cnJlbnQ/YXIoe2VsZW1lbnQ6bi5jdXJyZW50LHBhZGRpbmc6cn0pLmZuKHQpOnt9Om4/YXIoe2VsZW1lbnQ6bixwYWRkaW5nOnJ9KS5mbih0KTp7fTt2YXIgb319KSxtcj0oZSx0KT0+KHsuLi5ycihlKSxvcHRpb25zOltlLHRdfSksZ3I9KGUsdCk9Pih7Li4uaXIoZSksb3B0aW9uczpbZSx0XX0pLHZyPShlLHQpPT4oey4uLnByKGUpLG9wdGlvbnM6W2UsdF19KSx5cj17Li4ub30sYnI9eXIudXNlSW5zZXJ0aW9uRWZmZWN0fHwoZT0+ZSgpKTtmdW5jdGlvbiB4cihlKXtjb25zdCB0PW8udXNlUmVmKCgoKT0+e30pKTtyZXR1cm4gYnIoKCgpPT57dC5jdXJyZW50PWV9KSksby51c2VDYWxsYmFjaygoZnVuY3Rpb24oKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyluW3JdPWFyZ3VtZW50c1tyXTtyZXR1cm4gbnVsbD09dC5jdXJyZW50P3ZvaWQgMDp0LmN1cnJlbnQoLi4ubil9KSxbXSl9Y29uc3Qgd3I9XCJBcnJvd1VwXCIsRXI9XCJBcnJvd0Rvd25cIixTcj1cIkFycm93TGVmdFwiLF9yPVwiQXJyb3dSaWdodFwiO2Z1bmN0aW9uIGtyKGUsdCxuKXtyZXR1cm4gTWF0aC5mbG9vcihlL3QpIT09bn1mdW5jdGlvbiBDcihlLHQpe3JldHVybiB0PDB8fHQ+PWUuY3VycmVudC5sZW5ndGh9ZnVuY3Rpb24gUHIoZSx0KXtyZXR1cm4gT3IoZSx7ZGlzYWJsZWRJbmRpY2VzOnR9KX1mdW5jdGlvbiBUcihlLHQpe3JldHVybiBPcihlLHtkZWNyZW1lbnQ6ITAsc3RhcnRpbmdJbmRleDplLmN1cnJlbnQubGVuZ3RoLGRpc2FibGVkSW5kaWNlczp0fSl9ZnVuY3Rpb24gT3IoZSx0KXtsZXR7c3RhcnRpbmdJbmRleDpuPS0xLGRlY3JlbWVudDpyPSExLGRpc2FibGVkSW5kaWNlczpvLGFtb3VudDppPTF9PXZvaWQgMD09PXQ/e306dDtjb25zdCBzPWUuY3VycmVudDtsZXQgYT1uO2Rve2ErPXI/LWk6aX13aGlsZShhPj0wJiZhPD1zLmxlbmd0aC0xJiZBcihzLGEsbykpO3JldHVybiBhfWZ1bmN0aW9uIFJyKGUsdCxuLHIsbyl7aWYoLTE9PT1lKXJldHVybi0xO2NvbnN0IGk9bi5pbmRleE9mKGUpLHM9dFtlXTtzd2l0Y2gobyl7Y2FzZVwidGxcIjpyZXR1cm4gaTtjYXNlXCJ0clwiOnJldHVybiBzP2krcy53aWR0aC0xOmk7Y2FzZVwiYmxcIjpyZXR1cm4gcz9pKyhzLmhlaWdodC0xKSpyOmk7Y2FzZVwiYnJcIjpyZXR1cm4gbi5sYXN0SW5kZXhPZihlKX19ZnVuY3Rpb24gTnIoZSx0KXtyZXR1cm4gdC5mbGF0TWFwKCgodCxuKT0+ZS5pbmNsdWRlcyh0KT9bbl06W10pKX1mdW5jdGlvbiBBcihlLHQsbil7aWYobilyZXR1cm4gbi5pbmNsdWRlcyh0KTtjb25zdCByPWVbdF07cmV0dXJuIG51bGw9PXJ8fHIuaGFzQXR0cmlidXRlKFwiZGlzYWJsZWRcIil8fFwidHJ1ZVwiPT09ci5nZXRBdHRyaWJ1dGUoXCJhcmlhLWRpc2FibGVkXCIpfWxldCBqcj0wO2Z1bmN0aW9uIE1yKGUsdCl7dm9pZCAwPT09dCYmKHQ9e30pO2NvbnN0e3ByZXZlbnRTY3JvbGw6bj0hMSxjYW5jZWxQcmV2aW91czpyPSEwLHN5bmM6bz0hMX09dDtyJiZjYW5jZWxBbmltYXRpb25GcmFtZShqcik7Y29uc3QgaT0oKT0+bnVsbD09ZT92b2lkIDA6ZS5mb2N1cyh7cHJldmVudFNjcm9sbDpufSk7bz9pKCk6anI9cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGkpfXZhciBJcj1cInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQ/by51c2VMYXlvdXRFZmZlY3Q6by51c2VFZmZlY3Q7ZnVuY3Rpb24gRHIoKXtyZXR1cm4gRHI9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxEci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9bGV0IExyPSExLEZyPTA7Y29uc3QgenI9KCk9PlwiZmxvYXRpbmctdWktXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiw2KStGcisrLEJyPXlyLnVzZUlkfHxmdW5jdGlvbigpe2NvbnN0W2UsdF09by51c2VTdGF0ZSgoKCk9PkxyP3pyKCk6dm9pZCAwKSk7cmV0dXJuIElyKCgoKT0+e251bGw9PWUmJnQoenIoKSl9KSxbXSksby51c2VFZmZlY3QoKCgpPT57THI9ITB9KSxbXSksZX0sVnI9by5mb3J3YXJkUmVmKChmdW5jdGlvbihlLHQpe2NvbnN0e2NvbnRleHQ6e3BsYWNlbWVudDpuLGVsZW1lbnRzOntmbG9hdGluZzpyfSxtaWRkbGV3YXJlRGF0YTp7YXJyb3c6aSxzaGlmdDpzfX0sd2lkdGg6YT0xNCxoZWlnaHQ6bD03LHRpcFJhZGl1czpjPTAsc3Ryb2tlV2lkdGg6dT0wLHN0YXRpY09mZnNldDpkLHN0cm9rZTpmLGQ6aCxzdHlsZTp7dHJhbnNmb3JtOnAsLi4ubX09e30sLi4uZ309ZSx2PUJyKCksW3ksYl09by51c2VTdGF0ZSghMSk7aWYoSXIoKCgpPT57ciYmXCJydGxcIj09PUF0KHIpLmRpcmVjdGlvbiYmYighMCl9KSxbcl0pLCFyKXJldHVybiBudWxsO2NvbnN0W3gsd109bi5zcGxpdChcIi1cIiksRT1cInRvcFwiPT09eHx8XCJib3R0b21cIj09PXg7bGV0IFM9ZDsoRSYmbnVsbCE9cyYmcy54fHwhRSYmbnVsbCE9cyYmcy55KSYmKFM9bnVsbCk7Y29uc3QgXz0yKnUsaz1fLzIsQz1hLzIqKGMvLTgrMSksUD1sLzIqYy80LFQ9ISFoLE89UyYmXCJlbmRcIj09PXc/XCJib3R0b21cIjpcInRvcFwiO2xldCBSPVMmJlwiZW5kXCI9PT13P1wicmlnaHRcIjpcImxlZnRcIjtTJiZ5JiYoUj1cImVuZFwiPT09dz9cImxlZnRcIjpcInJpZ2h0XCIpO2NvbnN0IE49bnVsbCE9KG51bGw9PWk/dm9pZCAwOmkueCk/U3x8aS54OlwiXCIsQT1udWxsIT0obnVsbD09aT92b2lkIDA6aS55KT9TfHxpLnk6XCJcIixqPWh8fFwiTTAsMCBIXCIrYStcIiBMXCIrKGEtQykrXCIsXCIrKGwtUCkrXCIgUVwiK2EvMitcIixcIitsK1wiIFwiK0MrXCIsXCIrKGwtUCkrXCIgWlwiLE09e3RvcDpUP1wicm90YXRlKDE4MGRlZylcIjpcIlwiLGxlZnQ6VD9cInJvdGF0ZSg5MGRlZylcIjpcInJvdGF0ZSgtOTBkZWcpXCIsYm90dG9tOlQ/XCJcIjpcInJvdGF0ZSgxODBkZWcpXCIscmlnaHQ6VD9cInJvdGF0ZSgtOTBkZWcpXCI6XCJyb3RhdGUoOTBkZWcpXCJ9W3hdO3JldHVybiBvLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIixEcih7fSxnLHtcImFyaWEtaGlkZGVuXCI6ITAscmVmOnQsd2lkdGg6VD9hOmErXyxoZWlnaHQ6YSx2aWV3Qm94OlwiMCAwIFwiK2ErXCIgXCIrKGw+YT9sOmEpLHN0eWxlOntwb3NpdGlvbjpcImFic29sdXRlXCIscG9pbnRlckV2ZW50czpcIm5vbmVcIixbUl06TixbT106QSxbeF06RXx8VD9cIjEwMCVcIjpcImNhbGMoMTAwJSAtIFwiK18vMitcInB4KVwiLHRyYW5zZm9ybTpcIlwiK00rKG51bGwhPXA/cDpcIlwiKSwuLi5tfX0pLF8+MCYmby5jcmVhdGVFbGVtZW50KFwicGF0aFwiLHtjbGlwUGF0aDpcInVybCgjXCIrditcIilcIixmaWxsOlwibm9uZVwiLHN0cm9rZTpmLHN0cm9rZVdpZHRoOl8rKGg/MDoxKSxkOmp9KSxvLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse3N0cm9rZTpfJiYhaD9nLmZpbGw6XCJub25lXCIsZDpqfSksby5jcmVhdGVFbGVtZW50KFwiY2xpcFBhdGhcIix7aWQ6dn0sby5jcmVhdGVFbGVtZW50KFwicmVjdFwiLHt4Oi1rLHk6ayooVD8tMToxKSx3aWR0aDphK18saGVpZ2h0OmF9KSkpfSkpO2NvbnN0IFdyPW8uY3JlYXRlQ29udGV4dChudWxsKSxVcj1vLmNyZWF0ZUNvbnRleHQobnVsbCksJHI9KCk9Pnt2YXIgZTtyZXR1cm4obnVsbD09KGU9by51c2VDb250ZXh0KFdyKSk/dm9pZCAwOmUuaWQpfHxudWxsfSxLcj0oKT0+by51c2VDb250ZXh0KFVyKTtmdW5jdGlvbiBIcihlKXtyZXR1cm5cImRhdGEtZmxvYXRpbmctdWktXCIrZX1mdW5jdGlvbiBxcihlKXtjb25zdCB0PSgwLG8udXNlUmVmKShlKTtyZXR1cm4gSXIoKCgpPT57dC5jdXJyZW50PWV9KSksdH1jb25zdCBZcj1IcihcInNhZmUtcG9seWdvblwiKTtmdW5jdGlvbiBHcihlLHQsbil7cmV0dXJuIG4mJiFxdChuKT8wOlwibnVtYmVyXCI9PXR5cGVvZiBlP2U6bnVsbD09ZT92b2lkIDA6ZVt0XX1mdW5jdGlvbiBYcihlLHQpe2xldCBuPWUuZmlsdGVyKChlPT57dmFyIG47cmV0dXJuIGUucGFyZW50SWQ9PT10JiYobnVsbD09KG49ZS5jb250ZXh0KT92b2lkIDA6bi5vcGVuKX0pKSxyPW47Zm9yKDtyLmxlbmd0aDspcj1lLmZpbHRlcigoZT0+e3ZhciB0O3JldHVybiBudWxsPT0odD1yKT92b2lkIDA6dC5zb21lKCh0PT57dmFyIG47cmV0dXJuIGUucGFyZW50SWQ9PT10LmlkJiYobnVsbD09KG49ZS5jb250ZXh0KT92b2lkIDA6bi5vcGVuKX0pKX0pKSxuPW4uY29uY2F0KHIpO3JldHVybiBufWxldCBKcj1uZXcgV2Vha01hcCxacj1uZXcgV2Vha1NldCxRcj17fSxlbz0wO2NvbnN0IHRvPWU9PmUmJihlLmhvc3R8fHRvKGUucGFyZW50Tm9kZSkpLG5vPShlLHQpPT50Lm1hcCgodD0+e2lmKGUuY29udGFpbnModCkpcmV0dXJuIHQ7Y29uc3Qgbj10byh0KTtyZXR1cm4gZS5jb250YWlucyhuKT9uOm51bGx9KSkuZmlsdGVyKChlPT5udWxsIT1lKSk7ZnVuY3Rpb24gcm8oZSx0LG4pe3ZvaWQgMD09PXQmJih0PSExKSx2b2lkIDA9PT1uJiYobj0hMSk7Y29uc3Qgcj1ZdChlWzBdKS5ib2R5O3JldHVybiBmdW5jdGlvbihlLHQsbixyKXtjb25zdCBvPVwiZGF0YS1mbG9hdGluZy11aS1pbmVydFwiLGk9cj9cImluZXJ0XCI6bj9cImFyaWEtaGlkZGVuXCI6bnVsbCxzPW5vKHQsZSksYT1uZXcgU2V0LGw9bmV3IFNldChzKSxjPVtdO1FyW29dfHwoUXJbb109bmV3IFdlYWtNYXApO2NvbnN0IHU9UXJbb107cmV0dXJuIHMuZm9yRWFjaCgoZnVuY3Rpb24gZSh0KXt0JiYhYS5oYXModCkmJihhLmFkZCh0KSx0LnBhcmVudE5vZGUmJmUodC5wYXJlbnROb2RlKSl9KSksZnVuY3Rpb24gZSh0KXt0JiYhbC5oYXModCkmJltdLmZvckVhY2guY2FsbCh0LmNoaWxkcmVuLCh0PT57aWYoXCJzY3JpcHRcIiE9PWJ0KHQpKWlmKGEuaGFzKHQpKWUodCk7ZWxzZXtjb25zdCBlPWk/dC5nZXRBdHRyaWJ1dGUoaSk6bnVsbCxuPW51bGwhPT1lJiZcImZhbHNlXCIhPT1lLHI9KEpyLmdldCh0KXx8MCkrMSxzPSh1LmdldCh0KXx8MCkrMTtKci5zZXQodCxyKSx1LnNldCh0LHMpLGMucHVzaCh0KSwxPT09ciYmbiYmWnIuYWRkKHQpLDE9PT1zJiZ0LnNldEF0dHJpYnV0ZShvLFwiXCIpLCFuJiZpJiZ0LnNldEF0dHJpYnV0ZShpLFwidHJ1ZVwiKX19KSl9KHQpLGEuY2xlYXIoKSxlbysrLCgpPT57Yy5mb3JFYWNoKChlPT57Y29uc3QgdD0oSnIuZ2V0KGUpfHwwKS0xLG49KHUuZ2V0KGUpfHwwKS0xO0pyLnNldChlLHQpLHUuc2V0KGUsbiksdHx8KCFaci5oYXMoZSkmJmkmJmUucmVtb3ZlQXR0cmlidXRlKGkpLFpyLmRlbGV0ZShlKSksbnx8ZS5yZW1vdmVBdHRyaWJ1dGUobyl9KSksZW8tLSxlb3x8KEpyPW5ldyBXZWFrTWFwLEpyPW5ldyBXZWFrTWFwLFpyPW5ldyBXZWFrU2V0LFFyPXt9KX19KGUuY29uY2F0KEFycmF5LmZyb20oci5xdWVyeVNlbGVjdG9yQWxsKFwiW2FyaWEtbGl2ZV1cIikpKSxyLHQsbil9Y29uc3Qgb289KCk9Pih7Z2V0U2hhZG93Um9vdDohMCxkaXNwbGF5Q2hlY2s6XCJmdW5jdGlvblwiPT10eXBlb2YgUmVzaXplT2JzZXJ2ZXImJlJlc2l6ZU9ic2VydmVyLnRvU3RyaW5nKCkuaW5jbHVkZXMoXCJbbmF0aXZlIGNvZGVdXCIpP1wiZnVsbFwiOlwibm9uZVwifSk7ZnVuY3Rpb24gaW8oZSx0KXtjb25zdCBuPUxuKGUsb28oKSk7XCJwcmV2XCI9PT10JiZuLnJldmVyc2UoKTtjb25zdCByPW4uaW5kZXhPZihGdChZdChlKSkpO3JldHVybiBuLnNsaWNlKHIrMSlbMF19ZnVuY3Rpb24gc28oKXtyZXR1cm4gaW8oZG9jdW1lbnQuYm9keSxcIm5leHRcIil9ZnVuY3Rpb24gYW8oKXtyZXR1cm4gaW8oZG9jdW1lbnQuYm9keSxcInByZXZcIil9ZnVuY3Rpb24gbG8oZSx0KXtjb25zdCBuPXR8fGUuY3VycmVudFRhcmdldCxyPWUucmVsYXRlZFRhcmdldDtyZXR1cm4hcnx8IXp0KG4scil9ZnVuY3Rpb24gY28oZSl7TG4oZSxvbygpKS5mb3JFYWNoKChlPT57ZS5kYXRhc2V0LnRhYmluZGV4PWUuZ2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIil8fFwiXCIsZS5zZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiLFwiLTFcIil9KSl9ZnVuY3Rpb24gdW8oZSl7ZS5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtdGFiaW5kZXhdXCIpLmZvckVhY2goKGU9Pntjb25zdCB0PWUuZGF0YXNldC50YWJpbmRleDtkZWxldGUgZS5kYXRhc2V0LnRhYmluZGV4LHQ/ZS5zZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiLHQpOmUucmVtb3ZlQXR0cmlidXRlKFwidGFiaW5kZXhcIil9KSl9Y29uc3QgZm89e2JvcmRlcjowLGNsaXA6XCJyZWN0KDAgMCAwIDApXCIsaGVpZ2h0OlwiMXB4XCIsbWFyZ2luOlwiLTFweFwiLG92ZXJmbG93OlwiaGlkZGVuXCIscGFkZGluZzowLHBvc2l0aW9uOlwiZml4ZWRcIix3aGl0ZVNwYWNlOlwibm93cmFwXCIsd2lkdGg6XCIxcHhcIix0b3A6MCxsZWZ0OjB9O2Z1bmN0aW9uIGhvKGUpe1wiVGFiXCI9PT1lLmtleSYmKGUudGFyZ2V0LGNsZWFyVGltZW91dCh2b2lkIDApKX1jb25zdCBwbz1vLmZvcndhcmRSZWYoKGZ1bmN0aW9uKGUsdCl7Y29uc3RbbixyXT1vLnVzZVN0YXRlKCk7SXIoKCgpPT4oJHQoKSYmcihcImJ1dHRvblwiKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGhvKSwoKT0+e2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsaG8pfSkpLFtdKTtjb25zdCBpPXtyZWY6dCx0YWJJbmRleDowLHJvbGU6bixcImFyaWEtaGlkZGVuXCI6IW58fHZvaWQgMCxbSHIoXCJmb2N1cy1ndWFyZFwiKV06XCJcIixzdHlsZTpmb307cmV0dXJuIG8uY3JlYXRlRWxlbWVudChcInNwYW5cIixEcih7fSxlLGkpKX0pKSxtbz1vLmNyZWF0ZUNvbnRleHQobnVsbCksZ289SHIoXCJwb3J0YWxcIik7ZnVuY3Rpb24gdm8oZSl7Y29uc3R7Y2hpbGRyZW46dCxpZDpuLHJvb3Q6cj1udWxsLHByZXNlcnZlVGFiT3JkZXI6aT0hMH09ZSxzPWZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPXt9KTtjb25zdHtpZDp0LHJvb3Q6bn09ZSxyPUJyKCksaT15bygpLFtzLGFdPW8udXNlU3RhdGUobnVsbCksbD1vLnVzZVJlZihudWxsKTtyZXR1cm4gSXIoKCgpPT4oKT0+e251bGw9PXN8fHMucmVtb3ZlKCkscXVldWVNaWNyb3Rhc2soKCgpPT57bC5jdXJyZW50PW51bGx9KSl9KSxbc10pLElyKCgoKT0+e2lmKCFyKXJldHVybjtpZihsLmN1cnJlbnQpcmV0dXJuO2NvbnN0IGU9dD9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KTpudWxsO2lmKCFlKXJldHVybjtjb25zdCBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bi5pZD1yLG4uc2V0QXR0cmlidXRlKGdvLFwiXCIpLGUuYXBwZW5kQ2hpbGQobiksbC5jdXJyZW50PW4sYShuKX0pLFt0LHJdKSxJcigoKCk9PntpZighcilyZXR1cm47aWYobC5jdXJyZW50KXJldHVybjtsZXQgZT1ufHwobnVsbD09aT92b2lkIDA6aS5wb3J0YWxOb2RlKTtlJiYhU3QoZSkmJihlPWUuY3VycmVudCksZT1lfHxkb2N1bWVudC5ib2R5O2xldCBvPW51bGw7dCYmKG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxvLmlkPXQsZS5hcHBlbmRDaGlsZChvKSk7Y29uc3Qgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3MuaWQ9cixzLnNldEF0dHJpYnV0ZShnbyxcIlwiKSxlPW98fGUsZS5hcHBlbmRDaGlsZChzKSxsLmN1cnJlbnQ9cyxhKHMpfSksW3QsbixyLGldKSxzfSh7aWQ6bixyb290OnJ9KSxbYSxsXT1vLnVzZVN0YXRlKG51bGwpLGM9by51c2VSZWYobnVsbCksdT1vLnVzZVJlZihudWxsKSxkPW8udXNlUmVmKG51bGwpLGY9by51c2VSZWYobnVsbCksaD1udWxsPT1hP3ZvaWQgMDphLm1vZGFsLHA9bnVsbD09YT92b2lkIDA6YS5vcGVuLG09ISFhJiYhYS5tb2RhbCYmYS5vcGVuJiZpJiYhKCFyJiYhcyk7cmV0dXJuIG8udXNlRWZmZWN0KCgoKT0+e2lmKHMmJmkmJiFoKXJldHVybiBzLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c2luXCIsZSwhMCkscy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNvdXRcIixlLCEwKSwoKT0+e3MucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3VzaW5cIixlLCEwKSxzLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c291dFwiLGUsITApfTtmdW5jdGlvbiBlKGUpe3MmJmxvKGUpJiYoXCJmb2N1c2luXCI9PT1lLnR5cGU/dW86Y28pKHMpfX0pLFtzLGksaF0pLG8udXNlRWZmZWN0KCgoKT0+e3MmJihwfHx1byhzKSl9KSxbcCxzXSksby5jcmVhdGVFbGVtZW50KG1vLlByb3ZpZGVyLHt2YWx1ZTpvLnVzZU1lbW8oKCgpPT4oe3ByZXNlcnZlVGFiT3JkZXI6aSxiZWZvcmVPdXRzaWRlUmVmOmMsYWZ0ZXJPdXRzaWRlUmVmOnUsYmVmb3JlSW5zaWRlUmVmOmQsYWZ0ZXJJbnNpZGVSZWY6Zixwb3J0YWxOb2RlOnMsc2V0Rm9jdXNNYW5hZ2VyU3RhdGU6bH0pKSxbaSxzXSl9LG0mJnMmJm8uY3JlYXRlRWxlbWVudChwbyx7XCJkYXRhLXR5cGVcIjpcIm91dHNpZGVcIixyZWY6YyxvbkZvY3VzOmU9PntpZihsbyhlLHMpKXt2YXIgdDtudWxsPT0odD1kLmN1cnJlbnQpfHx0LmZvY3VzKCl9ZWxzZXtjb25zdCBlPWFvKCl8fChudWxsPT1hP3ZvaWQgMDphLnJlZnMuZG9tUmVmZXJlbmNlLmN1cnJlbnQpO251bGw9PWV8fGUuZm9jdXMoKX19fSksbSYmcyYmby5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtcImFyaWEtb3duc1wiOnMuaWQsc3R5bGU6Zm99KSxzJiZ6bi5jcmVhdGVQb3J0YWwodCxzKSxtJiZzJiZvLmNyZWF0ZUVsZW1lbnQocG8se1wiZGF0YS10eXBlXCI6XCJvdXRzaWRlXCIscmVmOnUsb25Gb2N1czplPT57aWYobG8oZSxzKSl7dmFyIHQ7bnVsbD09KHQ9Zi5jdXJyZW50KXx8dC5mb2N1cygpfWVsc2V7Y29uc3QgdD1zbygpfHwobnVsbD09YT92b2lkIDA6YS5yZWZzLmRvbVJlZmVyZW5jZS5jdXJyZW50KTtudWxsPT10fHx0LmZvY3VzKCksKG51bGw9PWE/dm9pZCAwOmEuY2xvc2VPbkZvY3VzT3V0KSYmKG51bGw9PWF8fGEub25PcGVuQ2hhbmdlKCExLGUubmF0aXZlRXZlbnQsXCJmb2N1cy1vdXRcIikpfX19KSl9Y29uc3QgeW89KCk9Pm8udXNlQ29udGV4dChtbyksYm89XCJkYXRhLWZsb2F0aW5nLXVpLWZvY3VzYWJsZVwiO2Z1bmN0aW9uIHhvKGUpe3JldHVybiBlP2UuaGFzQXR0cmlidXRlKGJvKT9lOmUucXVlcnlTZWxlY3RvcihcIltcIitibytcIl1cIil8fGU6bnVsbH1jb25zdCB3bz0yMDtsZXQgRW89W107ZnVuY3Rpb24gU28oZSl7RW89RW8uZmlsdGVyKChlPT5lLmlzQ29ubmVjdGVkKSk7bGV0IHQ9ZTtpZih0JiZcImJvZHlcIiE9PWJ0KHQpKXtpZighRm4odCxvbygpKSl7Y29uc3QgZT1Mbih0LG9vKCkpWzBdO2UmJih0PWUpfUVvLnB1c2godCksRW8ubGVuZ3RoPndvJiYoRW89RW8uc2xpY2UoLXdvKSl9fWZ1bmN0aW9uIF9vKCl7cmV0dXJuIEVvLnNsaWNlKCkucmV2ZXJzZSgpLmZpbmQoKGU9PmUuaXNDb25uZWN0ZWQpKX1jb25zdCBrbz1vLmZvcndhcmRSZWYoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLERyKHt9LGUse3R5cGU6XCJidXR0b25cIixyZWY6dCx0YWJJbmRleDotMSxzdHlsZTpmb30pKX0pKTtmdW5jdGlvbiBDbyhlKXtjb25zdHtjb250ZXh0OnQsY2hpbGRyZW46bixkaXNhYmxlZDpyPSExLG9yZGVyOmk9W1wiY29udGVudFwiXSxndWFyZHM6cz0hMCxpbml0aWFsRm9jdXM6YT0wLHJldHVybkZvY3VzOmw9ITAscmVzdG9yZUZvY3VzOmM9ITEsbW9kYWw6dT0hMCx2aXN1YWxseUhpZGRlbkRpc21pc3M6ZD0hMSxjbG9zZU9uRm9jdXNPdXQ6Zj0hMH09ZSx7b3BlbjpoLHJlZnM6cCxub2RlSWQ6bSxvbk9wZW5DaGFuZ2U6ZyxldmVudHM6dixkYXRhUmVmOnksZmxvYXRpbmdJZDpiLGVsZW1lbnRzOntkb21SZWZlcmVuY2U6eCxmbG9hdGluZzp3fX09dCxFPVwibnVtYmVyXCI9PXR5cGVvZiBhJiZhPDAsUz1lbih4KSYmRSxfPSEoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEhUTUxFbGVtZW50JiZcImluZXJ0XCJpbiBIVE1MRWxlbWVudC5wcm90b3R5cGUpfHxzLGs9cXIoaSksQz1xcihhKSxQPXFyKGwpLFQ9S3IoKSxPPXlvKCksUj1vLnVzZVJlZihudWxsKSxOPW8udXNlUmVmKG51bGwpLEE9by51c2VSZWYoITEpLGo9by51c2VSZWYoITEpLE09by51c2VSZWYoLTEpLEk9bnVsbCE9TyxEPXhvKHcpLEw9eHIoKGZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1EKSxlP0xuKGUsb28oKSk6W119KSksRj14cigoZT0+e2NvbnN0IHQ9TChlKTtyZXR1cm4gay5jdXJyZW50Lm1hcCgoZT0+eCYmXCJyZWZlcmVuY2VcIj09PWU/eDpEJiZcImZsb2F0aW5nXCI9PT1lP0Q6dCkpLmZpbHRlcihCb29sZWFuKS5mbGF0KCl9KSk7ZnVuY3Rpb24geihlKXtyZXR1cm4hciYmZCYmdT9vLmNyZWF0ZUVsZW1lbnQoa28se3JlZjpcInN0YXJ0XCI9PT1lP1I6TixvbkNsaWNrOmU9PmcoITEsZS5uYXRpdmVFdmVudCl9LFwic3RyaW5nXCI9PXR5cGVvZiBkP2Q6XCJEaXNtaXNzXCIpOm51bGx9by51c2VFZmZlY3QoKCgpPT57QS5jdXJyZW50PSExfSksW3JdKSxvLnVzZUVmZmVjdCgoKCk9PntpZihyKXJldHVybjtpZighdSlyZXR1cm47ZnVuY3Rpb24gZShlKXtpZihcIlRhYlwiPT09ZS5rZXkpe3p0KEQsRnQoWXQoRCkpKSYmMD09PUwoKS5sZW5ndGgmJiFTJiZRdChlKTtjb25zdCB0PUYoKSxuPVh0KGUpO1wicmVmZXJlbmNlXCI9PT1rLmN1cnJlbnRbMF0mJm49PT14JiYoUXQoZSksZS5zaGlmdEtleT9Ncih0W3QubGVuZ3RoLTFdKTpNcih0WzFdKSksXCJmbG9hdGluZ1wiPT09ay5jdXJyZW50WzFdJiZuPT09RCYmZS5zaGlmdEtleSYmKFF0KGUpLE1yKHRbMF0pKX19Y29uc3QgdD1ZdChEKTtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGUpLCgpPT57dC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGUpfX0pLFtyLHgsRCx1LGssUyxMLEZdKSxvLnVzZUVmZmVjdCgoKCk9PntpZighciYmdylyZXR1cm4gdy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNpblwiLGUpLCgpPT57dy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZm9jdXNpblwiLGUpfTtmdW5jdGlvbiBlKGUpe2NvbnN0IHQ9WHQoZSksbj1MKCkuaW5kZXhPZih0KTstMSE9PW4mJihNLmN1cnJlbnQ9bil9fSksW3IsdyxMXSksby51c2VFZmZlY3QoKCgpPT57aWYoIXImJmYpcmV0dXJuIHcmJl90KHgpPyh4LmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c291dFwiLHQpLHguYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsZSksdy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNvdXRcIix0KSwoKT0+e3gucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImZvY3Vzb3V0XCIsdCkseC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIixlKSx3LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c291dFwiLHQpfSk6dm9pZCAwO2Z1bmN0aW9uIGUoKXtqLmN1cnJlbnQ9ITAsc2V0VGltZW91dCgoKCk9PntqLmN1cnJlbnQ9ITF9KSl9ZnVuY3Rpb24gdChlKXtjb25zdCB0PWUucmVsYXRlZFRhcmdldDtxdWV1ZU1pY3JvdGFzaygoKCk9Pntjb25zdCBuPSEoenQoeCx0KXx8enQodyx0KXx8enQodCx3KXx8enQobnVsbD09Tz92b2lkIDA6Ty5wb3J0YWxOb2RlLHQpfHxudWxsIT10JiZ0Lmhhc0F0dHJpYnV0ZShIcihcImZvY3VzLWd1YXJkXCIpKXx8VCYmKFhyKFQubm9kZXNSZWYuY3VycmVudCxtKS5maW5kKChlPT57dmFyIG4scjtyZXR1cm4genQobnVsbD09KG49ZS5jb250ZXh0KT92b2lkIDA6bi5lbGVtZW50cy5mbG9hdGluZyx0KXx8enQobnVsbD09KHI9ZS5jb250ZXh0KT92b2lkIDA6ci5lbGVtZW50cy5kb21SZWZlcmVuY2UsdCl9KSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG47bGV0IHI9W10sbz1udWxsPT0obj1lLmZpbmQoKGU9PmUuaWQ9PT10KSkpP3ZvaWQgMDpuLnBhcmVudElkO2Zvcig7bzspe2NvbnN0IHQ9ZS5maW5kKChlPT5lLmlkPT09bykpO289bnVsbD09dD92b2lkIDA6dC5wYXJlbnRJZCx0JiYocj1yLmNvbmNhdCh0KSl9cmV0dXJuIHJ9KFQubm9kZXNSZWYuY3VycmVudCxtKS5maW5kKChlPT57dmFyIG4scjtyZXR1cm4obnVsbD09KG49ZS5jb250ZXh0KT92b2lkIDA6bi5lbGVtZW50cy5mbG9hdGluZyk9PT10fHwobnVsbD09KHI9ZS5jb250ZXh0KT92b2lkIDA6ci5lbGVtZW50cy5kb21SZWZlcmVuY2UpPT09dH0pKSkpO2lmKGMmJm4mJkZ0KFl0KEQpKT09PVl0KEQpLmJvZHkpe190KEQpJiZELmZvY3VzKCk7Y29uc3QgZT1NLmN1cnJlbnQsdD1MKCksbj10W2VdfHx0W3QubGVuZ3RoLTFdfHxEO190KG4pJiZuLmZvY3VzKCl9IVMmJnV8fCF0fHwhbnx8ai5jdXJyZW50fHx0PT09X28oKXx8KEEuY3VycmVudD0hMCxnKCExLGUsXCJmb2N1cy1vdXRcIikpfSkpfX0pLFtyLHgsdyxELHUsbSxULE8sZyxmLGMsTCxTXSksby51c2VFZmZlY3QoKCgpPT57dmFyIGU7aWYocilyZXR1cm47Y29uc3QgdD1BcnJheS5mcm9tKChudWxsPT1PfHxudWxsPT0oZT1PLnBvcnRhbE5vZGUpP3ZvaWQgMDplLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbXCIrSHIoXCJwb3J0YWxcIikrXCJdXCIpKXx8W10pO2lmKHcpe2NvbnN0IGU9W3csLi4udCxSLmN1cnJlbnQsTi5jdXJyZW50LGsuY3VycmVudC5pbmNsdWRlcyhcInJlZmVyZW5jZVwiKXx8Uz94Om51bGxdLmZpbHRlcigoZT0+bnVsbCE9ZSkpLG49dXx8Uz9ybyhlLF8sIV8pOnJvKGUpO3JldHVybigpPT57bigpfX19KSxbcix4LHcsdSxrLE8sUyxfXSksSXIoKCgpPT57aWYocnx8IV90KEQpKXJldHVybjtjb25zdCBlPUZ0KFl0KEQpKTtxdWV1ZU1pY3JvdGFzaygoKCk9Pntjb25zdCB0PUYoRCksbj1DLmN1cnJlbnQscj0oXCJudW1iZXJcIj09dHlwZW9mIG4/dFtuXTpuLmN1cnJlbnQpfHxELG89enQoRCxlKTtFfHxvfHwhaHx8TXIocix7cHJldmVudFNjcm9sbDpyPT09RH0pfSkpfSksW3IsaCxELEUsRixDXSksSXIoKCgpPT57aWYocnx8IUQpcmV0dXJuO2xldCBlPSExO2NvbnN0IHQ9WXQoRCksbj1GdCh0KTtsZXQgbz15LmN1cnJlbnQub3BlbkV2ZW50O2NvbnN0IGk9cC5kb21SZWZlcmVuY2UuY3VycmVudDtmdW5jdGlvbiBzKHQpe2xldHtvcGVuOm4scmVhc29uOnIsZXZlbnQ6aSxuZXN0ZWQ6c309dDtuJiYobz1pKSxcImVzY2FwZS1rZXlcIj09PXImJnAuZG9tUmVmZXJlbmNlLmN1cnJlbnQmJlNvKHAuZG9tUmVmZXJlbmNlLmN1cnJlbnQpLFwiaG92ZXJcIj09PXImJlwibW91c2VsZWF2ZVwiPT09aS50eXBlJiYoQS5jdXJyZW50PSEwKSxcIm91dHNpZGUtcHJlc3NcIj09PXImJihzPyhBLmN1cnJlbnQ9ITEsZT0hMCk6QS5jdXJyZW50PSEoV3QoaSl8fFV0KGkpKSl9cmV0dXJuIFNvKG4pLHYub24oXCJvcGVuY2hhbmdlXCIscyksKCk9Pnt2Lm9mZihcIm9wZW5jaGFuZ2VcIixzKTtjb25zdCByPUZ0KHQpLGE9enQodyxyKXx8VCYmWHIoVC5ub2Rlc1JlZi5jdXJyZW50LG0pLnNvbWUoKGU9Pnt2YXIgdDtyZXR1cm4genQobnVsbD09KHQ9ZS5jb250ZXh0KT92b2lkIDA6dC5lbGVtZW50cy5mbG9hdGluZyxyKX0pKTsoYXx8byYmW1wiY2xpY2tcIixcIm1vdXNlZG93blwiXS5pbmNsdWRlcyhvLnR5cGUpKSYmcC5kb21SZWZlcmVuY2UuY3VycmVudCYmU28ocC5kb21SZWZlcmVuY2UuY3VycmVudCk7Y29uc3QgbD1pfHxuLGM9TG4oWXQobCkuYm9keSxvbygpKTtxdWV1ZU1pY3JvdGFzaygoKCk9PntsZXQgbj1fbygpOyFuJiZfdChsKSYmdyYmKG49ZnVuY3Rpb24oZSx0LG4pe2NvbnN0IHI9ZS5pbmRleE9mKHQpO2Z1bmN0aW9uIG8odCl7Y29uc3Qgbz1IcihcImZvY3VzLWd1YXJkXCIpO2xldCBpPXIrKHQ/MTowKSxzPWVbaV07Zm9yKDtzJiYoIXMuaXNDb25uZWN0ZWR8fHMuaGFzQXR0cmlidXRlKG8pfHx6dChuLHMpKTspdD9pKys6aS0tLHM9ZVtpXTtyZXR1cm4gc31yZXR1cm4gbyghMCl8fG8oITEpfShjLGwsdykpLFAuY3VycmVudCYmIUEuY3VycmVudCYmX3QobikmJihuPT09cnx8cj09PXQuYm9keXx8YSkmJm4uZm9jdXMoe3ByZXZlbnRTY3JvbGw6ZX0pfSkpfX0pLFtyLHcsRCxQLHkscCx2LFQsbV0pLElyKCgoKT0+e2lmKCFyJiZPKXJldHVybiBPLnNldEZvY3VzTWFuYWdlclN0YXRlKHttb2RhbDp1LGNsb3NlT25Gb2N1c091dDpmLG9wZW46aCxvbk9wZW5DaGFuZ2U6ZyxyZWZzOnB9KSwoKT0+e08uc2V0Rm9jdXNNYW5hZ2VyU3RhdGUobnVsbCl9fSksW3IsTyx1LGgsZyxwLGZdKSxJcigoKCk9PntpZihyKXJldHVybjtpZighRClyZXR1cm47aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgTXV0YXRpb25PYnNlcnZlcilyZXR1cm47aWYoRSlyZXR1cm47Y29uc3QgZT0oKT0+e2NvbnN0IGU9RC5nZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiKSx0PUwoKSxuPUZ0KFl0KHcpKSxyPXQuaW5kZXhPZihuKTstMSE9PXImJihNLmN1cnJlbnQ9ciksay5jdXJyZW50LmluY2x1ZGVzKFwiZmxvYXRpbmdcIil8fG4hPT1wLmRvbVJlZmVyZW5jZS5jdXJyZW50JiYwPT09dC5sZW5ndGg/XCIwXCIhPT1lJiZELnNldEF0dHJpYnV0ZShcInRhYmluZGV4XCIsXCIwXCIpOlwiLTFcIiE9PWUmJkQuc2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIixcIi0xXCIpfTtlKCk7Y29uc3QgdD1uZXcgTXV0YXRpb25PYnNlcnZlcihlKTtyZXR1cm4gdC5vYnNlcnZlKEQse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwLGF0dHJpYnV0ZXM6ITB9KSwoKT0+e3QuZGlzY29ubmVjdCgpfX0pLFtyLHcsRCxwLGssTCxFXSk7Y29uc3QgQj0hciYmXyYmKCF1fHwhUykmJihJfHx1KTtyZXR1cm4gby5jcmVhdGVFbGVtZW50KG8uRnJhZ21lbnQsbnVsbCxCJiZvLmNyZWF0ZUVsZW1lbnQocG8se1wiZGF0YS10eXBlXCI6XCJpbnNpZGVcIixyZWY6bnVsbD09Tz92b2lkIDA6Ty5iZWZvcmVJbnNpZGVSZWYsb25Gb2N1czplPT57aWYodSl7Y29uc3QgZT1GKCk7TXIoXCJyZWZlcmVuY2VcIj09PWlbMF0/ZVswXTplW2UubGVuZ3RoLTFdKX1lbHNlIGlmKG51bGwhPU8mJk8ucHJlc2VydmVUYWJPcmRlciYmTy5wb3J0YWxOb2RlKWlmKEEuY3VycmVudD0hMSxsbyhlLE8ucG9ydGFsTm9kZSkpe2NvbnN0IGU9c28oKXx8eDtudWxsPT1lfHxlLmZvY3VzKCl9ZWxzZXt2YXIgdDtudWxsPT0odD1PLmJlZm9yZU91dHNpZGVSZWYuY3VycmVudCl8fHQuZm9jdXMoKX19fSksIVMmJnooXCJzdGFydFwiKSxuLHooXCJlbmRcIiksQiYmby5jcmVhdGVFbGVtZW50KHBvLHtcImRhdGEtdHlwZVwiOlwiaW5zaWRlXCIscmVmOm51bGw9PU8/dm9pZCAwOk8uYWZ0ZXJJbnNpZGVSZWYsb25Gb2N1czplPT57aWYodSlNcihGKClbMF0pO2Vsc2UgaWYobnVsbCE9TyYmTy5wcmVzZXJ2ZVRhYk9yZGVyJiZPLnBvcnRhbE5vZGUpaWYoZiYmKEEuY3VycmVudD0hMCksbG8oZSxPLnBvcnRhbE5vZGUpKXtjb25zdCBlPWFvKCl8fHg7bnVsbD09ZXx8ZS5mb2N1cygpfWVsc2V7dmFyIHQ7bnVsbD09KHQ9Ty5hZnRlck91dHNpZGVSZWYuY3VycmVudCl8fHQuZm9jdXMoKX19fSkpfWZ1bmN0aW9uIFBvKGUpe3JldHVybiBfdChlLnRhcmdldCkmJlwiQlVUVE9OXCI9PT1lLnRhcmdldC50YWdOYW1lfWZ1bmN0aW9uIFRvKGUpe3JldHVybiBadChlKX1mdW5jdGlvbiBPbyhlLHQpe3ZvaWQgMD09PXQmJih0PXt9KTtjb25zdHtvcGVuOm4sb25PcGVuQ2hhbmdlOnIsZGF0YVJlZjppLGVsZW1lbnRzOntkb21SZWZlcmVuY2U6c319PWUse2VuYWJsZWQ6YT0hMCxldmVudDpsPVwiY2xpY2tcIix0b2dnbGU6Yz0hMCxpZ25vcmVNb3VzZTp1PSExLGtleWJvYXJkSGFuZGxlcnM6ZD0hMH09dCxmPW8udXNlUmVmKCksaD1vLnVzZVJlZighMSkscD1vLnVzZU1lbW8oKCgpPT4oe29uUG9pbnRlckRvd24oZSl7Zi5jdXJyZW50PWUucG9pbnRlclR5cGV9LG9uTW91c2VEb3duKGUpe2NvbnN0IHQ9Zi5jdXJyZW50OzA9PT1lLmJ1dHRvbiYmXCJjbGlja1wiIT09bCYmKHF0KHQsITApJiZ1fHwoIW58fCFjfHxpLmN1cnJlbnQub3BlbkV2ZW50JiZcIm1vdXNlZG93blwiIT09aS5jdXJyZW50Lm9wZW5FdmVudC50eXBlPyhlLnByZXZlbnREZWZhdWx0KCkscighMCxlLm5hdGl2ZUV2ZW50LFwiY2xpY2tcIikpOnIoITEsZS5uYXRpdmVFdmVudCxcImNsaWNrXCIpKSl9LG9uQ2xpY2soZSl7Y29uc3QgdD1mLmN1cnJlbnQ7XCJtb3VzZWRvd25cIj09PWwmJmYuY3VycmVudD9mLmN1cnJlbnQ9dm9pZCAwOnF0KHQsITApJiZ1fHwoIW58fCFjfHxpLmN1cnJlbnQub3BlbkV2ZW50JiZcImNsaWNrXCIhPT1pLmN1cnJlbnQub3BlbkV2ZW50LnR5cGU/cighMCxlLm5hdGl2ZUV2ZW50LFwiY2xpY2tcIik6cighMSxlLm5hdGl2ZUV2ZW50LFwiY2xpY2tcIikpfSxvbktleURvd24oZSl7Zi5jdXJyZW50PXZvaWQgMCxlLmRlZmF1bHRQcmV2ZW50ZWR8fCFkfHxQbyhlKXx8KFwiIFwiIT09ZS5rZXl8fFRvKHMpfHwoZS5wcmV2ZW50RGVmYXVsdCgpLGguY3VycmVudD0hMCksXCJFbnRlclwiPT09ZS5rZXkmJnIoIW58fCFjLGUubmF0aXZlRXZlbnQsXCJjbGlja1wiKSl9LG9uS2V5VXAoZSl7ZS5kZWZhdWx0UHJldmVudGVkfHwhZHx8UG8oZSl8fFRvKHMpfHxcIiBcIj09PWUua2V5JiZoLmN1cnJlbnQmJihoLmN1cnJlbnQ9ITEscighbnx8IWMsZS5uYXRpdmVFdmVudCxcImNsaWNrXCIpKX19KSksW2kscyxsLHUsZCxyLG4sY10pO3JldHVybiBvLnVzZU1lbW8oKCgpPT5hP3tyZWZlcmVuY2U6cH06e30pLFthLHBdKX1jb25zdCBSbz17cG9pbnRlcmRvd246XCJvblBvaW50ZXJEb3duXCIsbW91c2Vkb3duOlwib25Nb3VzZURvd25cIixjbGljazpcIm9uQ2xpY2tcIn0sTm89e3BvaW50ZXJkb3duOlwib25Qb2ludGVyRG93bkNhcHR1cmVcIixtb3VzZWRvd246XCJvbk1vdXNlRG93bkNhcHR1cmVcIixjbGljazpcIm9uQ2xpY2tDYXB0dXJlXCJ9LEFvPWU9Pnt2YXIgdCxuO3JldHVybntlc2NhcGVLZXk6XCJib29sZWFuXCI9PXR5cGVvZiBlP2U6bnVsbCE9KHQ9bnVsbD09ZT92b2lkIDA6ZS5lc2NhcGVLZXkpJiZ0LG91dHNpZGVQcmVzczpcImJvb2xlYW5cIj09dHlwZW9mIGU/ZTpudWxsPT0obj1udWxsPT1lP3ZvaWQgMDplLm91dHNpZGVQcmVzcyl8fG59fTtmdW5jdGlvbiBqbyhlLHQpe3ZvaWQgMD09PXQmJih0PXt9KTtjb25zdHtvcGVuOm4sb25PcGVuQ2hhbmdlOnIsZWxlbWVudHM6aSxkYXRhUmVmOnN9PWUse2VuYWJsZWQ6YT0hMCxlc2NhcGVLZXk6bD0hMCxvdXRzaWRlUHJlc3M6Yz0hMCxvdXRzaWRlUHJlc3NFdmVudDp1PVwicG9pbnRlcmRvd25cIixyZWZlcmVuY2VQcmVzczpkPSExLHJlZmVyZW5jZVByZXNzRXZlbnQ6Zj1cInBvaW50ZXJkb3duXCIsYW5jZXN0b3JTY3JvbGw6aD0hMSxidWJibGVzOnAsY2FwdHVyZTptfT10LGc9S3IoKSx2PXhyKFwiZnVuY3Rpb25cIj09dHlwZW9mIGM/YzooKT0+ITEpLHk9XCJmdW5jdGlvblwiPT10eXBlb2YgYz92OmMsYj1vLnVzZVJlZighMSkseD1vLnVzZVJlZighMSkse2VzY2FwZUtleTp3LG91dHNpZGVQcmVzczpFfT1BbyhwKSx7ZXNjYXBlS2V5OlMsb3V0c2lkZVByZXNzOl99PUFvKG0pLGs9eHIoKGU9Pnt2YXIgdDtpZighbnx8IWF8fCFsfHxcIkVzY2FwZVwiIT09ZS5rZXkpcmV0dXJuO2NvbnN0IG89bnVsbD09KHQ9cy5jdXJyZW50LmZsb2F0aW5nQ29udGV4dCk/dm9pZCAwOnQubm9kZUlkLGk9Zz9YcihnLm5vZGVzUmVmLmN1cnJlbnQsbyk6W107aWYoIXcmJihlLnN0b3BQcm9wYWdhdGlvbigpLGkubGVuZ3RoPjApKXtsZXQgZT0hMDtpZihpLmZvckVhY2goKHQ9Pnt2YXIgbjtudWxsPT0obj10LmNvbnRleHQpfHwhbi5vcGVufHx0LmNvbnRleHQuZGF0YVJlZi5jdXJyZW50Ll9fZXNjYXBlS2V5QnViYmxlc3x8KGU9ITEpfSkpLCFlKXJldHVybn1yKCExLGZ1bmN0aW9uKGUpe3JldHVyblwibmF0aXZlRXZlbnRcImluIGV9KGUpP2UubmF0aXZlRXZlbnQ6ZSxcImVzY2FwZS1rZXlcIil9KSksQz14cigoZT0+e3ZhciB0O2NvbnN0IG49KCk9Pnt2YXIgdDtrKGUpLG51bGw9PSh0PVh0KGUpKXx8dC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLG4pfTtudWxsPT0odD1YdChlKSl8fHQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixuKX0pKSxQPXhyKChlPT57dmFyIHQ7Y29uc3Qgbj1iLmN1cnJlbnQ7Yi5jdXJyZW50PSExO2NvbnN0IG89eC5jdXJyZW50O2lmKHguY3VycmVudD0hMSxcImNsaWNrXCI9PT11JiZvKXJldHVybjtpZihuKXJldHVybjtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiB5JiYheShlKSlyZXR1cm47Y29uc3QgYT1YdChlKSxsPVwiW1wiK0hyKFwiaW5lcnRcIikrXCJdXCIsYz1ZdChpLmZsb2F0aW5nKS5xdWVyeVNlbGVjdG9yQWxsKGwpO2xldCBkPVN0KGEpP2E6bnVsbDtmb3IoO2QmJiFOdChkKTspe2NvbnN0IGU9TXQoZCk7aWYoTnQoZSl8fCFTdChlKSlicmVhaztkPWV9aWYoYy5sZW5ndGgmJlN0KGEpJiYhYS5tYXRjaGVzKFwiaHRtbCxib2R5XCIpJiYhenQoYSxpLmZsb2F0aW5nKSYmQXJyYXkuZnJvbShjKS5ldmVyeSgoZT0+IXp0KGQsZSkpKSlyZXR1cm47aWYoX3QoYSkmJlIpe2NvbnN0IHQ9YS5jbGllbnRXaWR0aD4wJiZhLnNjcm9sbFdpZHRoPmEuY2xpZW50V2lkdGgsbj1hLmNsaWVudEhlaWdodD4wJiZhLnNjcm9sbEhlaWdodD5hLmNsaWVudEhlaWdodDtsZXQgcj1uJiZlLm9mZnNldFg+YS5jbGllbnRXaWR0aDtpZihuJiZcInJ0bFwiPT09QXQoYSkuZGlyZWN0aW9uJiYocj1lLm9mZnNldFg8PWEub2Zmc2V0V2lkdGgtYS5jbGllbnRXaWR0aCkscnx8dCYmZS5vZmZzZXRZPmEuY2xpZW50SGVpZ2h0KXJldHVybn1jb25zdCBmPW51bGw9PSh0PXMuY3VycmVudC5mbG9hdGluZ0NvbnRleHQpP3ZvaWQgMDp0Lm5vZGVJZCxoPWcmJlhyKGcubm9kZXNSZWYuY3VycmVudCxmKS5zb21lKCh0PT57dmFyIG47cmV0dXJuIEd0KGUsbnVsbD09KG49dC5jb250ZXh0KT92b2lkIDA6bi5lbGVtZW50cy5mbG9hdGluZyl9KSk7aWYoR3QoZSxpLmZsb2F0aW5nKXx8R3QoZSxpLmRvbVJlZmVyZW5jZSl8fGgpcmV0dXJuO2NvbnN0IHA9Zz9YcihnLm5vZGVzUmVmLmN1cnJlbnQsZik6W107aWYocC5sZW5ndGg+MCl7bGV0IGU9ITA7aWYocC5mb3JFYWNoKCh0PT57dmFyIG47bnVsbD09KG49dC5jb250ZXh0KXx8IW4ub3Blbnx8dC5jb250ZXh0LmRhdGFSZWYuY3VycmVudC5fX291dHNpZGVQcmVzc0J1YmJsZXN8fChlPSExKX0pKSwhZSlyZXR1cm59cighMSxlLFwib3V0c2lkZS1wcmVzc1wiKX0pKSxUPXhyKChlPT57dmFyIHQ7Y29uc3Qgbj0oKT0+e3ZhciB0O1AoZSksbnVsbD09KHQ9WHQoZSkpfHx0LnJlbW92ZUV2ZW50TGlzdGVuZXIodSxuKX07bnVsbD09KHQ9WHQoZSkpfHx0LmFkZEV2ZW50TGlzdGVuZXIodSxuKX0pKTtvLnVzZUVmZmVjdCgoKCk9PntpZighbnx8IWEpcmV0dXJuO2Z1bmN0aW9uIGUoZSl7cighMSxlLFwiYW5jZXN0b3Itc2Nyb2xsXCIpfXMuY3VycmVudC5fX2VzY2FwZUtleUJ1YmJsZXM9dyxzLmN1cnJlbnQuX19vdXRzaWRlUHJlc3NCdWJibGVzPUU7Y29uc3QgdD1ZdChpLmZsb2F0aW5nKTtsJiZ0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsUz9DOmssUykseSYmdC5hZGRFdmVudExpc3RlbmVyKHUsXz9UOlAsXyk7bGV0IG89W107cmV0dXJuIGgmJihTdChpLmRvbVJlZmVyZW5jZSkmJihvPUR0KGkuZG9tUmVmZXJlbmNlKSksU3QoaS5mbG9hdGluZykmJihvPW8uY29uY2F0KER0KGkuZmxvYXRpbmcpKSksIVN0KGkucmVmZXJlbmNlKSYmaS5yZWZlcmVuY2UmJmkucmVmZXJlbmNlLmNvbnRleHRFbGVtZW50JiYobz1vLmNvbmNhdChEdChpLnJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCkpKSksbz1vLmZpbHRlcigoZT0+e3ZhciBuO3JldHVybiBlIT09KG51bGw9PShuPXQuZGVmYXVsdFZpZXcpP3ZvaWQgMDpuLnZpc3VhbFZpZXdwb3J0KX0pKSxvLmZvckVhY2goKHQ9Pnt0LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixlLHtwYXNzaXZlOiEwfSl9KSksKCk9PntsJiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsUz9DOmssUykseSYmdC5yZW1vdmVFdmVudExpc3RlbmVyKHUsXz9UOlAsXyksby5mb3JFYWNoKCh0PT57dC5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsZSl9KSl9fSksW3MsaSxsLHksdSxuLHIsaCxhLHcsRSxrLFMsQyxQLF8sVF0pLG8udXNlRWZmZWN0KCgoKT0+e2IuY3VycmVudD0hMX0pLFt5LHVdKTtjb25zdCBPPW8udXNlTWVtbygoKCk9Pih7b25LZXlEb3duOmssW1JvW2ZdXTplPT57ZCYmcighMSxlLm5hdGl2ZUV2ZW50LFwicmVmZXJlbmNlLXByZXNzXCIpfX0pKSxbayxyLGQsZl0pLFI9by51c2VNZW1vKCgoKT0+KHtvbktleURvd246ayxvbk1vdXNlRG93bigpe3guY3VycmVudD0hMH0sb25Nb3VzZVVwKCl7eC5jdXJyZW50PSEwfSxbTm9bdV1dOigpPT57Yi5jdXJyZW50PSEwfX0pKSxbayx1XSk7cmV0dXJuIG8udXNlTWVtbygoKCk9PmE/e3JlZmVyZW5jZTpPLGZsb2F0aW5nOlJ9Ont9KSxbYSxPLFJdKX1mdW5jdGlvbiBNbyhlKXt2b2lkIDA9PT1lJiYoZT17fSk7Y29uc3R7bm9kZUlkOnR9PWUsbj1mdW5jdGlvbihlKXtjb25zdHtvcGVuOnQ9ITEsb25PcGVuQ2hhbmdlOm4sZWxlbWVudHM6cn09ZSxpPUJyKCkscz1vLnVzZVJlZih7fSksW2FdPW8udXNlU3RhdGUoKCgpPT5mdW5jdGlvbigpe2NvbnN0IGU9bmV3IE1hcDtyZXR1cm57ZW1pdCh0LG4pe3ZhciByO251bGw9PShyPWUuZ2V0KHQpKXx8ci5mb3JFYWNoKChlPT5lKG4pKSl9LG9uKHQsbil7ZS5zZXQodCxbLi4uZS5nZXQodCl8fFtdLG5dKX0sb2ZmKHQsbil7dmFyIHI7ZS5zZXQodCwobnVsbD09KHI9ZS5nZXQodCkpP3ZvaWQgMDpyLmZpbHRlcigoZT0+ZSE9PW4pKSl8fFtdKX19fSgpKSksbD1udWxsIT0kcigpLFtjLHVdPW8udXNlU3RhdGUoci5yZWZlcmVuY2UpLGQ9eHIoKChlLHQscik9PntzLmN1cnJlbnQub3BlbkV2ZW50PWU/dDp2b2lkIDAsYS5lbWl0KFwib3BlbmNoYW5nZVwiLHtvcGVuOmUsZXZlbnQ6dCxyZWFzb246cixuZXN0ZWQ6bH0pLG51bGw9PW58fG4oZSx0LHIpfSkpLGY9by51c2VNZW1vKCgoKT0+KHtzZXRQb3NpdGlvblJlZmVyZW5jZTp1fSkpLFtdKSxoPW8udXNlTWVtbygoKCk9Pih7cmVmZXJlbmNlOmN8fHIucmVmZXJlbmNlfHxudWxsLGZsb2F0aW5nOnIuZmxvYXRpbmd8fG51bGwsZG9tUmVmZXJlbmNlOnIucmVmZXJlbmNlfSkpLFtjLHIucmVmZXJlbmNlLHIuZmxvYXRpbmddKTtyZXR1cm4gby51c2VNZW1vKCgoKT0+KHtkYXRhUmVmOnMsb3Blbjp0LG9uT3BlbkNoYW5nZTpkLGVsZW1lbnRzOmgsZXZlbnRzOmEsZmxvYXRpbmdJZDppLHJlZnM6Zn0pKSxbdCxkLGgsYSxpLGZdKX0oey4uLmUsZWxlbWVudHM6e3JlZmVyZW5jZTpudWxsLGZsb2F0aW5nOm51bGwsLi4uZS5lbGVtZW50c319KSxyPWUucm9vdENvbnRleHR8fG4saT1yLmVsZW1lbnRzLFtzLGFdPW8udXNlU3RhdGUobnVsbCksW2wsY109by51c2VTdGF0ZShudWxsKSx1PShudWxsPT1pP3ZvaWQgMDppLnJlZmVyZW5jZSl8fHMsZD1vLnVzZVJlZihudWxsKSxmPUtyKCk7SXIoKCgpPT57dSYmKGQuY3VycmVudD11KX0pLFt1XSk7Y29uc3QgaD1mdW5jdGlvbihlKXt2b2lkIDA9PT1lJiYoZT17fSk7Y29uc3R7cGxhY2VtZW50OnQ9XCJib3R0b21cIixzdHJhdGVneTpuPVwiYWJzb2x1dGVcIixtaWRkbGV3YXJlOnI9W10scGxhdGZvcm06aSxlbGVtZW50czp7cmVmZXJlbmNlOnMsZmxvYXRpbmc6YX09e30sdHJhbnNmb3JtOmw9ITAsd2hpbGVFbGVtZW50c01vdW50ZWQ6YyxvcGVuOnV9PWUsW2QsZl09by51c2VTdGF0ZSh7eDowLHk6MCxzdHJhdGVneTpuLHBsYWNlbWVudDp0LG1pZGRsZXdhcmVEYXRhOnt9LGlzUG9zaXRpb25lZDohMX0pLFtoLHBdPW8udXNlU3RhdGUocik7dXIoaCxyKXx8cChyKTtjb25zdFttLGddPW8udXNlU3RhdGUobnVsbCksW3YseV09by51c2VTdGF0ZShudWxsKSxiPW8udXNlQ2FsbGJhY2soKGU9PntlIT09Uy5jdXJyZW50JiYoUy5jdXJyZW50PWUsZyhlKSl9KSxbXSkseD1vLnVzZUNhbGxiYWNrKChlPT57ZSE9PV8uY3VycmVudCYmKF8uY3VycmVudD1lLHkoZSkpfSksW10pLHc9c3x8bSxFPWF8fHYsUz1vLnVzZVJlZihudWxsKSxfPW8udXNlUmVmKG51bGwpLGs9by51c2VSZWYoZCksQz1udWxsIT1jLFA9aHIoYyksVD1ocihpKSxPPW8udXNlQ2FsbGJhY2soKCgpPT57aWYoIVMuY3VycmVudHx8IV8uY3VycmVudClyZXR1cm47Y29uc3QgZT17cGxhY2VtZW50OnQsc3RyYXRlZ3k6bixtaWRkbGV3YXJlOmh9O1QuY3VycmVudCYmKGUucGxhdGZvcm09VC5jdXJyZW50KSxscihTLmN1cnJlbnQsXy5jdXJyZW50LGUpLnRoZW4oKGU9Pntjb25zdCB0PXsuLi5lLGlzUG9zaXRpb25lZDohMH07Ui5jdXJyZW50JiYhdXIoay5jdXJyZW50LHQpJiYoay5jdXJyZW50PXQsem4uZmx1c2hTeW5jKCgoKT0+e2YodCl9KSkpfSkpfSksW2gsdCxuLFRdKTtjcigoKCk9PnshMT09PXUmJmsuY3VycmVudC5pc1Bvc2l0aW9uZWQmJihrLmN1cnJlbnQuaXNQb3NpdGlvbmVkPSExLGYoKGU9Pih7Li4uZSxpc1Bvc2l0aW9uZWQ6ITF9KSkpKX0pLFt1XSk7Y29uc3QgUj1vLnVzZVJlZighMSk7Y3IoKCgpPT4oUi5jdXJyZW50PSEwLCgpPT57Ui5jdXJyZW50PSExfSkpLFtdKSxjcigoKCk9PntpZih3JiYoUy5jdXJyZW50PXcpLEUmJihfLmN1cnJlbnQ9RSksdyYmRSl7aWYoUC5jdXJyZW50KXJldHVybiBQLmN1cnJlbnQodyxFLE8pO08oKX19KSxbdyxFLE8sUCxDXSk7Y29uc3QgTj1vLnVzZU1lbW8oKCgpPT4oe3JlZmVyZW5jZTpTLGZsb2F0aW5nOl8sc2V0UmVmZXJlbmNlOmIsc2V0RmxvYXRpbmc6eH0pKSxbYix4XSksQT1vLnVzZU1lbW8oKCgpPT4oe3JlZmVyZW5jZTp3LGZsb2F0aW5nOkV9KSksW3csRV0pLGo9by51c2VNZW1vKCgoKT0+e2NvbnN0IGU9e3Bvc2l0aW9uOm4sbGVmdDowLHRvcDowfTtpZighQS5mbG9hdGluZylyZXR1cm4gZTtjb25zdCB0PWZyKEEuZmxvYXRpbmcsZC54KSxyPWZyKEEuZmxvYXRpbmcsZC55KTtyZXR1cm4gbD97Li4uZSx0cmFuc2Zvcm06XCJ0cmFuc2xhdGUoXCIrdCtcInB4LCBcIityK1wicHgpXCIsLi4uZHIoQS5mbG9hdGluZyk+PTEuNSYme3dpbGxDaGFuZ2U6XCJ0cmFuc2Zvcm1cIn19Ontwb3NpdGlvbjpuLGxlZnQ6dCx0b3A6cn19KSxbbixsLEEuZmxvYXRpbmcsZC54LGQueV0pO3JldHVybiBvLnVzZU1lbW8oKCgpPT4oey4uLmQsdXBkYXRlOk8scmVmczpOLGVsZW1lbnRzOkEsZmxvYXRpbmdTdHlsZXM6an0pKSxbZCxPLE4sQSxqXSl9KHsuLi5lLGVsZW1lbnRzOnsuLi5pLC4uLmwmJntyZWZlcmVuY2U6bH19fSkscD1vLnVzZUNhbGxiYWNrKChlPT57Y29uc3QgdD1TdChlKT97Z2V0Qm91bmRpbmdDbGllbnRSZWN0OigpPT5lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGNvbnRleHRFbGVtZW50OmV9OmU7Yyh0KSxoLnJlZnMuc2V0UmVmZXJlbmNlKHQpfSksW2gucmVmc10pLG09by51c2VDYWxsYmFjaygoZT0+eyhTdChlKXx8bnVsbD09PWUpJiYoZC5jdXJyZW50PWUsYShlKSksKFN0KGgucmVmcy5yZWZlcmVuY2UuY3VycmVudCl8fG51bGw9PT1oLnJlZnMucmVmZXJlbmNlLmN1cnJlbnR8fG51bGwhPT1lJiYhU3QoZSkpJiZoLnJlZnMuc2V0UmVmZXJlbmNlKGUpfSksW2gucmVmc10pLGc9by51c2VNZW1vKCgoKT0+KHsuLi5oLnJlZnMsc2V0UmVmZXJlbmNlOm0sc2V0UG9zaXRpb25SZWZlcmVuY2U6cCxkb21SZWZlcmVuY2U6ZH0pKSxbaC5yZWZzLG0scF0pLHY9by51c2VNZW1vKCgoKT0+KHsuLi5oLmVsZW1lbnRzLGRvbVJlZmVyZW5jZTp1fSkpLFtoLmVsZW1lbnRzLHVdKSx5PW8udXNlTWVtbygoKCk9Pih7Li4uaCwuLi5yLHJlZnM6ZyxlbGVtZW50czp2LG5vZGVJZDp0fSkpLFtoLGcsdix0LHJdKTtyZXR1cm4gSXIoKCgpPT57ci5kYXRhUmVmLmN1cnJlbnQuZmxvYXRpbmdDb250ZXh0PXk7Y29uc3QgZT1udWxsPT1mP3ZvaWQgMDpmLm5vZGVzUmVmLmN1cnJlbnQuZmluZCgoZT0+ZS5pZD09PXQpKTtlJiYoZS5jb250ZXh0PXkpfSkpLG8udXNlTWVtbygoKCk9Pih7Li4uaCxjb250ZXh0OnkscmVmczpnLGVsZW1lbnRzOnZ9KSksW2gsZyx2LHldKX1jb25zdCBJbz1cImFjdGl2ZVwiLERvPVwic2VsZWN0ZWRcIjtmdW5jdGlvbiBMbyhlLHQsbil7Y29uc3Qgcj1uZXcgTWFwLG89XCJpdGVtXCI9PT1uO2xldCBpPWU7aWYobyYmZSl7Y29uc3R7W0lvXTp0LFtEb106X18sLi4ubn09ZTtpPW59cmV0dXJuey4uLlwiZmxvYXRpbmdcIj09PW4mJnt0YWJJbmRleDotMSxbYm9dOlwiXCJ9LC4uLmksLi4udC5tYXAoKHQ9Pntjb25zdCByPXQ/dFtuXTpudWxsO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHI/ZT9yKGUpOm51bGw6cn0pKS5jb25jYXQoZSkucmVkdWNlKCgoZSx0KT0+dD8oT2JqZWN0LmVudHJpZXModCkuZm9yRWFjaCgodD0+e2xldFtuLGldPXQ7dmFyIHM7byYmW0lvLERvXS5pbmNsdWRlcyhuKXx8KDA9PT1uLmluZGV4T2YoXCJvblwiKT8oci5oYXMobil8fHIuc2V0KG4sW10pLFwiZnVuY3Rpb25cIj09dHlwZW9mIGkmJihudWxsPT0ocz1yLmdldChuKSl8fHMucHVzaChpKSxlW25dPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9YXJndW1lbnRzLmxlbmd0aCxvPW5ldyBBcnJheSh0KSxpPTA7aTx0O2krKylvW2ldPWFyZ3VtZW50c1tpXTtyZXR1cm4gbnVsbD09KGU9ci5nZXQobikpP3ZvaWQgMDplLm1hcCgoZT0+ZSguLi5vKSkpLmZpbmQoKGU9PnZvaWQgMCE9PWUpKX0pKTplW25dPWkpfSkpLGUpOmUpLHt9KX19ZnVuY3Rpb24gRm8oZSl7dm9pZCAwPT09ZSYmKGU9W10pO2NvbnN0IHQ9ZS5tYXAoKGU9Pm51bGw9PWU/dm9pZCAwOmUucmVmZXJlbmNlKSksbj1lLm1hcCgoZT0+bnVsbD09ZT92b2lkIDA6ZS5mbG9hdGluZykpLHI9ZS5tYXAoKGU9Pm51bGw9PWU/dm9pZCAwOmUuaXRlbSkpLGk9by51c2VDYWxsYmFjaygodD0+TG8odCxlLFwicmVmZXJlbmNlXCIpKSx0KSxzPW8udXNlQ2FsbGJhY2soKHQ9PkxvKHQsZSxcImZsb2F0aW5nXCIpKSxuKSxhPW8udXNlQ2FsbGJhY2soKHQ9PkxvKHQsZSxcIml0ZW1cIikpLHIpO3JldHVybiBvLnVzZU1lbW8oKCgpPT4oe2dldFJlZmVyZW5jZVByb3BzOmksZ2V0RmxvYXRpbmdQcm9wczpzLGdldEl0ZW1Qcm9wczphfSkpLFtpLHMsYV0pfWxldCB6bz0hMTtmdW5jdGlvbiBCbyhlLHQsbil7c3dpdGNoKGUpe2Nhc2VcInZlcnRpY2FsXCI6cmV0dXJuIHQ7Y2FzZVwiaG9yaXpvbnRhbFwiOnJldHVybiBuO2RlZmF1bHQ6cmV0dXJuIHR8fG59fWZ1bmN0aW9uIFZvKGUsdCl7cmV0dXJuIEJvKHQsZT09PXdyfHxlPT09RXIsZT09PVNyfHxlPT09X3IpfWZ1bmN0aW9uIFdvKGUsdCxuKXtyZXR1cm4gQm8odCxlPT09RXIsbj9lPT09U3I6ZT09PV9yKXx8XCJFbnRlclwiPT09ZXx8XCIgXCI9PT1lfHxcIlwiPT09ZX1mdW5jdGlvbiBVbyhlLHQsbil7cmV0dXJuIEJvKHQsbj9lPT09X3I6ZT09PVNyLGU9PT13cil9ZnVuY3Rpb24gJG8oZSx0KXtjb25zdHtvcGVuOm4sb25PcGVuQ2hhbmdlOnIsZWxlbWVudHM6aX09ZSx7bGlzdFJlZjpzLGFjdGl2ZUluZGV4OmEsb25OYXZpZ2F0ZTpsPSgpPT57fSxlbmFibGVkOmM9ITAsc2VsZWN0ZWRJbmRleDp1PW51bGwsYWxsb3dFc2NhcGU6ZD0hMSxsb29wOmY9ITEsbmVzdGVkOmg9ITEscnRsOnA9ITEsdmlydHVhbDptPSExLGZvY3VzSXRlbU9uT3BlbjpnPVwiYXV0b1wiLGZvY3VzSXRlbU9uSG92ZXI6dj0hMCxvcGVuT25BcnJvd0tleURvd246eT0hMCxkaXNhYmxlZEluZGljZXM6YixvcmllbnRhdGlvbjp4PVwidmVydGljYWxcIixjb2xzOnc9MSxzY3JvbGxJdGVtSW50b1ZpZXc6RT0hMCx2aXJ0dWFsSXRlbVJlZjpTLGl0ZW1TaXplczpfLGRlbnNlOms9ITF9PXQsQz1xcih4byhpLmZsb2F0aW5nKSksUD0kcigpLFQ9S3IoKSxPPXhyKGwpLFI9by51c2VSZWYoZyksTj1vLnVzZVJlZihudWxsIT11P3U6LTEpLEE9by51c2VSZWYobnVsbCksaj1vLnVzZVJlZighMCksTT1vLnVzZVJlZihPKSxJPW8udXNlUmVmKCEhaS5mbG9hdGluZyksRD1vLnVzZVJlZihuKSxMPW8udXNlUmVmKCExKSxGPW8udXNlUmVmKCExKSx6PXFyKGIpLEI9cXIobiksVj1xcihFKSxXPXFyKHUpLFtVLCRdPW8udXNlU3RhdGUoKSxbSyxIXT1vLnVzZVN0YXRlKCkscT14cigoZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7bT8oJChlLmlkKSxudWxsPT1UfHxULmV2ZW50cy5lbWl0KFwidmlydHVhbGZvY3VzXCIsZSksUyYmKFMuY3VycmVudD1lKSk6TXIoZSx7cHJldmVudFNjcm9sbDohMCxzeW5jOiEoIUh0KCl8fCEkdCgpKSYmKHpvfHxMLmN1cnJlbnQpfSl9dm9pZCAwPT09biYmKG49ITEpO2NvbnN0IG89ZS5jdXJyZW50W3QuY3VycmVudF07byYmcihvKSxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCgpPT57Y29uc3QgaT1lLmN1cnJlbnRbdC5jdXJyZW50XXx8bztpZighaSlyZXR1cm47b3x8cihpKTtjb25zdCBzPVYuY3VycmVudDtzJiZHJiYobnx8IWouY3VycmVudCkmJihudWxsPT1pLnNjcm9sbEludG9WaWV3fHxpLnNjcm9sbEludG9WaWV3KFwiYm9vbGVhblwiPT10eXBlb2Ygcz97YmxvY2s6XCJuZWFyZXN0XCIsaW5saW5lOlwibmVhcmVzdFwifTpzKSl9KSl9KSk7SXIoKCgpPT57ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5mb2N1cyh7Z2V0IHByZXZlbnRTY3JvbGwoKXtyZXR1cm4gem89ITAsITF9fSl9KSxbXSksSXIoKCgpPT57YyYmKG4mJmkuZmxvYXRpbmc/Ui5jdXJyZW50JiZudWxsIT11JiYoRi5jdXJyZW50PSEwLE4uY3VycmVudD11LE8odSkpOkkuY3VycmVudCYmKE4uY3VycmVudD0tMSxNLmN1cnJlbnQobnVsbCkpKX0pLFtjLG4saS5mbG9hdGluZyx1LE9dKSxJcigoKCk9PntpZihjJiZuJiZpLmZsb2F0aW5nKWlmKG51bGw9PWEpe2lmKEwuY3VycmVudD0hMSxudWxsIT1XLmN1cnJlbnQpcmV0dXJuO2lmKEkuY3VycmVudCYmKE4uY3VycmVudD0tMSxxKHMsTikpLCghRC5jdXJyZW50fHwhSS5jdXJyZW50KSYmUi5jdXJyZW50JiYobnVsbCE9QS5jdXJyZW50fHwhMD09PVIuY3VycmVudCYmbnVsbD09QS5jdXJyZW50KSl7bGV0IGU9MDtjb25zdCB0PSgpPT57bnVsbD09cy5jdXJyZW50WzBdPyhlPDImJihlP3JlcXVlc3RBbmltYXRpb25GcmFtZTpxdWV1ZU1pY3JvdGFzaykodCksZSsrKTooTi5jdXJyZW50PW51bGw9PUEuY3VycmVudHx8V28oQS5jdXJyZW50LHgscCl8fGg/UHIocyx6LmN1cnJlbnQpOlRyKHMsei5jdXJyZW50KSxBLmN1cnJlbnQ9bnVsbCxPKE4uY3VycmVudCkpfTt0KCl9fWVsc2UgQ3IocyxhKXx8KE4uY3VycmVudD1hLHEocyxOLEYuY3VycmVudCksRi5jdXJyZW50PSExKX0pLFtjLG4saS5mbG9hdGluZyxhLFcsaCxzLHgscCxPLHEsel0pLElyKCgoKT0+e3ZhciBlO2lmKCFjfHxpLmZsb2F0aW5nfHwhVHx8bXx8IUkuY3VycmVudClyZXR1cm47Y29uc3QgdD1ULm5vZGVzUmVmLmN1cnJlbnQsbj1udWxsPT0oZT10LmZpbmQoKGU9PmUuaWQ9PT1QKSkpfHxudWxsPT0oZT1lLmNvbnRleHQpP3ZvaWQgMDplLmVsZW1lbnRzLmZsb2F0aW5nLHI9RnQoWXQoaS5mbG9hdGluZykpLG89dC5zb21lKChlPT5lLmNvbnRleHQmJnp0KGUuY29udGV4dC5lbGVtZW50cy5mbG9hdGluZyxyKSkpO24mJiFvJiZqLmN1cnJlbnQmJm4uZm9jdXMoe3ByZXZlbnRTY3JvbGw6ITB9KX0pLFtjLGkuZmxvYXRpbmcsVCxQLG1dKSxJcigoKCk9PntpZihjJiZUJiZtJiYhUClyZXR1cm4gVC5ldmVudHMub24oXCJ2aXJ0dWFsZm9jdXNcIixlKSwoKT0+e1QuZXZlbnRzLm9mZihcInZpcnR1YWxmb2N1c1wiLGUpfTtmdW5jdGlvbiBlKGUpe0goZS5pZCksUyYmKFMuY3VycmVudD1lKX19KSxbYyxULG0sUCxTXSksSXIoKCgpPT57TS5jdXJyZW50PU8sSS5jdXJyZW50PSEhaS5mbG9hdGluZ30pKSxJcigoKCk9PntufHwoQS5jdXJyZW50PW51bGwpfSksW25dKSxJcigoKCk9PntELmN1cnJlbnQ9bn0pLFtuXSk7Y29uc3QgWT1udWxsIT1hLEc9by51c2VNZW1vKCgoKT0+e2Z1bmN0aW9uIGUoZSl7aWYoIW4pcmV0dXJuO2NvbnN0IHQ9cy5jdXJyZW50LmluZGV4T2YoZSk7LTEhPT10JiZPKHQpfXJldHVybntvbkZvY3VzKHQpe2xldHtjdXJyZW50VGFyZ2V0Om59PXQ7ZShuKX0sb25DbGljazplPT57bGV0e2N1cnJlbnRUYXJnZXQ6dH09ZTtyZXR1cm4gdC5mb2N1cyh7cHJldmVudFNjcm9sbDohMH0pfSwuLi52JiZ7b25Nb3VzZU1vdmUodCl7bGV0e2N1cnJlbnRUYXJnZXQ6bn09dDtlKG4pfSxvblBvaW50ZXJMZWF2ZShlKXtsZXR7cG9pbnRlclR5cGU6dH09ZTtqLmN1cnJlbnQmJlwidG91Y2hcIiE9PXQmJihOLmN1cnJlbnQ9LTEscShzLE4pLE8obnVsbCksbXx8TXIoQy5jdXJyZW50LHtwcmV2ZW50U2Nyb2xsOiEwfSkpfX19fSksW24sQyxxLHYscyxPLG1dKSxYPXhyKChlPT57aWYoai5jdXJyZW50PSExLEwuY3VycmVudD0hMCwhQi5jdXJyZW50JiZlLmN1cnJlbnRUYXJnZXQ9PT1DLmN1cnJlbnQpcmV0dXJuO2lmKGgmJlVvKGUua2V5LHgscCkpcmV0dXJuIFF0KGUpLHIoITEsZS5uYXRpdmVFdmVudCxcImxpc3QtbmF2aWdhdGlvblwiKSx2b2lkKF90KGkuZG9tUmVmZXJlbmNlKSYmIW0mJmkuZG9tUmVmZXJlbmNlLmZvY3VzKCkpO2NvbnN0IHQ9Ti5jdXJyZW50LG89UHIocyxiKSxhPVRyKHMsYik7aWYoXCJIb21lXCI9PT1lLmtleSYmKFF0KGUpLE4uY3VycmVudD1vLE8oTi5jdXJyZW50KSksXCJFbmRcIj09PWUua2V5JiYoUXQoZSksTi5jdXJyZW50PWEsTyhOLmN1cnJlbnQpKSx3PjEpe2NvbnN0IHQ9X3x8QXJyYXkuZnJvbSh7bGVuZ3RoOnMuY3VycmVudC5sZW5ndGh9LCgoKT0+KHt3aWR0aDoxLGhlaWdodDoxfSkpKSxuPWZ1bmN0aW9uKGUsdCxuKXtjb25zdCByPVtdO2xldCBvPTA7cmV0dXJuIGUuZm9yRWFjaCgoKGUsaSk9PntsZXR7d2lkdGg6cyxoZWlnaHQ6YX09ZSxsPSExO2ZvcihuJiYobz0wKTshbDspe2NvbnN0IGU9W107Zm9yKGxldCBuPTA7bjxzO24rKylmb3IobGV0IHI9MDtyPGE7cisrKWUucHVzaChvK24rcip0KTtvJXQrczw9dCYmZS5ldmVyeSgoZT0+bnVsbD09cltlXSkpPyhlLmZvckVhY2goKGU9PntyW2VdPWl9KSksbD0hMCk6bysrfX0pKSxbLi4ucl19KHQsdyxrKSxyPW4uZmluZEluZGV4KChlPT5udWxsIT1lJiYhQXIocy5jdXJyZW50LGUsYikpKSxpPW4ucmVkdWNlKCgoZSx0LG4pPT5udWxsPT10fHxBcihzLmN1cnJlbnQsdCxiKT9lOm4pLC0xKSxsPW5bZnVuY3Rpb24oZSx0KXtsZXR7ZXZlbnQ6bixvcmllbnRhdGlvbjpyLGxvb3A6byxjb2xzOmksZGlzYWJsZWRJbmRpY2VzOnMsbWluSW5kZXg6YSxtYXhJbmRleDpsLHByZXZJbmRleDpjLHN0b3BFdmVudDp1PSExfT10LGQ9YztpZihuLmtleT09PXdyKXtpZih1JiZRdChuKSwtMT09PWMpZD1sO2Vsc2UgaWYoZD1PcihlLHtzdGFydGluZ0luZGV4OmQsYW1vdW50OmksZGVjcmVtZW50OiEwLGRpc2FibGVkSW5kaWNlczpzfSksbyYmKGMtaTxhfHxkPDApKXtjb25zdCBlPWMlaSx0PWwlaSxuPWwtKHQtZSk7ZD10PT09ZT9sOnQ+ZT9uOm4taX1DcihlLGQpJiYoZD1jKX1pZihuLmtleT09PUVyJiYodSYmUXQobiksLTE9PT1jP2Q9YTooZD1PcihlLHtzdGFydGluZ0luZGV4OmMsYW1vdW50OmksZGlzYWJsZWRJbmRpY2VzOnN9KSxvJiZjK2k+bCYmKGQ9T3IoZSx7c3RhcnRpbmdJbmRleDpjJWktaSxhbW91bnQ6aSxkaXNhYmxlZEluZGljZXM6c30pKSksQ3IoZSxkKSYmKGQ9YykpLFwiYm90aFwiPT09cil7Y29uc3QgdD1vbihjL2kpO24ua2V5PT09X3ImJih1JiZRdChuKSxjJWkhPWktMT8oZD1PcihlLHtzdGFydGluZ0luZGV4OmMsZGlzYWJsZWRJbmRpY2VzOnN9KSxvJiZrcihkLGksdCkmJihkPU9yKGUse3N0YXJ0aW5nSW5kZXg6Yy1jJWktMSxkaXNhYmxlZEluZGljZXM6c30pKSk6byYmKGQ9T3IoZSx7c3RhcnRpbmdJbmRleDpjLWMlaS0xLGRpc2FibGVkSW5kaWNlczpzfSkpLGtyKGQsaSx0KSYmKGQ9YykpLG4ua2V5PT09U3ImJih1JiZRdChuKSxjJWkhPTA/KGQ9T3IoZSx7c3RhcnRpbmdJbmRleDpjLGRlY3JlbWVudDohMCxkaXNhYmxlZEluZGljZXM6c30pLG8mJmtyKGQsaSx0KSYmKGQ9T3IoZSx7c3RhcnRpbmdJbmRleDpjKyhpLWMlaSksZGVjcmVtZW50OiEwLGRpc2FibGVkSW5kaWNlczpzfSkpKTpvJiYoZD1PcihlLHtzdGFydGluZ0luZGV4OmMrKGktYyVpKSxkZWNyZW1lbnQ6ITAsZGlzYWJsZWRJbmRpY2VzOnN9KSksa3IoZCxpLHQpJiYoZD1jKSk7Y29uc3Qgcj1vbihsL2kpPT09dDtDcihlLGQpJiYoZD1vJiZyP24ua2V5PT09U3I/bDpPcihlLHtzdGFydGluZ0luZGV4OmMtYyVpLTEsZGlzYWJsZWRJbmRpY2VzOnN9KTpjKX1yZXR1cm4gZH0oe2N1cnJlbnQ6bi5tYXAoKGU9Pm51bGwhPWU/cy5jdXJyZW50W2VdOm51bGwpKX0se2V2ZW50OmUsb3JpZW50YXRpb246eCxsb29wOmYsY29sczp3LGRpc2FibGVkSW5kaWNlczpOcihbLi4uYnx8cy5jdXJyZW50Lm1hcCgoKGUsdCk9PkFyKHMuY3VycmVudCx0KT90OnZvaWQgMCkpLHZvaWQgMF0sbiksbWluSW5kZXg6cixtYXhJbmRleDppLHByZXZJbmRleDpScihOLmN1cnJlbnQ+YT9vOk4uY3VycmVudCx0LG4sdyxlLmtleT09PUVyP1wiYmxcIjplLmtleT09PV9yP1widHJcIjpcInRsXCIpLHN0b3BFdmVudDohMH0pXTtpZihudWxsIT1sJiYoTi5jdXJyZW50PWwsTyhOLmN1cnJlbnQpKSxcImJvdGhcIj09PXgpcmV0dXJufWlmKFZvKGUua2V5LHgpKXtpZihRdChlKSxuJiYhbSYmRnQoZS5jdXJyZW50VGFyZ2V0Lm93bmVyRG9jdW1lbnQpPT09ZS5jdXJyZW50VGFyZ2V0KXJldHVybiBOLmN1cnJlbnQ9V28oZS5rZXkseCxwKT9vOmEsdm9pZCBPKE4uY3VycmVudCk7V28oZS5rZXkseCxwKT9OLmN1cnJlbnQ9Zj90Pj1hP2QmJnQhPT1zLmN1cnJlbnQubGVuZ3RoPy0xOm86T3Iocyx7c3RhcnRpbmdJbmRleDp0LGRpc2FibGVkSW5kaWNlczpifSk6TWF0aC5taW4oYSxPcihzLHtzdGFydGluZ0luZGV4OnQsZGlzYWJsZWRJbmRpY2VzOmJ9KSk6Ti5jdXJyZW50PWY/dDw9bz9kJiYtMSE9PXQ/cy5jdXJyZW50Lmxlbmd0aDphOk9yKHMse3N0YXJ0aW5nSW5kZXg6dCxkZWNyZW1lbnQ6ITAsZGlzYWJsZWRJbmRpY2VzOmJ9KTpNYXRoLm1heChvLE9yKHMse3N0YXJ0aW5nSW5kZXg6dCxkZWNyZW1lbnQ6ITAsZGlzYWJsZWRJbmRpY2VzOmJ9KSksQ3IocyxOLmN1cnJlbnQpP08obnVsbCk6TyhOLmN1cnJlbnQpfX0pKSxKPW8udXNlTWVtbygoKCk9Pm0mJm4mJlkmJntcImFyaWEtYWN0aXZlZGVzY2VuZGFudFwiOkt8fFV9KSxbbSxuLFksSyxVXSksWj1vLnVzZU1lbW8oKCgpPT4oe1wiYXJpYS1vcmllbnRhdGlvblwiOlwiYm90aFwiPT09eD92b2lkIDA6eCwuLi4hZW4oaS5kb21SZWZlcmVuY2UpJiZKLG9uS2V5RG93bjpYLG9uUG9pbnRlck1vdmUoKXtqLmN1cnJlbnQ9ITB9fSkpLFtKLFgsaS5kb21SZWZlcmVuY2UseF0pLFE9by51c2VNZW1vKCgoKT0+e2Z1bmN0aW9uIGUoZSl7XCJhdXRvXCI9PT1nJiZXdChlLm5hdGl2ZUV2ZW50KSYmKFIuY3VycmVudD0hMCl9cmV0dXJuey4uLkosb25LZXlEb3duKGUpe2ouY3VycmVudD0hMTtjb25zdCB0PTA9PT1lLmtleS5pbmRleE9mKFwiQXJyb3dcIiksbz1mdW5jdGlvbihlLHQsbil7cmV0dXJuIEJvKHQsbj9lPT09U3I6ZT09PV9yLGU9PT1Fcil9KGUua2V5LHgscCksaT1VbyhlLmtleSx4LHApLGE9Vm8oZS5rZXkseCksbD0oaD9vOmEpfHxcIkVudGVyXCI9PT1lLmtleXx8XCJcIj09PWUua2V5LnRyaW0oKTtpZihtJiZuKXtjb25zdCBuPW51bGw9PVQ/dm9pZCAwOlQubm9kZXNSZWYuY3VycmVudC5maW5kKChlPT5udWxsPT1lLnBhcmVudElkKSkscj1UJiZuP2Z1bmN0aW9uKGUsdCl7bGV0IG4scj0tMTtyZXR1cm4gZnVuY3Rpb24gdChvLGkpe2k+ciYmKG49byxyPWkpLFhyKGUsbykuZm9yRWFjaCgoZT0+e3QoZS5pZCxpKzEpfSkpfSh0LDApLGUuZmluZCgoZT0+ZS5pZD09PW4pKX0oVC5ub2Rlc1JlZi5jdXJyZW50LG4uaWQpOm51bGw7aWYodCYmciYmUyl7Y29uc3QgdD1uZXcgS2V5Ym9hcmRFdmVudChcImtleWRvd25cIix7a2V5OmUua2V5LGJ1YmJsZXM6ITB9KTtpZihvfHxpKXt2YXIgYyxkO2NvbnN0IG49KG51bGw9PShjPXIuY29udGV4dCk/dm9pZCAwOmMuZWxlbWVudHMuZG9tUmVmZXJlbmNlKT09PWUuY3VycmVudFRhcmdldCxhPWkmJiFuP251bGw9PShkPXIuY29udGV4dCk/dm9pZCAwOmQuZWxlbWVudHMuZG9tUmVmZXJlbmNlOm8/cy5jdXJyZW50LmZpbmQoKGU9PihudWxsPT1lP3ZvaWQgMDplLmlkKT09PVUpKTpudWxsO2EmJihRdChlKSxhLmRpc3BhdGNoRXZlbnQodCksSCh2b2lkIDApKX12YXIgZjtpZihhJiZyLmNvbnRleHQmJnIuY29udGV4dC5vcGVuJiZyLnBhcmVudElkJiZlLmN1cnJlbnRUYXJnZXQhPT1yLmNvbnRleHQuZWxlbWVudHMuZG9tUmVmZXJlbmNlKXJldHVybiBRdChlKSx2b2lkKG51bGw9PShmPXIuY29udGV4dC5lbGVtZW50cy5kb21SZWZlcmVuY2UpfHxmLmRpc3BhdGNoRXZlbnQodCkpfXJldHVybiBYKGUpfShufHx5fHwhdCkmJihsJiYoQS5jdXJyZW50PWgmJmE/bnVsbDplLmtleSksaD9vJiYoUXQoZSksbj8oTi5jdXJyZW50PVByKHMsei5jdXJyZW50KSxPKE4uY3VycmVudCkpOnIoITAsZS5uYXRpdmVFdmVudCxcImxpc3QtbmF2aWdhdGlvblwiKSk6YSYmKG51bGwhPXUmJihOLmN1cnJlbnQ9dSksUXQoZSksIW4mJnk/cighMCxlLm5hdGl2ZUV2ZW50LFwibGlzdC1uYXZpZ2F0aW9uXCIpOlgoZSksbiYmTyhOLmN1cnJlbnQpKSl9LG9uRm9jdXMoKXtuJiYhbSYmTyhudWxsKX0sb25Qb2ludGVyRG93bjpmdW5jdGlvbihlKXtSLmN1cnJlbnQ9ZyxcImF1dG9cIj09PWcmJlV0KGUubmF0aXZlRXZlbnQpJiYoUi5jdXJyZW50PSEwKX0sb25Nb3VzZURvd246ZSxvbkNsaWNrOmV9fSksW1UsSixYLHosZyxzLGgsTyxyLG4seSx4LHAsdSxULG0sU10pO3JldHVybiBvLnVzZU1lbW8oKCgpPT5jP3tyZWZlcmVuY2U6USxmbG9hdGluZzpaLGl0ZW06R306e30pLFtjLFEsWixHXSl9Y29uc3QgS289bmV3IE1hcChbW1wic2VsZWN0XCIsXCJsaXN0Ym94XCJdLFtcImNvbWJvYm94XCIsXCJsaXN0Ym94XCJdLFtcImxhYmVsXCIsITFdXSk7ZnVuY3Rpb24gSG8oZSx0KXt2YXIgbjt2b2lkIDA9PT10JiYodD17fSk7Y29uc3R7b3BlbjpyLGZsb2F0aW5nSWQ6aX09ZSx7ZW5hYmxlZDpzPSEwLHJvbGU6YT1cImRpYWxvZ1wifT10LGw9bnVsbCE9KG49S28uZ2V0KGEpKT9uOmEsYz1CcigpLHU9bnVsbCE9JHIoKSxkPW8udXNlTWVtbygoKCk9PlwidG9vbHRpcFwiPT09bHx8XCJsYWJlbFwiPT09YT97W1wiYXJpYS1cIisoXCJsYWJlbFwiPT09YT9cImxhYmVsbGVkYnlcIjpcImRlc2NyaWJlZGJ5XCIpXTpyP2k6dm9pZCAwfTp7XCJhcmlhLWV4cGFuZGVkXCI6cj9cInRydWVcIjpcImZhbHNlXCIsXCJhcmlhLWhhc3BvcHVwXCI6XCJhbGVydGRpYWxvZ1wiPT09bD9cImRpYWxvZ1wiOmwsXCJhcmlhLWNvbnRyb2xzXCI6cj9pOnZvaWQgMCwuLi5cImxpc3Rib3hcIj09PWwmJntyb2xlOlwiY29tYm9ib3hcIn0sLi4uXCJtZW51XCI9PT1sJiZ7aWQ6Y30sLi4uXCJtZW51XCI9PT1sJiZ1JiZ7cm9sZTpcIm1lbnVpdGVtXCJ9LC4uLlwic2VsZWN0XCI9PT1hJiZ7XCJhcmlhLWF1dG9jb21wbGV0ZVwiOlwibm9uZVwifSwuLi5cImNvbWJvYm94XCI9PT1hJiZ7XCJhcmlhLWF1dG9jb21wbGV0ZVwiOlwibGlzdFwifX0pLFtsLGksdSxyLGMsYV0pLGY9by51c2VNZW1vKCgoKT0+e2NvbnN0IGU9e2lkOmksLi4ubCYme3JvbGU6bH19O3JldHVyblwidG9vbHRpcFwiPT09bHx8XCJsYWJlbFwiPT09YT9lOnsuLi5lLC4uLlwibWVudVwiPT09bCYme1wiYXJpYS1sYWJlbGxlZGJ5XCI6Y319fSksW2wsaSxjLGFdKSxoPW8udXNlQ2FsbGJhY2soKGU9PntsZXR7YWN0aXZlOnQsc2VsZWN0ZWQ6bn09ZTtjb25zdCByPXtyb2xlOlwib3B0aW9uXCIsLi4udCYme2lkOmkrXCItb3B0aW9uXCJ9fTtzd2l0Y2goYSl7Y2FzZVwic2VsZWN0XCI6cmV0dXJuey4uLnIsXCJhcmlhLXNlbGVjdGVkXCI6dCYmbn07Y2FzZVwiY29tYm9ib3hcIjpyZXR1cm57Li4uciwuLi50JiZ7XCJhcmlhLXNlbGVjdGVkXCI6ITB9fX1yZXR1cm57fX0pLFtpLGFdKTtyZXR1cm4gby51c2VNZW1vKCgoKT0+cz97cmVmZXJlbmNlOmQsZmxvYXRpbmc6ZixpdGVtOmh9Ont9KSxbcyxkLGYsaF0pfWNvbnN0IHFvPWU9PmUucmVwbGFjZSgvW0EtWl0rKD8hW2Etel0pfFtBLVpdL2csKChlLHQpPT4odD9cIi1cIjpcIlwiKStlLnRvTG93ZXJDYXNlKCkpKTtmdW5jdGlvbiBZbyhlLHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZSh0KTplfWZ1bmN0aW9uIEdvKGUsdCl7Y29uc3RbbixyXT1lO2xldCBvPSExO2NvbnN0IGk9dC5sZW5ndGg7Zm9yKGxldCBlPTAscz1pLTE7ZTxpO3M9ZSsrKXtjb25zdFtpLGFdPXRbZV18fFswLDBdLFtsLGNdPXRbc118fFswLDBdO2E+PXIhPWM+PXImJm48PShsLWkpKihyLWEpLyhjLWEpK2kmJihvPSFvKX1yZXR1cm4gb31mdW5jdGlvbiBYbyhlKXt2b2lkIDA9PT1lJiYoZT17fSk7Y29uc3R7YnVmZmVyOnQ9LjUsYmxvY2tQb2ludGVyRXZlbnRzOm49ITEscmVxdWlyZUludGVudDpyPSEwfT1lO2xldCBvLGk9ITEscz1udWxsLGE9bnVsbCxsPXBlcmZvcm1hbmNlLm5vdygpO2NvbnN0IGM9ZT0+e2xldHt4Om4seTpjLHBsYWNlbWVudDp1LGVsZW1lbnRzOmQsb25DbG9zZTpmLG5vZGVJZDpoLHRyZWU6cH09ZTtyZXR1cm4gZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbSgpe2NsZWFyVGltZW91dChvKSxmKCl9aWYoY2xlYXJUaW1lb3V0KG8pLCFkLmRvbVJlZmVyZW5jZXx8IWQuZmxvYXRpbmd8fG51bGw9PXV8fG51bGw9PW58fG51bGw9PWMpcmV0dXJuO2NvbnN0e2NsaWVudFg6ZyxjbGllbnRZOnZ9PWUseT1bZyx2XSxiPVh0KGUpLHg9XCJtb3VzZWxlYXZlXCI9PT1lLnR5cGUsdz16dChkLmZsb2F0aW5nLGIpLEU9enQoZC5kb21SZWZlcmVuY2UsYiksUz1kLmRvbVJlZmVyZW5jZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxfPWQuZmxvYXRpbmcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksaz11LnNwbGl0KFwiLVwiKVswXSxDPW4+Xy5yaWdodC1fLndpZHRoLzIsUD1jPl8uYm90dG9tLV8uaGVpZ2h0LzIsVD1mdW5jdGlvbihlLHQpe3JldHVybiBlWzBdPj10LngmJmVbMF08PXQueCt0LndpZHRoJiZlWzFdPj10LnkmJmVbMV08PXQueSt0LmhlaWdodH0oeSxTKSxPPV8ud2lkdGg+Uy53aWR0aCxSPV8uaGVpZ2h0PlMuaGVpZ2h0LE49KE8/UzpfKS5sZWZ0LEE9KE8/UzpfKS5yaWdodCxqPShSP1M6XykudG9wLE09KFI/UzpfKS5ib3R0b207aWYodyYmKGk9ITAsIXgpKXJldHVybjtpZihFJiYoaT0hMSksRSYmIXgpcmV0dXJuIHZvaWQoaT0hMCk7aWYoeCYmU3QoZS5yZWxhdGVkVGFyZ2V0KSYmenQoZC5mbG9hdGluZyxlLnJlbGF0ZWRUYXJnZXQpKXJldHVybjtpZihwJiZYcihwLm5vZGVzUmVmLmN1cnJlbnQsaCkuc29tZSgoZT0+e2xldHtjb250ZXh0OnR9PWU7cmV0dXJuIG51bGw9PXQ/dm9pZCAwOnQub3Blbn0pKSlyZXR1cm47aWYoXCJ0b3BcIj09PWsmJmM+PVMuYm90dG9tLTF8fFwiYm90dG9tXCI9PT1rJiZjPD1TLnRvcCsxfHxcImxlZnRcIj09PWsmJm4+PVMucmlnaHQtMXx8XCJyaWdodFwiPT09ayYmbjw9Uy5sZWZ0KzEpcmV0dXJuIG0oKTtsZXQgST1bXTtzd2l0Y2goayl7Y2FzZVwidG9wXCI6ST1bW04sUy50b3ArMV0sW04sXy5ib3R0b20tMV0sW0EsXy5ib3R0b20tMV0sW0EsUy50b3ArMV1dO2JyZWFrO2Nhc2VcImJvdHRvbVwiOkk9W1tOLF8udG9wKzFdLFtOLFMuYm90dG9tLTFdLFtBLFMuYm90dG9tLTFdLFtBLF8udG9wKzFdXTticmVhaztjYXNlXCJsZWZ0XCI6ST1bW18ucmlnaHQtMSxNXSxbXy5yaWdodC0xLGpdLFtTLmxlZnQrMSxqXSxbUy5sZWZ0KzEsTV1dO2JyZWFrO2Nhc2VcInJpZ2h0XCI6ST1bW1MucmlnaHQtMSxNXSxbUy5yaWdodC0xLGpdLFtfLmxlZnQrMSxqXSxbXy5sZWZ0KzEsTV1dfWlmKCFHbyhbZyx2XSxJKSl7aWYoaSYmIVQpcmV0dXJuIG0oKTtpZigheCYmcil7Y29uc3QgdD1mdW5jdGlvbihlLHQpe2NvbnN0IG49cGVyZm9ybWFuY2Uubm93KCkscj1uLWw7aWYobnVsbD09PXN8fG51bGw9PT1hfHwwPT09cilyZXR1cm4gcz1lLGE9dCxsPW4sbnVsbDtjb25zdCBvPWUtcyxpPXQtYSxjPU1hdGguc3FydChvKm8raSppKTtyZXR1cm4gcz1lLGE9dCxsPW4sYy9yfShlLmNsaWVudFgsZS5jbGllbnRZKTtpZihudWxsIT09dCYmdDwuMSlyZXR1cm4gbSgpfUdvKFtnLHZdLGZ1bmN0aW9uKGUpe2xldFtuLHJdPWU7c3dpdGNoKGspe2Nhc2VcInRvcFwiOnJldHVybltbTz9uK3QvMjpDP24rNCp0Om4tNCp0LHIrdCsxXSxbTz9uLXQvMjpDP24rNCp0Om4tNCp0LHIrdCsxXSxbXy5sZWZ0LEN8fE8/Xy5ib3R0b20tdDpfLnRvcF0sW18ucmlnaHQsQz9PP18uYm90dG9tLXQ6Xy50b3A6Xy5ib3R0b20tdF1dO2Nhc2VcImJvdHRvbVwiOnJldHVybltbTz9uK3QvMjpDP24rNCp0Om4tNCp0LHItdF0sW08/bi10LzI6Qz9uKzQqdDpuLTQqdCxyLXRdLFtfLmxlZnQsQ3x8Tz9fLnRvcCt0Ol8uYm90dG9tXSxbXy5yaWdodCxDP08/Xy50b3ArdDpfLmJvdHRvbTpfLnRvcCt0XV07Y2FzZVwibGVmdFwiOntjb25zdCBlPVtuK3QrMSxSP3IrdC8yOlA/cis0KnQ6ci00KnRdLG89W24rdCsxLFI/ci10LzI6UD9yKzQqdDpyLTQqdF07cmV0dXJuW1tQfHxSP18ucmlnaHQtdDpfLmxlZnQsXy50b3BdLFtQP1I/Xy5yaWdodC10Ol8ubGVmdDpfLnJpZ2h0LXQsXy5ib3R0b21dLGUsb119Y2FzZVwicmlnaHRcIjpyZXR1cm5bW24tdCxSP3IrdC8yOlA/cis0KnQ6ci00KnRdLFtuLXQsUj9yLXQvMjpQP3IrNCp0OnItNCp0XSxbUHx8Uj9fLmxlZnQrdDpfLnJpZ2h0LF8udG9wXSxbUD9SP18ubGVmdCt0Ol8ucmlnaHQ6Xy5sZWZ0K3QsXy5ib3R0b21dXX19KFtuLGNdKSk/IWkmJnImJihvPXdpbmRvdy5zZXRUaW1lb3V0KG0sNDApKTptKCl9fX07cmV0dXJuIGMuX19vcHRpb25zPXtibG9ja1BvaW50ZXJFdmVudHM6bn0sY31jb25zdCBKbz14ZShcIkluZm9cIixbW1wiY2lyY2xlXCIse2N4OlwiMTJcIixjeTpcIjEyXCIscjpcIjEwXCIsa2V5OlwiMW1nbGF5XCJ9XSxbXCJwYXRoXCIse2Q6XCJNMTIgMTZ2LTRcIixrZXk6XCIxZHRpZnVcIn1dLFtcInBhdGhcIix7ZDpcIk0xMiA4aC4wMVwiLGtleTpcImU5Ym9pM1wifV1dKSxabz14ZShcIlRyaWFuZ2xlQWxlcnRcIixbW1wicGF0aFwiLHtkOlwibTIxLjczIDE4LTgtMTRhMiAyIDAgMCAwLTMuNDggMGwtOCAxNEEyIDIgMCAwIDAgNCAyMWgxNmEyIDIgMCAwIDAgMS43My0zXCIsa2V5Olwid21vZW5xXCJ9XSxbXCJwYXRoXCIse2Q6XCJNMTIgOXY0XCIsa2V5OlwianV6cHU3XCJ9XSxbXCJwYXRoXCIse2Q6XCJNMTIgMTdoLjAxXCIsa2V5OlwicDMycDA1XCJ9XV0pLFFvPXhlKFwiVHJhc2gyXCIsW1tcInBhdGhcIix7ZDpcIk0zIDZoMThcIixrZXk6XCJkMHdtMGpcIn1dLFtcInBhdGhcIix7ZDpcIk0xOSA2djE0YzAgMS0xIDItMiAySDdjLTEgMC0yLTEtMi0yVjZcIixrZXk6XCI0YWxydDRcIn1dLFtcInBhdGhcIix7ZDpcIk04IDZWNGMwLTEgMS0yIDItMmg0YzEgMCAyIDEgMiAydjJcIixrZXk6XCJ2MDdzMGVcIn1dLFtcImxpbmVcIix7eDE6XCIxMFwiLHgyOlwiMTBcIix5MTpcIjExXCIseTI6XCIxN1wiLGtleTpcIjF1dWZyNVwifV0sW1wibGluZVwiLHt4MTpcIjE0XCIseDI6XCIxNFwiLHkxOlwiMTFcIix5MjpcIjE3XCIsa2V5OlwieHR4a2RcIn1dXSk7dmFyIGVpPVwibGlnaHRcIix0aT1mdW5jdGlvbihlKXt2YXIgdD1lLmljb24sbj12b2lkIDA9PT10P251bGw6dCxyPWUudGhlbWUsaT12b2lkIDA9PT1yP2VpOnIscz1lLnZhcmlhbnQsYT12b2lkIDA9PT1zP1wibmV1dHJhbFwiOnMsbD1cIlsmPnN2Z106aC01IFsmPnN2Z106dy01XCIsYz1cImxpZ2h0XCI9PT1pP1widGV4dC1pY29uLXNlY29uZGFyeVwiOlwidGV4dC1pY29uLWludmVyc2VcIjtpZihuJiYoMCxvLmlzVmFsaWRFbGVtZW50KShuKSlyZXR1cm4oMCxvLmNsb25lRWxlbWVudCkobix7Y2xhc3NOYW1lOnRlKGwsYyxuLnByb3BzLmNsYXNzTmFtZSl9KTtzd2l0Y2goYSl7Y2FzZVwibmV1dHJhbFwiOnJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEpvLHtjbGFzc05hbWU6dGUobCxjKX0pO2Nhc2VcImluZm9cIjp2YXIgdT1cImxpZ2h0XCI9PT1pP1widGV4dC1zdXBwb3J0LWluZm9cIjpcInRleHQtc3VwcG9ydC1pbmZvLWludmVyc2VcIjtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChKbyx7Y2xhc3NOYW1lOnRlKGwsdSl9KTtjYXNlXCJzdWNjZXNzXCI6dmFyIGQ9XCJsaWdodFwiPT09aT9cInRleHQtc3VwcG9ydC1zdWNjZXNzXCI6XCJ0ZXh0LXN1cHBvcnQtc3VjY2Vzcy1pbnZlcnNlXCI7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRWUse2NsYXNzTmFtZTp0ZShsLGQpfSk7Y2FzZVwid2FybmluZ1wiOnZhciBmPVwibGlnaHRcIj09PWk/XCJ0ZXh0LXN1cHBvcnQtd2FybmluZ1wiOlwidGV4dC1zdXBwb3J0LXdhcm5pbmctaW52ZXJzZVwiO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFpvLHtjbGFzc05hbWU6dGUobCxmKX0pO2Nhc2VcImVycm9yXCI6dmFyIGg9XCJsaWdodFwiPT09aT9cInRleHQtc3VwcG9ydC1lcnJvclwiOlwidGV4dC1zdXBwb3J0LWVycm9yLWludmVyc2VcIjtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChRbyx7Y2xhc3NOYW1lOnRlKGwsaCl9KTtkZWZhdWx0OnJldHVybiBudWxsfX0sbmk9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5hY3Rpb25UeXBlLG49dm9pZCAwPT09dD9cImJ1dHRvblwiOnQscj1lLm9uQWN0aW9uLG89dm9pZCAwPT09cj9mdW5jdGlvbigpe306cixpPWUuYWN0aW9uTGFiZWwscz12b2lkIDA9PT1pP1wiXCI6aSxhPWUudGhlbWUsbD12b2lkIDA9PT1hP2VpOmEsYz1cImZvY3VzOnJpbmctMCBmb2N1czpyaW5nLW9mZnNldC0wIHJpbmctb2Zmc2V0LTAgZm9jdXM6b3V0bGluZS1ub25lXCIsdT1cInRleHQtYnV0dG9uLXByaW1hcnkgYm9yZGVyLWJ1dHRvbi1wcmltYXJ5IGhvdmVyOmJvcmRlci1idXR0b24tcHJpbWFyeSBob3Zlcjp0ZXh0LWJ1dHRvbi1wcmltYXJ5LWhvdmVyXCI7c3dpdGNoKFwiZGFya1wiPT09bCYmKHU9XCJ0ZXh0LXRleHQtaW52ZXJzZSBib3JkZXItdGV4dC1pbnZlcnNlIGhvdmVyOmJvcmRlci10ZXh0LWludmVyc2UgaG92ZXI6dGV4dC10ZXh0LWludmVyc2VcIiksbil7Y2FzZVwiYnV0dG9uXCI6cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQobGUse3ZhcmlhbnQ6XCJvdXRsaW5lXCIsc2l6ZTpcInhzXCIsb25DbGljazpvLGNsYXNzTmFtZTp0ZShcInJvdW5kZWRcIixjLHUsXCJkYXJrXCI9PT1sP1wiYmctdHJhbnNwYXJlbnQgaG92ZXI6YmctdHJhbnNwYXJlbnRcIjpcImJnLXdoaXRlIGhvdmVyOmJnLXdoaXRlXCIpfSxzKTtjYXNlXCJsaW5rXCI6cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQobGUse3ZhcmlhbnQ6XCJsaW5rXCIsc2l6ZTpcInhzXCIsb25DbGljazpvLGNsYXNzTmFtZTp0ZShjLHUpfSxzKTtkZWZhdWx0OnJldHVybiBudWxsfX0scmk9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS50aGVtZSxuPXZvaWQgMD09PXQ/ZWk6dCxyPWUudGl0bGUsbz12b2lkIDA9PT1yP1wiXCI6cjtyZXR1cm4hbyYmaXNOYU4obyk/bnVsbDpSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6dGUoXCJibG9ja1wiLHtsaWdodDpcInRleHQtdGV4dC1wcmltYXJ5XCIsZGFyazpcInRleHQtdGV4dC1pbnZlcnNlXCJ9W25dLFwidGV4dC1zbSBsZWFkaW5nLTUgZm9udC1zZW1pYm9sZFwiKX0sbyl9LG9pPWZ1bmN0aW9uKGUpe3ZhciB0PWUudGhlbWUsbj12b2lkIDA9PT10P2VpOnQscj1lLmNvbnRlbnQsbz12b2lkIDA9PT1yP1wiXCI6cjtyZXR1cm4hbyYmaXNOYU4obyk/bnVsbDpSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6dGUoe2xpZ2h0OlwidGV4dC10ZXh0LXByaW1hcnlcIixkYXJrOlwidGV4dC10ZXh0LWludmVyc2VcIn1bbl0sXCJibG9jayB0ZXh0LXNtIFsmXypdOnRleHQtc20gbGVhZGluZy01IFsmXypdOmxlYWRpbmctNSBmb250LW5vcm1hbFwiKX0sbyl9LGlpPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGgsdD1uZXcgQXJyYXkoZSksbj0wO248ZTtuKyspdFtuXT1hcmd1bWVudHNbbl07cmV0dXJuIGZ1bmN0aW9uKGUpe3QuZm9yRWFjaCgoZnVuY3Rpb24odCl7XCJmdW5jdGlvblwiPT10eXBlb2YgdD90KGUpOnQmJih0LmN1cnJlbnQ9ZSl9KSl9fTtmdW5jdGlvbiBzaShlKXtyZXR1cm4gc2k9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0sc2koZSl9ZnVuY3Rpb24gYWkoKXtyZXR1cm4gYWk9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxhaS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gbGkoZSx0KXt2YXIgbj1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgcj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihyPXIuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLG4ucHVzaC5hcHBseShuLHIpfXJldHVybiBufWZ1bmN0aW9uIGNpKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP2xpKE9iamVjdChuKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7dWkoZSx0LG5bdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMobikpOmxpKE9iamVjdChuKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG4sdCkpfSkpfXJldHVybiBlfWZ1bmN0aW9uIHVpKGUsdCxuKXtyZXR1cm4odD1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlKXtpZihcIm9iamVjdFwiIT1zaShlKXx8IWUpcmV0dXJuIGU7dmFyIHQ9ZVtTeW1ib2wudG9QcmltaXRpdmVdO2lmKHZvaWQgMCE9PXQpe3ZhciBuPXQuY2FsbChlLFwic3RyaW5nXCIpO2lmKFwib2JqZWN0XCIhPXNpKG4pKXJldHVybiBuO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKX1yZXR1cm4gU3RyaW5nKGUpfShlKTtyZXR1cm5cInN5bWJvbFwiPT1zaSh0KT90OnQrXCJcIn0odCkpaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1uLGV9ZnVuY3Rpb24gZGkoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfXZhciBmaT1mdW5jdGlvbihlKXt2YXIgdCxuLHIscyxhPWUudmFyaWFudCxsPXZvaWQgMD09PWE/XCJkYXJrXCI6YSxjPWUucGxhY2VtZW50LHU9dm9pZCAwPT09Yz9cImJvdHRvbVwiOmMsZD1lLnRpdGxlLGY9dm9pZCAwPT09ZD9cIlwiOmQsaD1lLmNvbnRlbnQscD1lLmFycm93LG09dm9pZCAwIT09cCYmcCxnPWUub3Blbix2PWUuc2V0T3Blbix5PWUuY2hpbGRyZW4sYj1lLmNsYXNzTmFtZSx4PWUudG9vbHRpcFBvcnRhbFJvb3Qsdz12b2lkIDA9PT14P251bGw6eCxFPWUudG9vbHRpcFBvcnRhbElkLFM9dm9pZCAwPT09RT9cIlwiOkUsXz1lLmJvdW5kYXJ5LGs9dm9pZCAwPT09Xz9cImNsaXBwaW5nQW5jZXN0b3JzXCI6XyxDPWUuc3RyYXRlZ3ksUD12b2lkIDA9PT1DP1wiZml4ZWRcIjpDLFQ9ZS5vZmZzZXQsTz12b2lkIDA9PT1UPzg6VCxSPWUudHJpZ2dlcnMsTj12b2lkIDA9PT1SP1tcImhvdmVyXCIsXCJmb2N1c1wiXTpSLEE9ZS5pbnRlcmFjdGl2ZSxqPXZvaWQgMCE9PUEmJkEsTT0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgZyYmXCJmdW5jdGlvblwiPT10eXBlb2Ygdn0pLFtnLHZdKSxJPShyPSgwLG8udXNlU3RhdGUpKCExKSxzPTIsZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0ocil8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KHIscyl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIGRpKGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/ZGkoZSx0KTp2b2lkIDB9fShyLHMpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCkpLEQ9SVswXSxMPUlbMV0sRj0oMCxvLnVzZVJlZikobnVsbCksej1Nbyh7b3BlbjpNP2c6RCxvbk9wZW5DaGFuZ2U6TT92OkwscGxhY2VtZW50OnUsc3RyYXRlZ3k6UCxtaWRkbGV3YXJlOlttcihPKSxncih7Ym91bmRhcnk6a30pLChuPXtib3VuZGFyeTprfSx7Li4ub3Iobiksb3B0aW9uczpbbix1bmRlZmluZWRdfSksdnIoe2VsZW1lbnQ6Rn0pXSx3aGlsZUVsZW1lbnRzTW91bnRlZDpucn0pLEI9ei5yZWZzLFY9ei5mbG9hdGluZ1N0eWxlcyxXPXouY29udGV4dCxVPU9vKFcse2VuYWJsZWQ6IU0mJk4uaW5jbHVkZXMoXCJjbGlja1wiKX0pLCQ9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD17fSk7Y29uc3R7b3BlbjpuLG9uT3BlbkNoYW5nZTpyLGRhdGFSZWY6aSxldmVudHM6cyxlbGVtZW50czphfT1lLHtlbmFibGVkOmw9ITAsZGVsYXk6Yz0wLGhhbmRsZUNsb3NlOnU9bnVsbCxtb3VzZU9ubHk6ZD0hMSxyZXN0TXM6Zj0wLG1vdmU6aD0hMH09dCxwPUtyKCksbT0kcigpLGc9cXIodSksdj1xcihjKSx5PXFyKG4pLGI9by51c2VSZWYoKSx4PW8udXNlUmVmKC0xKSx3PW8udXNlUmVmKCksRT1vLnVzZVJlZigtMSksUz1vLnVzZVJlZighMCksXz1vLnVzZVJlZighMSksaz1vLnVzZVJlZigoKCk9Pnt9KSksQz1vLnVzZUNhbGxiYWNrKCgoKT0+e3ZhciBlO2NvbnN0IHQ9bnVsbD09KGU9aS5jdXJyZW50Lm9wZW5FdmVudCk/dm9pZCAwOmUudHlwZTtyZXR1cm4obnVsbD09dD92b2lkIDA6dC5pbmNsdWRlcyhcIm1vdXNlXCIpKSYmXCJtb3VzZWRvd25cIiE9PXR9KSxbaV0pO28udXNlRWZmZWN0KCgoKT0+e2lmKGwpcmV0dXJuIHMub24oXCJvcGVuY2hhbmdlXCIsZSksKCk9PntzLm9mZihcIm9wZW5jaGFuZ2VcIixlKX07ZnVuY3Rpb24gZShlKXtsZXR7b3Blbjp0fT1lO3R8fChjbGVhclRpbWVvdXQoeC5jdXJyZW50KSxjbGVhclRpbWVvdXQoRS5jdXJyZW50KSxTLmN1cnJlbnQ9ITApfX0pLFtsLHNdKSxvLnVzZUVmZmVjdCgoKCk9PntpZighbClyZXR1cm47aWYoIWcuY3VycmVudClyZXR1cm47aWYoIW4pcmV0dXJuO2Z1bmN0aW9uIGUoZSl7QygpJiZyKCExLGUsXCJob3ZlclwiKX1jb25zdCB0PVl0KGEuZmxvYXRpbmcpLmRvY3VtZW50RWxlbWVudDtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGUpLCgpPT57dC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGUpfX0pLFthLmZsb2F0aW5nLG4scixsLGcsQ10pO2NvbnN0IFA9by51c2VDYWxsYmFjaygoZnVuY3Rpb24oZSx0LG4pe3ZvaWQgMD09PXQmJih0PSEwKSx2b2lkIDA9PT1uJiYobj1cImhvdmVyXCIpO2NvbnN0IG89R3Iodi5jdXJyZW50LFwiY2xvc2VcIixiLmN1cnJlbnQpO28mJiF3LmN1cnJlbnQ/KGNsZWFyVGltZW91dCh4LmN1cnJlbnQpLHguY3VycmVudD13aW5kb3cuc2V0VGltZW91dCgoKCk9PnIoITEsZSxuKSksbykpOnQmJihjbGVhclRpbWVvdXQoeC5jdXJyZW50KSxyKCExLGUsbikpfSksW3Yscl0pLFQ9eHIoKCgpPT57ay5jdXJyZW50KCksdy5jdXJyZW50PXZvaWQgMH0pKSxPPXhyKCgoKT0+e2lmKF8uY3VycmVudCl7Y29uc3QgZT1ZdChhLmZsb2F0aW5nKS5ib2R5O2Uuc3R5bGUucG9pbnRlckV2ZW50cz1cIlwiLGUucmVtb3ZlQXR0cmlidXRlKFlyKSxfLmN1cnJlbnQ9ITF9fSkpO28udXNlRWZmZWN0KCgoKT0+e2lmKGwmJlN0KGEuZG9tUmVmZXJlbmNlKSl7dmFyIGU7Y29uc3QgdD1hLmRvbVJlZmVyZW5jZTtyZXR1cm4gbiYmdC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLGMpLG51bGw9PShlPWEuZmxvYXRpbmcpfHxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsYyksaCYmdC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsbyx7b25jZTohMH0pLHQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIixvKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIscyksKCk9Pnt2YXIgZTtuJiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsYyksbnVsbD09KGU9YS5mbG9hdGluZyl8fGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIixjKSxoJiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixvKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsbyksdC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLHMpfX1mdW5jdGlvbiB0KCl7cmV0dXJuISFpLmN1cnJlbnQub3BlbkV2ZW50JiZbXCJjbGlja1wiLFwibW91c2Vkb3duXCJdLmluY2x1ZGVzKGkuY3VycmVudC5vcGVuRXZlbnQudHlwZSl9ZnVuY3Rpb24gbyhlKXtpZihjbGVhclRpbWVvdXQoeC5jdXJyZW50KSxTLmN1cnJlbnQ9ITEsZCYmIXF0KGIuY3VycmVudCl8fGY+MCYmIUdyKHYuY3VycmVudCxcIm9wZW5cIikpcmV0dXJuO2NvbnN0IHQ9R3Iodi5jdXJyZW50LFwib3BlblwiLGIuY3VycmVudCk7dD94LmN1cnJlbnQ9d2luZG93LnNldFRpbWVvdXQoKCgpPT57eS5jdXJyZW50fHxyKCEwLGUsXCJob3ZlclwiKX0pLHQpOnIoITAsZSxcImhvdmVyXCIpfWZ1bmN0aW9uIHMoZSl7aWYodCgpKXJldHVybjtrLmN1cnJlbnQoKTtjb25zdCByPVl0KGEuZmxvYXRpbmcpO2lmKGNsZWFyVGltZW91dChFLmN1cnJlbnQpLGcuY3VycmVudCYmaS5jdXJyZW50LmZsb2F0aW5nQ29udGV4dCl7bnx8Y2xlYXJUaW1lb3V0KHguY3VycmVudCksdy5jdXJyZW50PWcuY3VycmVudCh7Li4uaS5jdXJyZW50LmZsb2F0aW5nQ29udGV4dCx0cmVlOnAseDplLmNsaWVudFgseTplLmNsaWVudFksb25DbG9zZSgpe08oKSxUKCksUChlLCEwLFwic2FmZS1wb2x5Z29uXCIpfX0pO2NvbnN0IHQ9dy5jdXJyZW50O3JldHVybiByLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIix0KSx2b2lkKGsuY3VycmVudD0oKT0+e3IucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHQpfSl9KFwidG91Y2hcIiE9PWIuY3VycmVudHx8IXp0KGEuZmxvYXRpbmcsZS5yZWxhdGVkVGFyZ2V0KSkmJlAoZSl9ZnVuY3Rpb24gYyhlKXt0KCl8fGkuY3VycmVudC5mbG9hdGluZ0NvbnRleHQmJihudWxsPT1nLmN1cnJlbnR8fGcuY3VycmVudCh7Li4uaS5jdXJyZW50LmZsb2F0aW5nQ29udGV4dCx0cmVlOnAseDplLmNsaWVudFgseTplLmNsaWVudFksb25DbG9zZSgpe08oKSxUKCksUChlKX19KShlKSl9fSksW2EsbCxlLGQsZixoLFAsVCxPLHIsbix5LHAsdixnLGldKSxJcigoKCk9Pnt2YXIgZTtpZihsJiZuJiZudWxsIT0oZT1nLmN1cnJlbnQpJiZlLl9fb3B0aW9ucy5ibG9ja1BvaW50ZXJFdmVudHMmJkMoKSl7Xy5jdXJyZW50PSEwO2NvbnN0IGU9YS5mbG9hdGluZztpZihTdChhLmRvbVJlZmVyZW5jZSkmJmUpe3ZhciB0O2NvbnN0IG49WXQoYS5mbG9hdGluZykuYm9keTtuLnNldEF0dHJpYnV0ZShZcixcIlwiKTtjb25zdCByPWEuZG9tUmVmZXJlbmNlLG89bnVsbD09cHx8bnVsbD09KHQ9cC5ub2Rlc1JlZi5jdXJyZW50LmZpbmQoKGU9PmUuaWQ9PT1tKSkpfHxudWxsPT0odD10LmNvbnRleHQpP3ZvaWQgMDp0LmVsZW1lbnRzLmZsb2F0aW5nO3JldHVybiBvJiYoby5zdHlsZS5wb2ludGVyRXZlbnRzPVwiXCIpLG4uc3R5bGUucG9pbnRlckV2ZW50cz1cIm5vbmVcIixyLnN0eWxlLnBvaW50ZXJFdmVudHM9XCJhdXRvXCIsZS5zdHlsZS5wb2ludGVyRXZlbnRzPVwiYXV0b1wiLCgpPT57bi5zdHlsZS5wb2ludGVyRXZlbnRzPVwiXCIsci5zdHlsZS5wb2ludGVyRXZlbnRzPVwiXCIsZS5zdHlsZS5wb2ludGVyRXZlbnRzPVwiXCJ9fX19KSxbbCxuLG0sYSxwLGcsQ10pLElyKCgoKT0+e258fChiLmN1cnJlbnQ9dm9pZCAwLFQoKSxPKCkpfSksW24sVCxPXSksby51c2VFZmZlY3QoKCgpPT4oKT0+e1QoKSxjbGVhclRpbWVvdXQoeC5jdXJyZW50KSxjbGVhclRpbWVvdXQoRS5jdXJyZW50KSxPKCl9KSxbbCxhLmRvbVJlZmVyZW5jZSxULE9dKTtjb25zdCBSPW8udXNlTWVtbygoKCk9PntmdW5jdGlvbiBlKGUpe2IuY3VycmVudD1lLnBvaW50ZXJUeXBlfXJldHVybntvblBvaW50ZXJEb3duOmUsb25Qb2ludGVyRW50ZXI6ZSxvbk1vdXNlTW92ZShlKXtjb25zdHtuYXRpdmVFdmVudDp0fT1lO2Z1bmN0aW9uIG8oKXtTLmN1cnJlbnR8fHkuY3VycmVudHx8cighMCx0LFwiaG92ZXJcIil9ZCYmIXF0KGIuY3VycmVudCl8fG58fDA9PT1mfHwoY2xlYXJUaW1lb3V0KEUuY3VycmVudCksXCJ0b3VjaFwiPT09Yi5jdXJyZW50P28oKTpFLmN1cnJlbnQ9d2luZG93LnNldFRpbWVvdXQobyxmKSl9fX0pLFtkLHIsbix5LGZdKSxOPW8udXNlTWVtbygoKCk9Pih7b25Nb3VzZUVudGVyKCl7Y2xlYXJUaW1lb3V0KHguY3VycmVudCl9LG9uTW91c2VMZWF2ZShlKXtQKGUubmF0aXZlRXZlbnQsITEpfX0pKSxbUF0pO3JldHVybiBvLnVzZU1lbW8oKCgpPT5sP3tyZWZlcmVuY2U6UixmbG9hdGluZzpOfTp7fSksW2wsUixOXSl9KFcsY2koe21vdmU6ITEsZW5hYmxlZDohTSYmTi5pbmNsdWRlcyhcImhvdmVyXCIpfSxqJiZ7aGFuZGxlQ2xvc2U6WG8oKX0pKSxLPWZ1bmN0aW9uKGUsdCl7dm9pZCAwPT09dCYmKHQ9e30pO2NvbnN0e29wZW46bixvbk9wZW5DaGFuZ2U6cixldmVudHM6aSxkYXRhUmVmOnMsZWxlbWVudHM6YX09ZSx7ZW5hYmxlZDpsPSEwLHZpc2libGVPbmx5OmM9ITB9PXQsdT1vLnVzZVJlZighMSksZD1vLnVzZVJlZigpLGY9by51c2VSZWYoITApO28udXNlRWZmZWN0KCgoKT0+e2lmKCFsKXJldHVybjtjb25zdCBlPXh0KGEuZG9tUmVmZXJlbmNlKTtmdW5jdGlvbiB0KCl7IW4mJl90KGEuZG9tUmVmZXJlbmNlKSYmYS5kb21SZWZlcmVuY2U9PT1GdChZdChhLmRvbVJlZmVyZW5jZSkpJiYodS5jdXJyZW50PSEwKX1mdW5jdGlvbiByKCl7Zi5jdXJyZW50PSEwfXJldHVybiBlLmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsdCksZS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLHIsITApLCgpPT57ZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiYmx1clwiLHQpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixyLCEwKX19KSxbYS5kb21SZWZlcmVuY2UsbixsXSksby51c2VFZmZlY3QoKCgpPT57aWYobClyZXR1cm4gaS5vbihcIm9wZW5jaGFuZ2VcIixlKSwoKT0+e2kub2ZmKFwib3BlbmNoYW5nZVwiLGUpfTtmdW5jdGlvbiBlKGUpe2xldHtyZWFzb246dH09ZTtcInJlZmVyZW5jZS1wcmVzc1wiIT09dCYmXCJlc2NhcGUta2V5XCIhPT10fHwodS5jdXJyZW50PSEwKX19KSxbaSxsXSksby51c2VFZmZlY3QoKCgpPT4oKT0+e2NsZWFyVGltZW91dChkLmN1cnJlbnQpfSksW10pO2NvbnN0IGg9by51c2VNZW1vKCgoKT0+KHtvblBvaW50ZXJEb3duKGUpe1V0KGUubmF0aXZlRXZlbnQpfHwoZi5jdXJyZW50PSExKX0sb25Nb3VzZUxlYXZlKCl7dS5jdXJyZW50PSExfSxvbkZvY3VzKGUpe2lmKHUuY3VycmVudClyZXR1cm47Y29uc3QgdD1YdChlLm5hdGl2ZUV2ZW50KTtpZihjJiZTdCh0KSl0cnl7aWYoJHQoKSYmSHQoKSl0aHJvdyBFcnJvcigpO2lmKCF0Lm1hdGNoZXMoXCI6Zm9jdXMtdmlzaWJsZVwiKSlyZXR1cm59Y2F0Y2goZSl7aWYoIWYuY3VycmVudCYmIVp0KHQpKXJldHVybn1yKCEwLGUubmF0aXZlRXZlbnQsXCJmb2N1c1wiKX0sb25CbHVyKGUpe3UuY3VycmVudD0hMTtjb25zdCB0PWUucmVsYXRlZFRhcmdldCxuPWUubmF0aXZlRXZlbnQsbz1TdCh0KSYmdC5oYXNBdHRyaWJ1dGUoSHIoXCJmb2N1cy1ndWFyZFwiKSkmJlwib3V0c2lkZVwiPT09dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXR5cGVcIik7ZC5jdXJyZW50PXdpbmRvdy5zZXRUaW1lb3V0KCgoKT0+e3ZhciBlO2NvbnN0IGk9RnQoYS5kb21SZWZlcmVuY2U/YS5kb21SZWZlcmVuY2Uub3duZXJEb2N1bWVudDpkb2N1bWVudCk7KHR8fGkhPT1hLmRvbVJlZmVyZW5jZSkmJih6dChudWxsPT0oZT1zLmN1cnJlbnQuZmxvYXRpbmdDb250ZXh0KT92b2lkIDA6ZS5yZWZzLmZsb2F0aW5nLmN1cnJlbnQsaSl8fHp0KGEuZG9tUmVmZXJlbmNlLGkpfHxvfHxyKCExLG4sXCJmb2N1c1wiKSl9KSl9fSkpLFtzLGEuZG9tUmVmZXJlbmNlLHIsY10pO3JldHVybiBvLnVzZU1lbW8oKCgpPT5sP3tyZWZlcmVuY2U6aH06e30pLFtsLGhdKX0oVyx7ZW5hYmxlZDohTSYmTi5pbmNsdWRlcyhcImZvY3VzXCIpfSksSD1GbyhbVSwkLEssam8oVyksSG8oVyx7cm9sZTpcInRvb2x0aXBcIn0pXSkscT1ILmdldFJlZmVyZW5jZVByb3BzLFk9SC5nZXRGbG9hdGluZ1Byb3BzLEc9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD17fSk7Y29uc3R7aW5pdGlhbDpuPXtvcGFjaXR5OjB9LG9wZW46cixjbG9zZTppLGNvbW1vbjpzLGR1cmF0aW9uOmE9MjUwfT10LGw9ZS5wbGFjZW1lbnQsYz1sLnNwbGl0KFwiLVwiKVswXSx1PW8udXNlTWVtbygoKCk9Pih7c2lkZTpjLHBsYWNlbWVudDpsfSkpLFtjLGxdKSxkPVwibnVtYmVyXCI9PXR5cGVvZiBhLGY9KGQ/YTphLm9wZW4pfHwwLGg9KGQ/YTphLmNsb3NlKXx8MCxbcCxtXT1vLnVzZVN0YXRlKCgoKT0+KHsuLi5ZbyhzLHUpLC4uLllvKG4sdSl9KSkpLHtpc01vdW50ZWQ6ZyxzdGF0dXM6dn09ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD17fSk7Y29uc3R7b3BlbjpuLGVsZW1lbnRzOntmbG9hdGluZzpyfX09ZSx7ZHVyYXRpb246aT0yNTB9PXQscz0oXCJudW1iZXJcIj09dHlwZW9mIGk/aTppLmNsb3NlKXx8MCxbYSxsXT1vLnVzZVN0YXRlKFwidW5tb3VudGVkXCIpLGM9ZnVuY3Rpb24oZSx0KXtjb25zdFtuLHJdPW8udXNlU3RhdGUoZSk7cmV0dXJuIGUmJiFuJiZyKCEwKSxvLnVzZUVmZmVjdCgoKCk9PntpZighZSYmbil7Y29uc3QgZT1zZXRUaW1lb3V0KCgoKT0+cighMSkpLHQpO3JldHVybigpPT5jbGVhclRpbWVvdXQoZSl9fSksW2Usbix0XSksbn0obixzKTtyZXR1cm4gY3x8XCJjbG9zZVwiIT09YXx8bChcInVubW91bnRlZFwiKSxJcigoKCk9PntpZihyKXtpZihuKXtsKFwiaW5pdGlhbFwiKTtjb25zdCBlPXJlcXVlc3RBbmltYXRpb25GcmFtZSgoKCk9PntsKFwib3BlblwiKX0pKTtyZXR1cm4oKT0+e2NhbmNlbEFuaW1hdGlvbkZyYW1lKGUpfX1sKFwiY2xvc2VcIil9fSksW24scl0pLHtpc01vdW50ZWQ6YyxzdGF0dXM6YX19KGUse2R1cmF0aW9uOmF9KSx5PXFyKG4pLGI9cXIocikseD1xcihpKSx3PXFyKHMpO3JldHVybiBJcigoKCk9Pntjb25zdCBlPVlvKHkuY3VycmVudCx1KSx0PVlvKHguY3VycmVudCx1KSxuPVlvKHcuY3VycmVudCx1KSxyPVlvKGIuY3VycmVudCx1KXx8T2JqZWN0LmtleXMoZSkucmVkdWNlKCgoZSx0KT0+KGVbdF09XCJcIixlKSkse30pO2lmKFwiaW5pdGlhbFwiPT09diYmbSgodD0+KHt0cmFuc2l0aW9uUHJvcGVydHk6dC50cmFuc2l0aW9uUHJvcGVydHksLi4ubiwuLi5lfSkpKSxcIm9wZW5cIj09PXYmJm0oe3RyYW5zaXRpb25Qcm9wZXJ0eTpPYmplY3Qua2V5cyhyKS5tYXAocW8pLmpvaW4oXCIsXCIpLHRyYW5zaXRpb25EdXJhdGlvbjpmK1wibXNcIiwuLi5uLC4uLnJ9KSxcImNsb3NlXCI9PT12KXtjb25zdCByPXR8fGU7bSh7dHJhbnNpdGlvblByb3BlcnR5Ok9iamVjdC5rZXlzKHIpLm1hcChxbykuam9pbihcIixcIiksdHJhbnNpdGlvbkR1cmF0aW9uOmgrXCJtc1wiLC4uLm4sLi4ucn0pfX0pLFtoLHgseSxiLHcsZix2LHVdKSx7aXNNb3VudGVkOmcsc3R5bGVzOnB9fShXLHtkdXJhdGlvbjoxNTAsaW5pdGlhbDp7b3BhY2l0eTowfSxvcGVuOntvcGFjaXR5OjF9LGNsb3NlOntvcGFjaXR5OjB9fSksWD1HLmlzTW91bnRlZCxKPUcuc3R5bGVzLFo9bnVsbD09PSh0PXtsaWdodDpcImJnLXRvb2x0aXAtYmFja2dyb3VuZC1saWdodCB0ZXh0LXRleHQtcHJpbWFyeVwiLGRhcms6XCJiZy10b29sdGlwLWJhY2tncm91bmQtZGFyayB0ZXh0LXRleHQtb24tY29sb3JcIn0pfHx2b2lkIDA9PT10P3ZvaWQgMDp0W2xdLFE9XCJkYXJrXCI9PT1sP1widGV4dC10b29sdGlwLWJhY2tncm91bmQtZGFya1wiOlwidGV4dC10b29sdGlwLWJhY2tncm91bmQtbGlnaHRcIjtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoaSgpLkZyYWdtZW50LG51bGwsKDAsby5pc1ZhbGlkRWxlbWVudCkoeSkmJigwLG8uY2xvbmVFbGVtZW50KSh5LGNpKGNpKHt9LHkucHJvcHMpLHt9LHtyZWY6aWkoeS5yZWYsQi5zZXRSZWZlcmVuY2UpLGNsYXNzTmFtZTp0ZSh5LnByb3BzLmNsYXNzTmFtZSl9LHEoKSkpLGkoKS5jcmVhdGVFbGVtZW50KHZvLHtpZDpTLHJvb3Q6d30sWCYmaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixhaSh7Y2xhc3NOYW1lOnRlKFwiYWJzb2x1dGUgei0yMCBweS0yIHB4LTMgcm91bmRlZC1tZCB0ZXh0LXhzIGxlYWRpbmctNCBzaGFkb3ctc29mdC1zaGFkb3ctbGdcIixaLFwibWF4LXctODAgdy1maXRcIixiKSxyZWY6Qi5zZXRGbG9hdGluZyxzdHlsZTpjaShjaSh7fSxWKSxKKX0sWSgpKSxpKCkuY3JlYXRlRWxlbWVudChcImRpdlwiLG51bGwsISFmJiZpKCkuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOlwiZm9udC1zZW1pYm9sZFwifSxmKSwhIWgmJmkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImZvbnQtbm9ybWFsXCJ9LGgpKSxtJiZpKCkuY3JlYXRlRWxlbWVudChWcix7cmVmOkYsY29udGV4dDpXLHBsYWNlbWVudDp1LGNsYXNzTmFtZTp0ZShcImZpbGwtY3VycmVudFwiLFEpfSkpKSl9LGhpPVtcInNsdWdcIixcInRleHRcIixcImljb25cIixcImNsYXNzTmFtZVwiLFwiZGlzYWJsZWRcIixcImlzRmlyc3RDaGlsZFwiLFwiaXNMYXN0Q2hpbGRcIl07ZnVuY3Rpb24gcGkoKXtyZXR1cm4gcGk9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxwaS5hcHBseShudWxsLGFyZ3VtZW50cyl9dmFyIG1pPSgwLG8uY3JlYXRlQ29udGV4dCkoKSxnaT1mdW5jdGlvbihlLHQpe3ZhciBuPSgwLG8udXNlQ29udGV4dCkobWkpLHI9ZS5zbHVnLHM9ZS50ZXh0LGE9ZS5pY29uLGw9ZS5jbGFzc05hbWUsYz1lLmRpc2FibGVkLHU9dm9pZCAwIT09YyYmYyxkPWUuaXNGaXJzdENoaWxkLGY9ZS5pc0xhc3RDaGlsZCxoPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfShlLGhpKTtpZighbil0aHJvdyBuZXcgRXJyb3IoXCJCdXR0b24gc2hvdWxkIGJlIHVzZWQgaW5zaWRlIEJ1dHRvbiBHcm91cFwiKTt2YXIgcD1uLmFjdGl2ZUl0ZW0sbT1uLm9uQ2hhbmdlLGc9bi5zaXplLHY9bi5pY29uUG9zaXRpb24seT10ZShcImJnLWJhY2tncm91bmQtcHJpbWFyeSB0ZXh0LXByaW1hcnkgY3Vyc29yLXBvaW50ZXIgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIixcImhvdmVyOmJnLWJ1dHRvbi10ZXJ0aWFyeS1ob3ZlclwiLFwiZm9jdXM6b3V0bGluZS1ub25lXCIsdT9cInRleHQtdGV4dC1kaXNhYmxlZCBjdXJzb3Itbm90LWFsbG93ZWRcIjpcIlwiLHt4czpcInB5LTEgcHgtMSB0ZXh0LXNtIGdhcC0wLjUgWyY+c3ZnXTpoLTQgWyY+c3ZnXTp3LTRcIixzbTpcInB5LTIgcHgtMiB0ZXh0LWJhc2UgZ2FwLTEgWyY+c3ZnXTpoLTQgWyY+c3ZnXTp3LTRcIixtZDpcInB5LTIuNSBweC0yLjUgdGV4dC1iYXNlIGdhcC0xIFsmPnN2Z106aC01IFsmPnN2Z106dy01XCJ9W2ddLFwiYm9yZGVyLTAgYm9yZGVyLXIgYm9yZGVyLWJvcmRlci1zdWJ0bGUgYm9yZGVyLXNvbGlkXCIscD09PXI/XCJiZy1idXR0b24tZGlzYWJsZWRcIjpcIlwiLGQ/XCJyb3VuZGVkLXRsIHJvdW5kZWQtYmwgYm9yZGVyLTAgYm9yZGVyLXIgYm9yZGVyLWJvcmRlci1zdWJ0bGVcIjpcIlwiLGY/XCJyb3VuZGVkLXRyIHJvdW5kZWQtYnIgYm9yZGVyLTBcIjpcIlwiLGwpO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLHBpKHtyZWY6dCxjbGFzc05hbWU6eSxkaXNhYmxlZDp1LG9uQ2xpY2s6ZnVuY3Rpb24oZSl7bShlLHtzbHVnOnIsdGV4dDpzfSl9fSxoKSxcImxlZnRcIj09PXYmJmEmJmkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJtci0xXCJ9LGEpLHMsXCJyaWdodFwiPT09diYmYSYmaSgpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcIm1sLTFcIn0sYSkpfSx2aT0oMCxvLmZvcndhcmRSZWYpKGdpKTt2aS5kaXNwbGF5TmFtZT1cIkJ1dHRvblwiO3ZhciB5aT17R3JvdXA6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuYWN0aXZlSXRlbSxyPXZvaWQgMD09PW4/bnVsbDpuLHM9ZS5vbkNoYW5nZSxhPWUuY2xhc3NOYW1lLGw9ZS5zaXplLGM9dm9pZCAwPT09bD9cIm1kXCI6bCx1PWUuaWNvblBvc2l0aW9uLGQ9dm9pZCAwPT09dT9cImxlZnRcIjp1LGY9KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKGUsdCl7cyYmcyh7ZXZlbnQ6ZSx2YWx1ZTp0fSl9KSxbc10pLGg9dGUoXCJib3gtYm9yZGVyIGZsZXggYm9yZGVyIGJvcmRlci1ib3JkZXItc3VidGxlIGJvcmRlci1zb2xpZCByb3VuZGVkXCIsYSk7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpofSxpKCkuY3JlYXRlRWxlbWVudChtaS5Qcm92aWRlcix7dmFsdWU6e2FjdGl2ZUl0ZW06cixvbkNoYW5nZTpmLHNpemU6YyxpY29uUG9zaXRpb246ZH19LGkoKS5DaGlsZHJlbi5tYXAodCwoZnVuY3Rpb24oZSxuKXtpZighKDAsby5pc1ZhbGlkRWxlbWVudCkoZSkpcmV0dXJuIG51bGw7dmFyIHI9MD09PW4scz1uPT09aSgpLkNoaWxkcmVuLmNvdW50KHQpLTE7cmV0dXJuIGkoKS5jbG9uZUVsZW1lbnQoZSx7aW5kZXg6bixpc0ZpcnN0Q2hpbGQ6cixpc0xhc3RDaGlsZDpzfSl9KSkpKX0sQnV0dG9uOnZpfSxiaT15aTtmdW5jdGlvbiB4aShlKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgUHJveHkpcmV0dXJuIGU7Y29uc3QgdD1uZXcgTWFwO3JldHVybiBuZXcgUHJveHkoZSx7Z2V0OihuLHIpPT4odC5oYXMocil8fHQuc2V0KHIsZShyKSksdC5nZXQocikpfSl9ZnVuY3Rpb24gd2koZSl7cmV0dXJuIG51bGwhPT1lJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgZS5zdGFydH1jb25zdCBFaT1lPT5BcnJheS5pc0FycmF5KGUpO2Z1bmN0aW9uIFNpKGUsdCl7aWYoIUFycmF5LmlzQXJyYXkodCkpcmV0dXJuITE7Y29uc3Qgbj10Lmxlbmd0aDtpZihuIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKGxldCByPTA7cjxuO3IrKylpZih0W3JdIT09ZVtyXSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBfaShlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZXx8QXJyYXkuaXNBcnJheShlKX1mdW5jdGlvbiBraShlKXtjb25zdCB0PVt7fSx7fV07cmV0dXJuIG51bGw9PWV8fGUudmFsdWVzLmZvckVhY2goKChlLG4pPT57dFswXVtuXT1lLmdldCgpLHRbMV1bbl09ZS5nZXRWZWxvY2l0eSgpfSkpLHR9ZnVuY3Rpb24gQ2koZSx0LG4scil7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdCl7Y29uc3RbbyxpXT1raShyKTt0PXQodm9pZCAwIT09bj9uOmUuY3VzdG9tLG8saSl9aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PWUudmFyaWFudHMmJmUudmFyaWFudHNbdF0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIHQpe2NvbnN0W28saV09a2kocik7dD10KHZvaWQgMCE9PW4/bjplLmN1c3RvbSxvLGkpfXJldHVybiB0fWZ1bmN0aW9uIFBpKGUsdCxuKXtjb25zdCByPWUuZ2V0UHJvcHMoKTtyZXR1cm4gQ2kocix0LHZvaWQgMCE9PW4/bjpyLmN1c3RvbSxlKX1jb25zdCBUaT1bXCJhbmltYXRlXCIsXCJ3aGlsZUluVmlld1wiLFwid2hpbGVGb2N1c1wiLFwid2hpbGVIb3ZlclwiLFwid2hpbGVUYXBcIixcIndoaWxlRHJhZ1wiLFwiZXhpdFwiXSxPaT1bXCJpbml0aWFsXCIsLi4uVGldLFJpPVtcInRyYW5zZm9ybVBlcnNwZWN0aXZlXCIsXCJ4XCIsXCJ5XCIsXCJ6XCIsXCJ0cmFuc2xhdGVYXCIsXCJ0cmFuc2xhdGVZXCIsXCJ0cmFuc2xhdGVaXCIsXCJzY2FsZVwiLFwic2NhbGVYXCIsXCJzY2FsZVlcIixcInJvdGF0ZVwiLFwicm90YXRlWFwiLFwicm90YXRlWVwiLFwicm90YXRlWlwiLFwic2tld1wiLFwic2tld1hcIixcInNrZXdZXCJdLE5pPW5ldyBTZXQoUmkpLEFpPWU9PjFlMyplLGppPWU9PmUvMWUzLE1pPXt0eXBlOlwic3ByaW5nXCIsc3RpZmZuZXNzOjUwMCxkYW1waW5nOjI1LHJlc3RTcGVlZDoxMH0sSWk9e3R5cGU6XCJrZXlmcmFtZXNcIixkdXJhdGlvbjouOH0sRGk9e3R5cGU6XCJrZXlmcmFtZXNcIixlYXNlOlsuMjUsLjEsLjM1LDFdLGR1cmF0aW9uOi4zfSxMaT0oZSx7a2V5ZnJhbWVzOnR9KT0+dC5sZW5ndGg+Mj9JaTpOaS5oYXMoZSk/ZS5zdGFydHNXaXRoKFwic2NhbGVcIik/e3R5cGU6XCJzcHJpbmdcIixzdGlmZm5lc3M6NTUwLGRhbXBpbmc6MD09PXRbMV0/MipNYXRoLnNxcnQoNTUwKTozMCxyZXN0U3BlZWQ6MTB9Ok1pOkRpO2Z1bmN0aW9uIEZpKGUsdCl7cmV0dXJuIGVbdF18fGUuZGVmYXVsdHx8ZX1jb25zdCB6aT1lPT5udWxsIT09ZTtmdW5jdGlvbiBCaShlLHtyZXBlYXQ6dCxyZXBlYXRUeXBlOm49XCJsb29wXCJ9LHIpe2NvbnN0IG89ZS5maWx0ZXIoemkpLGk9dCYmXCJsb29wXCIhPT1uJiZ0JTI9PTE/MDpvLmxlbmd0aC0xO3JldHVybiBpJiZ2b2lkIDAhPT1yP3I6b1tpXX1jb25zdCBWaT1lPT5lLFdpPVtcInJlYWRcIixcInJlc29sdmVLZXlmcmFtZXNcIixcInVwZGF0ZVwiLFwicHJlUmVuZGVyXCIsXCJyZW5kZXJcIixcInBvc3RSZW5kZXJcIl07ZnVuY3Rpb24gVWkoZSx0KXtsZXQgbj0hMSxyPSEwO2NvbnN0IG89e2RlbHRhOjAsdGltZXN0YW1wOjAsaXNQcm9jZXNzaW5nOiExfSxpPSgpPT5uPSEwLHM9V2kucmVkdWNlKCgoZSx0KT0+KGVbdF09ZnVuY3Rpb24oZSl7bGV0IHQ9bmV3IFNldCxuPW5ldyBTZXQscj0hMSxvPSExO2NvbnN0IGk9bmV3IFdlYWtTZXQ7bGV0IHM9e2RlbHRhOjAsdGltZXN0YW1wOjAsaXNQcm9jZXNzaW5nOiExfTtmdW5jdGlvbiBhKHQpe2kuaGFzKHQpJiYobC5zY2hlZHVsZSh0KSxlKCkpLHQocyl9Y29uc3QgbD17c2NoZWR1bGU6KGUsbz0hMSxzPSExKT0+e2NvbnN0IGE9cyYmcj90Om47cmV0dXJuIG8mJmkuYWRkKGUpLGEuaGFzKGUpfHxhLmFkZChlKSxlfSxjYW5jZWw6ZT0+e24uZGVsZXRlKGUpLGkuZGVsZXRlKGUpfSxwcm9jZXNzOmU9PntzPWUscj9vPSEwOihyPSEwLFt0LG5dPVtuLHRdLG4uY2xlYXIoKSx0LmZvckVhY2goYSkscj0hMSxvJiYobz0hMSxsLnByb2Nlc3MoZSkpKX19O3JldHVybiBsfShpKSxlKSkse30pLHtyZWFkOmEscmVzb2x2ZUtleWZyYW1lczpsLHVwZGF0ZTpjLHByZVJlbmRlcjp1LHJlbmRlcjpkLHBvc3RSZW5kZXI6Zn09cyxoPSgpPT57Y29uc3QgaT1wZXJmb3JtYW5jZS5ub3coKTtuPSExLG8uZGVsdGE9cj8xZTMvNjA6TWF0aC5tYXgoTWF0aC5taW4oaS1vLnRpbWVzdGFtcCw0MCksMSksby50aW1lc3RhbXA9aSxvLmlzUHJvY2Vzc2luZz0hMCxhLnByb2Nlc3MobyksbC5wcm9jZXNzKG8pLGMucHJvY2VzcyhvKSx1LnByb2Nlc3MobyksZC5wcm9jZXNzKG8pLGYucHJvY2VzcyhvKSxvLmlzUHJvY2Vzc2luZz0hMSxuJiZ0JiYocj0hMSxlKGgpKX07cmV0dXJue3NjaGVkdWxlOldpLnJlZHVjZSgoKHQsaSk9Pntjb25zdCBhPXNbaV07cmV0dXJuIHRbaV09KHQsaT0hMSxzPSExKT0+KG58fChuPSEwLHI9ITAsby5pc1Byb2Nlc3Npbmd8fGUoaCkpLGEuc2NoZWR1bGUodCxpLHMpKSx0fSkse30pLGNhbmNlbDplPT57Zm9yKGxldCB0PTA7dDxXaS5sZW5ndGg7dCsrKXNbV2lbdF1dLmNhbmNlbChlKX0sc3RhdGU6byxzdGVwczpzfX1jb25zdHtzY2hlZHVsZTokaSxjYW5jZWw6S2ksc3RhdGU6SGksc3RlcHM6cWl9PVVpKFwidW5kZWZpbmVkXCIhPXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOlZpLCEwKSxZaT1lPT4vXjBbXi5cXHNdKyQvdS50ZXN0KGUpO2xldCBHaT1WaSxYaT1WaTtjb25zdCBKaT1lPT4vXi0/KD86XFxkKyg/OlxcLlxcZCspP3xcXC5cXGQrKSQvdS50ZXN0KGUpLFppPWU9PnQ9Plwic3RyaW5nXCI9PXR5cGVvZiB0JiZ0LnN0YXJ0c1dpdGgoZSksUWk9WmkoXCItLVwiKSxlcz1aaShcInZhcigtLVwiKSx0cz1lPT4hIWVzKGUpJiZucy50ZXN0KGUuc3BsaXQoXCIvKlwiKVswXS50cmltKCkpLG5zPS92YXJcXCgtLSg/OltcXHctXStcXHMqfFtcXHctXStcXHMqLCg/OlxccypbXikoXFxzXXxcXHMqXFwoKD86W14pKF18XFwoW14pKF0qXFwpKSpcXCkpK1xccyopXFwpJC9pdSxycz0vXnZhclxcKC0tKD86KFtcXHctXSspfChbXFx3LV0rKSwgPyhbYS16QS1aXFxkICgpJSMuLC1dKykpXFwpL3U7ZnVuY3Rpb24gb3MoZSx0LG49MSl7WGkobjw9NCxgTWF4IENTUyB2YXJpYWJsZSBmYWxsYmFjayBkZXB0aCBkZXRlY3RlZCBpbiBwcm9wZXJ0eSBcIiR7ZX1cIi4gVGhpcyBtYXkgaW5kaWNhdGUgYSBjaXJjdWxhciBmYWxsYmFjayBkZXBlbmRlbmN5LmApO2NvbnN0W3Isb109ZnVuY3Rpb24oZSl7Y29uc3QgdD1ycy5leGVjKGUpO2lmKCF0KXJldHVyblssXTtjb25zdFssbixyLG9dPXQ7cmV0dXJuW2AtLSR7bnVsbCE9bj9uOnJ9YCxvXX0oZSk7aWYoIXIpcmV0dXJuO2NvbnN0IGk9d2luZG93LmdldENvbXB1dGVkU3R5bGUodCkuZ2V0UHJvcGVydHlWYWx1ZShyKTtpZihpKXtjb25zdCBlPWkudHJpbSgpO3JldHVybiBKaShlKT9wYXJzZUZsb2F0KGUpOmV9cmV0dXJuIHRzKG8pP29zKG8sdCxuKzEpOm99Y29uc3QgaXM9KGUsdCxuKT0+bj50P3Q6bjxlP2U6bixzcz17dGVzdDplPT5cIm51bWJlclwiPT10eXBlb2YgZSxwYXJzZTpwYXJzZUZsb2F0LHRyYW5zZm9ybTplPT5lfSxhcz17Li4uc3MsdHJhbnNmb3JtOmU9PmlzKDAsMSxlKX0sbHM9ey4uLnNzLGRlZmF1bHQ6MX0sY3M9ZT0+TWF0aC5yb3VuZCgxZTUqZSkvMWU1LHVzPS8tPyg/OlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykvZ3UsZHM9Lyg/OiNbXFxkYS1mXXszLDh9fCg/OnJnYnxoc2wpYT9cXCgoPzotP1tcXGQuXSslP1ssXFxzXSspezJ9LT9bXFxkLl0rJT9cXHMqKD86WywvXVxccyopPyg/OlxcYlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKyk/JT9cXCkpL2dpdSxmcz0vXig/OiNbXFxkYS1mXXszLDh9fCg/OnJnYnxoc2wpYT9cXCgoPzotP1tcXGQuXSslP1ssXFxzXSspezJ9LT9bXFxkLl0rJT9cXHMqKD86WywvXVxccyopPyg/OlxcYlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKyk/JT9cXCkpJC9pdTtmdW5jdGlvbiBocyhlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZX1jb25zdCBwcz1lPT4oe3Rlc3Q6dD0+aHModCkmJnQuZW5kc1dpdGgoZSkmJjE9PT10LnNwbGl0KFwiIFwiKS5sZW5ndGgscGFyc2U6cGFyc2VGbG9hdCx0cmFuc2Zvcm06dD0+YCR7dH0ke2V9YH0pLG1zPXBzKFwiZGVnXCIpLGdzPXBzKFwiJVwiKSx2cz1wcyhcInB4XCIpLHlzPXBzKFwidmhcIiksYnM9cHMoXCJ2d1wiKSx4cz17Li4uZ3MscGFyc2U6ZT0+Z3MucGFyc2UoZSkvMTAwLHRyYW5zZm9ybTplPT5ncy50cmFuc2Zvcm0oMTAwKmUpfSx3cz1uZXcgU2V0KFtcIndpZHRoXCIsXCJoZWlnaHRcIixcInRvcFwiLFwibGVmdFwiLFwicmlnaHRcIixcImJvdHRvbVwiLFwieFwiLFwieVwiLFwidHJhbnNsYXRlWFwiLFwidHJhbnNsYXRlWVwiXSksRXM9ZT0+ZT09PXNzfHxlPT09dnMsU3M9KGUsdCk9PnBhcnNlRmxvYXQoZS5zcGxpdChcIiwgXCIpW3RdKSxfcz0oZSx0KT0+KG4se3RyYW5zZm9ybTpyfSk9PntpZihcIm5vbmVcIj09PXJ8fCFyKXJldHVybiAwO2NvbnN0IG89ci5tYXRjaCgvXm1hdHJpeDNkXFwoKC4rKVxcKSQvdSk7aWYobylyZXR1cm4gU3Mob1sxXSx0KTt7Y29uc3QgdD1yLm1hdGNoKC9ebWF0cml4XFwoKC4rKVxcKSQvdSk7cmV0dXJuIHQ/U3ModFsxXSxlKTowfX0sa3M9bmV3IFNldChbXCJ4XCIsXCJ5XCIsXCJ6XCJdKSxDcz1SaS5maWx0ZXIoKGU9PiFrcy5oYXMoZSkpKSxQcz17d2lkdGg6KHt4OmV9LHtwYWRkaW5nTGVmdDp0PVwiMFwiLHBhZGRpbmdSaWdodDpuPVwiMFwifSk9PmUubWF4LWUubWluLXBhcnNlRmxvYXQodCktcGFyc2VGbG9hdChuKSxoZWlnaHQ6KHt5OmV9LHtwYWRkaW5nVG9wOnQ9XCIwXCIscGFkZGluZ0JvdHRvbTpuPVwiMFwifSk9PmUubWF4LWUubWluLXBhcnNlRmxvYXQodCktcGFyc2VGbG9hdChuKSx0b3A6KGUse3RvcDp0fSk9PnBhcnNlRmxvYXQodCksbGVmdDooZSx7bGVmdDp0fSk9PnBhcnNlRmxvYXQodCksYm90dG9tOih7eTplfSx7dG9wOnR9KT0+cGFyc2VGbG9hdCh0KSsoZS5tYXgtZS5taW4pLHJpZ2h0Oih7eDplfSx7bGVmdDp0fSk9PnBhcnNlRmxvYXQodCkrKGUubWF4LWUubWluKSx4Ol9zKDQsMTMpLHk6X3MoNSwxNCl9O1BzLnRyYW5zbGF0ZVg9UHMueCxQcy50cmFuc2xhdGVZPVBzLnk7Y29uc3QgVHM9ZT0+dD0+dC50ZXN0KGUpLE9zPVtzcyx2cyxncyxtcyxicyx5cyx7dGVzdDplPT5cImF1dG9cIj09PWUscGFyc2U6ZT0+ZX1dLFJzPWU9Pk9zLmZpbmQoVHMoZSkpLE5zPW5ldyBTZXQ7bGV0IEFzPSExLGpzPSExO2Z1bmN0aW9uIE1zKCl7aWYoanMpe2NvbnN0IGU9QXJyYXkuZnJvbShOcykuZmlsdGVyKChlPT5lLm5lZWRzTWVhc3VyZW1lbnQpKSx0PW5ldyBTZXQoZS5tYXAoKGU9PmUuZWxlbWVudCkpKSxuPW5ldyBNYXA7dC5mb3JFYWNoKChlPT57Y29uc3QgdD1mdW5jdGlvbihlKXtjb25zdCB0PVtdO3JldHVybiBDcy5mb3JFYWNoKChuPT57Y29uc3Qgcj1lLmdldFZhbHVlKG4pO3ZvaWQgMCE9PXImJih0LnB1c2goW24sci5nZXQoKV0pLHIuc2V0KG4uc3RhcnRzV2l0aChcInNjYWxlXCIpPzE6MCkpfSkpLHR9KGUpO3QubGVuZ3RoJiYobi5zZXQoZSx0KSxlLnJlbmRlcigpKX0pKSxlLmZvckVhY2goKGU9PmUubWVhc3VyZUluaXRpYWxTdGF0ZSgpKSksdC5mb3JFYWNoKChlPT57ZS5yZW5kZXIoKTtjb25zdCB0PW4uZ2V0KGUpO3QmJnQuZm9yRWFjaCgoKFt0LG5dKT0+e3ZhciByO251bGw9PT0ocj1lLmdldFZhbHVlKHQpKXx8dm9pZCAwPT09cnx8ci5zZXQobil9KSl9KSksZS5mb3JFYWNoKChlPT5lLm1lYXN1cmVFbmRTdGF0ZSgpKSksZS5mb3JFYWNoKChlPT57dm9pZCAwIT09ZS5zdXNwZW5kZWRTY3JvbGxZJiZ3aW5kb3cuc2Nyb2xsVG8oMCxlLnN1c3BlbmRlZFNjcm9sbFkpfSkpfWpzPSExLEFzPSExLE5zLmZvckVhY2goKGU9PmUuY29tcGxldGUoKSkpLE5zLmNsZWFyKCl9ZnVuY3Rpb24gSXMoKXtOcy5mb3JFYWNoKChlPT57ZS5yZWFkS2V5ZnJhbWVzKCksZS5uZWVkc01lYXN1cmVtZW50JiYoanM9ITApfSkpfWNsYXNzIERze2NvbnN0cnVjdG9yKGUsdCxuLHIsbyxpPSExKXt0aGlzLmlzQ29tcGxldGU9ITEsdGhpcy5pc0FzeW5jPSExLHRoaXMubmVlZHNNZWFzdXJlbWVudD0hMSx0aGlzLmlzU2NoZWR1bGVkPSExLHRoaXMudW5yZXNvbHZlZEtleWZyYW1lcz1bLi4uZV0sdGhpcy5vbkNvbXBsZXRlPXQsdGhpcy5uYW1lPW4sdGhpcy5tb3Rpb25WYWx1ZT1yLHRoaXMuZWxlbWVudD1vLHRoaXMuaXNBc3luYz1pfXNjaGVkdWxlUmVzb2x2ZSgpe3RoaXMuaXNTY2hlZHVsZWQ9ITAsdGhpcy5pc0FzeW5jPyhOcy5hZGQodGhpcyksQXN8fChBcz0hMCwkaS5yZWFkKElzKSwkaS5yZXNvbHZlS2V5ZnJhbWVzKE1zKSkpOih0aGlzLnJlYWRLZXlmcmFtZXMoKSx0aGlzLmNvbXBsZXRlKCkpfXJlYWRLZXlmcmFtZXMoKXtjb25zdHt1bnJlc29sdmVkS2V5ZnJhbWVzOmUsbmFtZTp0LGVsZW1lbnQ6bixtb3Rpb25WYWx1ZTpyfT10aGlzO2ZvcihsZXQgbz0wO288ZS5sZW5ndGg7bysrKWlmKG51bGw9PT1lW29dKWlmKDA9PT1vKXtjb25zdCBvPW51bGw9PXI/dm9pZCAwOnIuZ2V0KCksaT1lW2UubGVuZ3RoLTFdO2lmKHZvaWQgMCE9PW8pZVswXT1vO2Vsc2UgaWYobiYmdCl7Y29uc3Qgcj1uLnJlYWRWYWx1ZSh0LGkpO251bGwhPXImJihlWzBdPXIpfXZvaWQgMD09PWVbMF0mJihlWzBdPWkpLHImJnZvaWQgMD09PW8mJnIuc2V0KGVbMF0pfWVsc2UgZVtvXT1lW28tMV19c2V0RmluYWxLZXlmcmFtZSgpe31tZWFzdXJlSW5pdGlhbFN0YXRlKCl7fXJlbmRlckVuZFN0eWxlcygpe31tZWFzdXJlRW5kU3RhdGUoKXt9Y29tcGxldGUoKXt0aGlzLmlzQ29tcGxldGU9ITAsdGhpcy5vbkNvbXBsZXRlKHRoaXMudW5yZXNvbHZlZEtleWZyYW1lcyx0aGlzLmZpbmFsS2V5ZnJhbWUpLE5zLmRlbGV0ZSh0aGlzKX1jYW5jZWwoKXt0aGlzLmlzQ29tcGxldGV8fCh0aGlzLmlzU2NoZWR1bGVkPSExLE5zLmRlbGV0ZSh0aGlzKSl9cmVzdW1lKCl7dGhpcy5pc0NvbXBsZXRlfHx0aGlzLnNjaGVkdWxlUmVzb2x2ZSgpfX1jb25zdCBMcz0oZSx0KT0+bj0+Qm9vbGVhbihocyhuKSYmZnMudGVzdChuKSYmbi5zdGFydHNXaXRoKGUpfHx0JiYhZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWV9KG4pJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobix0KSksRnM9KGUsdCxuKT0+cj0+e2lmKCFocyhyKSlyZXR1cm4gcjtjb25zdFtvLGkscyxhXT1yLm1hdGNoKHVzKTtyZXR1cm57W2VdOnBhcnNlRmxvYXQobyksW3RdOnBhcnNlRmxvYXQoaSksW25dOnBhcnNlRmxvYXQocyksYWxwaGE6dm9pZCAwIT09YT9wYXJzZUZsb2F0KGEpOjF9fSx6cz17Li4uc3MsdHJhbnNmb3JtOmU9Pk1hdGgucm91bmQoKGU9PmlzKDAsMjU1LGUpKShlKSl9LEJzPXt0ZXN0OkxzKFwicmdiXCIsXCJyZWRcIikscGFyc2U6RnMoXCJyZWRcIixcImdyZWVuXCIsXCJibHVlXCIpLHRyYW5zZm9ybTooe3JlZDplLGdyZWVuOnQsYmx1ZTpuLGFscGhhOnI9MX0pPT5cInJnYmEoXCIrenMudHJhbnNmb3JtKGUpK1wiLCBcIit6cy50cmFuc2Zvcm0odCkrXCIsIFwiK3pzLnRyYW5zZm9ybShuKStcIiwgXCIrY3MoYXMudHJhbnNmb3JtKHIpKStcIilcIn0sVnM9e3Rlc3Q6THMoXCIjXCIpLHBhcnNlOmZ1bmN0aW9uKGUpe2xldCB0PVwiXCIsbj1cIlwiLHI9XCJcIixvPVwiXCI7cmV0dXJuIGUubGVuZ3RoPjU/KHQ9ZS5zdWJzdHJpbmcoMSwzKSxuPWUuc3Vic3RyaW5nKDMsNSkscj1lLnN1YnN0cmluZyg1LDcpLG89ZS5zdWJzdHJpbmcoNyw5KSk6KHQ9ZS5zdWJzdHJpbmcoMSwyKSxuPWUuc3Vic3RyaW5nKDIsMykscj1lLnN1YnN0cmluZygzLDQpLG89ZS5zdWJzdHJpbmcoNCw1KSx0Kz10LG4rPW4scis9cixvKz1vKSx7cmVkOnBhcnNlSW50KHQsMTYpLGdyZWVuOnBhcnNlSW50KG4sMTYpLGJsdWU6cGFyc2VJbnQociwxNiksYWxwaGE6bz9wYXJzZUludChvLDE2KS8yNTU6MX19LHRyYW5zZm9ybTpCcy50cmFuc2Zvcm19LFdzPXt0ZXN0OkxzKFwiaHNsXCIsXCJodWVcIikscGFyc2U6RnMoXCJodWVcIixcInNhdHVyYXRpb25cIixcImxpZ2h0bmVzc1wiKSx0cmFuc2Zvcm06KHtodWU6ZSxzYXR1cmF0aW9uOnQsbGlnaHRuZXNzOm4sYWxwaGE6cj0xfSk9PlwiaHNsYShcIitNYXRoLnJvdW5kKGUpK1wiLCBcIitncy50cmFuc2Zvcm0oY3ModCkpK1wiLCBcIitncy50cmFuc2Zvcm0oY3MobikpK1wiLCBcIitjcyhhcy50cmFuc2Zvcm0ocikpK1wiKVwifSxVcz17dGVzdDplPT5Ccy50ZXN0KGUpfHxWcy50ZXN0KGUpfHxXcy50ZXN0KGUpLHBhcnNlOmU9PkJzLnRlc3QoZSk/QnMucGFyc2UoZSk6V3MudGVzdChlKT9Xcy5wYXJzZShlKTpWcy5wYXJzZShlKSx0cmFuc2Zvcm06ZT0+aHMoZSk/ZTplLmhhc093blByb3BlcnR5KFwicmVkXCIpP0JzLnRyYW5zZm9ybShlKTpXcy50cmFuc2Zvcm0oZSl9LCRzPVwibnVtYmVyXCIsS3M9XCJjb2xvclwiLEhzPVwidmFyXCIscXM9XCJ2YXIoXCIsWXM9XCIke31cIixHcz0vdmFyXFxzKlxcKFxccyotLSg/OltcXHctXStcXHMqfFtcXHctXStcXHMqLCg/OlxccypbXikoXFxzXXxcXHMqXFwoKD86W14pKF18XFwoW14pKF0qXFwpKSpcXCkpK1xccyopXFwpfCNbXFxkYS1mXXszLDh9fCg/OnJnYnxoc2wpYT9cXCgoPzotP1tcXGQuXSslP1ssXFxzXSspezJ9LT9bXFxkLl0rJT9cXHMqKD86WywvXVxccyopPyg/OlxcYlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKyk/JT9cXCl8LT8oPzpcXGQrKD86XFwuXFxkKyk/fFxcLlxcZCspL2dpdTtmdW5jdGlvbiBYcyhlKXtjb25zdCB0PWUudG9TdHJpbmcoKSxuPVtdLHI9e2NvbG9yOltdLG51bWJlcjpbXSx2YXI6W119LG89W107bGV0IGk9MDtjb25zdCBzPXQucmVwbGFjZShHcywoZT0+KFVzLnRlc3QoZSk/KHIuY29sb3IucHVzaChpKSxvLnB1c2goS3MpLG4ucHVzaChVcy5wYXJzZShlKSkpOmUuc3RhcnRzV2l0aChxcyk/KHIudmFyLnB1c2goaSksby5wdXNoKEhzKSxuLnB1c2goZSkpOihyLm51bWJlci5wdXNoKGkpLG8ucHVzaCgkcyksbi5wdXNoKHBhcnNlRmxvYXQoZSkpKSwrK2ksWXMpKSkuc3BsaXQoWXMpO3JldHVybnt2YWx1ZXM6bixzcGxpdDpzLGluZGV4ZXM6cix0eXBlczpvfX1mdW5jdGlvbiBKcyhlKXtyZXR1cm4gWHMoZSkudmFsdWVzfWZ1bmN0aW9uIFpzKGUpe2NvbnN0e3NwbGl0OnQsdHlwZXM6bn09WHMoZSkscj10Lmxlbmd0aDtyZXR1cm4gZT0+e2xldCBvPVwiXCI7Zm9yKGxldCBpPTA7aTxyO2krKylpZihvKz10W2ldLHZvaWQgMCE9PWVbaV0pe2NvbnN0IHQ9bltpXTtvKz10PT09JHM/Y3MoZVtpXSk6dD09PUtzP1VzLnRyYW5zZm9ybShlW2ldKTplW2ldfXJldHVybiBvfX1jb25zdCBRcz1lPT5cIm51bWJlclwiPT10eXBlb2YgZT8wOmUsZWE9e3Rlc3Q6ZnVuY3Rpb24oZSl7dmFyIHQsbjtyZXR1cm4gaXNOYU4oZSkmJmhzKGUpJiYoKG51bGw9PT0odD1lLm1hdGNoKHVzKSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQubGVuZ3RoKXx8MCkrKChudWxsPT09KG49ZS5tYXRjaChkcykpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmxlbmd0aCl8fDApPjB9LHBhcnNlOkpzLGNyZWF0ZVRyYW5zZm9ybWVyOlpzLGdldEFuaW1hdGFibGVOb25lOmZ1bmN0aW9uKGUpe2NvbnN0IHQ9SnMoZSk7cmV0dXJuIFpzKGUpKHQubWFwKFFzKSl9fSx0YT1uZXcgU2V0KFtcImJyaWdodG5lc3NcIixcImNvbnRyYXN0XCIsXCJzYXR1cmF0ZVwiLFwib3BhY2l0eVwiXSk7ZnVuY3Rpb24gbmEoZSl7Y29uc3RbdCxuXT1lLnNsaWNlKDAsLTEpLnNwbGl0KFwiKFwiKTtpZihcImRyb3Atc2hhZG93XCI9PT10KXJldHVybiBlO2NvbnN0W3JdPW4ubWF0Y2godXMpfHxbXTtpZighcilyZXR1cm4gZTtjb25zdCBvPW4ucmVwbGFjZShyLFwiXCIpO2xldCBpPXRhLmhhcyh0KT8xOjA7cmV0dXJuIHIhPT1uJiYoaSo9MTAwKSx0K1wiKFwiK2krbytcIilcIn1jb25zdCByYT0vXFxiKFthLXotXSopXFwoLio/XFwpL2d1LG9hPXsuLi5lYSxnZXRBbmltYXRhYmxlTm9uZTplPT57Y29uc3QgdD1lLm1hdGNoKHJhKTtyZXR1cm4gdD90Lm1hcChuYSkuam9pbihcIiBcIik6ZX19LGlhPXsuLi5zcyx0cmFuc2Zvcm06TWF0aC5yb3VuZH0sc2E9e2JvcmRlcldpZHRoOnZzLGJvcmRlclRvcFdpZHRoOnZzLGJvcmRlclJpZ2h0V2lkdGg6dnMsYm9yZGVyQm90dG9tV2lkdGg6dnMsYm9yZGVyTGVmdFdpZHRoOnZzLGJvcmRlclJhZGl1czp2cyxyYWRpdXM6dnMsYm9yZGVyVG9wTGVmdFJhZGl1czp2cyxib3JkZXJUb3BSaWdodFJhZGl1czp2cyxib3JkZXJCb3R0b21SaWdodFJhZGl1czp2cyxib3JkZXJCb3R0b21MZWZ0UmFkaXVzOnZzLHdpZHRoOnZzLG1heFdpZHRoOnZzLGhlaWdodDp2cyxtYXhIZWlnaHQ6dnMsc2l6ZTp2cyx0b3A6dnMscmlnaHQ6dnMsYm90dG9tOnZzLGxlZnQ6dnMscGFkZGluZzp2cyxwYWRkaW5nVG9wOnZzLHBhZGRpbmdSaWdodDp2cyxwYWRkaW5nQm90dG9tOnZzLHBhZGRpbmdMZWZ0OnZzLG1hcmdpbjp2cyxtYXJnaW5Ub3A6dnMsbWFyZ2luUmlnaHQ6dnMsbWFyZ2luQm90dG9tOnZzLG1hcmdpbkxlZnQ6dnMscm90YXRlOm1zLHJvdGF0ZVg6bXMscm90YXRlWTptcyxyb3RhdGVaOm1zLHNjYWxlOmxzLHNjYWxlWDpscyxzY2FsZVk6bHMsc2NhbGVaOmxzLHNrZXc6bXMsc2tld1g6bXMsc2tld1k6bXMsZGlzdGFuY2U6dnMsdHJhbnNsYXRlWDp2cyx0cmFuc2xhdGVZOnZzLHRyYW5zbGF0ZVo6dnMseDp2cyx5OnZzLHo6dnMscGVyc3BlY3RpdmU6dnMsdHJhbnNmb3JtUGVyc3BlY3RpdmU6dnMsb3BhY2l0eTphcyxvcmlnaW5YOnhzLG9yaWdpblk6eHMsb3JpZ2luWjp2cyx6SW5kZXg6aWEsYmFja2dyb3VuZFBvc2l0aW9uWDp2cyxiYWNrZ3JvdW5kUG9zaXRpb25ZOnZzLGZpbGxPcGFjaXR5OmFzLHN0cm9rZU9wYWNpdHk6YXMsbnVtT2N0YXZlczppYX0sYWE9ey4uLnNhLGNvbG9yOlVzLGJhY2tncm91bmRDb2xvcjpVcyxvdXRsaW5lQ29sb3I6VXMsZmlsbDpVcyxzdHJva2U6VXMsYm9yZGVyQ29sb3I6VXMsYm9yZGVyVG9wQ29sb3I6VXMsYm9yZGVyUmlnaHRDb2xvcjpVcyxib3JkZXJCb3R0b21Db2xvcjpVcyxib3JkZXJMZWZ0Q29sb3I6VXMsZmlsdGVyOm9hLFdlYmtpdEZpbHRlcjpvYX0sbGE9ZT0+YWFbZV07ZnVuY3Rpb24gY2EoZSx0KXtsZXQgbj1sYShlKTtyZXR1cm4gbiE9PW9hJiYobj1lYSksbi5nZXRBbmltYXRhYmxlTm9uZT9uLmdldEFuaW1hdGFibGVOb25lKHQpOnZvaWQgMH1jb25zdCB1YT1uZXcgU2V0KFtcImF1dG9cIixcIm5vbmVcIixcIjBcIl0pO2NsYXNzIGRhIGV4dGVuZHMgRHN7Y29uc3RydWN0b3IoZSx0LG4scixvKXtzdXBlcihlLHQsbixyLG8sITApfXJlYWRLZXlmcmFtZXMoKXtjb25zdHt1bnJlc29sdmVkS2V5ZnJhbWVzOmUsZWxlbWVudDp0LG5hbWU6bn09dGhpcztpZighdHx8IXQuY3VycmVudClyZXR1cm47c3VwZXIucmVhZEtleWZyYW1lcygpO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtsZXQgcj1lW25dO2lmKFwic3RyaW5nXCI9PXR5cGVvZiByJiYocj1yLnRyaW0oKSx0cyhyKSkpe2NvbnN0IG89b3Mocix0LmN1cnJlbnQpO3ZvaWQgMCE9PW8mJihlW25dPW8pLG49PT1lLmxlbmd0aC0xJiYodGhpcy5maW5hbEtleWZyYW1lPXIpfX1pZih0aGlzLnJlc29sdmVOb25lS2V5ZnJhbWVzKCksIXdzLmhhcyhuKXx8MiE9PWUubGVuZ3RoKXJldHVybjtjb25zdFtyLG9dPWUsaT1ScyhyKSxzPVJzKG8pO2lmKGkhPT1zKWlmKEVzKGkpJiZFcyhzKSlmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7Y29uc3Qgbj1lW3RdO1wic3RyaW5nXCI9PXR5cGVvZiBuJiYoZVt0XT1wYXJzZUZsb2F0KG4pKX1lbHNlIHRoaXMubmVlZHNNZWFzdXJlbWVudD0hMH1yZXNvbHZlTm9uZUtleWZyYW1lcygpe2NvbnN0e3VucmVzb2x2ZWRLZXlmcmFtZXM6ZSxuYW1lOnR9PXRoaXMsbj1bXTtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKykoXCJudW1iZXJcIj09dHlwZW9mKHI9ZVt0XSk/MD09PXI6bnVsbD09PXJ8fFwibm9uZVwiPT09cnx8XCIwXCI9PT1yfHxZaShyKSkmJm4ucHVzaCh0KTt2YXIgcjtuLmxlbmd0aCYmZnVuY3Rpb24oZSx0LG4pe2xldCByLG89MDtmb3IoO288ZS5sZW5ndGgmJiFyOyl7Y29uc3QgdD1lW29dO1wic3RyaW5nXCI9PXR5cGVvZiB0JiYhdWEuaGFzKHQpJiZYcyh0KS52YWx1ZXMubGVuZ3RoJiYocj1lW29dKSxvKyt9aWYociYmbilmb3IoY29uc3QgbyBvZiB0KWVbb109Y2EobixyKX0oZSxuLHQpfW1lYXN1cmVJbml0aWFsU3RhdGUoKXtjb25zdHtlbGVtZW50OmUsdW5yZXNvbHZlZEtleWZyYW1lczp0LG5hbWU6bn09dGhpcztpZighZXx8IWUuY3VycmVudClyZXR1cm47XCJoZWlnaHRcIj09PW4mJih0aGlzLnN1c3BlbmRlZFNjcm9sbFk9d2luZG93LnBhZ2VZT2Zmc2V0KSx0aGlzLm1lYXN1cmVkT3JpZ2luPVBzW25dKGUubWVhc3VyZVZpZXdwb3J0Qm94KCksd2luZG93LmdldENvbXB1dGVkU3R5bGUoZS5jdXJyZW50KSksdFswXT10aGlzLm1lYXN1cmVkT3JpZ2luO2NvbnN0IHI9dFt0Lmxlbmd0aC0xXTt2b2lkIDAhPT1yJiZlLmdldFZhbHVlKG4scikuanVtcChyLCExKX1tZWFzdXJlRW5kU3RhdGUoKXt2YXIgZTtjb25zdHtlbGVtZW50OnQsbmFtZTpuLHVucmVzb2x2ZWRLZXlmcmFtZXM6cn09dGhpcztpZighdHx8IXQuY3VycmVudClyZXR1cm47Y29uc3Qgbz10LmdldFZhbHVlKG4pO28mJm8uanVtcCh0aGlzLm1lYXN1cmVkT3JpZ2luLCExKTtjb25zdCBpPXIubGVuZ3RoLTEscz1yW2ldO3JbaV09UHNbbl0odC5tZWFzdXJlVmlld3BvcnRCb3goKSx3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0LmN1cnJlbnQpKSxudWxsIT09cyYmdm9pZCAwPT09dGhpcy5maW5hbEtleWZyYW1lJiYodGhpcy5maW5hbEtleWZyYW1lPXMpLChudWxsPT09KGU9dGhpcy5yZW1vdmVkVHJhbnNmb3Jtcyl8fHZvaWQgMD09PWU/dm9pZCAwOmUubGVuZ3RoKSYmdGhpcy5yZW1vdmVkVHJhbnNmb3Jtcy5mb3JFYWNoKCgoW2Usbl0pPT57dC5nZXRWYWx1ZShlKS5zZXQobil9KSksdGhpcy5yZXNvbHZlTm9uZUtleWZyYW1lcygpfX1mdW5jdGlvbiBmYShlKXtsZXQgdDtyZXR1cm4oKT0+KHZvaWQgMD09PXQmJih0PWUoKSksdCl9bGV0IGhhO2Z1bmN0aW9uIHBhKCl7aGE9dm9pZCAwfWNvbnN0IG1hPXtub3c6KCk9Pih2b2lkIDA9PT1oYSYmbWEuc2V0KEhpLmlzUHJvY2Vzc2luZz9IaS50aW1lc3RhbXA6cGVyZm9ybWFuY2Uubm93KCkpLGhhKSxzZXQ6ZT0+e2hhPWUscXVldWVNaWNyb3Rhc2socGEpfX0sZ2E9KGUsdCk9PiEoXCJ6SW5kZXhcIj09PXR8fFwibnVtYmVyXCIhPXR5cGVvZiBlJiYhQXJyYXkuaXNBcnJheShlKSYmKFwic3RyaW5nXCIhPXR5cGVvZiBlfHwhZWEudGVzdChlKSYmXCIwXCIhPT1lfHxlLnN0YXJ0c1dpdGgoXCJ1cmwoXCIpKSk7Y2xhc3MgdmF7Y29uc3RydWN0b3Ioe2F1dG9wbGF5OmU9ITAsZGVsYXk6dD0wLHR5cGU6bj1cImtleWZyYW1lc1wiLHJlcGVhdDpyPTAscmVwZWF0RGVsYXk6bz0wLHJlcGVhdFR5cGU6aT1cImxvb3BcIiwuLi5zfSl7dGhpcy5pc1N0b3BwZWQ9ITEsdGhpcy5oYXNBdHRlbXB0ZWRSZXNvbHZlPSExLHRoaXMuY3JlYXRlZEF0PW1hLm5vdygpLHRoaXMub3B0aW9ucz17YXV0b3BsYXk6ZSxkZWxheTp0LHR5cGU6bixyZXBlYXQ6cixyZXBlYXREZWxheTpvLHJlcGVhdFR5cGU6aSwuLi5zfSx0aGlzLnVwZGF0ZUZpbmlzaGVkUHJvbWlzZSgpfWNhbGNTdGFydFRpbWUoKXtyZXR1cm4gdGhpcy5yZXNvbHZlZEF0JiZ0aGlzLnJlc29sdmVkQXQtdGhpcy5jcmVhdGVkQXQ+NDA/dGhpcy5yZXNvbHZlZEF0OnRoaXMuY3JlYXRlZEF0fWdldCByZXNvbHZlZCgpe3JldHVybiB0aGlzLl9yZXNvbHZlZHx8dGhpcy5oYXNBdHRlbXB0ZWRSZXNvbHZlfHwoSXMoKSxNcygpKSx0aGlzLl9yZXNvbHZlZH1vbktleWZyYW1lc1Jlc29sdmVkKGUsdCl7dGhpcy5yZXNvbHZlZEF0PW1hLm5vdygpLHRoaXMuaGFzQXR0ZW1wdGVkUmVzb2x2ZT0hMDtjb25zdHtuYW1lOm4sdHlwZTpyLHZlbG9jaXR5Om8sZGVsYXk6aSxvbkNvbXBsZXRlOnMsb25VcGRhdGU6YSxpc0dlbmVyYXRvcjpsfT10aGlzLm9wdGlvbnM7aWYoIWwmJiFmdW5jdGlvbihlLHQsbixyKXtjb25zdCBvPWVbMF07aWYobnVsbD09PW8pcmV0dXJuITE7aWYoXCJkaXNwbGF5XCI9PT10fHxcInZpc2liaWxpdHlcIj09PXQpcmV0dXJuITA7Y29uc3QgaT1lW2UubGVuZ3RoLTFdLHM9Z2Eobyx0KSxhPWdhKGksdCk7cmV0dXJuIEdpKHM9PT1hLGBZb3UgYXJlIHRyeWluZyB0byBhbmltYXRlICR7dH0gZnJvbSBcIiR7b31cIiB0byBcIiR7aX1cIi4gJHtvfSBpcyBub3QgYW4gYW5pbWF0YWJsZSB2YWx1ZSAtIHRvIGVuYWJsZSB0aGlzIGFuaW1hdGlvbiBzZXQgJHtvfSB0byBhIHZhbHVlIGFuaW1hdGFibGUgdG8gJHtpfSB2aWEgdGhlIFxcYHN0eWxlXFxgIHByb3BlcnR5LmApLCEoIXN8fCFhKSYmKGZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZVswXTtpZigxPT09ZS5sZW5ndGgpcmV0dXJuITA7Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspaWYoZVtuXSE9PXQpcmV0dXJuITB9KGUpfHxcInNwcmluZ1wiPT09biYmcil9KGUsbixyLG8pKXtpZighaSlyZXR1cm4gbnVsbD09YXx8YShCaShlLHRoaXMub3B0aW9ucyx0KSksbnVsbD09c3x8cygpLHZvaWQgdGhpcy5yZXNvbHZlRmluaXNoZWRQcm9taXNlKCk7dGhpcy5vcHRpb25zLmR1cmF0aW9uPTB9Y29uc3QgYz10aGlzLmluaXRQbGF5YmFjayhlLHQpOyExIT09YyYmKHRoaXMuX3Jlc29sdmVkPXtrZXlmcmFtZXM6ZSxmaW5hbEtleWZyYW1lOnQsLi4uY30sdGhpcy5vblBvc3RSZXNvbHZlZCgpKX1vblBvc3RSZXNvbHZlZCgpe310aGVuKGUsdCl7cmV0dXJuIHRoaXMuY3VycmVudEZpbmlzaGVkUHJvbWlzZS50aGVuKGUsdCl9dXBkYXRlRmluaXNoZWRQcm9taXNlKCl7dGhpcy5jdXJyZW50RmluaXNoZWRQcm9taXNlPW5ldyBQcm9taXNlKChlPT57dGhpcy5yZXNvbHZlRmluaXNoZWRQcm9taXNlPWV9KSl9fWZ1bmN0aW9uIHlhKGUsdCl7cmV0dXJuIHQ/ZSooMWUzL3QpOjB9Y29uc3QgYmE9NTtmdW5jdGlvbiB4YShlLHQsbil7Y29uc3Qgcj1NYXRoLm1heCh0LWJhLDApO3JldHVybiB5YShuLWUociksdC1yKX1jb25zdCB3YT0uMDAxLEVhPS4wMSxTYT0xMCxfYT0uMDUsa2E9MTtjb25zdCBDYT0xMjtmdW5jdGlvbiBQYShlLHQpe3JldHVybiBlKk1hdGguc3FydCgxLXQqdCl9Y29uc3QgVGE9W1wiZHVyYXRpb25cIixcImJvdW5jZVwiXSxPYT1bXCJzdGlmZm5lc3NcIixcImRhbXBpbmdcIixcIm1hc3NcIl07ZnVuY3Rpb24gUmEoZSx0KXtyZXR1cm4gdC5zb21lKCh0PT52b2lkIDAhPT1lW3RdKSl9ZnVuY3Rpb24gTmEoe2tleWZyYW1lczplLHJlc3REZWx0YTp0LHJlc3RTcGVlZDpuLC4uLnJ9KXtjb25zdCBvPWVbMF0saT1lW2UubGVuZ3RoLTFdLHM9e2RvbmU6ITEsdmFsdWU6b30se3N0aWZmbmVzczphLGRhbXBpbmc6bCxtYXNzOmMsZHVyYXRpb246dSx2ZWxvY2l0eTpkLGlzUmVzb2x2ZWRGcm9tRHVyYXRpb246Zn09ZnVuY3Rpb24oZSl7bGV0IHQ9e3ZlbG9jaXR5OjAsc3RpZmZuZXNzOjEwMCxkYW1waW5nOjEwLG1hc3M6MSxpc1Jlc29sdmVkRnJvbUR1cmF0aW9uOiExLC4uLmV9O2lmKCFSYShlLE9hKSYmUmEoZSxUYSkpe2NvbnN0IG49ZnVuY3Rpb24oe2R1cmF0aW9uOmU9ODAwLGJvdW5jZTp0PS4yNSx2ZWxvY2l0eTpuPTAsbWFzczpyPTF9KXtsZXQgbyxpO0dpKGU8PUFpKFNhKSxcIlNwcmluZyBkdXJhdGlvbiBtdXN0IGJlIDEwIHNlY29uZHMgb3IgbGVzc1wiKTtsZXQgcz0xLXQ7cz1pcyhfYSxrYSxzKSxlPWlzKEVhLFNhLGppKGUpKSxzPDE/KG89dD0+e2NvbnN0IHI9dCpzLG89ciplLGk9ci1uLGE9UGEodCxzKSxsPU1hdGguZXhwKC1vKTtyZXR1cm4gd2EtaS9hKmx9LGk9dD0+e2NvbnN0IHI9dCpzKmUsaT1yKm4rbixhPU1hdGgucG93KHMsMikqTWF0aC5wb3codCwyKSplLGw9TWF0aC5leHAoLXIpLGM9UGEoTWF0aC5wb3codCwyKSxzKTtyZXR1cm4oLW8odCkrd2E+MD8tMToxKSooKGktYSkqbCkvY30pOihvPXQ9Pk1hdGguZXhwKC10KmUpKigodC1uKSplKzEpLXdhLGk9dD0+TWF0aC5leHAoLXQqZSkqKGUqZSoobi10KSkpO2NvbnN0IGE9ZnVuY3Rpb24oZSx0LG4pe2xldCByPW47Zm9yKGxldCBuPTE7bjxDYTtuKyspci09ZShyKS90KHIpO3JldHVybiByfShvLGksNS9lKTtpZihlPUFpKGUpLGlzTmFOKGEpKXJldHVybntzdGlmZm5lc3M6MTAwLGRhbXBpbmc6MTAsZHVyYXRpb246ZX07e2NvbnN0IHQ9TWF0aC5wb3coYSwyKSpyO3JldHVybntzdGlmZm5lc3M6dCxkYW1waW5nOjIqcypNYXRoLnNxcnQocip0KSxkdXJhdGlvbjplfX19KGUpO3Q9ey4uLnQsLi4ubixtYXNzOjF9LHQuaXNSZXNvbHZlZEZyb21EdXJhdGlvbj0hMH1yZXR1cm4gdH0oey4uLnIsdmVsb2NpdHk6LWppKHIudmVsb2NpdHl8fDApfSksaD1kfHwwLHA9bC8oMipNYXRoLnNxcnQoYSpjKSksbT1pLW8sZz1qaShNYXRoLnNxcnQoYS9jKSksdj1NYXRoLmFicyhtKTw1O2xldCB5O2lmKG58fChuPXY/LjAxOjIpLHR8fCh0PXY/LjAwNTouNSkscDwxKXtjb25zdCBlPVBhKGcscCk7eT10PT57Y29uc3Qgbj1NYXRoLmV4cCgtcCpnKnQpO3JldHVybiBpLW4qKChoK3AqZyptKS9lKk1hdGguc2luKGUqdCkrbSpNYXRoLmNvcyhlKnQpKX19ZWxzZSBpZigxPT09cCl5PWU9PmktTWF0aC5leHAoLWcqZSkqKG0rKGgrZyptKSplKTtlbHNle2NvbnN0IGU9ZypNYXRoLnNxcnQocCpwLTEpO3k9dD0+e2NvbnN0IG49TWF0aC5leHAoLXAqZyp0KSxyPU1hdGgubWluKGUqdCwzMDApO3JldHVybiBpLW4qKChoK3AqZyptKSpNYXRoLnNpbmgocikrZSptKk1hdGguY29zaChyKSkvZX19cmV0dXJue2NhbGN1bGF0ZWREdXJhdGlvbjpmJiZ1fHxudWxsLG5leHQ6ZT0+e2NvbnN0IHI9eShlKTtpZihmKXMuZG9uZT1lPj11O2Vsc2V7bGV0IG89MDtwPDEmJihvPTA9PT1lP0FpKGgpOnhhKHksZSxyKSk7Y29uc3QgYT1NYXRoLmFicyhvKTw9bixsPU1hdGguYWJzKGktcik8PXQ7cy5kb25lPWEmJmx9cmV0dXJuIHMudmFsdWU9cy5kb25lP2k6cixzfX19ZnVuY3Rpb24gQWEoe2tleWZyYW1lczplLHZlbG9jaXR5OnQ9MCxwb3dlcjpuPS44LHRpbWVDb25zdGFudDpyPTMyNSxib3VuY2VEYW1waW5nOm89MTAsYm91bmNlU3RpZmZuZXNzOmk9NTAwLG1vZGlmeVRhcmdldDpzLG1pbjphLG1heDpsLHJlc3REZWx0YTpjPS41LHJlc3RTcGVlZDp1fSl7Y29uc3QgZD1lWzBdLGY9e2RvbmU6ITEsdmFsdWU6ZH0saD1lPT52b2lkIDA9PT1hP2w6dm9pZCAwPT09bHx8TWF0aC5hYnMoYS1lKTxNYXRoLmFicyhsLWUpP2E6bDtsZXQgcD1uKnQ7Y29uc3QgbT1kK3AsZz12b2lkIDA9PT1zP206cyhtKTtnIT09bSYmKHA9Zy1kKTtjb25zdCB2PWU9Pi1wKk1hdGguZXhwKC1lL3IpLHk9ZT0+Zyt2KGUpLGI9ZT0+e2NvbnN0IHQ9dihlKSxuPXkoZSk7Zi5kb25lPU1hdGguYWJzKHQpPD1jLGYudmFsdWU9Zi5kb25lP2c6bn07bGV0IHgsdztjb25zdCBFPWU9PnsoZT0+dm9pZCAwIT09YSYmZTxhfHx2b2lkIDAhPT1sJiZlPmwpKGYudmFsdWUpJiYoeD1lLHc9TmEoe2tleWZyYW1lczpbZi52YWx1ZSxoKGYudmFsdWUpXSx2ZWxvY2l0eTp4YSh5LGUsZi52YWx1ZSksZGFtcGluZzpvLHN0aWZmbmVzczppLHJlc3REZWx0YTpjLHJlc3RTcGVlZDp1fSkpfTtyZXR1cm4gRSgwKSx7Y2FsY3VsYXRlZER1cmF0aW9uOm51bGwsbmV4dDplPT57bGV0IHQ9ITE7cmV0dXJuIHd8fHZvaWQgMCE9PXh8fCh0PSEwLGIoZSksRShlKSksdm9pZCAwIT09eCYmZT49eD93Lm5leHQoZS14KTooIXQmJmIoZSksZil9fX1jb25zdCBqYT0oZSx0LG4pPT4oKCgxLTMqbiszKnQpKmUrKDMqbi02KnQpKSplKzMqdCkqZTtmdW5jdGlvbiBNYShlLHQsbixyKXtpZihlPT09dCYmbj09PXIpcmV0dXJuIFZpO3JldHVybiBvPT4wPT09b3x8MT09PW8/bzpqYShmdW5jdGlvbihlLHQsbixyLG8pe2xldCBpLHMsYT0wO2Rve3M9dCsobi10KS8yLGk9amEocyxyLG8pLWUsaT4wP249czp0PXN9d2hpbGUoTWF0aC5hYnMoaSk+MWUtNyYmKythPDEyKTtyZXR1cm4gc30obywwLDEsZSxuKSx0LHIpfWNvbnN0IElhPU1hKC40MiwwLDEsMSksRGE9TWEoMCwwLC41OCwxKSxMYT1NYSguNDIsMCwuNTgsMSksRmE9ZT0+dD0+dDw9LjU/ZSgyKnQpLzI6KDItZSgyKigxLXQpKSkvMix6YT1lPT50PT4xLWUoMS10KSxCYT1lPT4xLU1hdGguc2luKE1hdGguYWNvcyhlKSksVmE9emEoQmEpLFdhPUZhKEJhKSxVYT1NYSguMzMsMS41MywuNjksLjk5KSwkYT16YShVYSksS2E9RmEoJGEpLEhhPXtsaW5lYXI6VmksZWFzZUluOklhLGVhc2VJbk91dDpMYSxlYXNlT3V0OkRhLGNpcmNJbjpCYSxjaXJjSW5PdXQ6V2EsY2lyY091dDpWYSxiYWNrSW46JGEsYmFja0luT3V0OkthLGJhY2tPdXQ6VWEsYW50aWNpcGF0ZTplPT4oZSo9Mik8MT8uNSokYShlKTouNSooMi1NYXRoLnBvdygyLC0xMCooZS0xKSkpfSxxYT1lPT57aWYoQXJyYXkuaXNBcnJheShlKSl7WGkoND09PWUubGVuZ3RoLFwiQ3ViaWMgYmV6aWVyIGFycmF5cyBtdXN0IGNvbnRhaW4gZm91ciBudW1lcmljYWwgdmFsdWVzLlwiKTtjb25zdFt0LG4scixvXT1lO3JldHVybiBNYSh0LG4scixvKX1yZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT8oWGkodm9pZCAwIT09SGFbZV0sYEludmFsaWQgZWFzaW5nIHR5cGUgJyR7ZX0nYCksSGFbZV0pOmV9LFlhPShlLHQpPT5uPT50KGUobikpLEdhPSguLi5lKT0+ZS5yZWR1Y2UoWWEpLFhhPShlLHQsbik9Pntjb25zdCByPXQtZTtyZXR1cm4gMD09PXI/MToobi1lKS9yfSxKYT0oZSx0LG4pPT5lKyh0LWUpKm47ZnVuY3Rpb24gWmEoZSx0LG4pe3JldHVybiBuPDAmJihuKz0xKSxuPjEmJihuLT0xKSxuPDEvNj9lKzYqKHQtZSkqbjpuPC41P3Q6bjwyLzM/ZSsodC1lKSooMi8zLW4pKjY6ZX1mdW5jdGlvbiBRYShlLHQpe3JldHVybiBuPT5uPjA/dDplfWNvbnN0IGVsPShlLHQsbik9Pntjb25zdCByPWUqZSxvPW4qKHQqdC1yKStyO3JldHVybiBvPDA/MDpNYXRoLnNxcnQobyl9LHRsPVtWcyxCcyxXc107ZnVuY3Rpb24gbmwoZSl7Y29uc3QgdD0oZT0+dGwuZmluZCgodD0+dC50ZXN0KGUpKSkpKGUpO2lmKEdpKEJvb2xlYW4odCksYCcke2V9JyBpcyBub3QgYW4gYW5pbWF0YWJsZSBjb2xvci4gVXNlIHRoZSBlcXVpdmFsZW50IGNvbG9yIGNvZGUgaW5zdGVhZC5gKSwhQm9vbGVhbih0KSlyZXR1cm4hMTtsZXQgbj10LnBhcnNlKGUpO3JldHVybiB0PT09V3MmJihuPWZ1bmN0aW9uKHtodWU6ZSxzYXR1cmF0aW9uOnQsbGlnaHRuZXNzOm4sYWxwaGE6cn0pe2UvPTM2MCxuLz0xMDA7bGV0IG89MCxpPTAscz0wO2lmKHQvPTEwMCl7Y29uc3Qgcj1uPC41P24qKDErdCk6bit0LW4qdCxhPTIqbi1yO289WmEoYSxyLGUrMS8zKSxpPVphKGEscixlKSxzPVphKGEscixlLTEvMyl9ZWxzZSBvPWk9cz1uO3JldHVybntyZWQ6TWF0aC5yb3VuZCgyNTUqbyksZ3JlZW46TWF0aC5yb3VuZCgyNTUqaSksYmx1ZTpNYXRoLnJvdW5kKDI1NSpzKSxhbHBoYTpyfX0obikpLG59Y29uc3Qgcmw9KGUsdCk9Pntjb25zdCBuPW5sKGUpLHI9bmwodCk7aWYoIW58fCFyKXJldHVybiBRYShlLHQpO2NvbnN0IG89ey4uLm59O3JldHVybiBlPT4oby5yZWQ9ZWwobi5yZWQsci5yZWQsZSksby5ncmVlbj1lbChuLmdyZWVuLHIuZ3JlZW4sZSksby5ibHVlPWVsKG4uYmx1ZSxyLmJsdWUsZSksby5hbHBoYT1KYShuLmFscGhhLHIuYWxwaGEsZSksQnMudHJhbnNmb3JtKG8pKX0sb2w9bmV3IFNldChbXCJub25lXCIsXCJoaWRkZW5cIl0pO2Z1bmN0aW9uIGlsKGUsdCl7cmV0dXJuIG49PkphKGUsdCxuKX1mdW5jdGlvbiBzbChlKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgZT9pbDpcInN0cmluZ1wiPT10eXBlb2YgZT90cyhlKT9RYTpVcy50ZXN0KGUpP3JsOmNsOkFycmF5LmlzQXJyYXkoZSk/YWw6XCJvYmplY3RcIj09dHlwZW9mIGU/VXMudGVzdChlKT9ybDpsbDpRYX1mdW5jdGlvbiBhbChlLHQpe2NvbnN0IG49Wy4uLmVdLHI9bi5sZW5ndGgsbz1lLm1hcCgoKGUsbik9PnNsKGUpKGUsdFtuXSkpKTtyZXR1cm4gZT0+e2ZvcihsZXQgdD0wO3Q8cjt0Kyspblt0XT1vW3RdKGUpO3JldHVybiBufX1mdW5jdGlvbiBsbChlLHQpe2NvbnN0IG49ey4uLmUsLi4udH0scj17fTtmb3IoY29uc3QgbyBpbiBuKXZvaWQgMCE9PWVbb10mJnZvaWQgMCE9PXRbb10mJihyW29dPXNsKGVbb10pKGVbb10sdFtvXSkpO3JldHVybiBlPT57Zm9yKGNvbnN0IHQgaW4gciluW3RdPXJbdF0oZSk7cmV0dXJuIG59fWNvbnN0IGNsPShlLHQpPT57Y29uc3Qgbj1lYS5jcmVhdGVUcmFuc2Zvcm1lcih0KSxyPVhzKGUpLG89WHModCk7cmV0dXJuIHIuaW5kZXhlcy52YXIubGVuZ3RoPT09by5pbmRleGVzLnZhci5sZW5ndGgmJnIuaW5kZXhlcy5jb2xvci5sZW5ndGg9PT1vLmluZGV4ZXMuY29sb3IubGVuZ3RoJiZyLmluZGV4ZXMubnVtYmVyLmxlbmd0aD49by5pbmRleGVzLm51bWJlci5sZW5ndGg/b2wuaGFzKGUpJiYhby52YWx1ZXMubGVuZ3RofHxvbC5oYXModCkmJiFyLnZhbHVlcy5sZW5ndGg/ZnVuY3Rpb24oZSx0KXtyZXR1cm4gb2wuaGFzKGUpP249Pm48PTA/ZTp0Om49Pm4+PTE/dDplfShlLHQpOkdhKGFsKGZ1bmN0aW9uKGUsdCl7dmFyIG47Y29uc3Qgcj1bXSxvPXtjb2xvcjowLHZhcjowLG51bWJlcjowfTtmb3IobGV0IGk9MDtpPHQudmFsdWVzLmxlbmd0aDtpKyspe2NvbnN0IHM9dC50eXBlc1tpXSxhPWUuaW5kZXhlc1tzXVtvW3NdXSxsPW51bGwhPT0obj1lLnZhbHVlc1thXSkmJnZvaWQgMCE9PW4/bjowO3JbaV09bCxvW3NdKyt9cmV0dXJuIHJ9KHIsbyksby52YWx1ZXMpLG4pOihHaSghMCxgQ29tcGxleCB2YWx1ZXMgJyR7ZX0nIGFuZCAnJHt0fScgdG9vIGRpZmZlcmVudCB0byBtaXguIEVuc3VyZSBhbGwgY29sb3JzIGFyZSBvZiB0aGUgc2FtZSB0eXBlLCBhbmQgdGhhdCBlYWNoIGNvbnRhaW5zIHRoZSBzYW1lIHF1YW50aXR5IG9mIG51bWJlciBhbmQgY29sb3IgdmFsdWVzLiBGYWxsaW5nIGJhY2sgdG8gaW5zdGFudCB0cmFuc2l0aW9uLmApLFFhKGUsdCkpfTtmdW5jdGlvbiB1bChlLHQsbil7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGUmJlwibnVtYmVyXCI9PXR5cGVvZiB0JiZcIm51bWJlclwiPT10eXBlb2Ygbj9KYShlLHQsbik6c2woZSkoZSx0KX1mdW5jdGlvbiBkbCh7ZHVyYXRpb246ZT0zMDAsa2V5ZnJhbWVzOnQsdGltZXM6bixlYXNlOnI9XCJlYXNlSW5PdXRcIn0pe2NvbnN0IG89KGU9PkFycmF5LmlzQXJyYXkoZSkmJlwibnVtYmVyXCIhPXR5cGVvZiBlWzBdKShyKT9yLm1hcChxYSk6cWEociksaT17ZG9uZTohMSx2YWx1ZTp0WzBdfSxzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUubWFwKChlPT5lKnQpKX0obiYmbi5sZW5ndGg9PT10Lmxlbmd0aD9uOmZ1bmN0aW9uKGUpe2NvbnN0IHQ9WzBdO3JldHVybiBmdW5jdGlvbihlLHQpe2NvbnN0IG49ZVtlLmxlbmd0aC0xXTtmb3IobGV0IHI9MTtyPD10O3IrKyl7Y29uc3Qgbz1YYSgwLHQscik7ZS5wdXNoKEphKG4sMSxvKSl9fSh0LGUubGVuZ3RoLTEpLHR9KHQpLGUpLGE9ZnVuY3Rpb24oZSx0LHtjbGFtcDpuPSEwLGVhc2U6cixtaXhlcjpvfT17fSl7Y29uc3QgaT1lLmxlbmd0aDtpZihYaShpPT09dC5sZW5ndGgsXCJCb3RoIGlucHV0IGFuZCBvdXRwdXQgcmFuZ2VzIG11c3QgYmUgdGhlIHNhbWUgbGVuZ3RoXCIpLDE9PT1pKXJldHVybigpPT50WzBdO2lmKDI9PT1pJiZlWzBdPT09ZVsxXSlyZXR1cm4oKT0+dFsxXTtlWzBdPmVbaS0xXSYmKGU9Wy4uLmVdLnJldmVyc2UoKSx0PVsuLi50XS5yZXZlcnNlKCkpO2NvbnN0IHM9ZnVuY3Rpb24oZSx0LG4pe2NvbnN0IHI9W10sbz1ufHx1bCxpPWUubGVuZ3RoLTE7Zm9yKGxldCBuPTA7bjxpO24rKyl7bGV0IGk9byhlW25dLGVbbisxXSk7aWYodCl7Y29uc3QgZT1BcnJheS5pc0FycmF5KHQpP3Rbbl18fFZpOnQ7aT1HYShlLGkpfXIucHVzaChpKX1yZXR1cm4gcn0odCxyLG8pLGE9cy5sZW5ndGgsbD10PT57bGV0IG49MDtpZihhPjEpZm9yKDtuPGUubGVuZ3RoLTImJiEodDxlW24rMV0pO24rKyk7Y29uc3Qgcj1YYShlW25dLGVbbisxXSx0KTtyZXR1cm4gc1tuXShyKX07cmV0dXJuIG4/dD0+bChpcyhlWzBdLGVbaS0xXSx0KSk6bH0ocyx0LHtlYXNlOkFycmF5LmlzQXJyYXkobyk/bzoobD10LGM9byxsLm1hcCgoKCk9PmN8fExhKSkuc3BsaWNlKDAsbC5sZW5ndGgtMSkpfSk7dmFyIGwsYztyZXR1cm57Y2FsY3VsYXRlZER1cmF0aW9uOmUsbmV4dDp0PT4oaS52YWx1ZT1hKHQpLGkuZG9uZT10Pj1lLGkpfX1jb25zdCBmbD1lPT57Y29uc3QgdD0oe3RpbWVzdGFtcDp0fSk9PmUodCk7cmV0dXJue3N0YXJ0OigpPT4kaS51cGRhdGUodCwhMCksc3RvcDooKT0+S2kodCksbm93OigpPT5IaS5pc1Byb2Nlc3Npbmc/SGkudGltZXN0YW1wOm1hLm5vdygpfX0saGw9e2RlY2F5OkFhLGluZXJ0aWE6QWEsdHdlZW46ZGwsa2V5ZnJhbWVzOmRsLHNwcmluZzpOYX0scGw9ZT0+ZS8xMDA7Y2xhc3MgbWwgZXh0ZW5kcyB2YXtjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLmhvbGRUaW1lPW51bGwsdGhpcy5jYW5jZWxUaW1lPW51bGwsdGhpcy5jdXJyZW50VGltZT0wLHRoaXMucGxheWJhY2tTcGVlZD0xLHRoaXMucGVuZGluZ1BsYXlTdGF0ZT1cInJ1bm5pbmdcIix0aGlzLnN0YXJ0VGltZT1udWxsLHRoaXMuc3RhdGU9XCJpZGxlXCIsdGhpcy5zdG9wPSgpPT57aWYodGhpcy5yZXNvbHZlci5jYW5jZWwoKSx0aGlzLmlzU3RvcHBlZD0hMCxcImlkbGVcIj09PXRoaXMuc3RhdGUpcmV0dXJuO3RoaXMudGVhcmRvd24oKTtjb25zdHtvblN0b3A6ZX09dGhpcy5vcHRpb25zO2UmJmUoKX07Y29uc3R7bmFtZTp0LG1vdGlvblZhbHVlOm4sZWxlbWVudDpyLGtleWZyYW1lczpvfT10aGlzLm9wdGlvbnMsaT0obnVsbD09cj92b2lkIDA6ci5LZXlmcmFtZVJlc29sdmVyKXx8RHM7dGhpcy5yZXNvbHZlcj1uZXcgaShvLCgoZSx0KT0+dGhpcy5vbktleWZyYW1lc1Jlc29sdmVkKGUsdCkpLHQsbixyKSx0aGlzLnJlc29sdmVyLnNjaGVkdWxlUmVzb2x2ZSgpfWluaXRQbGF5YmFjayhlKXtjb25zdHt0eXBlOnQ9XCJrZXlmcmFtZXNcIixyZXBlYXQ6bj0wLHJlcGVhdERlbGF5OnI9MCxyZXBlYXRUeXBlOm8sdmVsb2NpdHk6aT0wfT10aGlzLm9wdGlvbnMscz1obFt0XXx8ZGw7bGV0IGEsbDtzIT09ZGwmJlwibnVtYmVyXCIhPXR5cGVvZiBlWzBdJiYoYT1HYShwbCx1bChlWzBdLGVbMV0pKSxlPVswLDEwMF0pO2NvbnN0IGM9cyh7Li4udGhpcy5vcHRpb25zLGtleWZyYW1lczplfSk7XCJtaXJyb3JcIj09PW8mJihsPXMoey4uLnRoaXMub3B0aW9ucyxrZXlmcmFtZXM6Wy4uLmVdLnJldmVyc2UoKSx2ZWxvY2l0eTotaX0pKSxudWxsPT09Yy5jYWxjdWxhdGVkRHVyYXRpb24mJihjLmNhbGN1bGF0ZWREdXJhdGlvbj1mdW5jdGlvbihlKXtsZXQgdD0wLG49ZS5uZXh0KHQpO2Zvcig7IW4uZG9uZSYmdDwyZTQ7KXQrPTUwLG49ZS5uZXh0KHQpO3JldHVybiB0Pj0yZTQ/MS8wOnR9KGMpKTtjb25zdHtjYWxjdWxhdGVkRHVyYXRpb246dX09YyxkPXUrcjtyZXR1cm57Z2VuZXJhdG9yOmMsbWlycm9yZWRHZW5lcmF0b3I6bCxtYXBQZXJjZW50VG9LZXlmcmFtZXM6YSxjYWxjdWxhdGVkRHVyYXRpb246dSxyZXNvbHZlZER1cmF0aW9uOmQsdG90YWxEdXJhdGlvbjpkKihuKzEpLXJ9fW9uUG9zdFJlc29sdmVkKCl7Y29uc3R7YXV0b3BsYXk6ZT0hMH09dGhpcy5vcHRpb25zO3RoaXMucGxheSgpLFwicGF1c2VkXCIhPT10aGlzLnBlbmRpbmdQbGF5U3RhdGUmJmU/dGhpcy5zdGF0ZT10aGlzLnBlbmRpbmdQbGF5U3RhdGU6dGhpcy5wYXVzZSgpfXRpY2soZSx0PSExKXtjb25zdHtyZXNvbHZlZDpufT10aGlzO2lmKCFuKXtjb25zdHtrZXlmcmFtZXM6ZX09dGhpcy5vcHRpb25zO3JldHVybntkb25lOiEwLHZhbHVlOmVbZS5sZW5ndGgtMV19fWNvbnN0e2ZpbmFsS2V5ZnJhbWU6cixnZW5lcmF0b3I6byxtaXJyb3JlZEdlbmVyYXRvcjppLG1hcFBlcmNlbnRUb0tleWZyYW1lczpzLGtleWZyYW1lczphLGNhbGN1bGF0ZWREdXJhdGlvbjpsLHRvdGFsRHVyYXRpb246YyxyZXNvbHZlZER1cmF0aW9uOnV9PW47aWYobnVsbD09PXRoaXMuc3RhcnRUaW1lKXJldHVybiBvLm5leHQoMCk7Y29uc3R7ZGVsYXk6ZCxyZXBlYXQ6ZixyZXBlYXRUeXBlOmgscmVwZWF0RGVsYXk6cCxvblVwZGF0ZTptfT10aGlzLm9wdGlvbnM7dGhpcy5zcGVlZD4wP3RoaXMuc3RhcnRUaW1lPU1hdGgubWluKHRoaXMuc3RhcnRUaW1lLGUpOnRoaXMuc3BlZWQ8MCYmKHRoaXMuc3RhcnRUaW1lPU1hdGgubWluKGUtYy90aGlzLnNwZWVkLHRoaXMuc3RhcnRUaW1lKSksdD90aGlzLmN1cnJlbnRUaW1lPWU6bnVsbCE9PXRoaXMuaG9sZFRpbWU/dGhpcy5jdXJyZW50VGltZT10aGlzLmhvbGRUaW1lOnRoaXMuY3VycmVudFRpbWU9TWF0aC5yb3VuZChlLXRoaXMuc3RhcnRUaW1lKSp0aGlzLnNwZWVkO2NvbnN0IGc9dGhpcy5jdXJyZW50VGltZS1kKih0aGlzLnNwZWVkPj0wPzE6LTEpLHY9dGhpcy5zcGVlZD49MD9nPDA6Zz5jO3RoaXMuY3VycmVudFRpbWU9TWF0aC5tYXgoZywwKSxcImZpbmlzaGVkXCI9PT10aGlzLnN0YXRlJiZudWxsPT09dGhpcy5ob2xkVGltZSYmKHRoaXMuY3VycmVudFRpbWU9Yyk7bGV0IHk9dGhpcy5jdXJyZW50VGltZSxiPW87aWYoZil7Y29uc3QgZT1NYXRoLm1pbih0aGlzLmN1cnJlbnRUaW1lLGMpL3U7bGV0IHQ9TWF0aC5mbG9vcihlKSxuPWUlMTshbiYmZT49MSYmKG49MSksMT09PW4mJnQtLSx0PU1hdGgubWluKHQsZisxKSxCb29sZWFuKHQlMikmJihcInJldmVyc2VcIj09PWg/KG49MS1uLHAmJihuLT1wL3UpKTpcIm1pcnJvclwiPT09aCYmKGI9aSkpLHk9aXMoMCwxLG4pKnV9Y29uc3QgeD12P3tkb25lOiExLHZhbHVlOmFbMF19OmIubmV4dCh5KTtzJiYoeC52YWx1ZT1zKHgudmFsdWUpKTtsZXR7ZG9uZTp3fT14O3Z8fG51bGw9PT1sfHwodz10aGlzLnNwZWVkPj0wP3RoaXMuY3VycmVudFRpbWU+PWM6dGhpcy5jdXJyZW50VGltZTw9MCk7Y29uc3QgRT1udWxsPT09dGhpcy5ob2xkVGltZSYmKFwiZmluaXNoZWRcIj09PXRoaXMuc3RhdGV8fFwicnVubmluZ1wiPT09dGhpcy5zdGF0ZSYmdyk7cmV0dXJuIEUmJnZvaWQgMCE9PXImJih4LnZhbHVlPUJpKGEsdGhpcy5vcHRpb25zLHIpKSxtJiZtKHgudmFsdWUpLEUmJnRoaXMuZmluaXNoKCkseH1nZXQgZHVyYXRpb24oKXtjb25zdHtyZXNvbHZlZDplfT10aGlzO3JldHVybiBlP2ppKGUuY2FsY3VsYXRlZER1cmF0aW9uKTowfWdldCB0aW1lKCl7cmV0dXJuIGppKHRoaXMuY3VycmVudFRpbWUpfXNldCB0aW1lKGUpe2U9QWkoZSksdGhpcy5jdXJyZW50VGltZT1lLG51bGwhPT10aGlzLmhvbGRUaW1lfHwwPT09dGhpcy5zcGVlZD90aGlzLmhvbGRUaW1lPWU6dGhpcy5kcml2ZXImJih0aGlzLnN0YXJ0VGltZT10aGlzLmRyaXZlci5ub3coKS1lL3RoaXMuc3BlZWQpfWdldCBzcGVlZCgpe3JldHVybiB0aGlzLnBsYXliYWNrU3BlZWR9c2V0IHNwZWVkKGUpe2NvbnN0IHQ9dGhpcy5wbGF5YmFja1NwZWVkIT09ZTt0aGlzLnBsYXliYWNrU3BlZWQ9ZSx0JiYodGhpcy50aW1lPWppKHRoaXMuY3VycmVudFRpbWUpKX1wbGF5KCl7aWYodGhpcy5yZXNvbHZlci5pc1NjaGVkdWxlZHx8dGhpcy5yZXNvbHZlci5yZXN1bWUoKSwhdGhpcy5fcmVzb2x2ZWQpcmV0dXJuIHZvaWQodGhpcy5wZW5kaW5nUGxheVN0YXRlPVwicnVubmluZ1wiKTtpZih0aGlzLmlzU3RvcHBlZClyZXR1cm47Y29uc3R7ZHJpdmVyOmU9Zmwsb25QbGF5OnQsc3RhcnRUaW1lOm59PXRoaXMub3B0aW9uczt0aGlzLmRyaXZlcnx8KHRoaXMuZHJpdmVyPWUoKGU9PnRoaXMudGljayhlKSkpKSx0JiZ0KCk7Y29uc3Qgcj10aGlzLmRyaXZlci5ub3coKTtudWxsIT09dGhpcy5ob2xkVGltZT90aGlzLnN0YXJ0VGltZT1yLXRoaXMuaG9sZFRpbWU6dGhpcy5zdGFydFRpbWU/XCJmaW5pc2hlZFwiPT09dGhpcy5zdGF0ZSYmKHRoaXMuc3RhcnRUaW1lPXIpOnRoaXMuc3RhcnRUaW1lPW51bGwhPW4/bjp0aGlzLmNhbGNTdGFydFRpbWUoKSxcImZpbmlzaGVkXCI9PT10aGlzLnN0YXRlJiZ0aGlzLnVwZGF0ZUZpbmlzaGVkUHJvbWlzZSgpLHRoaXMuY2FuY2VsVGltZT10aGlzLnN0YXJ0VGltZSx0aGlzLmhvbGRUaW1lPW51bGwsdGhpcy5zdGF0ZT1cInJ1bm5pbmdcIix0aGlzLmRyaXZlci5zdGFydCgpfXBhdXNlKCl7dmFyIGU7dGhpcy5fcmVzb2x2ZWQ/KHRoaXMuc3RhdGU9XCJwYXVzZWRcIix0aGlzLmhvbGRUaW1lPW51bGwhPT0oZT10aGlzLmN1cnJlbnRUaW1lKSYmdm9pZCAwIT09ZT9lOjApOnRoaXMucGVuZGluZ1BsYXlTdGF0ZT1cInBhdXNlZFwifWNvbXBsZXRlKCl7XCJydW5uaW5nXCIhPT10aGlzLnN0YXRlJiZ0aGlzLnBsYXkoKSx0aGlzLnBlbmRpbmdQbGF5U3RhdGU9dGhpcy5zdGF0ZT1cImZpbmlzaGVkXCIsdGhpcy5ob2xkVGltZT1udWxsfWZpbmlzaCgpe3RoaXMudGVhcmRvd24oKSx0aGlzLnN0YXRlPVwiZmluaXNoZWRcIjtjb25zdHtvbkNvbXBsZXRlOmV9PXRoaXMub3B0aW9ucztlJiZlKCl9Y2FuY2VsKCl7bnVsbCE9PXRoaXMuY2FuY2VsVGltZSYmdGhpcy50aWNrKHRoaXMuY2FuY2VsVGltZSksdGhpcy50ZWFyZG93bigpLHRoaXMudXBkYXRlRmluaXNoZWRQcm9taXNlKCl9dGVhcmRvd24oKXt0aGlzLnN0YXRlPVwiaWRsZVwiLHRoaXMuc3RvcERyaXZlcigpLHRoaXMucmVzb2x2ZUZpbmlzaGVkUHJvbWlzZSgpLHRoaXMudXBkYXRlRmluaXNoZWRQcm9taXNlKCksdGhpcy5zdGFydFRpbWU9dGhpcy5jYW5jZWxUaW1lPW51bGwsdGhpcy5yZXNvbHZlci5jYW5jZWwoKX1zdG9wRHJpdmVyKCl7dGhpcy5kcml2ZXImJih0aGlzLmRyaXZlci5zdG9wKCksdGhpcy5kcml2ZXI9dm9pZCAwKX1zYW1wbGUoZSl7cmV0dXJuIHRoaXMuc3RhcnRUaW1lPTAsdGhpcy50aWNrKGUsITApfX1jb25zdCBnbD1uZXcgU2V0KFtcIm9wYWNpdHlcIixcImNsaXBQYXRoXCIsXCJmaWx0ZXJcIixcInRyYW5zZm9ybVwiXSksdmw9ZT0+QXJyYXkuaXNBcnJheShlKSYmXCJudW1iZXJcIj09dHlwZW9mIGVbMF07ZnVuY3Rpb24geWwoZSl7cmV0dXJuIEJvb2xlYW4oIWV8fFwic3RyaW5nXCI9PXR5cGVvZiBlJiZlIGluIHhsfHx2bChlKXx8QXJyYXkuaXNBcnJheShlKSYmZS5ldmVyeSh5bCkpfWNvbnN0IGJsPShbZSx0LG4scl0pPT5gY3ViaWMtYmV6aWVyKCR7ZX0sICR7dH0sICR7bn0sICR7cn0pYCx4bD17bGluZWFyOlwibGluZWFyXCIsZWFzZTpcImVhc2VcIixlYXNlSW46XCJlYXNlLWluXCIsZWFzZU91dDpcImVhc2Utb3V0XCIsZWFzZUluT3V0OlwiZWFzZS1pbi1vdXRcIixjaXJjSW46YmwoWzAsLjY1LC41NSwxXSksY2lyY091dDpibChbLjU1LDAsMSwuNDVdKSxiYWNrSW46YmwoWy4zMSwuMDEsLjY2LC0uNTldKSxiYWNrT3V0OmJsKFsuMzMsMS41MywuNjksLjk5XSl9O2Z1bmN0aW9uIHdsKGUpe3JldHVybiBFbChlKXx8eGwuZWFzZU91dH1mdW5jdGlvbiBFbChlKXtyZXR1cm4gZT92bChlKT9ibChlKTpBcnJheS5pc0FycmF5KGUpP2UubWFwKHdsKTp4bFtlXTp2b2lkIDB9Y29uc3QgU2w9ZmEoKCgpPT5PYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChFbGVtZW50LnByb3RvdHlwZSxcImFuaW1hdGVcIikpKTtjbGFzcyBfbCBleHRlbmRzIHZhe2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpO2NvbnN0e25hbWU6dCxtb3Rpb25WYWx1ZTpuLGVsZW1lbnQ6cixrZXlmcmFtZXM6b309dGhpcy5vcHRpb25zO3RoaXMucmVzb2x2ZXI9bmV3IGRhKG8sKChlLHQpPT50aGlzLm9uS2V5ZnJhbWVzUmVzb2x2ZWQoZSx0KSksdCxuLHIpLHRoaXMucmVzb2x2ZXIuc2NoZWR1bGVSZXNvbHZlKCl9aW5pdFBsYXliYWNrKGUsdCl7dmFyIG47bGV0e2R1cmF0aW9uOnI9MzAwLHRpbWVzOm8sZWFzZTppLHR5cGU6cyxtb3Rpb25WYWx1ZTphLG5hbWU6bCxzdGFydFRpbWU6Y309dGhpcy5vcHRpb25zO2lmKCEobnVsbD09PShuPWEub3duZXIpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmN1cnJlbnQpKXJldHVybiExO2lmKFwic3ByaW5nXCI9PT0odT10aGlzLm9wdGlvbnMpLnR5cGV8fCF5bCh1LmVhc2UpKXtjb25zdHtvbkNvbXBsZXRlOnQsb25VcGRhdGU6bixtb3Rpb25WYWx1ZTphLGVsZW1lbnQ6bCwuLi5jfT10aGlzLm9wdGlvbnMsdT1mdW5jdGlvbihlLHQpe2NvbnN0IG49bmV3IG1sKHsuLi50LGtleWZyYW1lczplLHJlcGVhdDowLGRlbGF5OjAsaXNHZW5lcmF0b3I6ITB9KTtsZXQgcj17ZG9uZTohMSx2YWx1ZTplWzBdfTtjb25zdCBvPVtdO2xldCBpPTA7Zm9yKDshci5kb25lJiZpPDJlNDspcj1uLnNhbXBsZShpKSxvLnB1c2goci52YWx1ZSksaSs9MTA7cmV0dXJue3RpbWVzOnZvaWQgMCxrZXlmcmFtZXM6byxkdXJhdGlvbjppLTEwLGVhc2U6XCJsaW5lYXJcIn19KGUsYyk7MT09PShlPXUua2V5ZnJhbWVzKS5sZW5ndGgmJihlWzFdPWVbMF0pLHI9dS5kdXJhdGlvbixvPXUudGltZXMsaT11LmVhc2Uscz1cImtleWZyYW1lc1wifXZhciB1O2NvbnN0IGQ9ZnVuY3Rpb24oZSx0LG4se2RlbGF5OnI9MCxkdXJhdGlvbjpvPTMwMCxyZXBlYXQ6aT0wLHJlcGVhdFR5cGU6cz1cImxvb3BcIixlYXNlOmEsdGltZXM6bH09e30pe2NvbnN0IGM9e1t0XTpufTtsJiYoYy5vZmZzZXQ9bCk7Y29uc3QgdT1FbChhKTtyZXR1cm4gQXJyYXkuaXNBcnJheSh1KSYmKGMuZWFzaW5nPXUpLGUuYW5pbWF0ZShjLHtkZWxheTpyLGR1cmF0aW9uOm8sZWFzaW5nOkFycmF5LmlzQXJyYXkodSk/XCJsaW5lYXJcIjp1LGZpbGw6XCJib3RoXCIsaXRlcmF0aW9uczppKzEsZGlyZWN0aW9uOlwicmV2ZXJzZVwiPT09cz9cImFsdGVybmF0ZVwiOlwibm9ybWFsXCJ9KX0oYS5vd25lci5jdXJyZW50LGwsZSx7Li4udGhpcy5vcHRpb25zLGR1cmF0aW9uOnIsdGltZXM6byxlYXNlOml9KTtyZXR1cm4gZC5zdGFydFRpbWU9bnVsbCE9Yz9jOnRoaXMuY2FsY1N0YXJ0VGltZSgpLHRoaXMucGVuZGluZ1RpbWVsaW5lPyhkLnRpbWVsaW5lPXRoaXMucGVuZGluZ1RpbWVsaW5lLHRoaXMucGVuZGluZ1RpbWVsaW5lPXZvaWQgMCk6ZC5vbmZpbmlzaD0oKT0+e2NvbnN0e29uQ29tcGxldGU6bn09dGhpcy5vcHRpb25zO2Euc2V0KEJpKGUsdGhpcy5vcHRpb25zLHQpKSxuJiZuKCksdGhpcy5jYW5jZWwoKSx0aGlzLnJlc29sdmVGaW5pc2hlZFByb21pc2UoKX0se2FuaW1hdGlvbjpkLGR1cmF0aW9uOnIsdGltZXM6byx0eXBlOnMsZWFzZTppLGtleWZyYW1lczplfX1nZXQgZHVyYXRpb24oKXtjb25zdHtyZXNvbHZlZDplfT10aGlzO2lmKCFlKXJldHVybiAwO2NvbnN0e2R1cmF0aW9uOnR9PWU7cmV0dXJuIGppKHQpfWdldCB0aW1lKCl7Y29uc3R7cmVzb2x2ZWQ6ZX09dGhpcztpZighZSlyZXR1cm4gMDtjb25zdHthbmltYXRpb246dH09ZTtyZXR1cm4gamkodC5jdXJyZW50VGltZXx8MCl9c2V0IHRpbWUoZSl7Y29uc3R7cmVzb2x2ZWQ6dH09dGhpcztpZighdClyZXR1cm47Y29uc3R7YW5pbWF0aW9uOm59PXQ7bi5jdXJyZW50VGltZT1BaShlKX1nZXQgc3BlZWQoKXtjb25zdHtyZXNvbHZlZDplfT10aGlzO2lmKCFlKXJldHVybiAxO2NvbnN0e2FuaW1hdGlvbjp0fT1lO3JldHVybiB0LnBsYXliYWNrUmF0ZX1zZXQgc3BlZWQoZSl7Y29uc3R7cmVzb2x2ZWQ6dH09dGhpcztpZighdClyZXR1cm47Y29uc3R7YW5pbWF0aW9uOm59PXQ7bi5wbGF5YmFja1JhdGU9ZX1nZXQgc3RhdGUoKXtjb25zdHtyZXNvbHZlZDplfT10aGlzO2lmKCFlKXJldHVyblwiaWRsZVwiO2NvbnN0e2FuaW1hdGlvbjp0fT1lO3JldHVybiB0LnBsYXlTdGF0ZX1nZXQgc3RhcnRUaW1lKCl7Y29uc3R7cmVzb2x2ZWQ6ZX09dGhpcztpZighZSlyZXR1cm4gbnVsbDtjb25zdHthbmltYXRpb246dH09ZTtyZXR1cm4gdC5zdGFydFRpbWV9YXR0YWNoVGltZWxpbmUoZSl7aWYodGhpcy5fcmVzb2x2ZWQpe2NvbnN0e3Jlc29sdmVkOnR9PXRoaXM7aWYoIXQpcmV0dXJuIFZpO2NvbnN0e2FuaW1hdGlvbjpufT10O24udGltZWxpbmU9ZSxuLm9uZmluaXNoPW51bGx9ZWxzZSB0aGlzLnBlbmRpbmdUaW1lbGluZT1lO3JldHVybiBWaX1wbGF5KCl7aWYodGhpcy5pc1N0b3BwZWQpcmV0dXJuO2NvbnN0e3Jlc29sdmVkOmV9PXRoaXM7aWYoIWUpcmV0dXJuO2NvbnN0e2FuaW1hdGlvbjp0fT1lO1wiZmluaXNoZWRcIj09PXQucGxheVN0YXRlJiZ0aGlzLnVwZGF0ZUZpbmlzaGVkUHJvbWlzZSgpLHQucGxheSgpfXBhdXNlKCl7Y29uc3R7cmVzb2x2ZWQ6ZX09dGhpcztpZighZSlyZXR1cm47Y29uc3R7YW5pbWF0aW9uOnR9PWU7dC5wYXVzZSgpfXN0b3AoKXtpZih0aGlzLnJlc29sdmVyLmNhbmNlbCgpLHRoaXMuaXNTdG9wcGVkPSEwLFwiaWRsZVwiPT09dGhpcy5zdGF0ZSlyZXR1cm47dGhpcy5yZXNvbHZlRmluaXNoZWRQcm9taXNlKCksdGhpcy51cGRhdGVGaW5pc2hlZFByb21pc2UoKTtjb25zdHtyZXNvbHZlZDplfT10aGlzO2lmKCFlKXJldHVybjtjb25zdHthbmltYXRpb246dCxrZXlmcmFtZXM6bixkdXJhdGlvbjpyLHR5cGU6byxlYXNlOmksdGltZXM6c309ZTtpZihcImlkbGVcIj09PXQucGxheVN0YXRlfHxcImZpbmlzaGVkXCI9PT10LnBsYXlTdGF0ZSlyZXR1cm47aWYodGhpcy50aW1lKXtjb25zdHttb3Rpb25WYWx1ZTplLG9uVXBkYXRlOnQsb25Db21wbGV0ZTphLGVsZW1lbnQ6bCwuLi5jfT10aGlzLm9wdGlvbnMsdT1uZXcgbWwoey4uLmMsa2V5ZnJhbWVzOm4sZHVyYXRpb246cix0eXBlOm8sZWFzZTppLHRpbWVzOnMsaXNHZW5lcmF0b3I6ITB9KSxkPUFpKHRoaXMudGltZSk7ZS5zZXRXaXRoVmVsb2NpdHkodS5zYW1wbGUoZC0xMCkudmFsdWUsdS5zYW1wbGUoZCkudmFsdWUsMTApfWNvbnN0e29uU3RvcDphfT10aGlzLm9wdGlvbnM7YSYmYSgpLHRoaXMuY2FuY2VsKCl9Y29tcGxldGUoKXtjb25zdHtyZXNvbHZlZDplfT10aGlzO2UmJmUuYW5pbWF0aW9uLmZpbmlzaCgpfWNhbmNlbCgpe2NvbnN0e3Jlc29sdmVkOmV9PXRoaXM7ZSYmZS5hbmltYXRpb24uY2FuY2VsKCl9c3RhdGljIHN1cHBvcnRzKGUpe2NvbnN0e21vdGlvblZhbHVlOnQsbmFtZTpuLHJlcGVhdERlbGF5OnIscmVwZWF0VHlwZTpvLGRhbXBpbmc6aSx0eXBlOnN9PWU7cmV0dXJuIFNsKCkmJm4mJmdsLmhhcyhuKSYmdCYmdC5vd25lciYmdC5vd25lci5jdXJyZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQmJiF0Lm93bmVyLmdldFByb3BzKCkub25VcGRhdGUmJiFyJiZcIm1pcnJvclwiIT09byYmMCE9PWkmJlwiaW5lcnRpYVwiIT09c319Y29uc3Qga2w9ZmEoKCgpPT52b2lkIDAhPT13aW5kb3cuU2Nyb2xsVGltZWxpbmUpKTtjbGFzcyBDbHtjb25zdHJ1Y3RvcihlKXt0aGlzLnN0b3A9KCk9PnRoaXMucnVuQWxsKFwic3RvcFwiKSx0aGlzLmFuaW1hdGlvbnM9ZS5maWx0ZXIoQm9vbGVhbil9dGhlbihlLHQpe3JldHVybiBQcm9taXNlLmFsbCh0aGlzLmFuaW1hdGlvbnMpLnRoZW4oZSkuY2F0Y2godCl9Z2V0QWxsKGUpe3JldHVybiB0aGlzLmFuaW1hdGlvbnNbMF1bZV19c2V0QWxsKGUsdCl7Zm9yKGxldCBuPTA7bjx0aGlzLmFuaW1hdGlvbnMubGVuZ3RoO24rKyl0aGlzLmFuaW1hdGlvbnNbbl1bZV09dH1hdHRhY2hUaW1lbGluZShlKXtjb25zdCB0PXRoaXMuYW5pbWF0aW9ucy5tYXAoKHQ9PntpZigha2woKXx8IXQuYXR0YWNoVGltZWxpbmUpcmV0dXJuIHQucGF1c2UoKSxmdW5jdGlvbihlLG4pe2xldCByO2NvbnN0IG89KCk9Pntjb25zdHtjdXJyZW50VGltZTplfT1uLG89KG51bGw9PT1lPzA6ZS52YWx1ZSkvMTAwO3IhPT1vJiYoZT0+e3QudGltZT10LmR1cmF0aW9uKmV9KShvKSxyPW99O3JldHVybiAkaS51cGRhdGUobywhMCksKCk9PktpKG8pfSgwLGUpO3QuYXR0YWNoVGltZWxpbmUoZSl9KSk7cmV0dXJuKCk9Pnt0LmZvckVhY2goKChlLHQpPT57ZSYmZSgpLHRoaXMuYW5pbWF0aW9uc1t0XS5zdG9wKCl9KSl9fWdldCB0aW1lKCl7cmV0dXJuIHRoaXMuZ2V0QWxsKFwidGltZVwiKX1zZXQgdGltZShlKXt0aGlzLnNldEFsbChcInRpbWVcIixlKX1nZXQgc3BlZWQoKXtyZXR1cm4gdGhpcy5nZXRBbGwoXCJzcGVlZFwiKX1zZXQgc3BlZWQoZSl7dGhpcy5zZXRBbGwoXCJzcGVlZFwiLGUpfWdldCBzdGFydFRpbWUoKXtyZXR1cm4gdGhpcy5nZXRBbGwoXCJzdGFydFRpbWVcIil9Z2V0IGR1cmF0aW9uKCl7bGV0IGU9MDtmb3IobGV0IHQ9MDt0PHRoaXMuYW5pbWF0aW9ucy5sZW5ndGg7dCsrKWU9TWF0aC5tYXgoZSx0aGlzLmFuaW1hdGlvbnNbdF0uZHVyYXRpb24pO3JldHVybiBlfXJ1bkFsbChlKXt0aGlzLmFuaW1hdGlvbnMuZm9yRWFjaCgodD0+dFtlXSgpKSl9cGxheSgpe3RoaXMucnVuQWxsKFwicGxheVwiKX1wYXVzZSgpe3RoaXMucnVuQWxsKFwicGF1c2VcIil9Y2FuY2VsKCl7dGhpcy5ydW5BbGwoXCJjYW5jZWxcIil9Y29tcGxldGUoKXt0aGlzLnJ1bkFsbChcImNvbXBsZXRlXCIpfX1jb25zdCBQbD0oZSx0LG4scj17fSxvLGkscyk9PmE9Pntjb25zdCBsPUZpKHIsZSl8fHt9LGM9bC5kZWxheXx8ci5kZWxheXx8MDtsZXR7ZWxhcHNlZDp1PTB9PXI7dS09QWkoYyk7bGV0IGQ9e2tleWZyYW1lczpBcnJheS5pc0FycmF5KG4pP246W251bGwsbl0sZWFzZTpcImVhc2VPdXRcIix2ZWxvY2l0eTp0LmdldFZlbG9jaXR5KCksLi4ubCxkZWxheTotdSxvblVwZGF0ZTplPT57dC5zZXQoZSksbC5vblVwZGF0ZSYmbC5vblVwZGF0ZShlKX0sb25Db21wbGV0ZTooKT0+e2EoKSxsLm9uQ29tcGxldGUmJmwub25Db21wbGV0ZSgpLHMmJnMoKX0sb25TdG9wOnMsbmFtZTplLG1vdGlvblZhbHVlOnQsZWxlbWVudDppP3ZvaWQgMDpvfTsoZnVuY3Rpb24oe3doZW46ZSxkZWxheTp0LGRlbGF5Q2hpbGRyZW46bixzdGFnZ2VyQ2hpbGRyZW46cixzdGFnZ2VyRGlyZWN0aW9uOm8scmVwZWF0OmkscmVwZWF0VHlwZTpzLHJlcGVhdERlbGF5OmEsZnJvbTpsLGVsYXBzZWQ6YywuLi51fSl7cmV0dXJuISFPYmplY3Qua2V5cyh1KS5sZW5ndGh9KShsKXx8KGQ9ey4uLmQsLi4uTGkoZSxkKX0pLGQuZHVyYXRpb24mJihkLmR1cmF0aW9uPUFpKGQuZHVyYXRpb24pKSxkLnJlcGVhdERlbGF5JiYoZC5yZXBlYXREZWxheT1BaShkLnJlcGVhdERlbGF5KSksdm9pZCAwIT09ZC5mcm9tJiYoZC5rZXlmcmFtZXNbMF09ZC5mcm9tKTtsZXQgZj0hMTtpZigoITE9PT1kLnR5cGV8fDA9PT1kLmR1cmF0aW9uJiYhZC5yZXBlYXREZWxheSkmJihkLmR1cmF0aW9uPTAsMD09PWQuZGVsYXkmJihmPSEwKSksZiYmIWkmJnZvaWQgMCE9PXQuZ2V0KCkpe2NvbnN0IGU9QmkoZC5rZXlmcmFtZXMsbCk7aWYodm9pZCAwIT09ZSlyZXR1cm4gJGkudXBkYXRlKCgoKT0+e2Qub25VcGRhdGUoZSksZC5vbkNvbXBsZXRlKCl9KSksbmV3IENsKFtdKX1yZXR1cm4haSYmX2wuc3VwcG9ydHMoZCk/bmV3IF9sKGQpOm5ldyBtbChkKX0sVGw9ZT0+Qm9vbGVhbihlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZS5taXgmJmUudG9WYWx1ZSksT2w9ZT0+RWkoZSk/ZVtlLmxlbmd0aC0xXXx8MDplO2Z1bmN0aW9uIFJsKGUsdCl7LTE9PT1lLmluZGV4T2YodCkmJmUucHVzaCh0KX1mdW5jdGlvbiBObChlLHQpe2NvbnN0IG49ZS5pbmRleE9mKHQpO24+LTEmJmUuc3BsaWNlKG4sMSl9Y2xhc3MgQWx7Y29uc3RydWN0b3IoKXt0aGlzLnN1YnNjcmlwdGlvbnM9W119YWRkKGUpe3JldHVybiBSbCh0aGlzLnN1YnNjcmlwdGlvbnMsZSksKCk9Pk5sKHRoaXMuc3Vic2NyaXB0aW9ucyxlKX1ub3RpZnkoZSx0LG4pe2NvbnN0IHI9dGhpcy5zdWJzY3JpcHRpb25zLmxlbmd0aDtpZihyKWlmKDE9PT1yKXRoaXMuc3Vic2NyaXB0aW9uc1swXShlLHQsbik7ZWxzZSBmb3IobGV0IG89MDtvPHI7bysrKXtjb25zdCByPXRoaXMuc3Vic2NyaXB0aW9uc1tvXTtyJiZyKGUsdCxuKX19Z2V0U2l6ZSgpe3JldHVybiB0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RofWNsZWFyKCl7dGhpcy5zdWJzY3JpcHRpb25zLmxlbmd0aD0wfX1jb25zdCBqbD17Y3VycmVudDp2b2lkIDB9O2NsYXNzIE1se2NvbnN0cnVjdG9yKGUsdD17fSl7dGhpcy52ZXJzaW9uPVwiMTEuNC4wXCIsdGhpcy5jYW5UcmFja1ZlbG9jaXR5PW51bGwsdGhpcy5ldmVudHM9e30sdGhpcy51cGRhdGVBbmROb3RpZnk9KGUsdD0hMCk9Pntjb25zdCBuPW1hLm5vdygpO3RoaXMudXBkYXRlZEF0IT09biYmdGhpcy5zZXRQcmV2RnJhbWVWYWx1ZSgpLHRoaXMucHJldj10aGlzLmN1cnJlbnQsdGhpcy5zZXRDdXJyZW50KGUpLHRoaXMuY3VycmVudCE9PXRoaXMucHJldiYmdGhpcy5ldmVudHMuY2hhbmdlJiZ0aGlzLmV2ZW50cy5jaGFuZ2Uubm90aWZ5KHRoaXMuY3VycmVudCksdCYmdGhpcy5ldmVudHMucmVuZGVyUmVxdWVzdCYmdGhpcy5ldmVudHMucmVuZGVyUmVxdWVzdC5ub3RpZnkodGhpcy5jdXJyZW50KX0sdGhpcy5oYXNBbmltYXRlZD0hMSx0aGlzLnNldEN1cnJlbnQoZSksdGhpcy5vd25lcj10Lm93bmVyfXNldEN1cnJlbnQoZSl7dmFyIHQ7dGhpcy5jdXJyZW50PWUsdGhpcy51cGRhdGVkQXQ9bWEubm93KCksbnVsbD09PXRoaXMuY2FuVHJhY2tWZWxvY2l0eSYmdm9pZCAwIT09ZSYmKHRoaXMuY2FuVHJhY2tWZWxvY2l0eT0odD10aGlzLmN1cnJlbnQsIWlzTmFOKHBhcnNlRmxvYXQodCkpKSl9c2V0UHJldkZyYW1lVmFsdWUoZT10aGlzLmN1cnJlbnQpe3RoaXMucHJldkZyYW1lVmFsdWU9ZSx0aGlzLnByZXZVcGRhdGVkQXQ9dGhpcy51cGRhdGVkQXR9b25DaGFuZ2UoZSl7cmV0dXJuIHRoaXMub24oXCJjaGFuZ2VcIixlKX1vbihlLHQpe3RoaXMuZXZlbnRzW2VdfHwodGhpcy5ldmVudHNbZV09bmV3IEFsKTtjb25zdCBuPXRoaXMuZXZlbnRzW2VdLmFkZCh0KTtyZXR1cm5cImNoYW5nZVwiPT09ZT8oKT0+e24oKSwkaS5yZWFkKCgoKT0+e3RoaXMuZXZlbnRzLmNoYW5nZS5nZXRTaXplKCl8fHRoaXMuc3RvcCgpfSkpfTpufWNsZWFyTGlzdGVuZXJzKCl7Zm9yKGNvbnN0IGUgaW4gdGhpcy5ldmVudHMpdGhpcy5ldmVudHNbZV0uY2xlYXIoKX1hdHRhY2goZSx0KXt0aGlzLnBhc3NpdmVFZmZlY3Q9ZSx0aGlzLnN0b3BQYXNzaXZlRWZmZWN0PXR9c2V0KGUsdD0hMCl7dCYmdGhpcy5wYXNzaXZlRWZmZWN0P3RoaXMucGFzc2l2ZUVmZmVjdChlLHRoaXMudXBkYXRlQW5kTm90aWZ5KTp0aGlzLnVwZGF0ZUFuZE5vdGlmeShlLHQpfXNldFdpdGhWZWxvY2l0eShlLHQsbil7dGhpcy5zZXQodCksdGhpcy5wcmV2PXZvaWQgMCx0aGlzLnByZXZGcmFtZVZhbHVlPWUsdGhpcy5wcmV2VXBkYXRlZEF0PXRoaXMudXBkYXRlZEF0LW59anVtcChlLHQ9ITApe3RoaXMudXBkYXRlQW5kTm90aWZ5KGUpLHRoaXMucHJldj1lLHRoaXMucHJldlVwZGF0ZWRBdD10aGlzLnByZXZGcmFtZVZhbHVlPXZvaWQgMCx0JiZ0aGlzLnN0b3AoKSx0aGlzLnN0b3BQYXNzaXZlRWZmZWN0JiZ0aGlzLnN0b3BQYXNzaXZlRWZmZWN0KCl9Z2V0KCl7cmV0dXJuIGpsLmN1cnJlbnQmJmpsLmN1cnJlbnQucHVzaCh0aGlzKSx0aGlzLmN1cnJlbnR9Z2V0UHJldmlvdXMoKXtyZXR1cm4gdGhpcy5wcmV2fWdldFZlbG9jaXR5KCl7Y29uc3QgZT1tYS5ub3coKTtpZighdGhpcy5jYW5UcmFja1ZlbG9jaXR5fHx2b2lkIDA9PT10aGlzLnByZXZGcmFtZVZhbHVlfHxlLXRoaXMudXBkYXRlZEF0PjMwKXJldHVybiAwO2NvbnN0IHQ9TWF0aC5taW4odGhpcy51cGRhdGVkQXQtdGhpcy5wcmV2VXBkYXRlZEF0LDMwKTtyZXR1cm4geWEocGFyc2VGbG9hdCh0aGlzLmN1cnJlbnQpLXBhcnNlRmxvYXQodGhpcy5wcmV2RnJhbWVWYWx1ZSksdCl9c3RhcnQoZSl7cmV0dXJuIHRoaXMuc3RvcCgpLG5ldyBQcm9taXNlKCh0PT57dGhpcy5oYXNBbmltYXRlZD0hMCx0aGlzLmFuaW1hdGlvbj1lKHQpLHRoaXMuZXZlbnRzLmFuaW1hdGlvblN0YXJ0JiZ0aGlzLmV2ZW50cy5hbmltYXRpb25TdGFydC5ub3RpZnkoKX0pKS50aGVuKCgoKT0+e3RoaXMuZXZlbnRzLmFuaW1hdGlvbkNvbXBsZXRlJiZ0aGlzLmV2ZW50cy5hbmltYXRpb25Db21wbGV0ZS5ub3RpZnkoKSx0aGlzLmNsZWFyQW5pbWF0aW9uKCl9KSl9c3RvcCgpe3RoaXMuYW5pbWF0aW9uJiYodGhpcy5hbmltYXRpb24uc3RvcCgpLHRoaXMuZXZlbnRzLmFuaW1hdGlvbkNhbmNlbCYmdGhpcy5ldmVudHMuYW5pbWF0aW9uQ2FuY2VsLm5vdGlmeSgpKSx0aGlzLmNsZWFyQW5pbWF0aW9uKCl9aXNBbmltYXRpbmcoKXtyZXR1cm4hIXRoaXMuYW5pbWF0aW9ufWNsZWFyQW5pbWF0aW9uKCl7ZGVsZXRlIHRoaXMuYW5pbWF0aW9ufWRlc3Ryb3koKXt0aGlzLmNsZWFyTGlzdGVuZXJzKCksdGhpcy5zdG9wKCksdGhpcy5zdG9wUGFzc2l2ZUVmZmVjdCYmdGhpcy5zdG9wUGFzc2l2ZUVmZmVjdCgpfX1mdW5jdGlvbiBJbChlLHQpe3JldHVybiBuZXcgTWwoZSx0KX1mdW5jdGlvbiBEbChlLHQsbil7ZS5oYXNWYWx1ZSh0KT9lLmdldFZhbHVlKHQpLnNldChuKTplLmFkZFZhbHVlKHQsSWwobikpfWNvbnN0IExsPWU9PmUucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZ3UsXCIkMS0kMlwiKS50b0xvd2VyQ2FzZSgpLEZsPVwiZGF0YS1cIitMbChcImZyYW1lckFwcGVhcklkXCIpO2Z1bmN0aW9uIHpsKGUpe3JldHVybiBlLnByb3BzW0ZsXX1mdW5jdGlvbiBCbChlKXtyZXR1cm4gTmkuaGFzKGUpP1widHJhbnNmb3JtXCI6Z2wuaGFzKGUpP0xsKGUpOnZvaWQgMH1jbGFzcyBWbCBleHRlbmRzIE1se2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLm91dHB1dD1bXSx0aGlzLmNvdW50cz1uZXcgTWFwfWFkZChlKXtjb25zdCB0PUJsKGUpO2lmKCF0KXJldHVybjtjb25zdCBuPXRoaXMuY291bnRzLmdldCh0KXx8MDt0aGlzLmNvdW50cy5zZXQodCxuKzEpLDA9PT1uJiYodGhpcy5vdXRwdXQucHVzaCh0KSx0aGlzLnVwZGF0ZSgpKTtsZXQgcj0hMTtyZXR1cm4oKT0+e2lmKHIpcmV0dXJuO3I9ITA7Y29uc3QgZT10aGlzLmNvdW50cy5nZXQodCktMTt0aGlzLmNvdW50cy5zZXQodCxlKSwwPT09ZSYmKE5sKHRoaXMub3V0cHV0LHQpLHRoaXMudXBkYXRlKCkpfX11cGRhdGUoKXt0aGlzLnNldCh0aGlzLm91dHB1dC5sZW5ndGg/dGhpcy5vdXRwdXQuam9pbihcIiwgXCIpOlwiYXV0b1wiKX19Y29uc3QgV2w9ZT0+Qm9vbGVhbihlJiZlLmdldFZlbG9jaXR5KTtmdW5jdGlvbiBVbChlLHQpe3ZhciBuO2lmKCFlLmFwcGx5V2lsbENoYW5nZSlyZXR1cm47bGV0IHI9ZS5nZXRWYWx1ZShcIndpbGxDaGFuZ2VcIik7cmV0dXJuIHJ8fChudWxsPT09KG49ZS5wcm9wcy5zdHlsZSl8fHZvaWQgMD09PW4/dm9pZCAwOm4ud2lsbENoYW5nZSl8fChyPW5ldyBWbChcImF1dG9cIiksZS5hZGRWYWx1ZShcIndpbGxDaGFuZ2VcIixyKSksbz1yLEJvb2xlYW4oV2wobykmJm8uYWRkKT9yLmFkZCh0KTp2b2lkIDA7dmFyIG99ZnVuY3Rpb24gJGwoe3Byb3RlY3RlZEtleXM6ZSxuZWVkc0FuaW1hdGluZzp0fSxuKXtjb25zdCByPWUuaGFzT3duUHJvcGVydHkobikmJiEwIT09dFtuXTtyZXR1cm4gdFtuXT0hMSxyfWZ1bmN0aW9uIEtsKGUsdCx7ZGVsYXk6bj0wLHRyYW5zaXRpb25PdmVycmlkZTpyLHR5cGU6b309e30pe3ZhciBpO2xldHt0cmFuc2l0aW9uOnM9ZS5nZXREZWZhdWx0VHJhbnNpdGlvbigpLHRyYW5zaXRpb25FbmQ6YSwuLi5sfT10O3ImJihzPXIpO2NvbnN0IGM9W10sdT1vJiZlLmFuaW1hdGlvblN0YXRlJiZlLmFuaW1hdGlvblN0YXRlLmdldFN0YXRlKClbb107Zm9yKGNvbnN0IHQgaW4gbCl7Y29uc3Qgcj1lLmdldFZhbHVlKHQsbnVsbCE9PShpPWUubGF0ZXN0VmFsdWVzW3RdKSYmdm9pZCAwIT09aT9pOm51bGwpLG89bFt0XTtpZih2b2lkIDA9PT1vfHx1JiYkbCh1LHQpKWNvbnRpbnVlO2NvbnN0IGE9e2RlbGF5Om4sLi4uRmkoc3x8e30sdCl9O2xldCBkPSExO2lmKHdpbmRvdy5Nb3Rpb25IYW5kb2ZmQW5pbWF0aW9uKXtjb25zdCBuPXpsKGUpO2lmKG4pe2NvbnN0IGU9d2luZG93Lk1vdGlvbkhhbmRvZmZBbmltYXRpb24obix0LCRpKTtudWxsIT09ZSYmKGEuc3RhcnRUaW1lPWUsZD0hMCl9fXIuc3RhcnQoUGwodCxyLG8sZS5zaG91bGRSZWR1Y2VNb3Rpb24mJk5pLmhhcyh0KT97dHlwZTohMX06YSxlLGQsVWwoZSx0KSkpO2NvbnN0IGY9ci5hbmltYXRpb247ZiYmYy5wdXNoKGYpfXJldHVybiBhJiZQcm9taXNlLmFsbChjKS50aGVuKCgoKT0+eyRpLnVwZGF0ZSgoKCk9PnthJiZmdW5jdGlvbihlLHQpe2NvbnN0IG49UGkoZSx0KTtsZXR7dHJhbnNpdGlvbkVuZDpyPXt9LHRyYW5zaXRpb246bz17fSwuLi5pfT1ufHx7fTtpPXsuLi5pLC4uLnJ9O2Zvcihjb25zdCB0IGluIGkpRGwoZSx0LE9sKGlbdF0pKX0oZSxhKX0pKX0pKSxjfWZ1bmN0aW9uIEhsKGUsdCxuPXt9KXt2YXIgcjtjb25zdCBvPVBpKGUsdCxcImV4aXRcIj09PW4udHlwZT9udWxsPT09KHI9ZS5wcmVzZW5jZUNvbnRleHQpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmN1c3RvbTp2b2lkIDApO2xldHt0cmFuc2l0aW9uOmk9ZS5nZXREZWZhdWx0VHJhbnNpdGlvbigpfHx7fX09b3x8e307bi50cmFuc2l0aW9uT3ZlcnJpZGUmJihpPW4udHJhbnNpdGlvbk92ZXJyaWRlKTtjb25zdCBzPW8/KCk9PlByb21pc2UuYWxsKEtsKGUsbyxuKSk6KCk9PlByb21pc2UucmVzb2x2ZSgpLGE9ZS52YXJpYW50Q2hpbGRyZW4mJmUudmFyaWFudENoaWxkcmVuLnNpemU/KHI9MCk9Pntjb25zdHtkZWxheUNoaWxkcmVuOm89MCxzdGFnZ2VyQ2hpbGRyZW46cyxzdGFnZ2VyRGlyZWN0aW9uOmF9PWk7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuPTAscj0wLG89MSxpKXtjb25zdCBzPVtdLGE9KGUudmFyaWFudENoaWxkcmVuLnNpemUtMSkqcixsPTE9PT1vPyhlPTApPT5lKnI6KGU9MCk9PmEtZSpyO3JldHVybiBBcnJheS5mcm9tKGUudmFyaWFudENoaWxkcmVuKS5zb3J0KHFsKS5mb3JFYWNoKCgoZSxyKT0+e2Uubm90aWZ5KFwiQW5pbWF0aW9uU3RhcnRcIix0KSxzLnB1c2goSGwoZSx0LHsuLi5pLGRlbGF5Om4rbChyKX0pLnRoZW4oKCgpPT5lLm5vdGlmeShcIkFuaW1hdGlvbkNvbXBsZXRlXCIsdCkpKSl9KSksUHJvbWlzZS5hbGwocyl9KGUsdCxvK3IscyxhLG4pfTooKT0+UHJvbWlzZS5yZXNvbHZlKCkse3doZW46bH09aTtpZihsKXtjb25zdFtlLHRdPVwiYmVmb3JlQ2hpbGRyZW5cIj09PWw/W3MsYV06W2Esc107cmV0dXJuIGUoKS50aGVuKCgoKT0+dCgpKSl9cmV0dXJuIFByb21pc2UuYWxsKFtzKCksYShuLmRlbGF5KV0pfWZ1bmN0aW9uIHFsKGUsdCl7cmV0dXJuIGUuc29ydE5vZGVQb3NpdGlvbih0KX1jb25zdCBZbD1bLi4uVGldLnJldmVyc2UoKSxHbD1UaS5sZW5ndGg7ZnVuY3Rpb24gWGwoZT0hMSl7cmV0dXJue2lzQWN0aXZlOmUscHJvdGVjdGVkS2V5czp7fSxuZWVkc0FuaW1hdGluZzp7fSxwcmV2UmVzb2x2ZWRWYWx1ZXM6e319fWZ1bmN0aW9uIEpsKCl7cmV0dXJue2FuaW1hdGU6WGwoITApLHdoaWxlSW5WaWV3OlhsKCksd2hpbGVIb3ZlcjpYbCgpLHdoaWxlVGFwOlhsKCksd2hpbGVEcmFnOlhsKCksd2hpbGVGb2N1czpYbCgpLGV4aXQ6WGwoKX19Y2xhc3MgWmx7Y29uc3RydWN0b3IoZSl7dGhpcy5pc01vdW50ZWQ9ITEsdGhpcy5ub2RlPWV9dXBkYXRlKCl7fX1sZXQgUWw9MDtjb25zdCBlYz17YW5pbWF0aW9uOntGZWF0dXJlOmNsYXNzIGV4dGVuZHMgWmx7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksZS5hbmltYXRpb25TdGF0ZXx8KGUuYW5pbWF0aW9uU3RhdGU9ZnVuY3Rpb24oZSl7bGV0IHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHQ9PlByb21pc2UuYWxsKHQubWFwKCgoe2FuaW1hdGlvbjp0LG9wdGlvbnM6bn0pPT5mdW5jdGlvbihlLHQsbj17fSl7bGV0IHI7aWYoZS5ub3RpZnkoXCJBbmltYXRpb25TdGFydFwiLHQpLEFycmF5LmlzQXJyYXkodCkpe2NvbnN0IG89dC5tYXAoKHQ9PkhsKGUsdCxuKSkpO3I9UHJvbWlzZS5hbGwobyl9ZWxzZSBpZihcInN0cmluZ1wiPT10eXBlb2YgdClyPUhsKGUsdCxuKTtlbHNle2NvbnN0IG89XCJmdW5jdGlvblwiPT10eXBlb2YgdD9QaShlLHQsbi5jdXN0b20pOnQ7cj1Qcm9taXNlLmFsbChLbChlLG8sbikpfXJldHVybiByLnRoZW4oKCgpPT57ZS5ub3RpZnkoXCJBbmltYXRpb25Db21wbGV0ZVwiLHQpfSkpfShlLHQsbikpKSl9KGUpLG49SmwoKSxyPSEwO2NvbnN0IG89dD0+KG4scik9Pnt2YXIgbztjb25zdCBpPVBpKGUscixcImV4aXRcIj09PXQ/bnVsbD09PShvPWUucHJlc2VuY2VDb250ZXh0KXx8dm9pZCAwPT09bz92b2lkIDA6by5jdXN0b206dm9pZCAwKTtpZihpKXtjb25zdHt0cmFuc2l0aW9uOmUsdHJhbnNpdGlvbkVuZDp0LC4uLnJ9PWk7bj17Li4ubiwuLi5yLC4uLnR9fXJldHVybiBufTtmdW5jdGlvbiBpKGkpe2NvbnN0IHM9ZS5nZXRQcm9wcygpLGE9ZS5nZXRWYXJpYW50Q29udGV4dCghMCl8fHt9LGw9W10sYz1uZXcgU2V0O2xldCB1PXt9LGQ9MS8wO2ZvcihsZXQgdD0wO3Q8R2w7dCsrKXtjb25zdCBwPVlsW3RdLG09bltwXSxnPXZvaWQgMCE9PXNbcF0/c1twXTphW3BdLHY9X2koZykseT1wPT09aT9tLmlzQWN0aXZlOm51bGw7ITE9PT15JiYoZD10KTtsZXQgYj1nPT09YVtwXSYmZyE9PXNbcF0mJnY7aWYoYiYmciYmZS5tYW51YWxseUFuaW1hdGVPbk1vdW50JiYoYj0hMSksbS5wcm90ZWN0ZWRLZXlzPXsuLi51fSwhbS5pc0FjdGl2ZSYmbnVsbD09PXl8fCFnJiYhbS5wcmV2UHJvcHx8d2koZyl8fFwiYm9vbGVhblwiPT10eXBlb2YgZyljb250aW51ZTtsZXQgeD0oZj1tLnByZXZQcm9wLChcInN0cmluZ1wiPT10eXBlb2YoaD1nKT9oIT09ZjohIUFycmF5LmlzQXJyYXkoaCkmJiFTaShoLGYpKXx8cD09PWkmJm0uaXNBY3RpdmUmJiFiJiZ2fHx0PmQmJnYpLHc9ITE7Y29uc3QgRT1BcnJheS5pc0FycmF5KGcpP2c6W2ddO2xldCBTPUUucmVkdWNlKG8ocCkse30pOyExPT09eSYmKFM9e30pO2NvbnN0e3ByZXZSZXNvbHZlZFZhbHVlczpfPXt9fT1tLGs9ey4uLl8sLi4uU30sQz10PT57eD0hMCxjLmhhcyh0KSYmKHc9ITAsYy5kZWxldGUodCkpLG0ubmVlZHNBbmltYXRpbmdbdF09ITA7Y29uc3Qgbj1lLmdldFZhbHVlKHQpO24mJihuLmxpdmVTdHlsZT0hMSl9O2Zvcihjb25zdCBlIGluIGspe2NvbnN0IHQ9U1tlXSxuPV9bZV07aWYodS5oYXNPd25Qcm9wZXJ0eShlKSljb250aW51ZTtsZXQgcj0hMTtyPUVpKHQpJiZFaShuKT8hU2kodCxuKTp0IT09bixyP251bGwhPXQ/QyhlKTpjLmFkZChlKTp2b2lkIDAhPT10JiZjLmhhcyhlKT9DKGUpOm0ucHJvdGVjdGVkS2V5c1tlXT0hMH1tLnByZXZQcm9wPWcsbS5wcmV2UmVzb2x2ZWRWYWx1ZXM9UyxtLmlzQWN0aXZlJiYodT17Li4udSwuLi5TfSksciYmZS5ibG9ja0luaXRpYWxBbmltYXRpb24mJih4PSExKSwheHx8YiYmIXd8fGwucHVzaCguLi5FLm1hcCgoZT0+KHthbmltYXRpb246ZSxvcHRpb25zOnt0eXBlOnB9fSkpKSl9dmFyIGYsaDtpZihjLnNpemUpe2NvbnN0IHQ9e307Yy5mb3JFYWNoKChuPT57Y29uc3Qgcj1lLmdldEJhc2VUYXJnZXQobiksbz1lLmdldFZhbHVlKG4pO28mJihvLmxpdmVTdHlsZT0hMCksdFtuXT1udWxsIT1yP3I6bnVsbH0pKSxsLnB1c2goe2FuaW1hdGlvbjp0fSl9bGV0IHA9Qm9vbGVhbihsLmxlbmd0aCk7cmV0dXJuIXJ8fCExIT09cy5pbml0aWFsJiZzLmluaXRpYWwhPT1zLmFuaW1hdGV8fGUubWFudWFsbHlBbmltYXRlT25Nb3VudHx8KHA9ITEpLHI9ITEscD90KGwpOlByb21pc2UucmVzb2x2ZSgpfXJldHVybnthbmltYXRlQ2hhbmdlczppLHNldEFjdGl2ZTpmdW5jdGlvbih0LHIpe3ZhciBvO2lmKG5bdF0uaXNBY3RpdmU9PT1yKXJldHVybiBQcm9taXNlLnJlc29sdmUoKTtudWxsPT09KG89ZS52YXJpYW50Q2hpbGRyZW4pfHx2b2lkIDA9PT1vfHxvLmZvckVhY2goKGU9Pnt2YXIgbjtyZXR1cm4gbnVsbD09PShuPWUuYW5pbWF0aW9uU3RhdGUpfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLnNldEFjdGl2ZSh0LHIpfSkpLG5bdF0uaXNBY3RpdmU9cjtjb25zdCBzPWkodCk7Zm9yKGNvbnN0IGUgaW4gbiluW2VdLnByb3RlY3RlZEtleXM9e307cmV0dXJuIHN9LHNldEFuaW1hdGVGdW5jdGlvbjpmdW5jdGlvbihuKXt0PW4oZSl9LGdldFN0YXRlOigpPT5uLHJlc2V0OigpPT57bj1KbCgpLHI9ITB9fX0oZSkpfXVwZGF0ZUFuaW1hdGlvbkNvbnRyb2xzU3Vic2NyaXB0aW9uKCl7Y29uc3R7YW5pbWF0ZTplfT10aGlzLm5vZGUuZ2V0UHJvcHMoKTt3aShlKSYmKHRoaXMudW5tb3VudENvbnRyb2xzPWUuc3Vic2NyaWJlKHRoaXMubm9kZSkpfW1vdW50KCl7dGhpcy51cGRhdGVBbmltYXRpb25Db250cm9sc1N1YnNjcmlwdGlvbigpfXVwZGF0ZSgpe2NvbnN0e2FuaW1hdGU6ZX09dGhpcy5ub2RlLmdldFByb3BzKCkse2FuaW1hdGU6dH09dGhpcy5ub2RlLnByZXZQcm9wc3x8e307ZSE9PXQmJnRoaXMudXBkYXRlQW5pbWF0aW9uQ29udHJvbHNTdWJzY3JpcHRpb24oKX11bm1vdW50KCl7dmFyIGU7dGhpcy5ub2RlLmFuaW1hdGlvblN0YXRlLnJlc2V0KCksbnVsbD09PShlPXRoaXMudW5tb3VudENvbnRyb2xzKXx8dm9pZCAwPT09ZXx8ZS5jYWxsKHRoaXMpfX19LGV4aXQ6e0ZlYXR1cmU6Y2xhc3MgZXh0ZW5kcyBabHtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5pZD1RbCsrfXVwZGF0ZSgpe2lmKCF0aGlzLm5vZGUucHJlc2VuY2VDb250ZXh0KXJldHVybjtjb25zdHtpc1ByZXNlbnQ6ZSxvbkV4aXRDb21wbGV0ZTp0fT10aGlzLm5vZGUucHJlc2VuY2VDb250ZXh0LHtpc1ByZXNlbnQ6bn09dGhpcy5ub2RlLnByZXZQcmVzZW5jZUNvbnRleHR8fHt9O2lmKCF0aGlzLm5vZGUuYW5pbWF0aW9uU3RhdGV8fGU9PT1uKXJldHVybjtjb25zdCByPXRoaXMubm9kZS5hbmltYXRpb25TdGF0ZS5zZXRBY3RpdmUoXCJleGl0XCIsIWUpO3QmJiFlJiZyLnRoZW4oKCgpPT50KHRoaXMuaWQpKSl9bW91bnQoKXtjb25zdHtyZWdpc3RlcjplfT10aGlzLm5vZGUucHJlc2VuY2VDb250ZXh0fHx7fTtlJiYodGhpcy51bm1vdW50PWUodGhpcy5pZCkpfXVubW91bnQoKXt9fX19LHRjPWU9PlwibW91c2VcIj09PWUucG9pbnRlclR5cGU/XCJudW1iZXJcIiE9dHlwZW9mIGUuYnV0dG9ufHxlLmJ1dHRvbjw9MDohMSE9PWUuaXNQcmltYXJ5O2Z1bmN0aW9uIG5jKGUsdD1cInBhZ2VcIil7cmV0dXJue3BvaW50Ont4OmVbYCR7dH1YYF0seTplW2Ake3R9WWBdfX19Y29uc3QgcmM9ZT0+dD0+dGModCkmJmUodCxuYyh0KSk7ZnVuY3Rpb24gb2MoZSx0LG4scj17cGFzc2l2ZTohMH0pe3JldHVybiBlLmFkZEV2ZW50TGlzdGVuZXIodCxuLHIpLCgpPT5lLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxuKX1mdW5jdGlvbiBpYyhlLHQsbixyKXtyZXR1cm4gb2MoZSx0LHJjKG4pLHIpfWNvbnN0IHNjPShlLHQpPT5NYXRoLmFicyhlLXQpO2NsYXNzIGFje2NvbnN0cnVjdG9yKGUsdCx7dHJhbnNmb3JtUGFnZVBvaW50Om4sY29udGV4dFdpbmRvdzpyLGRyYWdTbmFwVG9PcmlnaW46bz0hMX09e30pe2lmKHRoaXMuc3RhcnRFdmVudD1udWxsLHRoaXMubGFzdE1vdmVFdmVudD1udWxsLHRoaXMubGFzdE1vdmVFdmVudEluZm89bnVsbCx0aGlzLmhhbmRsZXJzPXt9LHRoaXMuY29udGV4dFdpbmRvdz13aW5kb3csdGhpcy51cGRhdGVQb2ludD0oKT0+e2lmKCF0aGlzLmxhc3RNb3ZlRXZlbnR8fCF0aGlzLmxhc3RNb3ZlRXZlbnRJbmZvKXJldHVybjtjb25zdCBlPXVjKHRoaXMubGFzdE1vdmVFdmVudEluZm8sdGhpcy5oaXN0b3J5KSx0PW51bGwhPT10aGlzLnN0YXJ0RXZlbnQsbj1mdW5jdGlvbihlLHQpe2NvbnN0IG49c2MoZS54LHQueCkscj1zYyhlLnksdC55KTtyZXR1cm4gTWF0aC5zcXJ0KG4qKjIrcioqMil9KGUub2Zmc2V0LHt4OjAseTowfSk+PTM7aWYoIXQmJiFuKXJldHVybjtjb25zdHtwb2ludDpyfT1lLHt0aW1lc3RhbXA6b309SGk7dGhpcy5oaXN0b3J5LnB1c2goey4uLnIsdGltZXN0YW1wOm99KTtjb25zdHtvblN0YXJ0Omksb25Nb3ZlOnN9PXRoaXMuaGFuZGxlcnM7dHx8KGkmJmkodGhpcy5sYXN0TW92ZUV2ZW50LGUpLHRoaXMuc3RhcnRFdmVudD10aGlzLmxhc3RNb3ZlRXZlbnQpLHMmJnModGhpcy5sYXN0TW92ZUV2ZW50LGUpfSx0aGlzLmhhbmRsZVBvaW50ZXJNb3ZlPShlLHQpPT57dGhpcy5sYXN0TW92ZUV2ZW50PWUsdGhpcy5sYXN0TW92ZUV2ZW50SW5mbz1sYyh0LHRoaXMudHJhbnNmb3JtUGFnZVBvaW50KSwkaS51cGRhdGUodGhpcy51cGRhdGVQb2ludCwhMCl9LHRoaXMuaGFuZGxlUG9pbnRlclVwPShlLHQpPT57dGhpcy5lbmQoKTtjb25zdHtvbkVuZDpuLG9uU2Vzc2lvbkVuZDpyLHJlc3VtZUFuaW1hdGlvbjpvfT10aGlzLmhhbmRsZXJzO2lmKHRoaXMuZHJhZ1NuYXBUb09yaWdpbiYmbyYmbygpLCF0aGlzLmxhc3RNb3ZlRXZlbnR8fCF0aGlzLmxhc3RNb3ZlRXZlbnRJbmZvKXJldHVybjtjb25zdCBpPXVjKFwicG9pbnRlcmNhbmNlbFwiPT09ZS50eXBlP3RoaXMubGFzdE1vdmVFdmVudEluZm86bGModCx0aGlzLnRyYW5zZm9ybVBhZ2VQb2ludCksdGhpcy5oaXN0b3J5KTt0aGlzLnN0YXJ0RXZlbnQmJm4mJm4oZSxpKSxyJiZyKGUsaSl9LCF0YyhlKSlyZXR1cm47dGhpcy5kcmFnU25hcFRvT3JpZ2luPW8sdGhpcy5oYW5kbGVycz10LHRoaXMudHJhbnNmb3JtUGFnZVBvaW50PW4sdGhpcy5jb250ZXh0V2luZG93PXJ8fHdpbmRvdztjb25zdCBpPWxjKG5jKGUpLHRoaXMudHJhbnNmb3JtUGFnZVBvaW50KSx7cG9pbnQ6c309aSx7dGltZXN0YW1wOmF9PUhpO3RoaXMuaGlzdG9yeT1bey4uLnMsdGltZXN0YW1wOmF9XTtjb25zdHtvblNlc3Npb25TdGFydDpsfT10O2wmJmwoZSx1YyhpLHRoaXMuaGlzdG9yeSkpLHRoaXMucmVtb3ZlTGlzdGVuZXJzPUdhKGljKHRoaXMuY29udGV4dFdpbmRvdyxcInBvaW50ZXJtb3ZlXCIsdGhpcy5oYW5kbGVQb2ludGVyTW92ZSksaWModGhpcy5jb250ZXh0V2luZG93LFwicG9pbnRlcnVwXCIsdGhpcy5oYW5kbGVQb2ludGVyVXApLGljKHRoaXMuY29udGV4dFdpbmRvdyxcInBvaW50ZXJjYW5jZWxcIix0aGlzLmhhbmRsZVBvaW50ZXJVcCkpfXVwZGF0ZUhhbmRsZXJzKGUpe3RoaXMuaGFuZGxlcnM9ZX1lbmQoKXt0aGlzLnJlbW92ZUxpc3RlbmVycyYmdGhpcy5yZW1vdmVMaXN0ZW5lcnMoKSxLaSh0aGlzLnVwZGF0ZVBvaW50KX19ZnVuY3Rpb24gbGMoZSx0KXtyZXR1cm4gdD97cG9pbnQ6dChlLnBvaW50KX06ZX1mdW5jdGlvbiBjYyhlLHQpe3JldHVybnt4OmUueC10LngseTplLnktdC55fX1mdW5jdGlvbiB1Yyh7cG9pbnQ6ZX0sdCl7cmV0dXJue3BvaW50OmUsZGVsdGE6Y2MoZSxmYyh0KSksb2Zmc2V0OmNjKGUsZGModCkpLHZlbG9jaXR5OmhjKHQsLjEpfX1mdW5jdGlvbiBkYyhlKXtyZXR1cm4gZVswXX1mdW5jdGlvbiBmYyhlKXtyZXR1cm4gZVtlLmxlbmd0aC0xXX1mdW5jdGlvbiBoYyhlLHQpe2lmKGUubGVuZ3RoPDIpcmV0dXJue3g6MCx5OjB9O2xldCBuPWUubGVuZ3RoLTEscj1udWxsO2NvbnN0IG89ZmMoZSk7Zm9yKDtuPj0wJiYocj1lW25dLCEoby50aW1lc3RhbXAtci50aW1lc3RhbXA+QWkodCkpKTspbi0tO2lmKCFyKXJldHVybnt4OjAseTowfTtjb25zdCBpPWppKG8udGltZXN0YW1wLXIudGltZXN0YW1wKTtpZigwPT09aSlyZXR1cm57eDowLHk6MH07Y29uc3Qgcz17eDooby54LXIueCkvaSx5OihvLnktci55KS9pfTtyZXR1cm4gcy54PT09MS8wJiYocy54PTApLHMueT09PTEvMCYmKHMueT0wKSxzfWZ1bmN0aW9uIHBjKGUpe2xldCB0PW51bGw7cmV0dXJuKCk9Pm51bGw9PT10JiYodD1lLCgpPT57dD1udWxsfSl9Y29uc3QgbWM9cGMoXCJkcmFnSG9yaXpvbnRhbFwiKSxnYz1wYyhcImRyYWdWZXJ0aWNhbFwiKTtmdW5jdGlvbiB2YyhlKXtsZXQgdD0hMTtpZihcInlcIj09PWUpdD1nYygpO2Vsc2UgaWYoXCJ4XCI9PT1lKXQ9bWMoKTtlbHNle2NvbnN0IGU9bWMoKSxuPWdjKCk7ZSYmbj90PSgpPT57ZSgpLG4oKX06KGUmJmUoKSxuJiZuKCkpfXJldHVybiB0fWZ1bmN0aW9uIHljKCl7Y29uc3QgZT12YyghMCk7cmV0dXJuIWV8fChlKCksITEpfWZ1bmN0aW9uIGJjKGUpe3JldHVybiBlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJjdXJyZW50XCIpfWNvbnN0IHhjPS45OTk5LHdjPTEuMDAwMSxFYz0tLjAxLFNjPS4wMTtmdW5jdGlvbiBfYyhlKXtyZXR1cm4gZS5tYXgtZS5taW59ZnVuY3Rpb24ga2MoZSx0LG4scj0uNSl7ZS5vcmlnaW49cixlLm9yaWdpblBvaW50PUphKHQubWluLHQubWF4LGUub3JpZ2luKSxlLnNjYWxlPV9jKG4pL19jKHQpLGUudHJhbnNsYXRlPUphKG4ubWluLG4ubWF4LGUub3JpZ2luKS1lLm9yaWdpblBvaW50LChlLnNjYWxlPj14YyYmZS5zY2FsZTw9d2N8fGlzTmFOKGUuc2NhbGUpKSYmKGUuc2NhbGU9MSksKGUudHJhbnNsYXRlPj1FYyYmZS50cmFuc2xhdGU8PVNjfHxpc05hTihlLnRyYW5zbGF0ZSkpJiYoZS50cmFuc2xhdGU9MCl9ZnVuY3Rpb24gQ2MoZSx0LG4scil7a2MoZS54LHQueCxuLngscj9yLm9yaWdpblg6dm9pZCAwKSxrYyhlLnksdC55LG4ueSxyP3Iub3JpZ2luWTp2b2lkIDApfWZ1bmN0aW9uIFBjKGUsdCxuKXtlLm1pbj1uLm1pbit0Lm1pbixlLm1heD1lLm1pbitfYyh0KX1mdW5jdGlvbiBUYyhlLHQsbil7ZS5taW49dC5taW4tbi5taW4sZS5tYXg9ZS5taW4rX2ModCl9ZnVuY3Rpb24gT2MoZSx0LG4pe1RjKGUueCx0Lngsbi54KSxUYyhlLnksdC55LG4ueSl9ZnVuY3Rpb24gUmMoZSx0LG4pe3JldHVybnttaW46dm9pZCAwIT09dD9lLm1pbit0OnZvaWQgMCxtYXg6dm9pZCAwIT09bj9lLm1heCtuLShlLm1heC1lLm1pbik6dm9pZCAwfX1mdW5jdGlvbiBOYyhlLHQpe2xldCBuPXQubWluLWUubWluLHI9dC5tYXgtZS5tYXg7cmV0dXJuIHQubWF4LXQubWluPGUubWF4LWUubWluJiYoW24scl09W3Isbl0pLHttaW46bixtYXg6cn19Y29uc3QgQWM9LjM1O2Z1bmN0aW9uIGpjKGUsdCxuKXtyZXR1cm57bWluOk1jKGUsdCksbWF4Ok1jKGUsbil9fWZ1bmN0aW9uIE1jKGUsdCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGU/ZTplW3RdfHwwfWNvbnN0IEljPSgpPT4oe3g6e3RyYW5zbGF0ZTowLHNjYWxlOjEsb3JpZ2luOjAsb3JpZ2luUG9pbnQ6MH0seTp7dHJhbnNsYXRlOjAsc2NhbGU6MSxvcmlnaW46MCxvcmlnaW5Qb2ludDowfX0pLERjPSgpPT4oe3g6e21pbjowLG1heDowfSx5OnttaW46MCxtYXg6MH19KTtmdW5jdGlvbiBMYyhlKXtyZXR1cm5bZShcInhcIiksZShcInlcIildfWZ1bmN0aW9uIEZjKHt0b3A6ZSxsZWZ0OnQscmlnaHQ6bixib3R0b206cn0pe3JldHVybnt4OnttaW46dCxtYXg6bn0seTp7bWluOmUsbWF4OnJ9fX1mdW5jdGlvbiB6YyhlKXtyZXR1cm4gdm9pZCAwPT09ZXx8MT09PWV9ZnVuY3Rpb24gQmMoe3NjYWxlOmUsc2NhbGVYOnQsc2NhbGVZOm59KXtyZXR1cm4hemMoZSl8fCF6Yyh0KXx8IXpjKG4pfWZ1bmN0aW9uIFZjKGUpe3JldHVybiBCYyhlKXx8V2MoZSl8fGUuenx8ZS5yb3RhdGV8fGUucm90YXRlWHx8ZS5yb3RhdGVZfHxlLnNrZXdYfHxlLnNrZXdZfWZ1bmN0aW9uIFdjKGUpe3JldHVybiBVYyhlLngpfHxVYyhlLnkpfWZ1bmN0aW9uIFVjKGUpe3JldHVybiBlJiZcIjAlXCIhPT1lfWZ1bmN0aW9uICRjKGUsdCxuKXtyZXR1cm4gbit0KihlLW4pfWZ1bmN0aW9uIEtjKGUsdCxuLHIsbyl7cmV0dXJuIHZvaWQgMCE9PW8mJihlPSRjKGUsbyxyKSksJGMoZSxuLHIpK3R9ZnVuY3Rpb24gSGMoZSx0PTAsbj0xLHIsbyl7ZS5taW49S2MoZS5taW4sdCxuLHIsbyksZS5tYXg9S2MoZS5tYXgsdCxuLHIsbyl9ZnVuY3Rpb24gcWMoZSx7eDp0LHk6bn0pe0hjKGUueCx0LnRyYW5zbGF0ZSx0LnNjYWxlLHQub3JpZ2luUG9pbnQpLEhjKGUueSxuLnRyYW5zbGF0ZSxuLnNjYWxlLG4ub3JpZ2luUG9pbnQpfWNvbnN0IFljPS45OTk5OTk5OTk5OTksR2M9MS4wMDAwMDAwMDAwMDAxO2Z1bmN0aW9uIFhjKGUsdCl7ZS5taW49ZS5taW4rdCxlLm1heD1lLm1heCt0fWZ1bmN0aW9uIEpjKGUsdCxuLHIsbz0uNSl7SGMoZSx0LG4sSmEoZS5taW4sZS5tYXgsbykscil9ZnVuY3Rpb24gWmMoZSx0KXtKYyhlLngsdC54LHQuc2NhbGVYLHQuc2NhbGUsdC5vcmlnaW5YKSxKYyhlLnksdC55LHQuc2NhbGVZLHQuc2NhbGUsdC5vcmlnaW5ZKX1mdW5jdGlvbiBRYyhlLHQpe3JldHVybiBGYyhmdW5jdGlvbihlLHQpe2lmKCF0KXJldHVybiBlO2NvbnN0IG49dCh7eDplLmxlZnQseTplLnRvcH0pLHI9dCh7eDplLnJpZ2h0LHk6ZS5ib3R0b219KTtyZXR1cm57dG9wOm4ueSxsZWZ0Om4ueCxib3R0b206ci55LHJpZ2h0OnIueH19KGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksdCkpfWNvbnN0IGV1PSh7Y3VycmVudDplfSk9PmU/ZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3Om51bGwsdHU9bmV3IFdlYWtNYXA7Y2xhc3MgbnV7Y29uc3RydWN0b3IoZSl7dGhpcy5vcGVuR2xvYmFsTG9jaz1udWxsLHRoaXMuaXNEcmFnZ2luZz0hMSx0aGlzLmN1cnJlbnREaXJlY3Rpb249bnVsbCx0aGlzLm9yaWdpblBvaW50PXt4OjAseTowfSx0aGlzLmNvbnN0cmFpbnRzPSExLHRoaXMuaGFzTXV0YXRlZENvbnN0cmFpbnRzPSExLHRoaXMuZWxhc3RpYz1EYygpLHRoaXMudmlzdWFsRWxlbWVudD1lfXN0YXJ0KGUse3NuYXBUb0N1cnNvcjp0PSExfT17fSl7Y29uc3R7cHJlc2VuY2VDb250ZXh0Om59PXRoaXMudmlzdWFsRWxlbWVudDtpZihuJiYhMT09PW4uaXNQcmVzZW50KXJldHVybjtjb25zdHtkcmFnU25hcFRvT3JpZ2luOnJ9PXRoaXMuZ2V0UHJvcHMoKTt0aGlzLnBhblNlc3Npb249bmV3IGFjKGUse29uU2Vzc2lvblN0YXJ0OmU9Pntjb25zdHtkcmFnU25hcFRvT3JpZ2luOm59PXRoaXMuZ2V0UHJvcHMoKTtuP3RoaXMucGF1c2VBbmltYXRpb24oKTp0aGlzLnN0b3BBbmltYXRpb24oKSx0JiZ0aGlzLnNuYXBUb0N1cnNvcihuYyhlLFwicGFnZVwiKS5wb2ludCl9LG9uU3RhcnQ6KGUsdCk9Pnt2YXIgbjtjb25zdHtkcmFnOnIsZHJhZ1Byb3BhZ2F0aW9uOm8sb25EcmFnU3RhcnQ6aX09dGhpcy5nZXRQcm9wcygpO2lmKHImJiFvJiYodGhpcy5vcGVuR2xvYmFsTG9jayYmdGhpcy5vcGVuR2xvYmFsTG9jaygpLHRoaXMub3Blbkdsb2JhbExvY2s9dmMociksIXRoaXMub3Blbkdsb2JhbExvY2spKXJldHVybjt0aGlzLmlzRHJhZ2dpbmc9ITAsdGhpcy5jdXJyZW50RGlyZWN0aW9uPW51bGwsdGhpcy5yZXNvbHZlQ29uc3RyYWludHMoKSx0aGlzLnZpc3VhbEVsZW1lbnQucHJvamVjdGlvbiYmKHRoaXMudmlzdWFsRWxlbWVudC5wcm9qZWN0aW9uLmlzQW5pbWF0aW9uQmxvY2tlZD0hMCx0aGlzLnZpc3VhbEVsZW1lbnQucHJvamVjdGlvbi50YXJnZXQ9dm9pZCAwKSxMYygoZT0+e2xldCB0PXRoaXMuZ2V0QXhpc01vdGlvblZhbHVlKGUpLmdldCgpfHwwO2lmKGdzLnRlc3QodCkpe2NvbnN0e3Byb2plY3Rpb246bn09dGhpcy52aXN1YWxFbGVtZW50O2lmKG4mJm4ubGF5b3V0KXtjb25zdCByPW4ubGF5b3V0LmxheW91dEJveFtlXTtyJiYodD1fYyhyKSoocGFyc2VGbG9hdCh0KS8xMDApKX19dGhpcy5vcmlnaW5Qb2ludFtlXT10fSkpLGkmJiRpLnBvc3RSZW5kZXIoKCgpPT5pKGUsdCkpKSxudWxsPT09KG49dGhpcy5yZW1vdmVXaWxsQ2hhbmdlKXx8dm9pZCAwPT09bnx8bi5jYWxsKHRoaXMpLHRoaXMucmVtb3ZlV2lsbENoYW5nZT1VbCh0aGlzLnZpc3VhbEVsZW1lbnQsXCJ0cmFuc2Zvcm1cIik7Y29uc3R7YW5pbWF0aW9uU3RhdGU6c309dGhpcy52aXN1YWxFbGVtZW50O3MmJnMuc2V0QWN0aXZlKFwid2hpbGVEcmFnXCIsITApfSxvbk1vdmU6KGUsdCk9Pntjb25zdHtkcmFnUHJvcGFnYXRpb246bixkcmFnRGlyZWN0aW9uTG9jazpyLG9uRGlyZWN0aW9uTG9jazpvLG9uRHJhZzppfT10aGlzLmdldFByb3BzKCk7aWYoIW4mJiF0aGlzLm9wZW5HbG9iYWxMb2NrKXJldHVybjtjb25zdHtvZmZzZXQ6c309dDtpZihyJiZudWxsPT09dGhpcy5jdXJyZW50RGlyZWN0aW9uKXJldHVybiB0aGlzLmN1cnJlbnREaXJlY3Rpb249ZnVuY3Rpb24oZSx0PTEwKXtsZXQgbj1udWxsO3JldHVybiBNYXRoLmFicyhlLnkpPnQ/bj1cInlcIjpNYXRoLmFicyhlLngpPnQmJihuPVwieFwiKSxufShzKSx2b2lkKG51bGwhPT10aGlzLmN1cnJlbnREaXJlY3Rpb24mJm8mJm8odGhpcy5jdXJyZW50RGlyZWN0aW9uKSk7dGhpcy51cGRhdGVBeGlzKFwieFwiLHQucG9pbnQscyksdGhpcy51cGRhdGVBeGlzKFwieVwiLHQucG9pbnQscyksdGhpcy52aXN1YWxFbGVtZW50LnJlbmRlcigpLGkmJmkoZSx0KX0sb25TZXNzaW9uRW5kOihlLHQpPT50aGlzLnN0b3AoZSx0KSxyZXN1bWVBbmltYXRpb246KCk9PkxjKChlPT57dmFyIHQ7cmV0dXJuXCJwYXVzZWRcIj09PXRoaXMuZ2V0QW5pbWF0aW9uU3RhdGUoZSkmJihudWxsPT09KHQ9dGhpcy5nZXRBeGlzTW90aW9uVmFsdWUoZSkuYW5pbWF0aW9uKXx8dm9pZCAwPT09dD92b2lkIDA6dC5wbGF5KCkpfSkpfSx7dHJhbnNmb3JtUGFnZVBvaW50OnRoaXMudmlzdWFsRWxlbWVudC5nZXRUcmFuc2Zvcm1QYWdlUG9pbnQoKSxkcmFnU25hcFRvT3JpZ2luOnIsY29udGV4dFdpbmRvdzpldSh0aGlzLnZpc3VhbEVsZW1lbnQpfSl9c3RvcChlLHQpe3ZhciBuO251bGw9PT0obj10aGlzLnJlbW92ZVdpbGxDaGFuZ2UpfHx2b2lkIDA9PT1ufHxuLmNhbGwodGhpcyk7Y29uc3Qgcj10aGlzLmlzRHJhZ2dpbmc7aWYodGhpcy5jYW5jZWwoKSwhcilyZXR1cm47Y29uc3R7dmVsb2NpdHk6b309dDt0aGlzLnN0YXJ0QW5pbWF0aW9uKG8pO2NvbnN0e29uRHJhZ0VuZDppfT10aGlzLmdldFByb3BzKCk7aSYmJGkucG9zdFJlbmRlcigoKCk9PmkoZSx0KSkpfWNhbmNlbCgpe3RoaXMuaXNEcmFnZ2luZz0hMTtjb25zdHtwcm9qZWN0aW9uOmUsYW5pbWF0aW9uU3RhdGU6dH09dGhpcy52aXN1YWxFbGVtZW50O2UmJihlLmlzQW5pbWF0aW9uQmxvY2tlZD0hMSksdGhpcy5wYW5TZXNzaW9uJiZ0aGlzLnBhblNlc3Npb24uZW5kKCksdGhpcy5wYW5TZXNzaW9uPXZvaWQgMDtjb25zdHtkcmFnUHJvcGFnYXRpb246bn09dGhpcy5nZXRQcm9wcygpOyFuJiZ0aGlzLm9wZW5HbG9iYWxMb2NrJiYodGhpcy5vcGVuR2xvYmFsTG9jaygpLHRoaXMub3Blbkdsb2JhbExvY2s9bnVsbCksdCYmdC5zZXRBY3RpdmUoXCJ3aGlsZURyYWdcIiwhMSl9dXBkYXRlQXhpcyhlLHQsbil7Y29uc3R7ZHJhZzpyfT10aGlzLmdldFByb3BzKCk7aWYoIW58fCFydShlLHIsdGhpcy5jdXJyZW50RGlyZWN0aW9uKSlyZXR1cm47Y29uc3Qgbz10aGlzLmdldEF4aXNNb3Rpb25WYWx1ZShlKTtsZXQgaT10aGlzLm9yaWdpblBvaW50W2VdK25bZV07dGhpcy5jb25zdHJhaW50cyYmdGhpcy5jb25zdHJhaW50c1tlXSYmKGk9ZnVuY3Rpb24oZSx7bWluOnQsbWF4Om59LHIpe3JldHVybiB2b2lkIDAhPT10JiZlPHQ/ZT1yP0phKHQsZSxyLm1pbik6TWF0aC5tYXgoZSx0KTp2b2lkIDAhPT1uJiZlPm4mJihlPXI/SmEobixlLHIubWF4KTpNYXRoLm1pbihlLG4pKSxlfShpLHRoaXMuY29uc3RyYWludHNbZV0sdGhpcy5lbGFzdGljW2VdKSksby5zZXQoaSl9cmVzb2x2ZUNvbnN0cmFpbnRzKCl7dmFyIGU7Y29uc3R7ZHJhZ0NvbnN0cmFpbnRzOnQsZHJhZ0VsYXN0aWM6bn09dGhpcy5nZXRQcm9wcygpLHI9dGhpcy52aXN1YWxFbGVtZW50LnByb2plY3Rpb24mJiF0aGlzLnZpc3VhbEVsZW1lbnQucHJvamVjdGlvbi5sYXlvdXQ/dGhpcy52aXN1YWxFbGVtZW50LnByb2plY3Rpb24ubWVhc3VyZSghMSk6bnVsbD09PShlPXRoaXMudmlzdWFsRWxlbWVudC5wcm9qZWN0aW9uKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5sYXlvdXQsbz10aGlzLmNvbnN0cmFpbnRzO3QmJmJjKHQpP3RoaXMuY29uc3RyYWludHN8fCh0aGlzLmNvbnN0cmFpbnRzPXRoaXMucmVzb2x2ZVJlZkNvbnN0cmFpbnRzKCkpOnRoaXMuY29uc3RyYWludHM9ISghdHx8IXIpJiZmdW5jdGlvbihlLHt0b3A6dCxsZWZ0Om4sYm90dG9tOnIscmlnaHQ6b30pe3JldHVybnt4OlJjKGUueCxuLG8pLHk6UmMoZS55LHQscil9fShyLmxheW91dEJveCx0KSx0aGlzLmVsYXN0aWM9ZnVuY3Rpb24oZT1BYyl7cmV0dXJuITE9PT1lP2U9MDohMD09PWUmJihlPUFjKSx7eDpqYyhlLFwibGVmdFwiLFwicmlnaHRcIikseTpqYyhlLFwidG9wXCIsXCJib3R0b21cIil9fShuKSxvIT09dGhpcy5jb25zdHJhaW50cyYmciYmdGhpcy5jb25zdHJhaW50cyYmIXRoaXMuaGFzTXV0YXRlZENvbnN0cmFpbnRzJiZMYygoZT0+eyExIT09dGhpcy5jb25zdHJhaW50cyYmdGhpcy5nZXRBeGlzTW90aW9uVmFsdWUoZSkmJih0aGlzLmNvbnN0cmFpbnRzW2VdPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj17fTtyZXR1cm4gdm9pZCAwIT09dC5taW4mJihuLm1pbj10Lm1pbi1lLm1pbiksdm9pZCAwIT09dC5tYXgmJihuLm1heD10Lm1heC1lLm1pbiksbn0oci5sYXlvdXRCb3hbZV0sdGhpcy5jb25zdHJhaW50c1tlXSkpfSkpfXJlc29sdmVSZWZDb25zdHJhaW50cygpe2NvbnN0e2RyYWdDb25zdHJhaW50czplLG9uTWVhc3VyZURyYWdDb25zdHJhaW50czp0fT10aGlzLmdldFByb3BzKCk7aWYoIWV8fCFiYyhlKSlyZXR1cm4hMTtjb25zdCBuPWUuY3VycmVudDtYaShudWxsIT09bixcIklmIGBkcmFnQ29uc3RyYWludHNgIGlzIHNldCBhcyBhIFJlYWN0IHJlZiwgdGhhdCByZWYgbXVzdCBiZSBwYXNzZWQgdG8gYW5vdGhlciBjb21wb25lbnQncyBgcmVmYCBwcm9wLlwiKTtjb25zdHtwcm9qZWN0aW9uOnJ9PXRoaXMudmlzdWFsRWxlbWVudDtpZighcnx8IXIubGF5b3V0KXJldHVybiExO2NvbnN0IG89ZnVuY3Rpb24oZSx0LG4pe2NvbnN0IHI9UWMoZSxuKSx7c2Nyb2xsOm99PXQ7cmV0dXJuIG8mJihYYyhyLngsby5vZmZzZXQueCksWGMoci55LG8ub2Zmc2V0LnkpKSxyfShuLHIucm9vdCx0aGlzLnZpc3VhbEVsZW1lbnQuZ2V0VHJhbnNmb3JtUGFnZVBvaW50KCkpO2xldCBpPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3g6TmMoZS54LHQueCkseTpOYyhlLnksdC55KX19KHIubGF5b3V0LmxheW91dEJveCxvKTtpZih0KXtjb25zdCBlPXQoZnVuY3Rpb24oe3g6ZSx5OnR9KXtyZXR1cm57dG9wOnQubWluLHJpZ2h0OmUubWF4LGJvdHRvbTp0Lm1heCxsZWZ0OmUubWlufX0oaSkpO3RoaXMuaGFzTXV0YXRlZENvbnN0cmFpbnRzPSEhZSxlJiYoaT1GYyhlKSl9cmV0dXJuIGl9c3RhcnRBbmltYXRpb24oZSl7Y29uc3R7ZHJhZzp0LGRyYWdNb21lbnR1bTpuLGRyYWdFbGFzdGljOnIsZHJhZ1RyYW5zaXRpb246byxkcmFnU25hcFRvT3JpZ2luOmksb25EcmFnVHJhbnNpdGlvbkVuZDpzfT10aGlzLmdldFByb3BzKCksYT10aGlzLmNvbnN0cmFpbnRzfHx7fSxsPUxjKChzPT57aWYoIXJ1KHMsdCx0aGlzLmN1cnJlbnREaXJlY3Rpb24pKXJldHVybjtsZXQgbD1hJiZhW3NdfHx7fTtpJiYobD17bWluOjAsbWF4OjB9KTtjb25zdCBjPXI/MjAwOjFlNix1PXI/NDA6MWU3LGQ9e3R5cGU6XCJpbmVydGlhXCIsdmVsb2NpdHk6bj9lW3NdOjAsYm91bmNlU3RpZmZuZXNzOmMsYm91bmNlRGFtcGluZzp1LHRpbWVDb25zdGFudDo3NTAscmVzdERlbHRhOjEscmVzdFNwZWVkOjEwLC4uLm8sLi4ubH07cmV0dXJuIHRoaXMuc3RhcnRBeGlzVmFsdWVBbmltYXRpb24ocyxkKX0pKTtyZXR1cm4gUHJvbWlzZS5hbGwobCkudGhlbihzKX1zdGFydEF4aXNWYWx1ZUFuaW1hdGlvbihlLHQpe2NvbnN0IG49dGhpcy5nZXRBeGlzTW90aW9uVmFsdWUoZSk7cmV0dXJuIG4uc3RhcnQoUGwoZSxuLDAsdCx0aGlzLnZpc3VhbEVsZW1lbnQsITEsVWwodGhpcy52aXN1YWxFbGVtZW50LGUpKSl9c3RvcEFuaW1hdGlvbigpe0xjKChlPT50aGlzLmdldEF4aXNNb3Rpb25WYWx1ZShlKS5zdG9wKCkpKX1wYXVzZUFuaW1hdGlvbigpe0xjKChlPT57dmFyIHQ7cmV0dXJuIG51bGw9PT0odD10aGlzLmdldEF4aXNNb3Rpb25WYWx1ZShlKS5hbmltYXRpb24pfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnBhdXNlKCl9KSl9Z2V0QW5pbWF0aW9uU3RhdGUoZSl7dmFyIHQ7cmV0dXJuIG51bGw9PT0odD10aGlzLmdldEF4aXNNb3Rpb25WYWx1ZShlKS5hbmltYXRpb24pfHx2b2lkIDA9PT10P3ZvaWQgMDp0LnN0YXRlfWdldEF4aXNNb3Rpb25WYWx1ZShlKXtjb25zdCB0PWBfZHJhZyR7ZS50b1VwcGVyQ2FzZSgpfWAsbj10aGlzLnZpc3VhbEVsZW1lbnQuZ2V0UHJvcHMoKTtyZXR1cm4gblt0XXx8dGhpcy52aXN1YWxFbGVtZW50LmdldFZhbHVlKGUsKG4uaW5pdGlhbD9uLmluaXRpYWxbZV06dm9pZCAwKXx8MCl9c25hcFRvQ3Vyc29yKGUpe0xjKCh0PT57Y29uc3R7ZHJhZzpufT10aGlzLmdldFByb3BzKCk7aWYoIXJ1KHQsbix0aGlzLmN1cnJlbnREaXJlY3Rpb24pKXJldHVybjtjb25zdHtwcm9qZWN0aW9uOnJ9PXRoaXMudmlzdWFsRWxlbWVudCxvPXRoaXMuZ2V0QXhpc01vdGlvblZhbHVlKHQpO2lmKHImJnIubGF5b3V0KXtjb25zdHttaW46bixtYXg6aX09ci5sYXlvdXQubGF5b3V0Qm94W3RdO28uc2V0KGVbdF0tSmEobixpLC41KSl9fSkpfXNjYWxlUG9zaXRpb25XaXRoaW5Db25zdHJhaW50cygpe2lmKCF0aGlzLnZpc3VhbEVsZW1lbnQuY3VycmVudClyZXR1cm47Y29uc3R7ZHJhZzplLGRyYWdDb25zdHJhaW50czp0fT10aGlzLmdldFByb3BzKCkse3Byb2plY3Rpb246bn09dGhpcy52aXN1YWxFbGVtZW50O2lmKCFiYyh0KXx8IW58fCF0aGlzLmNvbnN0cmFpbnRzKXJldHVybjt0aGlzLnN0b3BBbmltYXRpb24oKTtjb25zdCByPXt4OjAseTowfTtMYygoZT0+e2NvbnN0IHQ9dGhpcy5nZXRBeGlzTW90aW9uVmFsdWUoZSk7aWYodCYmITEhPT10aGlzLmNvbnN0cmFpbnRzKXtjb25zdCBuPXQuZ2V0KCk7cltlXT1mdW5jdGlvbihlLHQpe2xldCBuPS41O2NvbnN0IHI9X2MoZSksbz1fYyh0KTtyZXR1cm4gbz5yP249WGEodC5taW4sdC5tYXgtcixlLm1pbik6cj5vJiYobj1YYShlLm1pbixlLm1heC1vLHQubWluKSksaXMoMCwxLG4pfSh7bWluOm4sbWF4Om59LHRoaXMuY29uc3RyYWludHNbZV0pfX0pKTtjb25zdHt0cmFuc2Zvcm1UZW1wbGF0ZTpvfT10aGlzLnZpc3VhbEVsZW1lbnQuZ2V0UHJvcHMoKTt0aGlzLnZpc3VhbEVsZW1lbnQuY3VycmVudC5zdHlsZS50cmFuc2Zvcm09bz9vKHt9LFwiXCIpOlwibm9uZVwiLG4ucm9vdCYmbi5yb290LnVwZGF0ZVNjcm9sbCgpLG4udXBkYXRlTGF5b3V0KCksdGhpcy5yZXNvbHZlQ29uc3RyYWludHMoKSxMYygodD0+e2lmKCFydSh0LGUsbnVsbCkpcmV0dXJuO2NvbnN0IG49dGhpcy5nZXRBeGlzTW90aW9uVmFsdWUodCkse21pbjpvLG1heDppfT10aGlzLmNvbnN0cmFpbnRzW3RdO24uc2V0KEphKG8saSxyW3RdKSl9KSl9YWRkTGlzdGVuZXJzKCl7aWYoIXRoaXMudmlzdWFsRWxlbWVudC5jdXJyZW50KXJldHVybjt0dS5zZXQodGhpcy52aXN1YWxFbGVtZW50LHRoaXMpO2NvbnN0IGU9aWModGhpcy52aXN1YWxFbGVtZW50LmN1cnJlbnQsXCJwb2ludGVyZG93blwiLChlPT57Y29uc3R7ZHJhZzp0LGRyYWdMaXN0ZW5lcjpuPSEwfT10aGlzLmdldFByb3BzKCk7dCYmbiYmdGhpcy5zdGFydChlKX0pKSx0PSgpPT57Y29uc3R7ZHJhZ0NvbnN0cmFpbnRzOmV9PXRoaXMuZ2V0UHJvcHMoKTtiYyhlKSYmZS5jdXJyZW50JiYodGhpcy5jb25zdHJhaW50cz10aGlzLnJlc29sdmVSZWZDb25zdHJhaW50cygpKX0se3Byb2plY3Rpb246bn09dGhpcy52aXN1YWxFbGVtZW50LHI9bi5hZGRFdmVudExpc3RlbmVyKFwibWVhc3VyZVwiLHQpO24mJiFuLmxheW91dCYmKG4ucm9vdCYmbi5yb290LnVwZGF0ZVNjcm9sbCgpLG4udXBkYXRlTGF5b3V0KCkpLCRpLnJlYWQodCk7Y29uc3Qgbz1vYyh3aW5kb3csXCJyZXNpemVcIiwoKCk9PnRoaXMuc2NhbGVQb3NpdGlvbldpdGhpbkNvbnN0cmFpbnRzKCkpKSxpPW4uYWRkRXZlbnRMaXN0ZW5lcihcImRpZFVwZGF0ZVwiLCgoe2RlbHRhOmUsaGFzTGF5b3V0Q2hhbmdlZDp0fSk9Pnt0aGlzLmlzRHJhZ2dpbmcmJnQmJihMYygodD0+e2NvbnN0IG49dGhpcy5nZXRBeGlzTW90aW9uVmFsdWUodCk7biYmKHRoaXMub3JpZ2luUG9pbnRbdF0rPWVbdF0udHJhbnNsYXRlLG4uc2V0KG4uZ2V0KCkrZVt0XS50cmFuc2xhdGUpKX0pKSx0aGlzLnZpc3VhbEVsZW1lbnQucmVuZGVyKCkpfSkpO3JldHVybigpPT57bygpLGUoKSxyKCksaSYmaSgpfX1nZXRQcm9wcygpe2NvbnN0IGU9dGhpcy52aXN1YWxFbGVtZW50LmdldFByb3BzKCkse2RyYWc6dD0hMSxkcmFnRGlyZWN0aW9uTG9jazpuPSExLGRyYWdQcm9wYWdhdGlvbjpyPSExLGRyYWdDb25zdHJhaW50czpvPSExLGRyYWdFbGFzdGljOmk9QWMsZHJhZ01vbWVudHVtOnM9ITB9PWU7cmV0dXJuey4uLmUsZHJhZzp0LGRyYWdEaXJlY3Rpb25Mb2NrOm4sZHJhZ1Byb3BhZ2F0aW9uOnIsZHJhZ0NvbnN0cmFpbnRzOm8sZHJhZ0VsYXN0aWM6aSxkcmFnTW9tZW50dW06c319fWZ1bmN0aW9uIHJ1KGUsdCxuKXtyZXR1cm4hKCEwIT09dCYmdCE9PWV8fG51bGwhPT1uJiZuIT09ZSl9Y29uc3Qgb3U9ZT0+KHQsbik9PntlJiYkaS5wb3N0UmVuZGVyKCgoKT0+ZSh0LG4pKSl9O3ZhciBpdT1uKDg0OCk7Y29uc3Qgc3U9KDAsby5jcmVhdGVDb250ZXh0KShudWxsKSxhdT0oMCxvLmNyZWF0ZUNvbnRleHQpKHt9KSxsdT0oMCxvLmNyZWF0ZUNvbnRleHQpKHt9KSxjdT17aGFzQW5pbWF0ZWRTaW5jZVJlc2l6ZTohMCxoYXNFdmVyVXBkYXRlZDohMX07ZnVuY3Rpb24gdXUoZSx0KXtyZXR1cm4gdC5tYXg9PT10Lm1pbj8wOmUvKHQubWF4LXQubWluKSoxMDB9Y29uc3QgZHU9e2NvcnJlY3Q6KGUsdCk9PntpZighdC50YXJnZXQpcmV0dXJuIGU7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpe2lmKCF2cy50ZXN0KGUpKXJldHVybiBlO2U9cGFyc2VGbG9hdChlKX1yZXR1cm5gJHt1dShlLHQudGFyZ2V0LngpfSUgJHt1dShlLHQudGFyZ2V0LnkpfSVgfX0sZnU9e2NvcnJlY3Q6KGUse3RyZWVTY2FsZTp0LHByb2plY3Rpb25EZWx0YTpufSk9Pntjb25zdCByPWUsbz1lYS5wYXJzZShlKTtpZihvLmxlbmd0aD41KXJldHVybiByO2NvbnN0IGk9ZWEuY3JlYXRlVHJhbnNmb3JtZXIoZSkscz1cIm51bWJlclwiIT10eXBlb2Ygb1swXT8xOjAsYT1uLnguc2NhbGUqdC54LGw9bi55LnNjYWxlKnQueTtvWzArc10vPWEsb1sxK3NdLz1sO2NvbnN0IGM9SmEoYSxsLC41KTtyZXR1cm5cIm51bWJlclwiPT10eXBlb2Ygb1syK3NdJiYob1syK3NdLz1jKSxcIm51bWJlclwiPT10eXBlb2Ygb1szK3NdJiYob1szK3NdLz1jKSxpKG8pfX0saHU9e30se3NjaGVkdWxlOnB1LGNhbmNlbDptdX09VWkocXVldWVNaWNyb3Rhc2ssITEpO2NsYXNzIGd1IGV4dGVuZHMgby5Db21wb25lbnR7Y29tcG9uZW50RGlkTW91bnQoKXtjb25zdHt2aXN1YWxFbGVtZW50OmUsbGF5b3V0R3JvdXA6dCxzd2l0Y2hMYXlvdXRHcm91cDpuLGxheW91dElkOnJ9PXRoaXMucHJvcHMse3Byb2plY3Rpb246b309ZTt2YXIgaTtpPXl1LE9iamVjdC5hc3NpZ24oaHUsaSksbyYmKHQuZ3JvdXAmJnQuZ3JvdXAuYWRkKG8pLG4mJm4ucmVnaXN0ZXImJnImJm4ucmVnaXN0ZXIobyksby5yb290LmRpZFVwZGF0ZSgpLG8uYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbkNvbXBsZXRlXCIsKCgpPT57dGhpcy5zYWZlVG9SZW1vdmUoKX0pKSxvLnNldE9wdGlvbnMoey4uLm8ub3B0aW9ucyxvbkV4aXRDb21wbGV0ZTooKT0+dGhpcy5zYWZlVG9SZW1vdmUoKX0pKSxjdS5oYXNFdmVyVXBkYXRlZD0hMH1nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShlKXtjb25zdHtsYXlvdXREZXBlbmRlbmN5OnQsdmlzdWFsRWxlbWVudDpuLGRyYWc6cixpc1ByZXNlbnQ6b309dGhpcy5wcm9wcyxpPW4ucHJvamVjdGlvbjtyZXR1cm4gaT8oaS5pc1ByZXNlbnQ9byxyfHxlLmxheW91dERlcGVuZGVuY3khPT10fHx2b2lkIDA9PT10P2kud2lsbFVwZGF0ZSgpOnRoaXMuc2FmZVRvUmVtb3ZlKCksZS5pc1ByZXNlbnQhPT1vJiYobz9pLnByb21vdGUoKTppLnJlbGVnYXRlKCl8fCRpLnBvc3RSZW5kZXIoKCgpPT57Y29uc3QgZT1pLmdldFN0YWNrKCk7ZSYmZS5tZW1iZXJzLmxlbmd0aHx8dGhpcy5zYWZlVG9SZW1vdmUoKX0pKSksbnVsbCk6bnVsbH1jb21wb25lbnREaWRVcGRhdGUoKXtjb25zdHtwcm9qZWN0aW9uOmV9PXRoaXMucHJvcHMudmlzdWFsRWxlbWVudDtlJiYoZS5yb290LmRpZFVwZGF0ZSgpLHB1LnBvc3RSZW5kZXIoKCgpPT57IWUuY3VycmVudEFuaW1hdGlvbiYmZS5pc0xlYWQoKSYmdGhpcy5zYWZlVG9SZW1vdmUoKX0pKSl9Y29tcG9uZW50V2lsbFVubW91bnQoKXtjb25zdHt2aXN1YWxFbGVtZW50OmUsbGF5b3V0R3JvdXA6dCxzd2l0Y2hMYXlvdXRHcm91cDpufT10aGlzLnByb3BzLHtwcm9qZWN0aW9uOnJ9PWU7ciYmKHIuc2NoZWR1bGVDaGVja0FmdGVyVW5tb3VudCgpLHQmJnQuZ3JvdXAmJnQuZ3JvdXAucmVtb3ZlKHIpLG4mJm4uZGVyZWdpc3RlciYmbi5kZXJlZ2lzdGVyKHIpKX1zYWZlVG9SZW1vdmUoKXtjb25zdHtzYWZlVG9SZW1vdmU6ZX09dGhpcy5wcm9wcztlJiZlKCl9cmVuZGVyKCl7cmV0dXJuIG51bGx9fWZ1bmN0aW9uIHZ1KGUpe2NvbnN0W3Qsbl09ZnVuY3Rpb24oKXtjb25zdCBlPSgwLG8udXNlQ29udGV4dCkoc3UpO2lmKG51bGw9PT1lKXJldHVyblshMCxudWxsXTtjb25zdHtpc1ByZXNlbnQ6dCxvbkV4aXRDb21wbGV0ZTpuLHJlZ2lzdGVyOnJ9PWUsaT0oMCxvLnVzZUlkKSgpOygwLG8udXNlRWZmZWN0KSgoKCk9PnIoaSkpLFtdKTtjb25zdCBzPSgwLG8udXNlQ2FsbGJhY2spKCgoKT0+biYmbihpKSksW2ksbl0pO3JldHVybiF0JiZuP1shMSxzXTpbITBdfSgpLHI9KDAsby51c2VDb250ZXh0KShhdSk7cmV0dXJuKDAsaXUuanN4KShndSx7Li4uZSxsYXlvdXRHcm91cDpyLHN3aXRjaExheW91dEdyb3VwOigwLG8udXNlQ29udGV4dCkobHUpLGlzUHJlc2VudDp0LHNhZmVUb1JlbW92ZTpufSl9Y29uc3QgeXU9e2JvcmRlclJhZGl1czp7Li4uZHUsYXBwbHlUbzpbXCJib3JkZXJUb3BMZWZ0UmFkaXVzXCIsXCJib3JkZXJUb3BSaWdodFJhZGl1c1wiLFwiYm9yZGVyQm90dG9tTGVmdFJhZGl1c1wiLFwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXNcIl19LGJvcmRlclRvcExlZnRSYWRpdXM6ZHUsYm9yZGVyVG9wUmlnaHRSYWRpdXM6ZHUsYm9yZGVyQm90dG9tTGVmdFJhZGl1czpkdSxib3JkZXJCb3R0b21SaWdodFJhZGl1czpkdSxib3hTaGFkb3c6ZnV9LGJ1PVtcIlRvcExlZnRcIixcIlRvcFJpZ2h0XCIsXCJCb3R0b21MZWZ0XCIsXCJCb3R0b21SaWdodFwiXSx4dT1idS5sZW5ndGgsd3U9ZT0+XCJzdHJpbmdcIj09dHlwZW9mIGU/cGFyc2VGbG9hdChlKTplLEV1PWU9PlwibnVtYmVyXCI9PXR5cGVvZiBlfHx2cy50ZXN0KGUpO2Z1bmN0aW9uIFN1KGUsdCl7cmV0dXJuIHZvaWQgMCE9PWVbdF0/ZVt0XTplLmJvcmRlclJhZGl1c31jb25zdCBfdT1DdSgwLC41LFZhKSxrdT1DdSguNSwuOTUsVmkpO2Z1bmN0aW9uIEN1KGUsdCxuKXtyZXR1cm4gcj0+cjxlPzA6cj50PzE6bihYYShlLHQscikpfWZ1bmN0aW9uIFB1KGUsdCl7ZS5taW49dC5taW4sZS5tYXg9dC5tYXh9ZnVuY3Rpb24gVHUoZSx0KXtQdShlLngsdC54KSxQdShlLnksdC55KX1mdW5jdGlvbiBPdShlLHQpe2UudHJhbnNsYXRlPXQudHJhbnNsYXRlLGUuc2NhbGU9dC5zY2FsZSxlLm9yaWdpblBvaW50PXQub3JpZ2luUG9pbnQsZS5vcmlnaW49dC5vcmlnaW59ZnVuY3Rpb24gUnUoZSx0LG4scixvKXtyZXR1cm4gZT0kYyhlLT10LDEvbixyKSx2b2lkIDAhPT1vJiYoZT0kYyhlLDEvbyxyKSksZX1mdW5jdGlvbiBOdShlLHQsW24scixvXSxpLHMpeyFmdW5jdGlvbihlLHQ9MCxuPTEscj0uNSxvLGk9ZSxzPWUpe2lmKGdzLnRlc3QodCkmJih0PXBhcnNlRmxvYXQodCksdD1KYShzLm1pbixzLm1heCx0LzEwMCktcy5taW4pLFwibnVtYmVyXCIhPXR5cGVvZiB0KXJldHVybjtsZXQgYT1KYShpLm1pbixpLm1heCxyKTtlPT09aSYmKGEtPXQpLGUubWluPVJ1KGUubWluLHQsbixhLG8pLGUubWF4PVJ1KGUubWF4LHQsbixhLG8pfShlLHRbbl0sdFtyXSx0W29dLHQuc2NhbGUsaSxzKX1jb25zdCBBdT1bXCJ4XCIsXCJzY2FsZVhcIixcIm9yaWdpblhcIl0sanU9W1wieVwiLFwic2NhbGVZXCIsXCJvcmlnaW5ZXCJdO2Z1bmN0aW9uIE11KGUsdCxuLHIpe051KGUueCx0LEF1LG4/bi54OnZvaWQgMCxyP3IueDp2b2lkIDApLE51KGUueSx0LGp1LG4/bi55OnZvaWQgMCxyP3IueTp2b2lkIDApfWZ1bmN0aW9uIEl1KGUpe3JldHVybiAwPT09ZS50cmFuc2xhdGUmJjE9PT1lLnNjYWxlfWZ1bmN0aW9uIER1KGUpe3JldHVybiBJdShlLngpJiZJdShlLnkpfWZ1bmN0aW9uIEx1KGUsdCl7cmV0dXJuIGUubWluPT09dC5taW4mJmUubWF4PT09dC5tYXh9ZnVuY3Rpb24gRnUoZSx0KXtyZXR1cm4gTWF0aC5yb3VuZChlLm1pbik9PT1NYXRoLnJvdW5kKHQubWluKSYmTWF0aC5yb3VuZChlLm1heCk9PT1NYXRoLnJvdW5kKHQubWF4KX1mdW5jdGlvbiB6dShlLHQpe3JldHVybiBGdShlLngsdC54KSYmRnUoZS55LHQueSl9ZnVuY3Rpb24gQnUoZSl7cmV0dXJuIF9jKGUueCkvX2MoZS55KX1mdW5jdGlvbiBWdShlLHQpe3JldHVybiBlLnRyYW5zbGF0ZT09PXQudHJhbnNsYXRlJiZlLnNjYWxlPT09dC5zY2FsZSYmZS5vcmlnaW5Qb2ludD09PXQub3JpZ2luUG9pbnR9Y2xhc3MgV3V7Y29uc3RydWN0b3IoKXt0aGlzLm1lbWJlcnM9W119YWRkKGUpe1JsKHRoaXMubWVtYmVycyxlKSxlLnNjaGVkdWxlUmVuZGVyKCl9cmVtb3ZlKGUpe2lmKE5sKHRoaXMubWVtYmVycyxlKSxlPT09dGhpcy5wcmV2TGVhZCYmKHRoaXMucHJldkxlYWQ9dm9pZCAwKSxlPT09dGhpcy5sZWFkKXtjb25zdCBlPXRoaXMubWVtYmVyc1t0aGlzLm1lbWJlcnMubGVuZ3RoLTFdO2UmJnRoaXMucHJvbW90ZShlKX19cmVsZWdhdGUoZSl7Y29uc3QgdD10aGlzLm1lbWJlcnMuZmluZEluZGV4KCh0PT5lPT09dCkpO2lmKDA9PT10KXJldHVybiExO2xldCBuO2ZvcihsZXQgZT10O2U+PTA7ZS0tKXtjb25zdCB0PXRoaXMubWVtYmVyc1tlXTtpZighMSE9PXQuaXNQcmVzZW50KXtuPXQ7YnJlYWt9fXJldHVybiEhbiYmKHRoaXMucHJvbW90ZShuKSwhMCl9cHJvbW90ZShlLHQpe2NvbnN0IG49dGhpcy5sZWFkO2lmKGUhPT1uJiYodGhpcy5wcmV2TGVhZD1uLHRoaXMubGVhZD1lLGUuc2hvdygpLG4pKXtuLmluc3RhbmNlJiZuLnNjaGVkdWxlUmVuZGVyKCksZS5zY2hlZHVsZVJlbmRlcigpLGUucmVzdW1lRnJvbT1uLHQmJihlLnJlc3VtZUZyb20ucHJlc2VydmVPcGFjaXR5PSEwKSxuLnNuYXBzaG90JiYoZS5zbmFwc2hvdD1uLnNuYXBzaG90LGUuc25hcHNob3QubGF0ZXN0VmFsdWVzPW4uYW5pbWF0aW9uVmFsdWVzfHxuLmxhdGVzdFZhbHVlcyksZS5yb290JiZlLnJvb3QuaXNVcGRhdGluZyYmKGUuaXNMYXlvdXREaXJ0eT0hMCk7Y29uc3R7Y3Jvc3NmYWRlOnJ9PWUub3B0aW9uczshMT09PXImJm4uaGlkZSgpfX1leGl0QW5pbWF0aW9uQ29tcGxldGUoKXt0aGlzLm1lbWJlcnMuZm9yRWFjaCgoZT0+e2NvbnN0e29wdGlvbnM6dCxyZXN1bWluZ0Zyb206bn09ZTt0Lm9uRXhpdENvbXBsZXRlJiZ0Lm9uRXhpdENvbXBsZXRlKCksbiYmbi5vcHRpb25zLm9uRXhpdENvbXBsZXRlJiZuLm9wdGlvbnMub25FeGl0Q29tcGxldGUoKX0pKX1zY2hlZHVsZVJlbmRlcigpe3RoaXMubWVtYmVycy5mb3JFYWNoKChlPT57ZS5pbnN0YW5jZSYmZS5zY2hlZHVsZVJlbmRlcighMSl9KSl9cmVtb3ZlTGVhZFNuYXBzaG90KCl7dGhpcy5sZWFkJiZ0aGlzLmxlYWQuc25hcHNob3QmJih0aGlzLmxlYWQuc25hcHNob3Q9dm9pZCAwKX19Y29uc3QgVXU9KGUsdCk9PmUuZGVwdGgtdC5kZXB0aDtjbGFzcyAkdXtjb25zdHJ1Y3Rvcigpe3RoaXMuY2hpbGRyZW49W10sdGhpcy5pc0RpcnR5PSExfWFkZChlKXtSbCh0aGlzLmNoaWxkcmVuLGUpLHRoaXMuaXNEaXJ0eT0hMH1yZW1vdmUoZSl7TmwodGhpcy5jaGlsZHJlbixlKSx0aGlzLmlzRGlydHk9ITB9Zm9yRWFjaChlKXt0aGlzLmlzRGlydHkmJnRoaXMuY2hpbGRyZW4uc29ydChVdSksdGhpcy5pc0RpcnR5PSExLHRoaXMuY2hpbGRyZW4uZm9yRWFjaChlKX19ZnVuY3Rpb24gS3UoZSl7Y29uc3QgdD1XbChlKT9lLmdldCgpOmU7cmV0dXJuIFRsKHQpP3QudG9WYWx1ZSgpOnR9Y29uc3QgSHU9e3R5cGU6XCJwcm9qZWN0aW9uRnJhbWVcIix0b3RhbE5vZGVzOjAscmVzb2x2ZWRUYXJnZXREZWx0YXM6MCxyZWNhbGN1bGF0ZWRQcm9qZWN0aW9uOjB9LHF1PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJnZvaWQgMCE9PXdpbmRvdy5Nb3Rpb25EZWJ1ZyxZdT1bXCJcIixcIlhcIixcIllcIixcIlpcIl0sR3U9e3Zpc2liaWxpdHk6XCJoaWRkZW5cIn07bGV0IFh1PTA7ZnVuY3Rpb24gSnUoZSx0LG4scil7Y29uc3R7bGF0ZXN0VmFsdWVzOm99PXQ7b1tlXSYmKG5bZV09b1tlXSx0LnNldFN0YXRpY1ZhbHVlKGUsMCksciYmKHJbZV09MCkpfWZ1bmN0aW9uIFp1KGUpe2lmKGUuaGFzQ2hlY2tlZE9wdGltaXNlZEFwcGVhcj0hMCxlLnJvb3Q9PT1lKXJldHVybjtjb25zdHt2aXN1YWxFbGVtZW50OnR9PWUub3B0aW9ucztpZighdClyZXR1cm47Y29uc3Qgbj16bCh0KTtpZih3aW5kb3cuTW90aW9uSGFzT3B0aW1pc2VkQW5pbWF0aW9uKG4sXCJ0cmFuc2Zvcm1cIikpe2NvbnN0e2xheW91dDp0LGxheW91dElkOnJ9PWUub3B0aW9uczt3aW5kb3cuTW90aW9uQ2FuY2VsT3B0aW1pc2VkQW5pbWF0aW9uKG4sXCJ0cmFuc2Zvcm1cIiwkaSwhKHR8fHIpKX1jb25zdHtwYXJlbnQ6cn09ZTtyJiYhci5oYXNDaGVja2VkT3B0aW1pc2VkQXBwZWFyJiZadShyKX1mdW5jdGlvbiBRdSh7YXR0YWNoUmVzaXplTGlzdGVuZXI6ZSxkZWZhdWx0UGFyZW50OnQsbWVhc3VyZVNjcm9sbDpuLGNoZWNrSXNTY3JvbGxSb290OnIscmVzZXRUcmFuc2Zvcm06b30pe3JldHVybiBjbGFzc3tjb25zdHJ1Y3RvcihlPXt9LG49KG51bGw9PXQ/dm9pZCAwOnQoKSkpe3RoaXMuaWQ9WHUrKyx0aGlzLmFuaW1hdGlvbklkPTAsdGhpcy5jaGlsZHJlbj1uZXcgU2V0LHRoaXMub3B0aW9ucz17fSx0aGlzLmlzVHJlZUFuaW1hdGluZz0hMSx0aGlzLmlzQW5pbWF0aW9uQmxvY2tlZD0hMSx0aGlzLmlzTGF5b3V0RGlydHk9ITEsdGhpcy5pc1Byb2plY3Rpb25EaXJ0eT0hMSx0aGlzLmlzU2hhcmVkUHJvamVjdGlvbkRpcnR5PSExLHRoaXMuaXNUcmFuc2Zvcm1EaXJ0eT0hMSx0aGlzLnVwZGF0ZU1hbnVhbGx5QmxvY2tlZD0hMSx0aGlzLnVwZGF0ZUJsb2NrZWRCeVJlc2l6ZT0hMSx0aGlzLmlzVXBkYXRpbmc9ITEsdGhpcy5pc1NWRz0hMSx0aGlzLm5lZWRzUmVzZXQ9ITEsdGhpcy5zaG91bGRSZXNldFRyYW5zZm9ybT0hMSx0aGlzLmhhc0NoZWNrZWRPcHRpbWlzZWRBcHBlYXI9ITEsdGhpcy50cmVlU2NhbGU9e3g6MSx5OjF9LHRoaXMuZXZlbnRIYW5kbGVycz1uZXcgTWFwLHRoaXMuaGFzVHJlZUFuaW1hdGVkPSExLHRoaXMudXBkYXRlU2NoZWR1bGVkPSExLHRoaXMuc2NoZWR1bGVVcGRhdGU9KCk9PnRoaXMudXBkYXRlKCksdGhpcy5wcm9qZWN0aW9uVXBkYXRlU2NoZWR1bGVkPSExLHRoaXMuY2hlY2tVcGRhdGVGYWlsZWQ9KCk9Pnt0aGlzLmlzVXBkYXRpbmcmJih0aGlzLmlzVXBkYXRpbmc9ITEsdGhpcy5jbGVhckFsbFNuYXBzaG90cygpKX0sdGhpcy51cGRhdGVQcm9qZWN0aW9uPSgpPT57dGhpcy5wcm9qZWN0aW9uVXBkYXRlU2NoZWR1bGVkPSExLHF1JiYoSHUudG90YWxOb2Rlcz1IdS5yZXNvbHZlZFRhcmdldERlbHRhcz1IdS5yZWNhbGN1bGF0ZWRQcm9qZWN0aW9uPTApLHRoaXMubm9kZXMuZm9yRWFjaChuZCksdGhpcy5ub2Rlcy5mb3JFYWNoKGNkKSx0aGlzLm5vZGVzLmZvckVhY2godWQpLHRoaXMubm9kZXMuZm9yRWFjaChyZCkscXUmJndpbmRvdy5Nb3Rpb25EZWJ1Zy5yZWNvcmQoSHUpfSx0aGlzLnJlc29sdmVkUmVsYXRpdmVUYXJnZXRBdD0wLHRoaXMuaGFzUHJvamVjdGVkPSExLHRoaXMuaXNWaXNpYmxlPSEwLHRoaXMuYW5pbWF0aW9uUHJvZ3Jlc3M9MCx0aGlzLnNoYXJlZE5vZGVzPW5ldyBNYXAsdGhpcy5sYXRlc3RWYWx1ZXM9ZSx0aGlzLnJvb3Q9bj9uLnJvb3R8fG46dGhpcyx0aGlzLnBhdGg9bj9bLi4ubi5wYXRoLG5dOltdLHRoaXMucGFyZW50PW4sdGhpcy5kZXB0aD1uP24uZGVwdGgrMTowO2ZvcihsZXQgZT0wO2U8dGhpcy5wYXRoLmxlbmd0aDtlKyspdGhpcy5wYXRoW2VdLnNob3VsZFJlc2V0VHJhbnNmb3JtPSEwO3RoaXMucm9vdD09PXRoaXMmJih0aGlzLm5vZGVzPW5ldyAkdSl9YWRkRXZlbnRMaXN0ZW5lcihlLHQpe3JldHVybiB0aGlzLmV2ZW50SGFuZGxlcnMuaGFzKGUpfHx0aGlzLmV2ZW50SGFuZGxlcnMuc2V0KGUsbmV3IEFsKSx0aGlzLmV2ZW50SGFuZGxlcnMuZ2V0KGUpLmFkZCh0KX1ub3RpZnlMaXN0ZW5lcnMoZSwuLi50KXtjb25zdCBuPXRoaXMuZXZlbnRIYW5kbGVycy5nZXQoZSk7biYmbi5ub3RpZnkoLi4udCl9aGFzTGlzdGVuZXJzKGUpe3JldHVybiB0aGlzLmV2ZW50SGFuZGxlcnMuaGFzKGUpfW1vdW50KHQsbj10aGlzLnJvb3QuaGFzVHJlZUFuaW1hdGVkKXtpZih0aGlzLmluc3RhbmNlKXJldHVybjt2YXIgcjt0aGlzLmlzU1ZHPShyPXQpaW5zdGFuY2VvZiBTVkdFbGVtZW50JiZcInN2Z1wiIT09ci50YWdOYW1lLHRoaXMuaW5zdGFuY2U9dDtjb25zdHtsYXlvdXRJZDpvLGxheW91dDppLHZpc3VhbEVsZW1lbnQ6c309dGhpcy5vcHRpb25zO2lmKHMmJiFzLmN1cnJlbnQmJnMubW91bnQodCksdGhpcy5yb290Lm5vZGVzLmFkZCh0aGlzKSx0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQuY2hpbGRyZW4uYWRkKHRoaXMpLG4mJihpfHxvKSYmKHRoaXMuaXNMYXlvdXREaXJ0eT0hMCksZSl7bGV0IG47Y29uc3Qgcj0oKT0+dGhpcy5yb290LnVwZGF0ZUJsb2NrZWRCeVJlc2l6ZT0hMTtlKHQsKCgpPT57dGhpcy5yb290LnVwZGF0ZUJsb2NrZWRCeVJlc2l6ZT0hMCxuJiZuKCksbj1mdW5jdGlvbihlKXtjb25zdCB0PW1hLm5vdygpLG49KHt0aW1lc3RhbXA6cn0pPT57Y29uc3Qgbz1yLXQ7bz49MjUwJiYoS2kobiksZShvLTI1MCkpfTtyZXR1cm4gJGkucmVhZChuLCEwKSwoKT0+S2kobil9KHIpLGN1Lmhhc0FuaW1hdGVkU2luY2VSZXNpemUmJihjdS5oYXNBbmltYXRlZFNpbmNlUmVzaXplPSExLHRoaXMubm9kZXMuZm9yRWFjaChsZCkpfSkpfW8mJnRoaXMucm9vdC5yZWdpc3RlclNoYXJlZE5vZGUobyx0aGlzKSwhMSE9PXRoaXMub3B0aW9ucy5hbmltYXRlJiZzJiYob3x8aSkmJnRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImRpZFVwZGF0ZVwiLCgoe2RlbHRhOmUsaGFzTGF5b3V0Q2hhbmdlZDp0LGhhc1JlbGF0aXZlVGFyZ2V0Q2hhbmdlZDpuLGxheW91dDpyfSk9PntpZih0aGlzLmlzVHJlZUFuaW1hdGlvbkJsb2NrZWQoKSlyZXR1cm4gdGhpcy50YXJnZXQ9dm9pZCAwLHZvaWQodGhpcy5yZWxhdGl2ZVRhcmdldD12b2lkIDApO2NvbnN0IG89dGhpcy5vcHRpb25zLnRyYW5zaXRpb258fHMuZ2V0RGVmYXVsdFRyYW5zaXRpb24oKXx8Z2Qse29uTGF5b3V0QW5pbWF0aW9uU3RhcnQ6aSxvbkxheW91dEFuaW1hdGlvbkNvbXBsZXRlOmF9PXMuZ2V0UHJvcHMoKSxsPSF0aGlzLnRhcmdldExheW91dHx8IXp1KHRoaXMudGFyZ2V0TGF5b3V0LHIpfHxuLGM9IXQmJm47aWYodGhpcy5vcHRpb25zLmxheW91dFJvb3R8fHRoaXMucmVzdW1lRnJvbSYmdGhpcy5yZXN1bWVGcm9tLmluc3RhbmNlfHxjfHx0JiYobHx8IXRoaXMuY3VycmVudEFuaW1hdGlvbikpe3RoaXMucmVzdW1lRnJvbSYmKHRoaXMucmVzdW1pbmdGcm9tPXRoaXMucmVzdW1lRnJvbSx0aGlzLnJlc3VtaW5nRnJvbS5yZXN1bWluZ0Zyb209dm9pZCAwKSx0aGlzLnNldEFuaW1hdGlvbk9yaWdpbihlLGMpO2NvbnN0IHQ9ey4uLkZpKG8sXCJsYXlvdXRcIiksb25QbGF5Omksb25Db21wbGV0ZTphfTsocy5zaG91bGRSZWR1Y2VNb3Rpb258fHRoaXMub3B0aW9ucy5sYXlvdXRSb290KSYmKHQuZGVsYXk9MCx0LnR5cGU9ITEpLHRoaXMuc3RhcnRBbmltYXRpb24odCl9ZWxzZSB0fHxsZCh0aGlzKSx0aGlzLmlzTGVhZCgpJiZ0aGlzLm9wdGlvbnMub25FeGl0Q29tcGxldGUmJnRoaXMub3B0aW9ucy5vbkV4aXRDb21wbGV0ZSgpO3RoaXMudGFyZ2V0TGF5b3V0PXJ9KSl9dW5tb3VudCgpe3RoaXMub3B0aW9ucy5sYXlvdXRJZCYmdGhpcy53aWxsVXBkYXRlKCksdGhpcy5yb290Lm5vZGVzLnJlbW92ZSh0aGlzKTtjb25zdCBlPXRoaXMuZ2V0U3RhY2soKTtlJiZlLnJlbW92ZSh0aGlzKSx0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQuY2hpbGRyZW4uZGVsZXRlKHRoaXMpLHRoaXMuaW5zdGFuY2U9dm9pZCAwLEtpKHRoaXMudXBkYXRlUHJvamVjdGlvbil9YmxvY2tVcGRhdGUoKXt0aGlzLnVwZGF0ZU1hbnVhbGx5QmxvY2tlZD0hMH11bmJsb2NrVXBkYXRlKCl7dGhpcy51cGRhdGVNYW51YWxseUJsb2NrZWQ9ITF9aXNVcGRhdGVCbG9ja2VkKCl7cmV0dXJuIHRoaXMudXBkYXRlTWFudWFsbHlCbG9ja2VkfHx0aGlzLnVwZGF0ZUJsb2NrZWRCeVJlc2l6ZX1pc1RyZWVBbmltYXRpb25CbG9ja2VkKCl7cmV0dXJuIHRoaXMuaXNBbmltYXRpb25CbG9ja2VkfHx0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQuaXNUcmVlQW5pbWF0aW9uQmxvY2tlZCgpfHwhMX1zdGFydFVwZGF0ZSgpe3RoaXMuaXNVcGRhdGVCbG9ja2VkKCl8fCh0aGlzLmlzVXBkYXRpbmc9ITAsdGhpcy5ub2RlcyYmdGhpcy5ub2Rlcy5mb3JFYWNoKGRkKSx0aGlzLmFuaW1hdGlvbklkKyspfWdldFRyYW5zZm9ybVRlbXBsYXRlKCl7Y29uc3R7dmlzdWFsRWxlbWVudDplfT10aGlzLm9wdGlvbnM7cmV0dXJuIGUmJmUuZ2V0UHJvcHMoKS50cmFuc2Zvcm1UZW1wbGF0ZX13aWxsVXBkYXRlKGU9ITApe2lmKHRoaXMucm9vdC5oYXNUcmVlQW5pbWF0ZWQ9ITAsdGhpcy5yb290LmlzVXBkYXRlQmxvY2tlZCgpKXJldHVybiB2b2lkKHRoaXMub3B0aW9ucy5vbkV4aXRDb21wbGV0ZSYmdGhpcy5vcHRpb25zLm9uRXhpdENvbXBsZXRlKCkpO2lmKHdpbmRvdy5Nb3Rpb25DYW5jZWxPcHRpbWlzZWRBbmltYXRpb24mJiF0aGlzLmhhc0NoZWNrZWRPcHRpbWlzZWRBcHBlYXImJlp1KHRoaXMpLCF0aGlzLnJvb3QuaXNVcGRhdGluZyYmdGhpcy5yb290LnN0YXJ0VXBkYXRlKCksdGhpcy5pc0xheW91dERpcnR5KXJldHVybjt0aGlzLmlzTGF5b3V0RGlydHk9ITA7Zm9yKGxldCBlPTA7ZTx0aGlzLnBhdGgubGVuZ3RoO2UrKyl7Y29uc3QgdD10aGlzLnBhdGhbZV07dC5zaG91bGRSZXNldFRyYW5zZm9ybT0hMCx0LnVwZGF0ZVNjcm9sbChcInNuYXBzaG90XCIpLHQub3B0aW9ucy5sYXlvdXRSb290JiZ0LndpbGxVcGRhdGUoITEpfWNvbnN0e2xheW91dElkOnQsbGF5b3V0Om59PXRoaXMub3B0aW9ucztpZih2b2lkIDA9PT10JiYhbilyZXR1cm47Y29uc3Qgcj10aGlzLmdldFRyYW5zZm9ybVRlbXBsYXRlKCk7dGhpcy5wcmV2VHJhbnNmb3JtVGVtcGxhdGVWYWx1ZT1yP3IodGhpcy5sYXRlc3RWYWx1ZXMsXCJcIik6dm9pZCAwLHRoaXMudXBkYXRlU25hcHNob3QoKSxlJiZ0aGlzLm5vdGlmeUxpc3RlbmVycyhcIndpbGxVcGRhdGVcIil9dXBkYXRlKCl7aWYodGhpcy51cGRhdGVTY2hlZHVsZWQ9ITEsdGhpcy5pc1VwZGF0ZUJsb2NrZWQoKSlyZXR1cm4gdGhpcy51bmJsb2NrVXBkYXRlKCksdGhpcy5jbGVhckFsbFNuYXBzaG90cygpLHZvaWQgdGhpcy5ub2Rlcy5mb3JFYWNoKGlkKTt0aGlzLmlzVXBkYXRpbmd8fHRoaXMubm9kZXMuZm9yRWFjaChzZCksdGhpcy5pc1VwZGF0aW5nPSExLHRoaXMubm9kZXMuZm9yRWFjaChhZCksdGhpcy5ub2Rlcy5mb3JFYWNoKGVkKSx0aGlzLm5vZGVzLmZvckVhY2godGQpLHRoaXMuY2xlYXJBbGxTbmFwc2hvdHMoKTtjb25zdCBlPW1hLm5vdygpO0hpLmRlbHRhPWlzKDAsMWUzLzYwLGUtSGkudGltZXN0YW1wKSxIaS50aW1lc3RhbXA9ZSxIaS5pc1Byb2Nlc3Npbmc9ITAscWkudXBkYXRlLnByb2Nlc3MoSGkpLHFpLnByZVJlbmRlci5wcm9jZXNzKEhpKSxxaS5yZW5kZXIucHJvY2VzcyhIaSksSGkuaXNQcm9jZXNzaW5nPSExfWRpZFVwZGF0ZSgpe3RoaXMudXBkYXRlU2NoZWR1bGVkfHwodGhpcy51cGRhdGVTY2hlZHVsZWQ9ITAscHUucmVhZCh0aGlzLnNjaGVkdWxlVXBkYXRlKSl9Y2xlYXJBbGxTbmFwc2hvdHMoKXt0aGlzLm5vZGVzLmZvckVhY2gob2QpLHRoaXMuc2hhcmVkTm9kZXMuZm9yRWFjaChmZCl9c2NoZWR1bGVVcGRhdGVQcm9qZWN0aW9uKCl7dGhpcy5wcm9qZWN0aW9uVXBkYXRlU2NoZWR1bGVkfHwodGhpcy5wcm9qZWN0aW9uVXBkYXRlU2NoZWR1bGVkPSEwLCRpLnByZVJlbmRlcih0aGlzLnVwZGF0ZVByb2plY3Rpb24sITEsITApKX1zY2hlZHVsZUNoZWNrQWZ0ZXJVbm1vdW50KCl7JGkucG9zdFJlbmRlcigoKCk9Pnt0aGlzLmlzTGF5b3V0RGlydHk/dGhpcy5yb290LmRpZFVwZGF0ZSgpOnRoaXMucm9vdC5jaGVja1VwZGF0ZUZhaWxlZCgpfSkpfXVwZGF0ZVNuYXBzaG90KCl7IXRoaXMuc25hcHNob3QmJnRoaXMuaW5zdGFuY2UmJih0aGlzLnNuYXBzaG90PXRoaXMubWVhc3VyZSgpKX11cGRhdGVMYXlvdXQoKXtpZighdGhpcy5pbnN0YW5jZSlyZXR1cm47aWYodGhpcy51cGRhdGVTY3JvbGwoKSwhKHRoaXMub3B0aW9ucy5hbHdheXNNZWFzdXJlTGF5b3V0JiZ0aGlzLmlzTGVhZCgpfHx0aGlzLmlzTGF5b3V0RGlydHkpKXJldHVybjtpZih0aGlzLnJlc3VtZUZyb20mJiF0aGlzLnJlc3VtZUZyb20uaW5zdGFuY2UpZm9yKGxldCBlPTA7ZTx0aGlzLnBhdGgubGVuZ3RoO2UrKyl0aGlzLnBhdGhbZV0udXBkYXRlU2Nyb2xsKCk7Y29uc3QgZT10aGlzLmxheW91dDt0aGlzLmxheW91dD10aGlzLm1lYXN1cmUoITEpLHRoaXMubGF5b3V0Q29ycmVjdGVkPURjKCksdGhpcy5pc0xheW91dERpcnR5PSExLHRoaXMucHJvamVjdGlvbkRlbHRhPXZvaWQgMCx0aGlzLm5vdGlmeUxpc3RlbmVycyhcIm1lYXN1cmVcIix0aGlzLmxheW91dC5sYXlvdXRCb3gpO2NvbnN0e3Zpc3VhbEVsZW1lbnQ6dH09dGhpcy5vcHRpb25zO3QmJnQubm90aWZ5KFwiTGF5b3V0TWVhc3VyZVwiLHRoaXMubGF5b3V0LmxheW91dEJveCxlP2UubGF5b3V0Qm94OnZvaWQgMCl9dXBkYXRlU2Nyb2xsKGU9XCJtZWFzdXJlXCIpe2xldCB0PUJvb2xlYW4odGhpcy5vcHRpb25zLmxheW91dFNjcm9sbCYmdGhpcy5pbnN0YW5jZSk7aWYodGhpcy5zY3JvbGwmJnRoaXMuc2Nyb2xsLmFuaW1hdGlvbklkPT09dGhpcy5yb290LmFuaW1hdGlvbklkJiZ0aGlzLnNjcm9sbC5waGFzZT09PWUmJih0PSExKSx0KXtjb25zdCB0PXIodGhpcy5pbnN0YW5jZSk7dGhpcy5zY3JvbGw9e2FuaW1hdGlvbklkOnRoaXMucm9vdC5hbmltYXRpb25JZCxwaGFzZTplLGlzUm9vdDp0LG9mZnNldDpuKHRoaXMuaW5zdGFuY2UpLHdhc1Jvb3Q6dGhpcy5zY3JvbGw/dGhpcy5zY3JvbGwuaXNSb290OnR9fX1yZXNldFRyYW5zZm9ybSgpe2lmKCFvKXJldHVybjtjb25zdCBlPXRoaXMuaXNMYXlvdXREaXJ0eXx8dGhpcy5zaG91bGRSZXNldFRyYW5zZm9ybXx8dGhpcy5vcHRpb25zLmFsd2F5c01lYXN1cmVMYXlvdXQsdD10aGlzLnByb2plY3Rpb25EZWx0YSYmIUR1KHRoaXMucHJvamVjdGlvbkRlbHRhKSxuPXRoaXMuZ2V0VHJhbnNmb3JtVGVtcGxhdGUoKSxyPW4/bih0aGlzLmxhdGVzdFZhbHVlcyxcIlwiKTp2b2lkIDAsaT1yIT09dGhpcy5wcmV2VHJhbnNmb3JtVGVtcGxhdGVWYWx1ZTtlJiYodHx8VmModGhpcy5sYXRlc3RWYWx1ZXMpfHxpKSYmKG8odGhpcy5pbnN0YW5jZSxyKSx0aGlzLnNob3VsZFJlc2V0VHJhbnNmb3JtPSExLHRoaXMuc2NoZWR1bGVSZW5kZXIoKSl9bWVhc3VyZShlPSEwKXtjb25zdCB0PXRoaXMubWVhc3VyZVBhZ2VCb3goKTtsZXQgbj10aGlzLnJlbW92ZUVsZW1lbnRTY3JvbGwodCk7dmFyIHI7cmV0dXJuIGUmJihuPXRoaXMucmVtb3ZlVHJhbnNmb3JtKG4pKSxiZCgocj1uKS54KSxiZChyLnkpLHthbmltYXRpb25JZDp0aGlzLnJvb3QuYW5pbWF0aW9uSWQsbWVhc3VyZWRCb3g6dCxsYXlvdXRCb3g6bixsYXRlc3RWYWx1ZXM6e30sc291cmNlOnRoaXMuaWR9fW1lYXN1cmVQYWdlQm94KCl7dmFyIGU7Y29uc3R7dmlzdWFsRWxlbWVudDp0fT10aGlzLm9wdGlvbnM7aWYoIXQpcmV0dXJuIERjKCk7Y29uc3Qgbj10Lm1lYXN1cmVWaWV3cG9ydEJveCgpO2lmKCEobnVsbD09PShlPXRoaXMuc2Nyb2xsKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS53YXNSb290KSYmIXRoaXMucGF0aC5zb21lKHdkKSl7Y29uc3R7c2Nyb2xsOmV9PXRoaXMucm9vdDtlJiYoWGMobi54LGUub2Zmc2V0LngpLFhjKG4ueSxlLm9mZnNldC55KSl9cmV0dXJuIG59cmVtb3ZlRWxlbWVudFNjcm9sbChlKXt2YXIgdDtjb25zdCBuPURjKCk7aWYoVHUobixlKSxudWxsPT09KHQ9dGhpcy5zY3JvbGwpfHx2b2lkIDA9PT10P3ZvaWQgMDp0Lndhc1Jvb3QpcmV0dXJuIG47Zm9yKGxldCB0PTA7dDx0aGlzLnBhdGgubGVuZ3RoO3QrKyl7Y29uc3Qgcj10aGlzLnBhdGhbdF0se3Njcm9sbDpvLG9wdGlvbnM6aX09cjtyIT09dGhpcy5yb290JiZvJiZpLmxheW91dFNjcm9sbCYmKG8ud2FzUm9vdCYmVHUobixlKSxYYyhuLngsby5vZmZzZXQueCksWGMobi55LG8ub2Zmc2V0LnkpKX1yZXR1cm4gbn1hcHBseVRyYW5zZm9ybShlLHQ9ITEpe2NvbnN0IG49RGMoKTtUdShuLGUpO2ZvcihsZXQgZT0wO2U8dGhpcy5wYXRoLmxlbmd0aDtlKyspe2NvbnN0IHI9dGhpcy5wYXRoW2VdOyF0JiZyLm9wdGlvbnMubGF5b3V0U2Nyb2xsJiZyLnNjcm9sbCYmciE9PXIucm9vdCYmWmMobix7eDotci5zY3JvbGwub2Zmc2V0LngseTotci5zY3JvbGwub2Zmc2V0Lnl9KSxWYyhyLmxhdGVzdFZhbHVlcykmJlpjKG4sci5sYXRlc3RWYWx1ZXMpfXJldHVybiBWYyh0aGlzLmxhdGVzdFZhbHVlcykmJlpjKG4sdGhpcy5sYXRlc3RWYWx1ZXMpLG59cmVtb3ZlVHJhbnNmb3JtKGUpe2NvbnN0IHQ9RGMoKTtUdSh0LGUpO2ZvcihsZXQgZT0wO2U8dGhpcy5wYXRoLmxlbmd0aDtlKyspe2NvbnN0IG49dGhpcy5wYXRoW2VdO2lmKCFuLmluc3RhbmNlKWNvbnRpbnVlO2lmKCFWYyhuLmxhdGVzdFZhbHVlcykpY29udGludWU7QmMobi5sYXRlc3RWYWx1ZXMpJiZuLnVwZGF0ZVNuYXBzaG90KCk7Y29uc3Qgcj1EYygpO1R1KHIsbi5tZWFzdXJlUGFnZUJveCgpKSxNdSh0LG4ubGF0ZXN0VmFsdWVzLG4uc25hcHNob3Q/bi5zbmFwc2hvdC5sYXlvdXRCb3g6dm9pZCAwLHIpfXJldHVybiBWYyh0aGlzLmxhdGVzdFZhbHVlcykmJk11KHQsdGhpcy5sYXRlc3RWYWx1ZXMpLHR9c2V0VGFyZ2V0RGVsdGEoZSl7dGhpcy50YXJnZXREZWx0YT1lLHRoaXMucm9vdC5zY2hlZHVsZVVwZGF0ZVByb2plY3Rpb24oKSx0aGlzLmlzUHJvamVjdGlvbkRpcnR5PSEwfXNldE9wdGlvbnMoZSl7dGhpcy5vcHRpb25zPXsuLi50aGlzLm9wdGlvbnMsLi4uZSxjcm9zc2ZhZGU6dm9pZCAwPT09ZS5jcm9zc2ZhZGV8fGUuY3Jvc3NmYWRlfX1jbGVhck1lYXN1cmVtZW50cygpe3RoaXMuc2Nyb2xsPXZvaWQgMCx0aGlzLmxheW91dD12b2lkIDAsdGhpcy5zbmFwc2hvdD12b2lkIDAsdGhpcy5wcmV2VHJhbnNmb3JtVGVtcGxhdGVWYWx1ZT12b2lkIDAsdGhpcy50YXJnZXREZWx0YT12b2lkIDAsdGhpcy50YXJnZXQ9dm9pZCAwLHRoaXMuaXNMYXlvdXREaXJ0eT0hMX1mb3JjZVJlbGF0aXZlUGFyZW50VG9SZXNvbHZlVGFyZ2V0KCl7dGhpcy5yZWxhdGl2ZVBhcmVudCYmdGhpcy5yZWxhdGl2ZVBhcmVudC5yZXNvbHZlZFJlbGF0aXZlVGFyZ2V0QXQhPT1IaS50aW1lc3RhbXAmJnRoaXMucmVsYXRpdmVQYXJlbnQucmVzb2x2ZVRhcmdldERlbHRhKCEwKX1yZXNvbHZlVGFyZ2V0RGVsdGEoZT0hMSl7dmFyIHQ7Y29uc3Qgbj10aGlzLmdldExlYWQoKTt0aGlzLmlzUHJvamVjdGlvbkRpcnR5fHwodGhpcy5pc1Byb2plY3Rpb25EaXJ0eT1uLmlzUHJvamVjdGlvbkRpcnR5KSx0aGlzLmlzVHJhbnNmb3JtRGlydHl8fCh0aGlzLmlzVHJhbnNmb3JtRGlydHk9bi5pc1RyYW5zZm9ybURpcnR5KSx0aGlzLmlzU2hhcmVkUHJvamVjdGlvbkRpcnR5fHwodGhpcy5pc1NoYXJlZFByb2plY3Rpb25EaXJ0eT1uLmlzU2hhcmVkUHJvamVjdGlvbkRpcnR5KTtjb25zdCByPUJvb2xlYW4odGhpcy5yZXN1bWluZ0Zyb20pfHx0aGlzIT09bjtpZighKGV8fHImJnRoaXMuaXNTaGFyZWRQcm9qZWN0aW9uRGlydHl8fHRoaXMuaXNQcm9qZWN0aW9uRGlydHl8fChudWxsPT09KHQ9dGhpcy5wYXJlbnQpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmlzUHJvamVjdGlvbkRpcnR5KXx8dGhpcy5hdHRlbXB0VG9SZXNvbHZlUmVsYXRpdmVUYXJnZXR8fHRoaXMucm9vdC51cGRhdGVCbG9ja2VkQnlSZXNpemUpKXJldHVybjtjb25zdHtsYXlvdXQ6byxsYXlvdXRJZDppfT10aGlzLm9wdGlvbnM7aWYodGhpcy5sYXlvdXQmJihvfHxpKSl7aWYodGhpcy5yZXNvbHZlZFJlbGF0aXZlVGFyZ2V0QXQ9SGkudGltZXN0YW1wLCF0aGlzLnRhcmdldERlbHRhJiYhdGhpcy5yZWxhdGl2ZVRhcmdldCl7Y29uc3QgZT10aGlzLmdldENsb3Nlc3RQcm9qZWN0aW5nUGFyZW50KCk7ZSYmZS5sYXlvdXQmJjEhPT10aGlzLmFuaW1hdGlvblByb2dyZXNzPyh0aGlzLnJlbGF0aXZlUGFyZW50PWUsdGhpcy5mb3JjZVJlbGF0aXZlUGFyZW50VG9SZXNvbHZlVGFyZ2V0KCksdGhpcy5yZWxhdGl2ZVRhcmdldD1EYygpLHRoaXMucmVsYXRpdmVUYXJnZXRPcmlnaW49RGMoKSxPYyh0aGlzLnJlbGF0aXZlVGFyZ2V0T3JpZ2luLHRoaXMubGF5b3V0LmxheW91dEJveCxlLmxheW91dC5sYXlvdXRCb3gpLFR1KHRoaXMucmVsYXRpdmVUYXJnZXQsdGhpcy5yZWxhdGl2ZVRhcmdldE9yaWdpbikpOnRoaXMucmVsYXRpdmVQYXJlbnQ9dGhpcy5yZWxhdGl2ZVRhcmdldD12b2lkIDB9aWYodGhpcy5yZWxhdGl2ZVRhcmdldHx8dGhpcy50YXJnZXREZWx0YSl7dmFyIHMsYSxsO2lmKHRoaXMudGFyZ2V0fHwodGhpcy50YXJnZXQ9RGMoKSx0aGlzLnRhcmdldFdpdGhUcmFuc2Zvcm1zPURjKCkpLHRoaXMucmVsYXRpdmVUYXJnZXQmJnRoaXMucmVsYXRpdmVUYXJnZXRPcmlnaW4mJnRoaXMucmVsYXRpdmVQYXJlbnQmJnRoaXMucmVsYXRpdmVQYXJlbnQudGFyZ2V0Pyh0aGlzLmZvcmNlUmVsYXRpdmVQYXJlbnRUb1Jlc29sdmVUYXJnZXQoKSxzPXRoaXMudGFyZ2V0LGE9dGhpcy5yZWxhdGl2ZVRhcmdldCxsPXRoaXMucmVsYXRpdmVQYXJlbnQudGFyZ2V0LFBjKHMueCxhLngsbC54KSxQYyhzLnksYS55LGwueSkpOnRoaXMudGFyZ2V0RGVsdGE/KEJvb2xlYW4odGhpcy5yZXN1bWluZ0Zyb20pP3RoaXMudGFyZ2V0PXRoaXMuYXBwbHlUcmFuc2Zvcm0odGhpcy5sYXlvdXQubGF5b3V0Qm94KTpUdSh0aGlzLnRhcmdldCx0aGlzLmxheW91dC5sYXlvdXRCb3gpLHFjKHRoaXMudGFyZ2V0LHRoaXMudGFyZ2V0RGVsdGEpKTpUdSh0aGlzLnRhcmdldCx0aGlzLmxheW91dC5sYXlvdXRCb3gpLHRoaXMuYXR0ZW1wdFRvUmVzb2x2ZVJlbGF0aXZlVGFyZ2V0KXt0aGlzLmF0dGVtcHRUb1Jlc29sdmVSZWxhdGl2ZVRhcmdldD0hMTtjb25zdCBlPXRoaXMuZ2V0Q2xvc2VzdFByb2plY3RpbmdQYXJlbnQoKTtlJiZCb29sZWFuKGUucmVzdW1pbmdGcm9tKT09PUJvb2xlYW4odGhpcy5yZXN1bWluZ0Zyb20pJiYhZS5vcHRpb25zLmxheW91dFNjcm9sbCYmZS50YXJnZXQmJjEhPT10aGlzLmFuaW1hdGlvblByb2dyZXNzPyh0aGlzLnJlbGF0aXZlUGFyZW50PWUsdGhpcy5mb3JjZVJlbGF0aXZlUGFyZW50VG9SZXNvbHZlVGFyZ2V0KCksdGhpcy5yZWxhdGl2ZVRhcmdldD1EYygpLHRoaXMucmVsYXRpdmVUYXJnZXRPcmlnaW49RGMoKSxPYyh0aGlzLnJlbGF0aXZlVGFyZ2V0T3JpZ2luLHRoaXMudGFyZ2V0LGUudGFyZ2V0KSxUdSh0aGlzLnJlbGF0aXZlVGFyZ2V0LHRoaXMucmVsYXRpdmVUYXJnZXRPcmlnaW4pKTp0aGlzLnJlbGF0aXZlUGFyZW50PXRoaXMucmVsYXRpdmVUYXJnZXQ9dm9pZCAwfXF1JiZIdS5yZXNvbHZlZFRhcmdldERlbHRhcysrfX19Z2V0Q2xvc2VzdFByb2plY3RpbmdQYXJlbnQoKXtpZih0aGlzLnBhcmVudCYmIUJjKHRoaXMucGFyZW50LmxhdGVzdFZhbHVlcykmJiFXYyh0aGlzLnBhcmVudC5sYXRlc3RWYWx1ZXMpKXJldHVybiB0aGlzLnBhcmVudC5pc1Byb2plY3RpbmcoKT90aGlzLnBhcmVudDp0aGlzLnBhcmVudC5nZXRDbG9zZXN0UHJvamVjdGluZ1BhcmVudCgpfWlzUHJvamVjdGluZygpe3JldHVybiBCb29sZWFuKCh0aGlzLnJlbGF0aXZlVGFyZ2V0fHx0aGlzLnRhcmdldERlbHRhfHx0aGlzLm9wdGlvbnMubGF5b3V0Um9vdCkmJnRoaXMubGF5b3V0KX1jYWxjUHJvamVjdGlvbigpe3ZhciBlO2NvbnN0IHQ9dGhpcy5nZXRMZWFkKCksbj1Cb29sZWFuKHRoaXMucmVzdW1pbmdGcm9tKXx8dGhpcyE9PXQ7bGV0IHI9ITA7aWYoKHRoaXMuaXNQcm9qZWN0aW9uRGlydHl8fChudWxsPT09KGU9dGhpcy5wYXJlbnQpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmlzUHJvamVjdGlvbkRpcnR5KSkmJihyPSExKSxuJiYodGhpcy5pc1NoYXJlZFByb2plY3Rpb25EaXJ0eXx8dGhpcy5pc1RyYW5zZm9ybURpcnR5KSYmKHI9ITEpLHRoaXMucmVzb2x2ZWRSZWxhdGl2ZVRhcmdldEF0PT09SGkudGltZXN0YW1wJiYocj0hMSkscilyZXR1cm47Y29uc3R7bGF5b3V0Om8sbGF5b3V0SWQ6aX09dGhpcy5vcHRpb25zO2lmKHRoaXMuaXNUcmVlQW5pbWF0aW5nPUJvb2xlYW4odGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LmlzVHJlZUFuaW1hdGluZ3x8dGhpcy5jdXJyZW50QW5pbWF0aW9ufHx0aGlzLnBlbmRpbmdBbmltYXRpb24pLHRoaXMuaXNUcmVlQW5pbWF0aW5nfHwodGhpcy50YXJnZXREZWx0YT10aGlzLnJlbGF0aXZlVGFyZ2V0PXZvaWQgMCksIXRoaXMubGF5b3V0fHwhbyYmIWkpcmV0dXJuO1R1KHRoaXMubGF5b3V0Q29ycmVjdGVkLHRoaXMubGF5b3V0LmxheW91dEJveCk7Y29uc3Qgcz10aGlzLnRyZWVTY2FsZS54LGE9dGhpcy50cmVlU2NhbGUueTshZnVuY3Rpb24oZSx0LG4scj0hMSl7Y29uc3Qgbz1uLmxlbmd0aDtpZighbylyZXR1cm47bGV0IGksczt0Lng9dC55PTE7Zm9yKGxldCBhPTA7YTxvO2ErKyl7aT1uW2FdLHM9aS5wcm9qZWN0aW9uRGVsdGE7Y29uc3R7dmlzdWFsRWxlbWVudDpvfT1pLm9wdGlvbnM7byYmby5wcm9wcy5zdHlsZSYmXCJjb250ZW50c1wiPT09by5wcm9wcy5zdHlsZS5kaXNwbGF5fHwociYmaS5vcHRpb25zLmxheW91dFNjcm9sbCYmaS5zY3JvbGwmJmkhPT1pLnJvb3QmJlpjKGUse3g6LWkuc2Nyb2xsLm9mZnNldC54LHk6LWkuc2Nyb2xsLm9mZnNldC55fSkscyYmKHQueCo9cy54LnNjYWxlLHQueSo9cy55LnNjYWxlLHFjKGUscykpLHImJlZjKGkubGF0ZXN0VmFsdWVzKSYmWmMoZSxpLmxhdGVzdFZhbHVlcykpfXQueDxHYyYmdC54PlljJiYodC54PTEpLHQueTxHYyYmdC55PlljJiYodC55PTEpfSh0aGlzLmxheW91dENvcnJlY3RlZCx0aGlzLnRyZWVTY2FsZSx0aGlzLnBhdGgsbiksIXQubGF5b3V0fHx0LnRhcmdldHx8MT09PXRoaXMudHJlZVNjYWxlLngmJjE9PT10aGlzLnRyZWVTY2FsZS55fHwodC50YXJnZXQ9dC5sYXlvdXQubGF5b3V0Qm94LHQudGFyZ2V0V2l0aFRyYW5zZm9ybXM9RGMoKSk7Y29uc3R7dGFyZ2V0Omx9PXQ7bD8odGhpcy5wcm9qZWN0aW9uRGVsdGEmJnRoaXMucHJldlByb2plY3Rpb25EZWx0YT8oT3UodGhpcy5wcmV2UHJvamVjdGlvbkRlbHRhLngsdGhpcy5wcm9qZWN0aW9uRGVsdGEueCksT3UodGhpcy5wcmV2UHJvamVjdGlvbkRlbHRhLnksdGhpcy5wcm9qZWN0aW9uRGVsdGEueSkpOnRoaXMuY3JlYXRlUHJvamVjdGlvbkRlbHRhcygpLENjKHRoaXMucHJvamVjdGlvbkRlbHRhLHRoaXMubGF5b3V0Q29ycmVjdGVkLGwsdGhpcy5sYXRlc3RWYWx1ZXMpLHRoaXMudHJlZVNjYWxlLng9PT1zJiZ0aGlzLnRyZWVTY2FsZS55PT09YSYmVnUodGhpcy5wcm9qZWN0aW9uRGVsdGEueCx0aGlzLnByZXZQcm9qZWN0aW9uRGVsdGEueCkmJlZ1KHRoaXMucHJvamVjdGlvbkRlbHRhLnksdGhpcy5wcmV2UHJvamVjdGlvbkRlbHRhLnkpfHwodGhpcy5oYXNQcm9qZWN0ZWQ9ITAsdGhpcy5zY2hlZHVsZVJlbmRlcigpLHRoaXMubm90aWZ5TGlzdGVuZXJzKFwicHJvamVjdGlvblVwZGF0ZVwiLGwpKSxxdSYmSHUucmVjYWxjdWxhdGVkUHJvamVjdGlvbisrKTp0aGlzLnByZXZQcm9qZWN0aW9uRGVsdGEmJih0aGlzLmNyZWF0ZVByb2plY3Rpb25EZWx0YXMoKSx0aGlzLnNjaGVkdWxlUmVuZGVyKCkpfWhpZGUoKXt0aGlzLmlzVmlzaWJsZT0hMX1zaG93KCl7dGhpcy5pc1Zpc2libGU9ITB9c2NoZWR1bGVSZW5kZXIoZT0hMCl7dmFyIHQ7aWYobnVsbD09PSh0PXRoaXMub3B0aW9ucy52aXN1YWxFbGVtZW50KXx8dm9pZCAwPT09dHx8dC5zY2hlZHVsZVJlbmRlcigpLGUpe2NvbnN0IGU9dGhpcy5nZXRTdGFjaygpO2UmJmUuc2NoZWR1bGVSZW5kZXIoKX10aGlzLnJlc3VtaW5nRnJvbSYmIXRoaXMucmVzdW1pbmdGcm9tLmluc3RhbmNlJiYodGhpcy5yZXN1bWluZ0Zyb209dm9pZCAwKX1jcmVhdGVQcm9qZWN0aW9uRGVsdGFzKCl7dGhpcy5wcmV2UHJvamVjdGlvbkRlbHRhPUljKCksdGhpcy5wcm9qZWN0aW9uRGVsdGE9SWMoKSx0aGlzLnByb2plY3Rpb25EZWx0YVdpdGhUcmFuc2Zvcm09SWMoKX1zZXRBbmltYXRpb25PcmlnaW4oZSx0PSExKXtjb25zdCBuPXRoaXMuc25hcHNob3Qscj1uP24ubGF0ZXN0VmFsdWVzOnt9LG89ey4uLnRoaXMubGF0ZXN0VmFsdWVzfSxpPUljKCk7dGhpcy5yZWxhdGl2ZVBhcmVudCYmdGhpcy5yZWxhdGl2ZVBhcmVudC5vcHRpb25zLmxheW91dFJvb3R8fCh0aGlzLnJlbGF0aXZlVGFyZ2V0PXRoaXMucmVsYXRpdmVUYXJnZXRPcmlnaW49dm9pZCAwKSx0aGlzLmF0dGVtcHRUb1Jlc29sdmVSZWxhdGl2ZVRhcmdldD0hdDtjb25zdCBzPURjKCksYT0obj9uLnNvdXJjZTp2b2lkIDApIT09KHRoaXMubGF5b3V0P3RoaXMubGF5b3V0LnNvdXJjZTp2b2lkIDApLGw9dGhpcy5nZXRTdGFjaygpLGM9IWx8fGwubWVtYmVycy5sZW5ndGg8PTEsdT1Cb29sZWFuKGEmJiFjJiYhMD09PXRoaXMub3B0aW9ucy5jcm9zc2ZhZGUmJiF0aGlzLnBhdGguc29tZShtZCkpO2xldCBkO3RoaXMuYW5pbWF0aW9uUHJvZ3Jlc3M9MCx0aGlzLm1peFRhcmdldERlbHRhPXQ9Pntjb25zdCBuPXQvMWUzO3ZhciBsLGYsaCxwLG0sZztoZChpLngsZS54LG4pLGhkKGkueSxlLnksbiksdGhpcy5zZXRUYXJnZXREZWx0YShpKSx0aGlzLnJlbGF0aXZlVGFyZ2V0JiZ0aGlzLnJlbGF0aXZlVGFyZ2V0T3JpZ2luJiZ0aGlzLmxheW91dCYmdGhpcy5yZWxhdGl2ZVBhcmVudCYmdGhpcy5yZWxhdGl2ZVBhcmVudC5sYXlvdXQmJihPYyhzLHRoaXMubGF5b3V0LmxheW91dEJveCx0aGlzLnJlbGF0aXZlUGFyZW50LmxheW91dC5sYXlvdXRCb3gpLGg9dGhpcy5yZWxhdGl2ZVRhcmdldCxwPXRoaXMucmVsYXRpdmVUYXJnZXRPcmlnaW4sbT1zLGc9bixwZChoLngscC54LG0ueCxnKSxwZChoLnkscC55LG0ueSxnKSxkJiYobD10aGlzLnJlbGF0aXZlVGFyZ2V0LGY9ZCxMdShsLngsZi54KSYmTHUobC55LGYueSkpJiYodGhpcy5pc1Byb2plY3Rpb25EaXJ0eT0hMSksZHx8KGQ9RGMoKSksVHUoZCx0aGlzLnJlbGF0aXZlVGFyZ2V0KSksYSYmKHRoaXMuYW5pbWF0aW9uVmFsdWVzPW8sZnVuY3Rpb24oZSx0LG4scixvLGkpe28/KGUub3BhY2l0eT1KYSgwLHZvaWQgMCE9PW4ub3BhY2l0eT9uLm9wYWNpdHk6MSxfdShyKSksZS5vcGFjaXR5RXhpdD1KYSh2b2lkIDAhPT10Lm9wYWNpdHk/dC5vcGFjaXR5OjEsMCxrdShyKSkpOmkmJihlLm9wYWNpdHk9SmEodm9pZCAwIT09dC5vcGFjaXR5P3Qub3BhY2l0eToxLHZvaWQgMCE9PW4ub3BhY2l0eT9uLm9wYWNpdHk6MSxyKSk7Zm9yKGxldCBvPTA7bzx4dTtvKyspe2NvbnN0IGk9YGJvcmRlciR7YnVbb119UmFkaXVzYDtsZXQgcz1TdSh0LGkpLGE9U3UobixpKTt2b2lkIDA9PT1zJiZ2b2lkIDA9PT1hfHwoc3x8KHM9MCksYXx8KGE9MCksMD09PXN8fDA9PT1hfHxFdShzKT09PUV1KGEpPyhlW2ldPU1hdGgubWF4KEphKHd1KHMpLHd1KGEpLHIpLDApLChncy50ZXN0KGEpfHxncy50ZXN0KHMpKSYmKGVbaV0rPVwiJVwiKSk6ZVtpXT1hKX0odC5yb3RhdGV8fG4ucm90YXRlKSYmKGUucm90YXRlPUphKHQucm90YXRlfHwwLG4ucm90YXRlfHwwLHIpKX0obyxyLHRoaXMubGF0ZXN0VmFsdWVzLG4sdSxjKSksdGhpcy5yb290LnNjaGVkdWxlVXBkYXRlUHJvamVjdGlvbigpLHRoaXMuc2NoZWR1bGVSZW5kZXIoKSx0aGlzLmFuaW1hdGlvblByb2dyZXNzPW59LHRoaXMubWl4VGFyZ2V0RGVsdGEodGhpcy5vcHRpb25zLmxheW91dFJvb3Q/MWUzOjApfXN0YXJ0QW5pbWF0aW9uKGUpe3RoaXMubm90aWZ5TGlzdGVuZXJzKFwiYW5pbWF0aW9uU3RhcnRcIiksdGhpcy5jdXJyZW50QW5pbWF0aW9uJiZ0aGlzLmN1cnJlbnRBbmltYXRpb24uc3RvcCgpLHRoaXMucmVzdW1pbmdGcm9tJiZ0aGlzLnJlc3VtaW5nRnJvbS5jdXJyZW50QW5pbWF0aW9uJiZ0aGlzLnJlc3VtaW5nRnJvbS5jdXJyZW50QW5pbWF0aW9uLnN0b3AoKSx0aGlzLnBlbmRpbmdBbmltYXRpb24mJihLaSh0aGlzLnBlbmRpbmdBbmltYXRpb24pLHRoaXMucGVuZGluZ0FuaW1hdGlvbj12b2lkIDApLHRoaXMucGVuZGluZ0FuaW1hdGlvbj0kaS51cGRhdGUoKCgpPT57Y3UuaGFzQW5pbWF0ZWRTaW5jZVJlc2l6ZT0hMCx0aGlzLmN1cnJlbnRBbmltYXRpb249ZnVuY3Rpb24oZSx0LG4pe2NvbnN0IHI9V2woMCk/MDpJbCgwKTtyZXR1cm4gci5zdGFydChQbChcIlwiLHIsMWUzLG4pKSxyLmFuaW1hdGlvbn0oMCwwLHsuLi5lLG9uVXBkYXRlOnQ9Pnt0aGlzLm1peFRhcmdldERlbHRhKHQpLGUub25VcGRhdGUmJmUub25VcGRhdGUodCl9LG9uQ29tcGxldGU6KCk9PntlLm9uQ29tcGxldGUmJmUub25Db21wbGV0ZSgpLHRoaXMuY29tcGxldGVBbmltYXRpb24oKX19KSx0aGlzLnJlc3VtaW5nRnJvbSYmKHRoaXMucmVzdW1pbmdGcm9tLmN1cnJlbnRBbmltYXRpb249dGhpcy5jdXJyZW50QW5pbWF0aW9uKSx0aGlzLnBlbmRpbmdBbmltYXRpb249dm9pZCAwfSkpfWNvbXBsZXRlQW5pbWF0aW9uKCl7dGhpcy5yZXN1bWluZ0Zyb20mJih0aGlzLnJlc3VtaW5nRnJvbS5jdXJyZW50QW5pbWF0aW9uPXZvaWQgMCx0aGlzLnJlc3VtaW5nRnJvbS5wcmVzZXJ2ZU9wYWNpdHk9dm9pZCAwKTtjb25zdCBlPXRoaXMuZ2V0U3RhY2soKTtlJiZlLmV4aXRBbmltYXRpb25Db21wbGV0ZSgpLHRoaXMucmVzdW1pbmdGcm9tPXRoaXMuY3VycmVudEFuaW1hdGlvbj10aGlzLmFuaW1hdGlvblZhbHVlcz12b2lkIDAsdGhpcy5ub3RpZnlMaXN0ZW5lcnMoXCJhbmltYXRpb25Db21wbGV0ZVwiKX1maW5pc2hBbmltYXRpb24oKXt0aGlzLmN1cnJlbnRBbmltYXRpb24mJih0aGlzLm1peFRhcmdldERlbHRhJiZ0aGlzLm1peFRhcmdldERlbHRhKDFlMyksdGhpcy5jdXJyZW50QW5pbWF0aW9uLnN0b3AoKSksdGhpcy5jb21wbGV0ZUFuaW1hdGlvbigpfWFwcGx5VHJhbnNmb3Jtc1RvVGFyZ2V0KCl7Y29uc3QgZT10aGlzLmdldExlYWQoKTtsZXR7dGFyZ2V0V2l0aFRyYW5zZm9ybXM6dCx0YXJnZXQ6bixsYXlvdXQ6cixsYXRlc3RWYWx1ZXM6b309ZTtpZih0JiZuJiZyKXtpZih0aGlzIT09ZSYmdGhpcy5sYXlvdXQmJnImJnhkKHRoaXMub3B0aW9ucy5hbmltYXRpb25UeXBlLHRoaXMubGF5b3V0LmxheW91dEJveCxyLmxheW91dEJveCkpe249dGhpcy50YXJnZXR8fERjKCk7Y29uc3QgdD1fYyh0aGlzLmxheW91dC5sYXlvdXRCb3gueCk7bi54Lm1pbj1lLnRhcmdldC54Lm1pbixuLngubWF4PW4ueC5taW4rdDtjb25zdCByPV9jKHRoaXMubGF5b3V0LmxheW91dEJveC55KTtuLnkubWluPWUudGFyZ2V0LnkubWluLG4ueS5tYXg9bi55Lm1pbityfVR1KHQsbiksWmModCxvKSxDYyh0aGlzLnByb2plY3Rpb25EZWx0YVdpdGhUcmFuc2Zvcm0sdGhpcy5sYXlvdXRDb3JyZWN0ZWQsdCxvKX19cmVnaXN0ZXJTaGFyZWROb2RlKGUsdCl7dGhpcy5zaGFyZWROb2Rlcy5oYXMoZSl8fHRoaXMuc2hhcmVkTm9kZXMuc2V0KGUsbmV3IFd1KSx0aGlzLnNoYXJlZE5vZGVzLmdldChlKS5hZGQodCk7Y29uc3Qgbj10Lm9wdGlvbnMuaW5pdGlhbFByb21vdGlvbkNvbmZpZzt0LnByb21vdGUoe3RyYW5zaXRpb246bj9uLnRyYW5zaXRpb246dm9pZCAwLHByZXNlcnZlRm9sbG93T3BhY2l0eTpuJiZuLnNob3VsZFByZXNlcnZlRm9sbG93T3BhY2l0eT9uLnNob3VsZFByZXNlcnZlRm9sbG93T3BhY2l0eSh0KTp2b2lkIDB9KX1pc0xlYWQoKXtjb25zdCBlPXRoaXMuZ2V0U3RhY2soKTtyZXR1cm4hZXx8ZS5sZWFkPT09dGhpc31nZXRMZWFkKCl7dmFyIGU7Y29uc3R7bGF5b3V0SWQ6dH09dGhpcy5vcHRpb25zO3JldHVybiB0JiYobnVsbD09PShlPXRoaXMuZ2V0U3RhY2soKSl8fHZvaWQgMD09PWU/dm9pZCAwOmUubGVhZCl8fHRoaXN9Z2V0UHJldkxlYWQoKXt2YXIgZTtjb25zdHtsYXlvdXRJZDp0fT10aGlzLm9wdGlvbnM7cmV0dXJuIHQ/bnVsbD09PShlPXRoaXMuZ2V0U3RhY2soKSl8fHZvaWQgMD09PWU/dm9pZCAwOmUucHJldkxlYWQ6dm9pZCAwfWdldFN0YWNrKCl7Y29uc3R7bGF5b3V0SWQ6ZX09dGhpcy5vcHRpb25zO2lmKGUpcmV0dXJuIHRoaXMucm9vdC5zaGFyZWROb2Rlcy5nZXQoZSl9cHJvbW90ZSh7bmVlZHNSZXNldDplLHRyYW5zaXRpb246dCxwcmVzZXJ2ZUZvbGxvd09wYWNpdHk6bn09e30pe2NvbnN0IHI9dGhpcy5nZXRTdGFjaygpO3ImJnIucHJvbW90ZSh0aGlzLG4pLGUmJih0aGlzLnByb2plY3Rpb25EZWx0YT12b2lkIDAsdGhpcy5uZWVkc1Jlc2V0PSEwKSx0JiZ0aGlzLnNldE9wdGlvbnMoe3RyYW5zaXRpb246dH0pfXJlbGVnYXRlKCl7Y29uc3QgZT10aGlzLmdldFN0YWNrKCk7cmV0dXJuISFlJiZlLnJlbGVnYXRlKHRoaXMpfXJlc2V0U2tld0FuZFJvdGF0aW9uKCl7Y29uc3R7dmlzdWFsRWxlbWVudDplfT10aGlzLm9wdGlvbnM7aWYoIWUpcmV0dXJuO2xldCB0PSExO2NvbnN0e2xhdGVzdFZhbHVlczpufT1lO2lmKChuLnp8fG4ucm90YXRlfHxuLnJvdGF0ZVh8fG4ucm90YXRlWXx8bi5yb3RhdGVafHxuLnNrZXdYfHxuLnNrZXdZKSYmKHQ9ITApLCF0KXJldHVybjtjb25zdCByPXt9O24ueiYmSnUoXCJ6XCIsZSxyLHRoaXMuYW5pbWF0aW9uVmFsdWVzKTtmb3IobGV0IHQ9MDt0PFl1Lmxlbmd0aDt0KyspSnUoYHJvdGF0ZSR7WXVbdF19YCxlLHIsdGhpcy5hbmltYXRpb25WYWx1ZXMpLEp1KGBza2V3JHtZdVt0XX1gLGUscix0aGlzLmFuaW1hdGlvblZhbHVlcyk7ZS5yZW5kZXIoKTtmb3IoY29uc3QgdCBpbiByKWUuc2V0U3RhdGljVmFsdWUodCxyW3RdKSx0aGlzLmFuaW1hdGlvblZhbHVlcyYmKHRoaXMuYW5pbWF0aW9uVmFsdWVzW3RdPXJbdF0pO2Uuc2NoZWR1bGVSZW5kZXIoKX1nZXRQcm9qZWN0aW9uU3R5bGVzKGUpe3ZhciB0LG47aWYoIXRoaXMuaW5zdGFuY2V8fHRoaXMuaXNTVkcpcmV0dXJuO2lmKCF0aGlzLmlzVmlzaWJsZSlyZXR1cm4gR3U7Y29uc3Qgcj17dmlzaWJpbGl0eTpcIlwifSxvPXRoaXMuZ2V0VHJhbnNmb3JtVGVtcGxhdGUoKTtpZih0aGlzLm5lZWRzUmVzZXQpcmV0dXJuIHRoaXMubmVlZHNSZXNldD0hMSxyLm9wYWNpdHk9XCJcIixyLnBvaW50ZXJFdmVudHM9S3UobnVsbD09ZT92b2lkIDA6ZS5wb2ludGVyRXZlbnRzKXx8XCJcIixyLnRyYW5zZm9ybT1vP28odGhpcy5sYXRlc3RWYWx1ZXMsXCJcIik6XCJub25lXCIscjtjb25zdCBpPXRoaXMuZ2V0TGVhZCgpO2lmKCF0aGlzLnByb2plY3Rpb25EZWx0YXx8IXRoaXMubGF5b3V0fHwhaS50YXJnZXQpe2NvbnN0IHQ9e307cmV0dXJuIHRoaXMub3B0aW9ucy5sYXlvdXRJZCYmKHQub3BhY2l0eT12b2lkIDAhPT10aGlzLmxhdGVzdFZhbHVlcy5vcGFjaXR5P3RoaXMubGF0ZXN0VmFsdWVzLm9wYWNpdHk6MSx0LnBvaW50ZXJFdmVudHM9S3UobnVsbD09ZT92b2lkIDA6ZS5wb2ludGVyRXZlbnRzKXx8XCJcIiksdGhpcy5oYXNQcm9qZWN0ZWQmJiFWYyh0aGlzLmxhdGVzdFZhbHVlcykmJih0LnRyYW5zZm9ybT1vP28oe30sXCJcIik6XCJub25lXCIsdGhpcy5oYXNQcm9qZWN0ZWQ9ITEpLHR9Y29uc3Qgcz1pLmFuaW1hdGlvblZhbHVlc3x8aS5sYXRlc3RWYWx1ZXM7dGhpcy5hcHBseVRyYW5zZm9ybXNUb1RhcmdldCgpLHIudHJhbnNmb3JtPWZ1bmN0aW9uKGUsdCxuKXtsZXQgcj1cIlwiO2NvbnN0IG89ZS54LnRyYW5zbGF0ZS90LngsaT1lLnkudHJhbnNsYXRlL3QueSxzPShudWxsPT1uP3ZvaWQgMDpuLnopfHwwO2lmKChvfHxpfHxzKSYmKHI9YHRyYW5zbGF0ZTNkKCR7b31weCwgJHtpfXB4LCAke3N9cHgpIGApLDE9PT10LngmJjE9PT10Lnl8fChyKz1gc2NhbGUoJHsxL3QueH0sICR7MS90Lnl9KSBgKSxuKXtjb25zdHt0cmFuc2Zvcm1QZXJzcGVjdGl2ZTplLHJvdGF0ZTp0LHJvdGF0ZVg6byxyb3RhdGVZOmksc2tld1g6cyxza2V3WTphfT1uO2UmJihyPWBwZXJzcGVjdGl2ZSgke2V9cHgpICR7cn1gKSx0JiYocis9YHJvdGF0ZSgke3R9ZGVnKSBgKSxvJiYocis9YHJvdGF0ZVgoJHtvfWRlZykgYCksaSYmKHIrPWByb3RhdGVZKCR7aX1kZWcpIGApLHMmJihyKz1gc2tld1goJHtzfWRlZykgYCksYSYmKHIrPWBza2V3WSgke2F9ZGVnKSBgKX1jb25zdCBhPWUueC5zY2FsZSp0LngsbD1lLnkuc2NhbGUqdC55O3JldHVybiAxPT09YSYmMT09PWx8fChyKz1gc2NhbGUoJHthfSwgJHtsfSlgKSxyfHxcIm5vbmVcIn0odGhpcy5wcm9qZWN0aW9uRGVsdGFXaXRoVHJhbnNmb3JtLHRoaXMudHJlZVNjYWxlLHMpLG8mJihyLnRyYW5zZm9ybT1vKHMsci50cmFuc2Zvcm0pKTtjb25zdHt4OmEseTpsfT10aGlzLnByb2plY3Rpb25EZWx0YTtyLnRyYW5zZm9ybU9yaWdpbj1gJHsxMDAqYS5vcmlnaW59JSAkezEwMCpsLm9yaWdpbn0lIDBgLGkuYW5pbWF0aW9uVmFsdWVzP3Iub3BhY2l0eT1pPT09dGhpcz9udWxsIT09KG49bnVsbCE9PSh0PXMub3BhY2l0eSkmJnZvaWQgMCE9PXQ/dDp0aGlzLmxhdGVzdFZhbHVlcy5vcGFjaXR5KSYmdm9pZCAwIT09bj9uOjE6dGhpcy5wcmVzZXJ2ZU9wYWNpdHk/dGhpcy5sYXRlc3RWYWx1ZXMub3BhY2l0eTpzLm9wYWNpdHlFeGl0OnIub3BhY2l0eT1pPT09dGhpcz92b2lkIDAhPT1zLm9wYWNpdHk/cy5vcGFjaXR5OlwiXCI6dm9pZCAwIT09cy5vcGFjaXR5RXhpdD9zLm9wYWNpdHlFeGl0OjA7Zm9yKGNvbnN0IGUgaW4gaHUpe2lmKHZvaWQgMD09PXNbZV0pY29udGludWU7Y29uc3R7Y29ycmVjdDp0LGFwcGx5VG86bn09aHVbZV0sbz1cIm5vbmVcIj09PXIudHJhbnNmb3JtP3NbZV06dChzW2VdLGkpO2lmKG4pe2NvbnN0IGU9bi5sZW5ndGg7Zm9yKGxldCB0PTA7dDxlO3QrKylyW25bdF1dPW99ZWxzZSByW2VdPW99cmV0dXJuIHRoaXMub3B0aW9ucy5sYXlvdXRJZCYmKHIucG9pbnRlckV2ZW50cz1pPT09dGhpcz9LdShudWxsPT1lP3ZvaWQgMDplLnBvaW50ZXJFdmVudHMpfHxcIlwiOlwibm9uZVwiKSxyfWNsZWFyU25hcHNob3QoKXt0aGlzLnJlc3VtZUZyb209dGhpcy5zbmFwc2hvdD12b2lkIDB9cmVzZXRUcmVlKCl7dGhpcy5yb290Lm5vZGVzLmZvckVhY2goKGU9Pnt2YXIgdDtyZXR1cm4gbnVsbD09PSh0PWUuY3VycmVudEFuaW1hdGlvbil8fHZvaWQgMD09PXQ/dm9pZCAwOnQuc3RvcCgpfSkpLHRoaXMucm9vdC5ub2Rlcy5mb3JFYWNoKGlkKSx0aGlzLnJvb3Quc2hhcmVkTm9kZXMuY2xlYXIoKX19fWZ1bmN0aW9uIGVkKGUpe2UudXBkYXRlTGF5b3V0KCl9ZnVuY3Rpb24gdGQoZSl7dmFyIHQ7Y29uc3Qgbj0obnVsbD09PSh0PWUucmVzdW1lRnJvbSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuc25hcHNob3QpfHxlLnNuYXBzaG90O2lmKGUuaXNMZWFkKCkmJmUubGF5b3V0JiZuJiZlLmhhc0xpc3RlbmVycyhcImRpZFVwZGF0ZVwiKSl7Y29uc3R7bGF5b3V0Qm94OnQsbWVhc3VyZWRCb3g6cn09ZS5sYXlvdXQse2FuaW1hdGlvblR5cGU6b309ZS5vcHRpb25zLGk9bi5zb3VyY2UhPT1lLmxheW91dC5zb3VyY2U7XCJzaXplXCI9PT1vP0xjKChlPT57Y29uc3Qgcj1pP24ubWVhc3VyZWRCb3hbZV06bi5sYXlvdXRCb3hbZV0sbz1fYyhyKTtyLm1pbj10W2VdLm1pbixyLm1heD1yLm1pbitvfSkpOnhkKG8sbi5sYXlvdXRCb3gsdCkmJkxjKChyPT57Y29uc3Qgbz1pP24ubWVhc3VyZWRCb3hbcl06bi5sYXlvdXRCb3hbcl0scz1fYyh0W3JdKTtvLm1heD1vLm1pbitzLGUucmVsYXRpdmVUYXJnZXQmJiFlLmN1cnJlbnRBbmltYXRpb24mJihlLmlzUHJvamVjdGlvbkRpcnR5PSEwLGUucmVsYXRpdmVUYXJnZXRbcl0ubWF4PWUucmVsYXRpdmVUYXJnZXRbcl0ubWluK3MpfSkpO2NvbnN0IHM9SWMoKTtDYyhzLHQsbi5sYXlvdXRCb3gpO2NvbnN0IGE9SWMoKTtpP0NjKGEsZS5hcHBseVRyYW5zZm9ybShyLCEwKSxuLm1lYXN1cmVkQm94KTpDYyhhLHQsbi5sYXlvdXRCb3gpO2NvbnN0IGw9IUR1KHMpO2xldCBjPSExO2lmKCFlLnJlc3VtZUZyb20pe2NvbnN0IHI9ZS5nZXRDbG9zZXN0UHJvamVjdGluZ1BhcmVudCgpO2lmKHImJiFyLnJlc3VtZUZyb20pe2NvbnN0e3NuYXBzaG90Om8sbGF5b3V0Oml9PXI7aWYobyYmaSl7Y29uc3Qgcz1EYygpO09jKHMsbi5sYXlvdXRCb3gsby5sYXlvdXRCb3gpO2NvbnN0IGE9RGMoKTtPYyhhLHQsaS5sYXlvdXRCb3gpLHp1KHMsYSl8fChjPSEwKSxyLm9wdGlvbnMubGF5b3V0Um9vdCYmKGUucmVsYXRpdmVUYXJnZXQ9YSxlLnJlbGF0aXZlVGFyZ2V0T3JpZ2luPXMsZS5yZWxhdGl2ZVBhcmVudD1yKX19fWUubm90aWZ5TGlzdGVuZXJzKFwiZGlkVXBkYXRlXCIse2xheW91dDp0LHNuYXBzaG90Om4sZGVsdGE6YSxsYXlvdXREZWx0YTpzLGhhc0xheW91dENoYW5nZWQ6bCxoYXNSZWxhdGl2ZVRhcmdldENoYW5nZWQ6Y30pfWVsc2UgaWYoZS5pc0xlYWQoKSl7Y29uc3R7b25FeGl0Q29tcGxldGU6dH09ZS5vcHRpb25zO3QmJnQoKX1lLm9wdGlvbnMudHJhbnNpdGlvbj12b2lkIDB9ZnVuY3Rpb24gbmQoZSl7cXUmJkh1LnRvdGFsTm9kZXMrKyxlLnBhcmVudCYmKGUuaXNQcm9qZWN0aW5nKCl8fChlLmlzUHJvamVjdGlvbkRpcnR5PWUucGFyZW50LmlzUHJvamVjdGlvbkRpcnR5KSxlLmlzU2hhcmVkUHJvamVjdGlvbkRpcnR5fHwoZS5pc1NoYXJlZFByb2plY3Rpb25EaXJ0eT1Cb29sZWFuKGUuaXNQcm9qZWN0aW9uRGlydHl8fGUucGFyZW50LmlzUHJvamVjdGlvbkRpcnR5fHxlLnBhcmVudC5pc1NoYXJlZFByb2plY3Rpb25EaXJ0eSkpLGUuaXNUcmFuc2Zvcm1EaXJ0eXx8KGUuaXNUcmFuc2Zvcm1EaXJ0eT1lLnBhcmVudC5pc1RyYW5zZm9ybURpcnR5KSl9ZnVuY3Rpb24gcmQoZSl7ZS5pc1Byb2plY3Rpb25EaXJ0eT1lLmlzU2hhcmVkUHJvamVjdGlvbkRpcnR5PWUuaXNUcmFuc2Zvcm1EaXJ0eT0hMX1mdW5jdGlvbiBvZChlKXtlLmNsZWFyU25hcHNob3QoKX1mdW5jdGlvbiBpZChlKXtlLmNsZWFyTWVhc3VyZW1lbnRzKCl9ZnVuY3Rpb24gc2QoZSl7ZS5pc0xheW91dERpcnR5PSExfWZ1bmN0aW9uIGFkKGUpe2NvbnN0e3Zpc3VhbEVsZW1lbnQ6dH09ZS5vcHRpb25zO3QmJnQuZ2V0UHJvcHMoKS5vbkJlZm9yZUxheW91dE1lYXN1cmUmJnQubm90aWZ5KFwiQmVmb3JlTGF5b3V0TWVhc3VyZVwiKSxlLnJlc2V0VHJhbnNmb3JtKCl9ZnVuY3Rpb24gbGQoZSl7ZS5maW5pc2hBbmltYXRpb24oKSxlLnRhcmdldERlbHRhPWUucmVsYXRpdmVUYXJnZXQ9ZS50YXJnZXQ9dm9pZCAwLGUuaXNQcm9qZWN0aW9uRGlydHk9ITB9ZnVuY3Rpb24gY2QoZSl7ZS5yZXNvbHZlVGFyZ2V0RGVsdGEoKX1mdW5jdGlvbiB1ZChlKXtlLmNhbGNQcm9qZWN0aW9uKCl9ZnVuY3Rpb24gZGQoZSl7ZS5yZXNldFNrZXdBbmRSb3RhdGlvbigpfWZ1bmN0aW9uIGZkKGUpe2UucmVtb3ZlTGVhZFNuYXBzaG90KCl9ZnVuY3Rpb24gaGQoZSx0LG4pe2UudHJhbnNsYXRlPUphKHQudHJhbnNsYXRlLDAsbiksZS5zY2FsZT1KYSh0LnNjYWxlLDEsbiksZS5vcmlnaW49dC5vcmlnaW4sZS5vcmlnaW5Qb2ludD10Lm9yaWdpblBvaW50fWZ1bmN0aW9uIHBkKGUsdCxuLHIpe2UubWluPUphKHQubWluLG4ubWluLHIpLGUubWF4PUphKHQubWF4LG4ubWF4LHIpfWZ1bmN0aW9uIG1kKGUpe3JldHVybiBlLmFuaW1hdGlvblZhbHVlcyYmdm9pZCAwIT09ZS5hbmltYXRpb25WYWx1ZXMub3BhY2l0eUV4aXR9Y29uc3QgZ2Q9e2R1cmF0aW9uOi40NSxlYXNlOlsuNCwwLC4xLDFdfSx2ZD1lPT5cInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZuYXZpZ2F0b3IudXNlckFnZW50JiZuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoZSkseWQ9dmQoXCJhcHBsZXdlYmtpdC9cIikmJiF2ZChcImNocm9tZS9cIik/TWF0aC5yb3VuZDpWaTtmdW5jdGlvbiBiZChlKXtlLm1pbj15ZChlLm1pbiksZS5tYXg9eWQoZS5tYXgpfWZ1bmN0aW9uIHhkKGUsdCxuKXtyZXR1cm5cInBvc2l0aW9uXCI9PT1lfHxcInByZXNlcnZlLWFzcGVjdFwiPT09ZSYmKHI9QnUodCksbz1CdShuKSwhKE1hdGguYWJzKHItbyk8PS4yKSk7dmFyIHIsb31mdW5jdGlvbiB3ZChlKXt2YXIgdDtyZXR1cm4gZSE9PWUucm9vdCYmKG51bGw9PT0odD1lLnNjcm9sbCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQud2FzUm9vdCl9Y29uc3QgRWQ9UXUoe2F0dGFjaFJlc2l6ZUxpc3RlbmVyOihlLHQpPT5vYyhlLFwicmVzaXplXCIsdCksbWVhc3VyZVNjcm9sbDooKT0+KHt4OmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0fHxkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQseTpkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wfHxkb2N1bWVudC5ib2R5LnNjcm9sbFRvcH0pLGNoZWNrSXNTY3JvbGxSb290OigpPT4hMH0pLFNkPXtjdXJyZW50OnZvaWQgMH0sX2Q9UXUoe21lYXN1cmVTY3JvbGw6ZT0+KHt4OmUuc2Nyb2xsTGVmdCx5OmUuc2Nyb2xsVG9wfSksZGVmYXVsdFBhcmVudDooKT0+e2lmKCFTZC5jdXJyZW50KXtjb25zdCBlPW5ldyBFZCh7fSk7ZS5tb3VudCh3aW5kb3cpLGUuc2V0T3B0aW9ucyh7bGF5b3V0U2Nyb2xsOiEwfSksU2QuY3VycmVudD1lfXJldHVybiBTZC5jdXJyZW50fSxyZXNldFRyYW5zZm9ybTooZSx0KT0+e2Uuc3R5bGUudHJhbnNmb3JtPXZvaWQgMCE9PXQ/dDpcIm5vbmVcIn0sY2hlY2tJc1Njcm9sbFJvb3Q6ZT0+Qm9vbGVhbihcImZpeGVkXCI9PT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlKS5wb3NpdGlvbil9KSxrZD17cGFuOntGZWF0dXJlOmNsYXNzIGV4dGVuZHMgWmx7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMucmVtb3ZlUG9pbnRlckRvd25MaXN0ZW5lcj1WaX1vblBvaW50ZXJEb3duKGUpe3RoaXMuc2Vzc2lvbj1uZXcgYWMoZSx0aGlzLmNyZWF0ZVBhbkhhbmRsZXJzKCkse3RyYW5zZm9ybVBhZ2VQb2ludDp0aGlzLm5vZGUuZ2V0VHJhbnNmb3JtUGFnZVBvaW50KCksY29udGV4dFdpbmRvdzpldSh0aGlzLm5vZGUpfSl9Y3JlYXRlUGFuSGFuZGxlcnMoKXtjb25zdHtvblBhblNlc3Npb25TdGFydDplLG9uUGFuU3RhcnQ6dCxvblBhbjpuLG9uUGFuRW5kOnJ9PXRoaXMubm9kZS5nZXRQcm9wcygpO3JldHVybntvblNlc3Npb25TdGFydDpvdShlKSxvblN0YXJ0Om91KHQpLG9uTW92ZTpuLG9uRW5kOihlLHQpPT57ZGVsZXRlIHRoaXMuc2Vzc2lvbixyJiYkaS5wb3N0UmVuZGVyKCgoKT0+cihlLHQpKSl9fX1tb3VudCgpe3RoaXMucmVtb3ZlUG9pbnRlckRvd25MaXN0ZW5lcj1pYyh0aGlzLm5vZGUuY3VycmVudCxcInBvaW50ZXJkb3duXCIsKGU9PnRoaXMub25Qb2ludGVyRG93bihlKSkpfXVwZGF0ZSgpe3RoaXMuc2Vzc2lvbiYmdGhpcy5zZXNzaW9uLnVwZGF0ZUhhbmRsZXJzKHRoaXMuY3JlYXRlUGFuSGFuZGxlcnMoKSl9dW5tb3VudCgpe3RoaXMucmVtb3ZlUG9pbnRlckRvd25MaXN0ZW5lcigpLHRoaXMuc2Vzc2lvbiYmdGhpcy5zZXNzaW9uLmVuZCgpfX19LGRyYWc6e0ZlYXR1cmU6Y2xhc3MgZXh0ZW5kcyBabHtjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLnJlbW92ZUdyb3VwQ29udHJvbHM9VmksdGhpcy5yZW1vdmVMaXN0ZW5lcnM9VmksdGhpcy5jb250cm9scz1uZXcgbnUoZSl9bW91bnQoKXtjb25zdHtkcmFnQ29udHJvbHM6ZX09dGhpcy5ub2RlLmdldFByb3BzKCk7ZSYmKHRoaXMucmVtb3ZlR3JvdXBDb250cm9scz1lLnN1YnNjcmliZSh0aGlzLmNvbnRyb2xzKSksdGhpcy5yZW1vdmVMaXN0ZW5lcnM9dGhpcy5jb250cm9scy5hZGRMaXN0ZW5lcnMoKXx8Vml9dW5tb3VudCgpe3RoaXMucmVtb3ZlR3JvdXBDb250cm9scygpLHRoaXMucmVtb3ZlTGlzdGVuZXJzKCl9fSxQcm9qZWN0aW9uTm9kZTpfZCxNZWFzdXJlTGF5b3V0OnZ1fX07ZnVuY3Rpb24gQ2QoZSx0KXtjb25zdCBuPXQ/XCJwb2ludGVyZW50ZXJcIjpcInBvaW50ZXJsZWF2ZVwiLHI9dD9cIm9uSG92ZXJTdGFydFwiOlwib25Ib3ZlckVuZFwiO3JldHVybiBpYyhlLmN1cnJlbnQsbiwoKG4sbyk9PntpZihcInRvdWNoXCI9PT1uLnBvaW50ZXJUeXBlfHx5YygpKXJldHVybjtjb25zdCBpPWUuZ2V0UHJvcHMoKTtlLmFuaW1hdGlvblN0YXRlJiZpLndoaWxlSG92ZXImJmUuYW5pbWF0aW9uU3RhdGUuc2V0QWN0aXZlKFwid2hpbGVIb3ZlclwiLHQpO2NvbnN0IHM9aVtyXTtzJiYkaS5wb3N0UmVuZGVyKCgoKT0+cyhuLG8pKSl9KSx7cGFzc2l2ZTohZS5nZXRQcm9wcygpW3JdfSl9Y29uc3QgUGQ9KGUsdCk9PiEhdCYmKGU9PT10fHxQZChlLHQucGFyZW50RWxlbWVudCkpO2Z1bmN0aW9uIFRkKGUsdCl7aWYoIXQpcmV0dXJuO2NvbnN0IG49bmV3IFBvaW50ZXJFdmVudChcInBvaW50ZXJcIitlKTt0KG4sbmMobikpfWNvbnN0IE9kPW5ldyBXZWFrTWFwLFJkPW5ldyBXZWFrTWFwLE5kPWU9Pntjb25zdCB0PU9kLmdldChlLnRhcmdldCk7dCYmdChlKX0sQWQ9ZT0+e2UuZm9yRWFjaChOZCl9O2NvbnN0IGpkPXtzb21lOjAsYWxsOjF9LE1kPXtpblZpZXc6e0ZlYXR1cmU6Y2xhc3MgZXh0ZW5kcyBabHtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5oYXNFbnRlcmVkVmlldz0hMSx0aGlzLmlzSW5WaWV3PSExfXN0YXJ0T2JzZXJ2ZXIoKXt0aGlzLnVubW91bnQoKTtjb25zdHt2aWV3cG9ydDplPXt9fT10aGlzLm5vZGUuZ2V0UHJvcHMoKSx7cm9vdDp0LG1hcmdpbjpuLGFtb3VudDpyPVwic29tZVwiLG9uY2U6b309ZSxpPXtyb290OnQ/dC5jdXJyZW50OnZvaWQgMCxyb290TWFyZ2luOm4sdGhyZXNob2xkOlwibnVtYmVyXCI9PXR5cGVvZiByP3I6amRbcl19O3JldHVybiBmdW5jdGlvbihlLHQsbil7Y29uc3Qgcj1mdW5jdGlvbih7cm9vdDplLC4uLnR9KXtjb25zdCBuPWV8fGRvY3VtZW50O1JkLmhhcyhuKXx8UmQuc2V0KG4se30pO2NvbnN0IHI9UmQuZ2V0KG4pLG89SlNPTi5zdHJpbmdpZnkodCk7cmV0dXJuIHJbb118fChyW29dPW5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihBZCx7cm9vdDplLC4uLnR9KSkscltvXX0odCk7cmV0dXJuIE9kLnNldChlLG4pLHIub2JzZXJ2ZShlKSwoKT0+e09kLmRlbGV0ZShlKSxyLnVub2JzZXJ2ZShlKX19KHRoaXMubm9kZS5jdXJyZW50LGksKGU9Pntjb25zdHtpc0ludGVyc2VjdGluZzp0fT1lO2lmKHRoaXMuaXNJblZpZXc9PT10KXJldHVybjtpZih0aGlzLmlzSW5WaWV3PXQsbyYmIXQmJnRoaXMuaGFzRW50ZXJlZFZpZXcpcmV0dXJuO3QmJih0aGlzLmhhc0VudGVyZWRWaWV3PSEwKSx0aGlzLm5vZGUuYW5pbWF0aW9uU3RhdGUmJnRoaXMubm9kZS5hbmltYXRpb25TdGF0ZS5zZXRBY3RpdmUoXCJ3aGlsZUluVmlld1wiLHQpO2NvbnN0e29uVmlld3BvcnRFbnRlcjpuLG9uVmlld3BvcnRMZWF2ZTpyfT10aGlzLm5vZGUuZ2V0UHJvcHMoKSxpPXQ/bjpyO2kmJmkoZSl9KSl9bW91bnQoKXt0aGlzLnN0YXJ0T2JzZXJ2ZXIoKX11cGRhdGUoKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIpcmV0dXJuO2NvbnN0e3Byb3BzOmUscHJldlByb3BzOnR9PXRoaXMubm9kZTtbXCJhbW91bnRcIixcIm1hcmdpblwiLFwicm9vdFwiXS5zb21lKGZ1bmN0aW9uKHt2aWV3cG9ydDplPXt9fSx7dmlld3BvcnQ6dD17fX09e30pe3JldHVybiBuPT5lW25dIT09dFtuXX0oZSx0KSkmJnRoaXMuc3RhcnRPYnNlcnZlcigpfXVubW91bnQoKXt9fX0sdGFwOntGZWF0dXJlOmNsYXNzIGV4dGVuZHMgWmx7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMucmVtb3ZlU3RhcnRMaXN0ZW5lcnM9VmksdGhpcy5yZW1vdmVFbmRMaXN0ZW5lcnM9VmksdGhpcy5yZW1vdmVBY2Nlc3NpYmxlTGlzdGVuZXJzPVZpLHRoaXMuc3RhcnRQb2ludGVyUHJlc3M9KGUsdCk9PntpZih0aGlzLmlzUHJlc3NpbmcpcmV0dXJuO3RoaXMucmVtb3ZlRW5kTGlzdGVuZXJzKCk7Y29uc3Qgbj10aGlzLm5vZGUuZ2V0UHJvcHMoKSxyPWljKHdpbmRvdyxcInBvaW50ZXJ1cFwiLCgoZSx0KT0+e2lmKCF0aGlzLmNoZWNrUHJlc3NFbmQoKSlyZXR1cm47Y29uc3R7b25UYXA6bixvblRhcENhbmNlbDpyLGdsb2JhbFRhcFRhcmdldDpvfT10aGlzLm5vZGUuZ2V0UHJvcHMoKSxpPW98fFBkKHRoaXMubm9kZS5jdXJyZW50LGUudGFyZ2V0KT9uOnI7aSYmJGkudXBkYXRlKCgoKT0+aShlLHQpKSl9KSx7cGFzc2l2ZTohKG4ub25UYXB8fG4ub25Qb2ludGVyVXApfSksbz1pYyh3aW5kb3csXCJwb2ludGVyY2FuY2VsXCIsKChlLHQpPT50aGlzLmNhbmNlbFByZXNzKGUsdCkpLHtwYXNzaXZlOiEobi5vblRhcENhbmNlbHx8bi5vblBvaW50ZXJDYW5jZWwpfSk7dGhpcy5yZW1vdmVFbmRMaXN0ZW5lcnM9R2EocixvKSx0aGlzLnN0YXJ0UHJlc3MoZSx0KX0sdGhpcy5zdGFydEFjY2Vzc2libGVQcmVzcz0oKT0+e2NvbnN0IGU9b2ModGhpcy5ub2RlLmN1cnJlbnQsXCJrZXlkb3duXCIsKGU9PntcIkVudGVyXCIhPT1lLmtleXx8dGhpcy5pc1ByZXNzaW5nfHwodGhpcy5yZW1vdmVFbmRMaXN0ZW5lcnMoKSx0aGlzLnJlbW92ZUVuZExpc3RlbmVycz1vYyh0aGlzLm5vZGUuY3VycmVudCxcImtleXVwXCIsKGU9PntcIkVudGVyXCI9PT1lLmtleSYmdGhpcy5jaGVja1ByZXNzRW5kKCkmJlRkKFwidXBcIiwoKGUsdCk9Pntjb25zdHtvblRhcDpufT10aGlzLm5vZGUuZ2V0UHJvcHMoKTtuJiYkaS5wb3N0UmVuZGVyKCgoKT0+bihlLHQpKSl9KSl9KSksVGQoXCJkb3duXCIsKChlLHQpPT57dGhpcy5zdGFydFByZXNzKGUsdCl9KSkpfSkpLHQ9b2ModGhpcy5ub2RlLmN1cnJlbnQsXCJibHVyXCIsKCgpPT57dGhpcy5pc1ByZXNzaW5nJiZUZChcImNhbmNlbFwiLCgoZSx0KT0+dGhpcy5jYW5jZWxQcmVzcyhlLHQpKSl9KSk7dGhpcy5yZW1vdmVBY2Nlc3NpYmxlTGlzdGVuZXJzPUdhKGUsdCl9fXN0YXJ0UHJlc3MoZSx0KXt0aGlzLmlzUHJlc3Npbmc9ITA7Y29uc3R7b25UYXBTdGFydDpuLHdoaWxlVGFwOnJ9PXRoaXMubm9kZS5nZXRQcm9wcygpO3ImJnRoaXMubm9kZS5hbmltYXRpb25TdGF0ZSYmdGhpcy5ub2RlLmFuaW1hdGlvblN0YXRlLnNldEFjdGl2ZShcIndoaWxlVGFwXCIsITApLG4mJiRpLnBvc3RSZW5kZXIoKCgpPT5uKGUsdCkpKX1jaGVja1ByZXNzRW5kKCl7cmV0dXJuIHRoaXMucmVtb3ZlRW5kTGlzdGVuZXJzKCksdGhpcy5pc1ByZXNzaW5nPSExLHRoaXMubm9kZS5nZXRQcm9wcygpLndoaWxlVGFwJiZ0aGlzLm5vZGUuYW5pbWF0aW9uU3RhdGUmJnRoaXMubm9kZS5hbmltYXRpb25TdGF0ZS5zZXRBY3RpdmUoXCJ3aGlsZVRhcFwiLCExKSwheWMoKX1jYW5jZWxQcmVzcyhlLHQpe2lmKCF0aGlzLmNoZWNrUHJlc3NFbmQoKSlyZXR1cm47Y29uc3R7b25UYXBDYW5jZWw6bn09dGhpcy5ub2RlLmdldFByb3BzKCk7biYmJGkucG9zdFJlbmRlcigoKCk9Pm4oZSx0KSkpfW1vdW50KCl7Y29uc3QgZT10aGlzLm5vZGUuZ2V0UHJvcHMoKSx0PWljKGUuZ2xvYmFsVGFwVGFyZ2V0P3dpbmRvdzp0aGlzLm5vZGUuY3VycmVudCxcInBvaW50ZXJkb3duXCIsdGhpcy5zdGFydFBvaW50ZXJQcmVzcyx7cGFzc2l2ZTohKGUub25UYXBTdGFydHx8ZS5vblBvaW50ZXJTdGFydCl9KSxuPW9jKHRoaXMubm9kZS5jdXJyZW50LFwiZm9jdXNcIix0aGlzLnN0YXJ0QWNjZXNzaWJsZVByZXNzKTt0aGlzLnJlbW92ZVN0YXJ0TGlzdGVuZXJzPUdhKHQsbil9dW5tb3VudCgpe3RoaXMucmVtb3ZlU3RhcnRMaXN0ZW5lcnMoKSx0aGlzLnJlbW92ZUVuZExpc3RlbmVycygpLHRoaXMucmVtb3ZlQWNjZXNzaWJsZUxpc3RlbmVycygpfX19LGZvY3VzOntGZWF0dXJlOmNsYXNzIGV4dGVuZHMgWmx7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuaXNBY3RpdmU9ITF9b25Gb2N1cygpe2xldCBlPSExO3RyeXtlPXRoaXMubm9kZS5jdXJyZW50Lm1hdGNoZXMoXCI6Zm9jdXMtdmlzaWJsZVwiKX1jYXRjaCh0KXtlPSEwfWUmJnRoaXMubm9kZS5hbmltYXRpb25TdGF0ZSYmKHRoaXMubm9kZS5hbmltYXRpb25TdGF0ZS5zZXRBY3RpdmUoXCJ3aGlsZUZvY3VzXCIsITApLHRoaXMuaXNBY3RpdmU9ITApfW9uQmx1cigpe3RoaXMuaXNBY3RpdmUmJnRoaXMubm9kZS5hbmltYXRpb25TdGF0ZSYmKHRoaXMubm9kZS5hbmltYXRpb25TdGF0ZS5zZXRBY3RpdmUoXCJ3aGlsZUZvY3VzXCIsITEpLHRoaXMuaXNBY3RpdmU9ITEpfW1vdW50KCl7dGhpcy51bm1vdW50PUdhKG9jKHRoaXMubm9kZS5jdXJyZW50LFwiZm9jdXNcIiwoKCk9PnRoaXMub25Gb2N1cygpKSksb2ModGhpcy5ub2RlLmN1cnJlbnQsXCJibHVyXCIsKCgpPT50aGlzLm9uQmx1cigpKSkpfXVubW91bnQoKXt9fX0saG92ZXI6e0ZlYXR1cmU6Y2xhc3MgZXh0ZW5kcyBabHttb3VudCgpe3RoaXMudW5tb3VudD1HYShDZCh0aGlzLm5vZGUsITApLENkKHRoaXMubm9kZSwhMSkpfXVubW91bnQoKXt9fX19LElkPXtsYXlvdXQ6e1Byb2plY3Rpb25Ob2RlOl9kLE1lYXN1cmVMYXlvdXQ6dnV9fSxEZD0oMCxvLmNyZWF0ZUNvbnRleHQpKHt0cmFuc2Zvcm1QYWdlUG9pbnQ6ZT0+ZSxpc1N0YXRpYzohMSxyZWR1Y2VkTW90aW9uOlwibmV2ZXJcIn0pLExkPSgwLG8uY3JlYXRlQ29udGV4dCkoe30pLEZkPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3csemQ9RmQ/by51c2VMYXlvdXRFZmZlY3Q6by51c2VFZmZlY3QsQmQ9KDAsby5jcmVhdGVDb250ZXh0KSh7c3RyaWN0OiExfSk7bGV0IFZkPSExO2Z1bmN0aW9uIFdkKGUsdCxuLHIsaSl7dmFyIHM7Y29uc3R7dmlzdWFsRWxlbWVudDphfT0oMCxvLnVzZUNvbnRleHQpKExkKSxsPSgwLG8udXNlQ29udGV4dCkoQmQpLGM9KDAsby51c2VDb250ZXh0KShzdSksdT0oMCxvLnVzZUNvbnRleHQpKERkKS5yZWR1Y2VkTW90aW9uLGQ9KDAsby51c2VSZWYpKCk7cj1yfHxsLnJlbmRlcmVyLCFkLmN1cnJlbnQmJnImJihkLmN1cnJlbnQ9cihlLHt2aXN1YWxTdGF0ZTp0LHBhcmVudDphLHByb3BzOm4scHJlc2VuY2VDb250ZXh0OmMsYmxvY2tJbml0aWFsQW5pbWF0aW9uOiEhYyYmITE9PT1jLmluaXRpYWwscmVkdWNlZE1vdGlvbkNvbmZpZzp1fSkpO2NvbnN0IGY9ZC5jdXJyZW50LGg9KDAsby51c2VDb250ZXh0KShsdSk7IWZ8fGYucHJvamVjdGlvbnx8IWl8fFwiaHRtbFwiIT09Zi50eXBlJiZcInN2Z1wiIT09Zi50eXBlfHxmdW5jdGlvbihlLHQsbixyKXtjb25zdHtsYXlvdXRJZDpvLGxheW91dDppLGRyYWc6cyxkcmFnQ29uc3RyYWludHM6YSxsYXlvdXRTY3JvbGw6bCxsYXlvdXRSb290OmN9PXQ7ZS5wcm9qZWN0aW9uPW5ldyBuKGUubGF0ZXN0VmFsdWVzLHRbXCJkYXRhLWZyYW1lci1wb3J0YWwtaWRcIl0/dm9pZCAwOiRkKGUucGFyZW50KSksZS5wcm9qZWN0aW9uLnNldE9wdGlvbnMoe2xheW91dElkOm8sbGF5b3V0OmksYWx3YXlzTWVhc3VyZUxheW91dDpCb29sZWFuKHMpfHxhJiZiYyhhKSx2aXN1YWxFbGVtZW50OmUsYW5pbWF0aW9uVHlwZTpcInN0cmluZ1wiPT10eXBlb2YgaT9pOlwiYm90aFwiLGluaXRpYWxQcm9tb3Rpb25Db25maWc6cixsYXlvdXRTY3JvbGw6bCxsYXlvdXRSb290OmN9KX0oZC5jdXJyZW50LG4saSxoKSwoMCxvLnVzZUluc2VydGlvbkVmZmVjdCkoKCgpPT57ZiYmZi51cGRhdGUobixjKX0pKTtjb25zdCBwPW5bRmxdLG09KDAsby51c2VSZWYpKEJvb2xlYW4ocCkmJiF3aW5kb3cuTW90aW9uSGFuZG9mZklzQ29tcGxldGUmJihudWxsPT09KHM9d2luZG93Lk1vdGlvbkhhc09wdGltaXNlZEFuaW1hdGlvbil8fHZvaWQgMD09PXM/dm9pZCAwOnMuY2FsbCh3aW5kb3cscCkpKTtyZXR1cm4gemQoKCgpPT57ZiYmKGYudXBkYXRlRmVhdHVyZXMoKSxwdS5yZW5kZXIoZi5yZW5kZXIpLG0uY3VycmVudCYmZi5hbmltYXRpb25TdGF0ZSYmZi5hbmltYXRpb25TdGF0ZS5hbmltYXRlQ2hhbmdlcygpKX0pKSwoMCxvLnVzZUVmZmVjdCkoKCgpPT57ZiYmKCFtLmN1cnJlbnQmJmYuYW5pbWF0aW9uU3RhdGUmJmYuYW5pbWF0aW9uU3RhdGUuYW5pbWF0ZUNoYW5nZXMoKSxtLmN1cnJlbnQ9ITEsVmR8fChWZD0hMCxxdWV1ZU1pY3JvdGFzayhVZCkpKX0pKSxmfWZ1bmN0aW9uIFVkKCl7d2luZG93Lk1vdGlvbkhhbmRvZmZJc0NvbXBsZXRlPSEwfWZ1bmN0aW9uICRkKGUpe2lmKGUpcmV0dXJuITEhPT1lLm9wdGlvbnMuYWxsb3dQcm9qZWN0aW9uP2UucHJvamVjdGlvbjokZChlLnBhcmVudCl9ZnVuY3Rpb24gS2QoZSx0LG4pe3JldHVybigwLG8udXNlQ2FsbGJhY2spKChyPT57ciYmZS5tb3VudCYmZS5tb3VudChyKSx0JiYocj90Lm1vdW50KHIpOnQudW5tb3VudCgpKSxuJiYoXCJmdW5jdGlvblwiPT10eXBlb2Ygbj9uKHIpOmJjKG4pJiYobi5jdXJyZW50PXIpKX0pLFt0XSl9ZnVuY3Rpb24gSGQoZSl7cmV0dXJuIHdpKGUuYW5pbWF0ZSl8fE9pLnNvbWUoKHQ9Pl9pKGVbdF0pKSl9ZnVuY3Rpb24gcWQoZSl7cmV0dXJuIEJvb2xlYW4oSGQoZSl8fGUudmFyaWFudHMpfWZ1bmN0aW9uIFlkKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpP2Uuam9pbihcIiBcIik6ZX1jb25zdCBHZD17YW5pbWF0aW9uOltcImFuaW1hdGVcIixcInZhcmlhbnRzXCIsXCJ3aGlsZUhvdmVyXCIsXCJ3aGlsZVRhcFwiLFwiZXhpdFwiLFwid2hpbGVJblZpZXdcIixcIndoaWxlRm9jdXNcIixcIndoaWxlRHJhZ1wiXSxleGl0OltcImV4aXRcIl0sZHJhZzpbXCJkcmFnXCIsXCJkcmFnQ29udHJvbHNcIl0sZm9jdXM6W1wid2hpbGVGb2N1c1wiXSxob3ZlcjpbXCJ3aGlsZUhvdmVyXCIsXCJvbkhvdmVyU3RhcnRcIixcIm9uSG92ZXJFbmRcIl0sdGFwOltcIndoaWxlVGFwXCIsXCJvblRhcFwiLFwib25UYXBTdGFydFwiLFwib25UYXBDYW5jZWxcIl0scGFuOltcIm9uUGFuXCIsXCJvblBhblN0YXJ0XCIsXCJvblBhblNlc3Npb25TdGFydFwiLFwib25QYW5FbmRcIl0saW5WaWV3OltcIndoaWxlSW5WaWV3XCIsXCJvblZpZXdwb3J0RW50ZXJcIixcIm9uVmlld3BvcnRMZWF2ZVwiXSxsYXlvdXQ6W1wibGF5b3V0XCIsXCJsYXlvdXRJZFwiXX0sWGQ9e307Zm9yKGNvbnN0IGUgaW4gR2QpWGRbZV09e2lzRW5hYmxlZDp0PT5HZFtlXS5zb21lKChlPT4hIXRbZV0pKX07Y29uc3QgSmQ9U3ltYm9sLmZvcihcIm1vdGlvbkNvbXBvbmVudFN5bWJvbFwiKTtmdW5jdGlvbiBaZCh7cHJlbG9hZGVkRmVhdHVyZXM6ZSxjcmVhdGVWaXN1YWxFbGVtZW50OnQsdXNlUmVuZGVyOm4sdXNlVmlzdWFsU3RhdGU6cixDb21wb25lbnQ6aX0pe2UmJmZ1bmN0aW9uKGUpe2Zvcihjb25zdCB0IGluIGUpWGRbdF09ey4uLlhkW3RdLC4uLmVbdF19fShlKTtjb25zdCBzPSgwLG8uZm9yd2FyZFJlZikoKGZ1bmN0aW9uKGUscyl7bGV0IGE7Y29uc3QgbD17Li4uKDAsby51c2VDb250ZXh0KShEZCksLi4uZSxsYXlvdXRJZDpRZChlKX0se2lzU3RhdGljOmN9PWwsdT1mdW5jdGlvbihlKXtjb25zdHtpbml0aWFsOnQsYW5pbWF0ZTpufT1mdW5jdGlvbihlLHQpe2lmKEhkKGUpKXtjb25zdHtpbml0aWFsOnQsYW5pbWF0ZTpufT1lO3JldHVybntpbml0aWFsOiExPT09dHx8X2kodCk/dDp2b2lkIDAsYW5pbWF0ZTpfaShuKT9uOnZvaWQgMH19cmV0dXJuITEhPT1lLmluaGVyaXQ/dDp7fX0oZSwoMCxvLnVzZUNvbnRleHQpKExkKSk7cmV0dXJuKDAsby51c2VNZW1vKSgoKCk9Pih7aW5pdGlhbDp0LGFuaW1hdGU6bn0pKSxbWWQodCksWWQobildKX0oZSksZD1yKGUsYyk7aWYoIWMmJkZkKXsoMCxvLnVzZUNvbnRleHQpKEJkKS5zdHJpY3Q7Y29uc3QgZT1mdW5jdGlvbihlKXtjb25zdHtkcmFnOnQsbGF5b3V0Om59PVhkO2lmKCF0JiYhbilyZXR1cm57fTtjb25zdCByPXsuLi50LC4uLm59O3JldHVybntNZWFzdXJlTGF5b3V0OihudWxsPT10P3ZvaWQgMDp0LmlzRW5hYmxlZChlKSl8fChudWxsPT1uP3ZvaWQgMDpuLmlzRW5hYmxlZChlKSk/ci5NZWFzdXJlTGF5b3V0OnZvaWQgMCxQcm9qZWN0aW9uTm9kZTpyLlByb2plY3Rpb25Ob2RlfX0obCk7YT1lLk1lYXN1cmVMYXlvdXQsdS52aXN1YWxFbGVtZW50PVdkKGksZCxsLHQsZS5Qcm9qZWN0aW9uTm9kZSl9cmV0dXJuKDAsaXUuanN4cykoTGQuUHJvdmlkZXIse3ZhbHVlOnUsY2hpbGRyZW46W2EmJnUudmlzdWFsRWxlbWVudD8oMCxpdS5qc3gpKGEse3Zpc3VhbEVsZW1lbnQ6dS52aXN1YWxFbGVtZW50LC4uLmx9KTpudWxsLG4oaSxlLEtkKGQsdS52aXN1YWxFbGVtZW50LHMpLGQsYyx1LnZpc3VhbEVsZW1lbnQpXX0pfSkpO3JldHVybiBzW0pkXT1pLHN9ZnVuY3Rpb24gUWQoe2xheW91dElkOmV9KXtjb25zdCB0PSgwLG8udXNlQ29udGV4dCkoYXUpLmlkO3JldHVybiB0JiZ2b2lkIDAhPT1lP3QrXCItXCIrZTplfWNvbnN0IGVmPVtcImFuaW1hdGVcIixcImNpcmNsZVwiLFwiZGVmc1wiLFwiZGVzY1wiLFwiZWxsaXBzZVwiLFwiZ1wiLFwiaW1hZ2VcIixcImxpbmVcIixcImZpbHRlclwiLFwibWFya2VyXCIsXCJtYXNrXCIsXCJtZXRhZGF0YVwiLFwicGF0aFwiLFwicGF0dGVyblwiLFwicG9seWdvblwiLFwicG9seWxpbmVcIixcInJlY3RcIixcInN0b3BcIixcInN3aXRjaFwiLFwic3ltYm9sXCIsXCJzdmdcIixcInRleHRcIixcInRzcGFuXCIsXCJ1c2VcIixcInZpZXdcIl07ZnVuY3Rpb24gdGYoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJiFlLmluY2x1ZGVzKFwiLVwiKSYmISEoZWYuaW5kZXhPZihlKT4tMXx8L1tBLVpdL3UudGVzdChlKSl9ZnVuY3Rpb24gbmYoZSx7c3R5bGU6dCx2YXJzOm59LHIsbyl7T2JqZWN0LmFzc2lnbihlLnN0eWxlLHQsbyYmby5nZXRQcm9qZWN0aW9uU3R5bGVzKHIpKTtmb3IoY29uc3QgdCBpbiBuKWUuc3R5bGUuc2V0UHJvcGVydHkodCxuW3RdKX1jb25zdCByZj1uZXcgU2V0KFtcImJhc2VGcmVxdWVuY3lcIixcImRpZmZ1c2VDb25zdGFudFwiLFwia2VybmVsTWF0cml4XCIsXCJrZXJuZWxVbml0TGVuZ3RoXCIsXCJrZXlTcGxpbmVzXCIsXCJrZXlUaW1lc1wiLFwibGltaXRpbmdDb25lQW5nbGVcIixcIm1hcmtlckhlaWdodFwiLFwibWFya2VyV2lkdGhcIixcIm51bU9jdGF2ZXNcIixcInRhcmdldFhcIixcInRhcmdldFlcIixcInN1cmZhY2VTY2FsZVwiLFwic3BlY3VsYXJDb25zdGFudFwiLFwic3BlY3VsYXJFeHBvbmVudFwiLFwic3RkRGV2aWF0aW9uXCIsXCJ0YWJsZVZhbHVlc1wiLFwidmlld0JveFwiLFwiZ3JhZGllbnRUcmFuc2Zvcm1cIixcInBhdGhMZW5ndGhcIixcInN0YXJ0T2Zmc2V0XCIsXCJ0ZXh0TGVuZ3RoXCIsXCJsZW5ndGhBZGp1c3RcIl0pO2Z1bmN0aW9uIG9mKGUsdCxuLHIpe25mKGUsdCx2b2lkIDAscik7Zm9yKGNvbnN0IG4gaW4gdC5hdHRycyllLnNldEF0dHJpYnV0ZShyZi5oYXMobik/bjpMbChuKSx0LmF0dHJzW25dKX1mdW5jdGlvbiBzZihlLHtsYXlvdXQ6dCxsYXlvdXRJZDpufSl7cmV0dXJuIE5pLmhhcyhlKXx8ZS5zdGFydHNXaXRoKFwib3JpZ2luXCIpfHwodHx8dm9pZCAwIT09bikmJighIWh1W2VdfHxcIm9wYWNpdHlcIj09PWUpfWZ1bmN0aW9uIGFmKGUsdCxuKXt2YXIgcjtjb25zdHtzdHlsZTpvfT1lLGk9e307Zm9yKGNvbnN0IHMgaW4gbykoV2wob1tzXSl8fHQuc3R5bGUmJldsKHQuc3R5bGVbc10pfHxzZihzLGUpfHx2b2lkIDAhPT0obnVsbD09PShyPW51bGw9PW4/dm9pZCAwOm4uZ2V0VmFsdWUocykpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmxpdmVTdHlsZSkpJiYoaVtzXT1vW3NdKTtyZXR1cm4gbiYmbyYmXCJzdHJpbmdcIj09dHlwZW9mIG8ud2lsbENoYW5nZSYmKG4uYXBwbHlXaWxsQ2hhbmdlPSExKSxpfWZ1bmN0aW9uIGxmKGUsdCxuKXtjb25zdCByPWFmKGUsdCxuKTtmb3IoY29uc3QgbiBpbiBlKShXbChlW25dKXx8V2wodFtuXSkpJiYoclstMSE9PVJpLmluZGV4T2Yobik/XCJhdHRyXCIrbi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStuLnN1YnN0cmluZygxKTpuXT1lW25dKTtyZXR1cm4gcn1mdW5jdGlvbiBjZihlKXtjb25zdCB0PSgwLG8udXNlUmVmKShudWxsKTtyZXR1cm4gbnVsbD09PXQuY3VycmVudCYmKHQuY3VycmVudD1lKCkpLHQuY3VycmVudH1jb25zdCB1Zj1lPT4odCxuKT0+e2NvbnN0IHI9KDAsby51c2VDb250ZXh0KShMZCksaT0oMCxvLnVzZUNvbnRleHQpKHN1KSxzPSgpPT5mdW5jdGlvbih7YXBwbHlXaWxsQ2hhbmdlOmU9ITEsc2NyYXBlTW90aW9uVmFsdWVzRnJvbVByb3BzOnQsY3JlYXRlUmVuZGVyU3RhdGU6bixvbk1vdW50OnJ9LG8saSxzLGEpe2NvbnN0IGw9e2xhdGVzdFZhbHVlczpoZihvLGkscywhYSYmZSx0KSxyZW5kZXJTdGF0ZTpuKCl9O3JldHVybiByJiYobC5tb3VudD1lPT5yKG8sZSxsKSksbH0oZSx0LHIsaSxuKTtyZXR1cm4gbj9zKCk6Y2Yocyl9O2Z1bmN0aW9uIGRmKGUsdCl7Y29uc3Qgbj1CbCh0KTtuJiZSbChlLG4pfWZ1bmN0aW9uIGZmKGUsdCxuKXtjb25zdCByPUFycmF5LmlzQXJyYXkodCk/dDpbdF07Zm9yKGxldCB0PTA7dDxyLmxlbmd0aDt0Kyspe2NvbnN0IG89Q2koZSxyW3RdKTtpZihvKXtjb25zdHt0cmFuc2l0aW9uRW5kOmUsdHJhbnNpdGlvbjp0LC4uLnJ9PW87bihyLGUpfX19ZnVuY3Rpb24gaGYoZSx0LG4scixvKXt2YXIgaTtjb25zdCBzPXt9LGE9W10sbD1yJiZ2b2lkIDA9PT0obnVsbD09PShpPWUuc3R5bGUpfHx2b2lkIDA9PT1pP3ZvaWQgMDppLndpbGxDaGFuZ2UpLGM9byhlLHt9KTtmb3IoY29uc3QgZSBpbiBjKXNbZV09S3UoY1tlXSk7bGV0e2luaXRpYWw6dSxhbmltYXRlOmR9PWU7Y29uc3QgZj1IZChlKSxoPXFkKGUpO3QmJmgmJiFmJiYhMSE9PWUuaW5oZXJpdCYmKHZvaWQgMD09PXUmJih1PXQuaW5pdGlhbCksdm9pZCAwPT09ZCYmKGQ9dC5hbmltYXRlKSk7bGV0IHA9ISFuJiYhMT09PW4uaW5pdGlhbDtwPXB8fCExPT09dTtjb25zdCBtPXA/ZDp1O3JldHVybiBtJiZcImJvb2xlYW5cIiE9dHlwZW9mIG0mJiF3aShtKSYmZmYoZSxtLCgoZSx0KT0+e2Zvcihjb25zdCB0IGluIGUpe2xldCBuPWVbdF07QXJyYXkuaXNBcnJheShuKSYmKG49bltwP24ubGVuZ3RoLTE6MF0pLG51bGwhPT1uJiYoc1t0XT1uKX1mb3IoY29uc3QgZSBpbiB0KXNbZV09dFtlXX0pKSxsJiYoZCYmITEhPT11JiYhd2koZCkmJmZmKGUsZCwoZT0+e2Zvcihjb25zdCB0IGluIGUpZGYoYSx0KX0pKSxhLmxlbmd0aCYmKHMud2lsbENoYW5nZT1hLmpvaW4oXCIsXCIpKSksc31jb25zdCBwZj0oKT0+KHtzdHlsZTp7fSx0cmFuc2Zvcm06e30sdHJhbnNmb3JtT3JpZ2luOnt9LHZhcnM6e319KSxtZj0oKT0+KHsuLi5wZigpLGF0dHJzOnt9fSksZ2Y9KGUsdCk9PnQmJlwibnVtYmVyXCI9PXR5cGVvZiBlP3QudHJhbnNmb3JtKGUpOmUsdmY9e3g6XCJ0cmFuc2xhdGVYXCIseTpcInRyYW5zbGF0ZVlcIix6OlwidHJhbnNsYXRlWlwiLHRyYW5zZm9ybVBlcnNwZWN0aXZlOlwicGVyc3BlY3RpdmVcIn0seWY9UmkubGVuZ3RoO2Z1bmN0aW9uIGJmKGUsdCxuKXtjb25zdHtzdHlsZTpyLHZhcnM6byx0cmFuc2Zvcm1PcmlnaW46aX09ZTtsZXQgcz0hMSxhPSExO2Zvcihjb25zdCBlIGluIHQpe2NvbnN0IG49dFtlXTtpZihOaS5oYXMoZSkpcz0hMDtlbHNlIGlmKFFpKGUpKW9bZV09bjtlbHNle2NvbnN0IHQ9Z2YobixzYVtlXSk7ZS5zdGFydHNXaXRoKFwib3JpZ2luXCIpPyhhPSEwLGlbZV09dCk6cltlXT10fX1pZih0LnRyYW5zZm9ybXx8KHN8fG4/ci50cmFuc2Zvcm09ZnVuY3Rpb24oZSx0LG4pe2xldCByPVwiXCIsbz0hMDtmb3IobGV0IGk9MDtpPHlmO2krKyl7Y29uc3Qgcz1SaVtpXSxhPWVbc107aWYodm9pZCAwPT09YSljb250aW51ZTtsZXQgbD0hMDtpZihsPVwibnVtYmVyXCI9PXR5cGVvZiBhP2E9PT0ocy5zdGFydHNXaXRoKFwic2NhbGVcIik/MTowKTowPT09cGFyc2VGbG9hdChhKSwhbHx8bil7Y29uc3QgZT1nZihhLHNhW3NdKTtsfHwobz0hMSxyKz1gJHt2ZltzXXx8c30oJHtlfSkgYCksbiYmKHRbc109ZSl9fXJldHVybiByPXIudHJpbSgpLG4/cj1uKHQsbz9cIlwiOnIpOm8mJihyPVwibm9uZVwiKSxyfSh0LGUudHJhbnNmb3JtLG4pOnIudHJhbnNmb3JtJiYoci50cmFuc2Zvcm09XCJub25lXCIpKSxhKXtjb25zdHtvcmlnaW5YOmU9XCI1MCVcIixvcmlnaW5ZOnQ9XCI1MCVcIixvcmlnaW5aOm49MH09aTtyLnRyYW5zZm9ybU9yaWdpbj1gJHtlfSAke3R9ICR7bn1gfX1mdW5jdGlvbiB4ZihlLHQsbil7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/ZTp2cy50cmFuc2Zvcm0odCtuKmUpfWNvbnN0IHdmPXtvZmZzZXQ6XCJzdHJva2UtZGFzaG9mZnNldFwiLGFycmF5Olwic3Ryb2tlLWRhc2hhcnJheVwifSxFZj17b2Zmc2V0Olwic3Ryb2tlRGFzaG9mZnNldFwiLGFycmF5Olwic3Ryb2tlRGFzaGFycmF5XCJ9O2Z1bmN0aW9uIFNmKGUse2F0dHJYOnQsYXR0clk6bixhdHRyU2NhbGU6cixvcmlnaW5YOm8sb3JpZ2luWTppLHBhdGhMZW5ndGg6cyxwYXRoU3BhY2luZzphPTEscGF0aE9mZnNldDpsPTAsLi4uY30sdSxkKXtpZihiZihlLGMsZCksdSlyZXR1cm4gdm9pZChlLnN0eWxlLnZpZXdCb3gmJihlLmF0dHJzLnZpZXdCb3g9ZS5zdHlsZS52aWV3Qm94KSk7ZS5hdHRycz1lLnN0eWxlLGUuc3R5bGU9e307Y29uc3R7YXR0cnM6ZixzdHlsZTpoLGRpbWVuc2lvbnM6cH09ZTtmLnRyYW5zZm9ybSYmKHAmJihoLnRyYW5zZm9ybT1mLnRyYW5zZm9ybSksZGVsZXRlIGYudHJhbnNmb3JtKSxwJiYodm9pZCAwIT09b3x8dm9pZCAwIT09aXx8aC50cmFuc2Zvcm0pJiYoaC50cmFuc2Zvcm1PcmlnaW49ZnVuY3Rpb24oZSx0LG4pe3JldHVybmAke3hmKHQsZS54LGUud2lkdGgpfSAke3hmKG4sZS55LGUuaGVpZ2h0KX1gfShwLHZvaWQgMCE9PW8/bzouNSx2b2lkIDAhPT1pP2k6LjUpKSx2b2lkIDAhPT10JiYoZi54PXQpLHZvaWQgMCE9PW4mJihmLnk9biksdm9pZCAwIT09ciYmKGYuc2NhbGU9ciksdm9pZCAwIT09cyYmZnVuY3Rpb24oZSx0LG49MSxyPTAsbz0hMCl7ZS5wYXRoTGVuZ3RoPTE7Y29uc3QgaT1vP3dmOkVmO2VbaS5vZmZzZXRdPXZzLnRyYW5zZm9ybSgtcik7Y29uc3Qgcz12cy50cmFuc2Zvcm0odCksYT12cy50cmFuc2Zvcm0obik7ZVtpLmFycmF5XT1gJHtzfSAke2F9YH0oZixzLGEsbCwhMSl9Y29uc3QgX2Y9ZT0+XCJzdHJpbmdcIj09dHlwZW9mIGUmJlwic3ZnXCI9PT1lLnRvTG93ZXJDYXNlKCksa2Y9e3VzZVZpc3VhbFN0YXRlOnVmKHtzY3JhcGVNb3Rpb25WYWx1ZXNGcm9tUHJvcHM6bGYsY3JlYXRlUmVuZGVyU3RhdGU6bWYsb25Nb3VudDooZSx0LHtyZW5kZXJTdGF0ZTpuLGxhdGVzdFZhbHVlczpyfSk9PnskaS5yZWFkKCgoKT0+e3RyeXtuLmRpbWVuc2lvbnM9XCJmdW5jdGlvblwiPT10eXBlb2YgdC5nZXRCQm94P3QuZ2V0QkJveCgpOnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCl9Y2F0Y2goZSl7bi5kaW1lbnNpb25zPXt4OjAseTowLHdpZHRoOjAsaGVpZ2h0OjB9fX0pKSwkaS5yZW5kZXIoKCgpPT57U2YobixyLF9mKHQudGFnTmFtZSksZS50cmFuc2Zvcm1UZW1wbGF0ZSksb2YodCxuKX0pKX19KX0sQ2Y9e3VzZVZpc3VhbFN0YXRlOnVmKHthcHBseVdpbGxDaGFuZ2U6ITAsc2NyYXBlTW90aW9uVmFsdWVzRnJvbVByb3BzOmFmLGNyZWF0ZVJlbmRlclN0YXRlOnBmfSl9O2Z1bmN0aW9uIFBmKGUsdCxuKXtmb3IoY29uc3QgciBpbiB0KVdsKHRbcl0pfHxzZihyLG4pfHwoZVtyXT10W3JdKX1mdW5jdGlvbiBUZihlLHQpe2NvbnN0IG49e30scj1mdW5jdGlvbihlLHQpe2NvbnN0IG49e307cmV0dXJuIFBmKG4sZS5zdHlsZXx8e30sZSksT2JqZWN0LmFzc2lnbihuLGZ1bmN0aW9uKHt0cmFuc2Zvcm1UZW1wbGF0ZTplfSx0KXtyZXR1cm4oMCxvLnVzZU1lbW8pKCgoKT0+e2NvbnN0IG49cGYoKTtyZXR1cm4gYmYobix0LGUpLE9iamVjdC5hc3NpZ24oe30sbi52YXJzLG4uc3R5bGUpfSksW3RdKX0oZSx0KSksbn0oZSx0KTtyZXR1cm4gZS5kcmFnJiYhMSE9PWUuZHJhZ0xpc3RlbmVyJiYobi5kcmFnZ2FibGU9ITEsci51c2VyU2VsZWN0PXIuV2Via2l0VXNlclNlbGVjdD1yLldlYmtpdFRvdWNoQ2FsbG91dD1cIm5vbmVcIixyLnRvdWNoQWN0aW9uPSEwPT09ZS5kcmFnP1wibm9uZVwiOlwicGFuLVwiKyhcInhcIj09PWUuZHJhZz9cInlcIjpcInhcIikpLHZvaWQgMD09PWUudGFiSW5kZXgmJihlLm9uVGFwfHxlLm9uVGFwU3RhcnR8fGUud2hpbGVUYXApJiYobi50YWJJbmRleD0wKSxuLnN0eWxlPXIsbn1jb25zdCBPZj1uZXcgU2V0KFtcImFuaW1hdGVcIixcImV4aXRcIixcInZhcmlhbnRzXCIsXCJpbml0aWFsXCIsXCJzdHlsZVwiLFwidmFsdWVzXCIsXCJ2YXJpYW50c1wiLFwidHJhbnNpdGlvblwiLFwidHJhbnNmb3JtVGVtcGxhdGVcIixcImN1c3RvbVwiLFwiaW5oZXJpdFwiLFwib25CZWZvcmVMYXlvdXRNZWFzdXJlXCIsXCJvbkFuaW1hdGlvblN0YXJ0XCIsXCJvbkFuaW1hdGlvbkNvbXBsZXRlXCIsXCJvblVwZGF0ZVwiLFwib25EcmFnU3RhcnRcIixcIm9uRHJhZ1wiLFwib25EcmFnRW5kXCIsXCJvbk1lYXN1cmVEcmFnQ29uc3RyYWludHNcIixcIm9uRGlyZWN0aW9uTG9ja1wiLFwib25EcmFnVHJhbnNpdGlvbkVuZFwiLFwiX2RyYWdYXCIsXCJfZHJhZ1lcIixcIm9uSG92ZXJTdGFydFwiLFwib25Ib3ZlckVuZFwiLFwib25WaWV3cG9ydEVudGVyXCIsXCJvblZpZXdwb3J0TGVhdmVcIixcImdsb2JhbFRhcFRhcmdldFwiLFwiaWdub3JlU3RyaWN0XCIsXCJ2aWV3cG9ydFwiXSk7ZnVuY3Rpb24gUmYoZSl7cmV0dXJuIGUuc3RhcnRzV2l0aChcIndoaWxlXCIpfHxlLnN0YXJ0c1dpdGgoXCJkcmFnXCIpJiZcImRyYWdnYWJsZVwiIT09ZXx8ZS5zdGFydHNXaXRoKFwibGF5b3V0XCIpfHxlLnN0YXJ0c1dpdGgoXCJvblRhcFwiKXx8ZS5zdGFydHNXaXRoKFwib25QYW5cIil8fGUuc3RhcnRzV2l0aChcIm9uTGF5b3V0XCIpfHxPZi5oYXMoZSl9bGV0IE5mPWU9PiFSZihlKTt0cnl7KEFmPW4oMzE2KS5BKSYmKE5mPWU9PmUuc3RhcnRzV2l0aChcIm9uXCIpPyFSZihlKTpBZihlKSl9Y2F0Y2goZSl7fXZhciBBZjtmdW5jdGlvbiBqZihlLHQsbixyKXtjb25zdCBpPSgwLG8udXNlTWVtbykoKCgpPT57Y29uc3Qgbj1tZigpO3JldHVybiBTZihuLHQsX2YociksZS50cmFuc2Zvcm1UZW1wbGF0ZSksey4uLm4uYXR0cnMsc3R5bGU6ey4uLm4uc3R5bGV9fX0pLFt0XSk7aWYoZS5zdHlsZSl7Y29uc3QgdD17fTtQZih0LGUuc3R5bGUsZSksaS5zdHlsZT17Li4udCwuLi5pLnN0eWxlfX1yZXR1cm4gaX1mdW5jdGlvbiBNZihlPSExKXtyZXR1cm4odCxuLHIse2xhdGVzdFZhbHVlczppfSxzKT0+e2NvbnN0IGE9KHRmKHQpP2pmOlRmKShuLGkscyx0KSxsPWZ1bmN0aW9uKGUsdCxuKXtjb25zdCByPXt9O2Zvcihjb25zdCBvIGluIGUpXCJ2YWx1ZXNcIj09PW8mJlwib2JqZWN0XCI9PXR5cGVvZiBlLnZhbHVlc3x8KE5mKG8pfHwhMD09PW4mJlJmKG8pfHwhdCYmIVJmKG8pfHxlLmRyYWdnYWJsZSYmby5zdGFydHNXaXRoKFwib25EcmFnXCIpKSYmKHJbb109ZVtvXSk7cmV0dXJuIHJ9KG4sXCJzdHJpbmdcIj09dHlwZW9mIHQsZSksYz10IT09by5GcmFnbWVudD97Li4ubCwuLi5hLHJlZjpyfTp7fSx7Y2hpbGRyZW46dX09bixkPSgwLG8udXNlTWVtbykoKCgpPT5XbCh1KT91LmdldCgpOnUpLFt1XSk7cmV0dXJuKDAsby5jcmVhdGVFbGVtZW50KSh0LHsuLi5jLGNoaWxkcmVuOmR9KX19ZnVuY3Rpb24gSWYoZSx0KXtyZXR1cm4gZnVuY3Rpb24obix7Zm9yd2FyZE1vdGlvblByb3BzOnJ9PXtmb3J3YXJkTW90aW9uUHJvcHM6ITF9KXtyZXR1cm4gWmQoey4uLnRmKG4pP2tmOkNmLHByZWxvYWRlZEZlYXR1cmVzOmUsdXNlUmVuZGVyOk1mKHIpLGNyZWF0ZVZpc3VhbEVsZW1lbnQ6dCxDb21wb25lbnQ6bn0pfX1jb25zdCBEZj17Y3VycmVudDpudWxsfSxMZj17Y3VycmVudDohMX0sRmY9bmV3IFdlYWtNYXAsemY9Wy4uLk9zLFVzLGVhXSxCZj1bXCJBbmltYXRpb25TdGFydFwiLFwiQW5pbWF0aW9uQ29tcGxldGVcIixcIlVwZGF0ZVwiLFwiQmVmb3JlTGF5b3V0TWVhc3VyZVwiLFwiTGF5b3V0TWVhc3VyZVwiLFwiTGF5b3V0QW5pbWF0aW9uU3RhcnRcIixcIkxheW91dEFuaW1hdGlvbkNvbXBsZXRlXCJdLFZmPU9pLmxlbmd0aDtjbGFzcyBXZntzY3JhcGVNb3Rpb25WYWx1ZXNGcm9tUHJvcHMoZSx0LG4pe3JldHVybnt9fWNvbnN0cnVjdG9yKHtwYXJlbnQ6ZSxwcm9wczp0LHByZXNlbmNlQ29udGV4dDpuLHJlZHVjZWRNb3Rpb25Db25maWc6cixibG9ja0luaXRpYWxBbmltYXRpb246byx2aXN1YWxTdGF0ZTppfSxzPXt9KXt0aGlzLmFwcGx5V2lsbENoYW5nZT0hMSx0aGlzLmN1cnJlbnQ9bnVsbCx0aGlzLmNoaWxkcmVuPW5ldyBTZXQsdGhpcy5pc1ZhcmlhbnROb2RlPSExLHRoaXMuaXNDb250cm9sbGluZ1ZhcmlhbnRzPSExLHRoaXMuc2hvdWxkUmVkdWNlTW90aW9uPW51bGwsdGhpcy52YWx1ZXM9bmV3IE1hcCx0aGlzLktleWZyYW1lUmVzb2x2ZXI9RHMsdGhpcy5mZWF0dXJlcz17fSx0aGlzLnZhbHVlU3Vic2NyaXB0aW9ucz1uZXcgTWFwLHRoaXMucHJldk1vdGlvblZhbHVlcz17fSx0aGlzLmV2ZW50cz17fSx0aGlzLnByb3BFdmVudFN1YnNjcmlwdGlvbnM9e30sdGhpcy5ub3RpZnlVcGRhdGU9KCk9PnRoaXMubm90aWZ5KFwiVXBkYXRlXCIsdGhpcy5sYXRlc3RWYWx1ZXMpLHRoaXMucmVuZGVyPSgpPT57dGhpcy5pc1JlbmRlclNjaGVkdWxlZD0hMSx0aGlzLmN1cnJlbnQmJih0aGlzLnRyaWdnZXJCdWlsZCgpLHRoaXMucmVuZGVySW5zdGFuY2UodGhpcy5jdXJyZW50LHRoaXMucmVuZGVyU3RhdGUsdGhpcy5wcm9wcy5zdHlsZSx0aGlzLnByb2plY3Rpb24pKX0sdGhpcy5pc1JlbmRlclNjaGVkdWxlZD0hMSx0aGlzLnNjaGVkdWxlUmVuZGVyPSgpPT57dGhpcy5pc1JlbmRlclNjaGVkdWxlZHx8KHRoaXMuaXNSZW5kZXJTY2hlZHVsZWQ9ITAsJGkucmVuZGVyKHRoaXMucmVuZGVyLCExLCEwKSl9O2NvbnN0e2xhdGVzdFZhbHVlczphLHJlbmRlclN0YXRlOmx9PWk7dGhpcy5sYXRlc3RWYWx1ZXM9YSx0aGlzLmJhc2VUYXJnZXQ9ey4uLmF9LHRoaXMuaW5pdGlhbFZhbHVlcz10LmluaXRpYWw/ey4uLmF9Ont9LHRoaXMucmVuZGVyU3RhdGU9bCx0aGlzLnBhcmVudD1lLHRoaXMucHJvcHM9dCx0aGlzLnByZXNlbmNlQ29udGV4dD1uLHRoaXMuZGVwdGg9ZT9lLmRlcHRoKzE6MCx0aGlzLnJlZHVjZWRNb3Rpb25Db25maWc9cix0aGlzLm9wdGlvbnM9cyx0aGlzLmJsb2NrSW5pdGlhbEFuaW1hdGlvbj1Cb29sZWFuKG8pLHRoaXMuaXNDb250cm9sbGluZ1ZhcmlhbnRzPUhkKHQpLHRoaXMuaXNWYXJpYW50Tm9kZT1xZCh0KSx0aGlzLmlzVmFyaWFudE5vZGUmJih0aGlzLnZhcmlhbnRDaGlsZHJlbj1uZXcgU2V0KSx0aGlzLm1hbnVhbGx5QW5pbWF0ZU9uTW91bnQ9Qm9vbGVhbihlJiZlLmN1cnJlbnQpO2NvbnN0e3dpbGxDaGFuZ2U6YywuLi51fT10aGlzLnNjcmFwZU1vdGlvblZhbHVlc0Zyb21Qcm9wcyh0LHt9LHRoaXMpO2Zvcihjb25zdCBlIGluIHUpe2NvbnN0IHQ9dVtlXTt2b2lkIDAhPT1hW2VdJiZXbCh0KSYmdC5zZXQoYVtlXSwhMSl9fW1vdW50KGUpe3RoaXMuY3VycmVudD1lLEZmLnNldChlLHRoaXMpLHRoaXMucHJvamVjdGlvbiYmIXRoaXMucHJvamVjdGlvbi5pbnN0YW5jZSYmdGhpcy5wcm9qZWN0aW9uLm1vdW50KGUpLHRoaXMucGFyZW50JiZ0aGlzLmlzVmFyaWFudE5vZGUmJiF0aGlzLmlzQ29udHJvbGxpbmdWYXJpYW50cyYmKHRoaXMucmVtb3ZlRnJvbVZhcmlhbnRUcmVlPXRoaXMucGFyZW50LmFkZFZhcmlhbnRDaGlsZCh0aGlzKSksdGhpcy52YWx1ZXMuZm9yRWFjaCgoKGUsdCk9PnRoaXMuYmluZFRvTW90aW9uVmFsdWUodCxlKSkpLExmLmN1cnJlbnR8fGZ1bmN0aW9uKCl7aWYoTGYuY3VycmVudD0hMCxGZClpZih3aW5kb3cubWF0Y2hNZWRpYSl7Y29uc3QgZT13aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLXJlZHVjZWQtbW90aW9uKVwiKSx0PSgpPT5EZi5jdXJyZW50PWUubWF0Y2hlcztlLmFkZExpc3RlbmVyKHQpLHQoKX1lbHNlIERmLmN1cnJlbnQ9ITF9KCksdGhpcy5zaG91bGRSZWR1Y2VNb3Rpb249XCJuZXZlclwiIT09dGhpcy5yZWR1Y2VkTW90aW9uQ29uZmlnJiYoXCJhbHdheXNcIj09PXRoaXMucmVkdWNlZE1vdGlvbkNvbmZpZ3x8RGYuY3VycmVudCksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LmNoaWxkcmVuLmFkZCh0aGlzKSx0aGlzLnVwZGF0ZSh0aGlzLnByb3BzLHRoaXMucHJlc2VuY2VDb250ZXh0KX11bm1vdW50KCl7RmYuZGVsZXRlKHRoaXMuY3VycmVudCksdGhpcy5wcm9qZWN0aW9uJiZ0aGlzLnByb2plY3Rpb24udW5tb3VudCgpLEtpKHRoaXMubm90aWZ5VXBkYXRlKSxLaSh0aGlzLnJlbmRlciksdGhpcy52YWx1ZVN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoZT0+ZSgpKSksdGhpcy52YWx1ZVN1YnNjcmlwdGlvbnMuY2xlYXIoKSx0aGlzLnJlbW92ZUZyb21WYXJpYW50VHJlZSYmdGhpcy5yZW1vdmVGcm9tVmFyaWFudFRyZWUoKSx0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQuY2hpbGRyZW4uZGVsZXRlKHRoaXMpO2Zvcihjb25zdCBlIGluIHRoaXMuZXZlbnRzKXRoaXMuZXZlbnRzW2VdLmNsZWFyKCk7Zm9yKGNvbnN0IGUgaW4gdGhpcy5mZWF0dXJlcyl7Y29uc3QgdD10aGlzLmZlYXR1cmVzW2VdO3QmJih0LnVubW91bnQoKSx0LmlzTW91bnRlZD0hMSl9dGhpcy5jdXJyZW50PW51bGx9YmluZFRvTW90aW9uVmFsdWUoZSx0KXt0aGlzLnZhbHVlU3Vic2NyaXB0aW9ucy5oYXMoZSkmJnRoaXMudmFsdWVTdWJzY3JpcHRpb25zLmdldChlKSgpO2NvbnN0IG49TmkuaGFzKGUpLHI9dC5vbihcImNoYW5nZVwiLCh0PT57dGhpcy5sYXRlc3RWYWx1ZXNbZV09dCx0aGlzLnByb3BzLm9uVXBkYXRlJiYkaS5wcmVSZW5kZXIodGhpcy5ub3RpZnlVcGRhdGUpLG4mJnRoaXMucHJvamVjdGlvbiYmKHRoaXMucHJvamVjdGlvbi5pc1RyYW5zZm9ybURpcnR5PSEwKX0pKSxvPXQub24oXCJyZW5kZXJSZXF1ZXN0XCIsdGhpcy5zY2hlZHVsZVJlbmRlcik7bGV0IGk7d2luZG93Lk1vdGlvbkNoZWNrQXBwZWFyU3luYyYmKGk9d2luZG93Lk1vdGlvbkNoZWNrQXBwZWFyU3luYyh0aGlzLGUsdCkpLHRoaXMudmFsdWVTdWJzY3JpcHRpb25zLnNldChlLCgoKT0+e3IoKSxvKCksaSYmaSgpLHQub3duZXImJnQuc3RvcCgpfSkpfXNvcnROb2RlUG9zaXRpb24oZSl7cmV0dXJuIHRoaXMuY3VycmVudCYmdGhpcy5zb3J0SW5zdGFuY2VOb2RlUG9zaXRpb24mJnRoaXMudHlwZT09PWUudHlwZT90aGlzLnNvcnRJbnN0YW5jZU5vZGVQb3NpdGlvbih0aGlzLmN1cnJlbnQsZS5jdXJyZW50KTowfXVwZGF0ZUZlYXR1cmVzKCl7bGV0IGU9XCJhbmltYXRpb25cIjtmb3IoZSBpbiBYZCl7Y29uc3QgdD1YZFtlXTtpZighdCljb250aW51ZTtjb25zdHtpc0VuYWJsZWQ6bixGZWF0dXJlOnJ9PXQ7aWYoIXRoaXMuZmVhdHVyZXNbZV0mJnImJm4odGhpcy5wcm9wcykmJih0aGlzLmZlYXR1cmVzW2VdPW5ldyByKHRoaXMpKSx0aGlzLmZlYXR1cmVzW2VdKXtjb25zdCB0PXRoaXMuZmVhdHVyZXNbZV07dC5pc01vdW50ZWQ/dC51cGRhdGUoKToodC5tb3VudCgpLHQuaXNNb3VudGVkPSEwKX19fXRyaWdnZXJCdWlsZCgpe3RoaXMuYnVpbGQodGhpcy5yZW5kZXJTdGF0ZSx0aGlzLmxhdGVzdFZhbHVlcyx0aGlzLnByb3BzKX1tZWFzdXJlVmlld3BvcnRCb3goKXtyZXR1cm4gdGhpcy5jdXJyZW50P3RoaXMubWVhc3VyZUluc3RhbmNlVmlld3BvcnRCb3godGhpcy5jdXJyZW50LHRoaXMucHJvcHMpOkRjKCl9Z2V0U3RhdGljVmFsdWUoZSl7cmV0dXJuIHRoaXMubGF0ZXN0VmFsdWVzW2VdfXNldFN0YXRpY1ZhbHVlKGUsdCl7dGhpcy5sYXRlc3RWYWx1ZXNbZV09dH11cGRhdGUoZSx0KXsoZS50cmFuc2Zvcm1UZW1wbGF0ZXx8dGhpcy5wcm9wcy50cmFuc2Zvcm1UZW1wbGF0ZSkmJnRoaXMuc2NoZWR1bGVSZW5kZXIoKSx0aGlzLnByZXZQcm9wcz10aGlzLnByb3BzLHRoaXMucHJvcHM9ZSx0aGlzLnByZXZQcmVzZW5jZUNvbnRleHQ9dGhpcy5wcmVzZW5jZUNvbnRleHQsdGhpcy5wcmVzZW5jZUNvbnRleHQ9dDtmb3IobGV0IHQ9MDt0PEJmLmxlbmd0aDt0Kyspe2NvbnN0IG49QmZbdF07dGhpcy5wcm9wRXZlbnRTdWJzY3JpcHRpb25zW25dJiYodGhpcy5wcm9wRXZlbnRTdWJzY3JpcHRpb25zW25dKCksZGVsZXRlIHRoaXMucHJvcEV2ZW50U3Vic2NyaXB0aW9uc1tuXSk7Y29uc3Qgcj1lW1wib25cIituXTtyJiYodGhpcy5wcm9wRXZlbnRTdWJzY3JpcHRpb25zW25dPXRoaXMub24obixyKSl9dGhpcy5wcmV2TW90aW9uVmFsdWVzPWZ1bmN0aW9uKGUsdCxuKXtmb3IoY29uc3QgciBpbiB0KXtjb25zdCBvPXRbcl0saT1uW3JdO2lmKFdsKG8pKWUuYWRkVmFsdWUocixvKTtlbHNlIGlmKFdsKGkpKWUuYWRkVmFsdWUocixJbChvLHtvd25lcjplfSkpO2Vsc2UgaWYoaSE9PW8paWYoZS5oYXNWYWx1ZShyKSl7Y29uc3QgdD1lLmdldFZhbHVlKHIpOyEwPT09dC5saXZlU3R5bGU/dC5qdW1wKG8pOnQuaGFzQW5pbWF0ZWR8fHQuc2V0KG8pfWVsc2V7Y29uc3QgdD1lLmdldFN0YXRpY1ZhbHVlKHIpO2UuYWRkVmFsdWUocixJbCh2b2lkIDAhPT10P3Q6byx7b3duZXI6ZX0pKX19Zm9yKGNvbnN0IHIgaW4gbil2b2lkIDA9PT10W3JdJiZlLnJlbW92ZVZhbHVlKHIpO3JldHVybiB0fSh0aGlzLHRoaXMuc2NyYXBlTW90aW9uVmFsdWVzRnJvbVByb3BzKGUsdGhpcy5wcmV2UHJvcHMsdGhpcyksdGhpcy5wcmV2TW90aW9uVmFsdWVzKSx0aGlzLmhhbmRsZUNoaWxkTW90aW9uVmFsdWUmJnRoaXMuaGFuZGxlQ2hpbGRNb3Rpb25WYWx1ZSgpfWdldFByb3BzKCl7cmV0dXJuIHRoaXMucHJvcHN9Z2V0VmFyaWFudChlKXtyZXR1cm4gdGhpcy5wcm9wcy52YXJpYW50cz90aGlzLnByb3BzLnZhcmlhbnRzW2VdOnZvaWQgMH1nZXREZWZhdWx0VHJhbnNpdGlvbigpe3JldHVybiB0aGlzLnByb3BzLnRyYW5zaXRpb259Z2V0VHJhbnNmb3JtUGFnZVBvaW50KCl7cmV0dXJuIHRoaXMucHJvcHMudHJhbnNmb3JtUGFnZVBvaW50fWdldENsb3Nlc3RWYXJpYW50Tm9kZSgpe3JldHVybiB0aGlzLmlzVmFyaWFudE5vZGU/dGhpczp0aGlzLnBhcmVudD90aGlzLnBhcmVudC5nZXRDbG9zZXN0VmFyaWFudE5vZGUoKTp2b2lkIDB9Z2V0VmFyaWFudENvbnRleHQoZT0hMSl7aWYoZSlyZXR1cm4gdGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQuZ2V0VmFyaWFudENvbnRleHQoKTp2b2lkIDA7aWYoIXRoaXMuaXNDb250cm9sbGluZ1ZhcmlhbnRzKXtjb25zdCBlPXRoaXMucGFyZW50JiZ0aGlzLnBhcmVudC5nZXRWYXJpYW50Q29udGV4dCgpfHx7fTtyZXR1cm4gdm9pZCAwIT09dGhpcy5wcm9wcy5pbml0aWFsJiYoZS5pbml0aWFsPXRoaXMucHJvcHMuaW5pdGlhbCksZX1jb25zdCB0PXt9O2ZvcihsZXQgZT0wO2U8VmY7ZSsrKXtjb25zdCBuPU9pW2VdLHI9dGhpcy5wcm9wc1tuXTsoX2kocil8fCExPT09cikmJih0W25dPXIpfXJldHVybiB0fWFkZFZhcmlhbnRDaGlsZChlKXtjb25zdCB0PXRoaXMuZ2V0Q2xvc2VzdFZhcmlhbnROb2RlKCk7aWYodClyZXR1cm4gdC52YXJpYW50Q2hpbGRyZW4mJnQudmFyaWFudENoaWxkcmVuLmFkZChlKSwoKT0+dC52YXJpYW50Q2hpbGRyZW4uZGVsZXRlKGUpfWFkZFZhbHVlKGUsdCl7Y29uc3Qgbj10aGlzLnZhbHVlcy5nZXQoZSk7dCE9PW4mJihuJiZ0aGlzLnJlbW92ZVZhbHVlKGUpLHRoaXMuYmluZFRvTW90aW9uVmFsdWUoZSx0KSx0aGlzLnZhbHVlcy5zZXQoZSx0KSx0aGlzLmxhdGVzdFZhbHVlc1tlXT10LmdldCgpKX1yZW1vdmVWYWx1ZShlKXt0aGlzLnZhbHVlcy5kZWxldGUoZSk7Y29uc3QgdD10aGlzLnZhbHVlU3Vic2NyaXB0aW9ucy5nZXQoZSk7dCYmKHQoKSx0aGlzLnZhbHVlU3Vic2NyaXB0aW9ucy5kZWxldGUoZSkpLGRlbGV0ZSB0aGlzLmxhdGVzdFZhbHVlc1tlXSx0aGlzLnJlbW92ZVZhbHVlRnJvbVJlbmRlclN0YXRlKGUsdGhpcy5yZW5kZXJTdGF0ZSl9aGFzVmFsdWUoZSl7cmV0dXJuIHRoaXMudmFsdWVzLmhhcyhlKX1nZXRWYWx1ZShlLHQpe2lmKHRoaXMucHJvcHMudmFsdWVzJiZ0aGlzLnByb3BzLnZhbHVlc1tlXSlyZXR1cm4gdGhpcy5wcm9wcy52YWx1ZXNbZV07bGV0IG49dGhpcy52YWx1ZXMuZ2V0KGUpO3JldHVybiB2b2lkIDA9PT1uJiZ2b2lkIDAhPT10JiYobj1JbChudWxsPT09dD92b2lkIDA6dCx7b3duZXI6dGhpc30pLHRoaXMuYWRkVmFsdWUoZSxuKSksbn1yZWFkVmFsdWUoZSx0KXt2YXIgbjtsZXQgcj12b2lkIDA9PT10aGlzLmxhdGVzdFZhbHVlc1tlXSYmdGhpcy5jdXJyZW50P251bGwhPT0obj10aGlzLmdldEJhc2VUYXJnZXRGcm9tUHJvcHModGhpcy5wcm9wcyxlKSkmJnZvaWQgMCE9PW4/bjp0aGlzLnJlYWRWYWx1ZUZyb21JbnN0YW5jZSh0aGlzLmN1cnJlbnQsZSx0aGlzLm9wdGlvbnMpOnRoaXMubGF0ZXN0VmFsdWVzW2VdO3JldHVybiBudWxsIT1yJiYoXCJzdHJpbmdcIj09dHlwZW9mIHImJihKaShyKXx8WWkocikpP3I9cGFyc2VGbG9hdChyKTohKGU9PnpmLmZpbmQoVHMoZSkpKShyKSYmZWEudGVzdCh0KSYmKHI9Y2EoZSx0KSksdGhpcy5zZXRCYXNlVGFyZ2V0KGUsV2wocik/ci5nZXQoKTpyKSksV2wocik/ci5nZXQoKTpyfXNldEJhc2VUYXJnZXQoZSx0KXt0aGlzLmJhc2VUYXJnZXRbZV09dH1nZXRCYXNlVGFyZ2V0KGUpe3ZhciB0O2NvbnN0e2luaXRpYWw6bn09dGhpcy5wcm9wcztsZXQgcjtpZihcInN0cmluZ1wiPT10eXBlb2Ygbnx8XCJvYmplY3RcIj09dHlwZW9mIG4pe2NvbnN0IG89Q2kodGhpcy5wcm9wcyxuLG51bGw9PT0odD10aGlzLnByZXNlbmNlQ29udGV4dCl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuY3VzdG9tKTtvJiYocj1vW2VdKX1pZihuJiZ2b2lkIDAhPT1yKXJldHVybiByO2NvbnN0IG89dGhpcy5nZXRCYXNlVGFyZ2V0RnJvbVByb3BzKHRoaXMucHJvcHMsZSk7cmV0dXJuIHZvaWQgMD09PW98fFdsKG8pP3ZvaWQgMCE9PXRoaXMuaW5pdGlhbFZhbHVlc1tlXSYmdm9pZCAwPT09cj92b2lkIDA6dGhpcy5iYXNlVGFyZ2V0W2VdOm99b24oZSx0KXtyZXR1cm4gdGhpcy5ldmVudHNbZV18fCh0aGlzLmV2ZW50c1tlXT1uZXcgQWwpLHRoaXMuZXZlbnRzW2VdLmFkZCh0KX1ub3RpZnkoZSwuLi50KXt0aGlzLmV2ZW50c1tlXSYmdGhpcy5ldmVudHNbZV0ubm90aWZ5KC4uLnQpfX1jbGFzcyBVZiBleHRlbmRzIFdme2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLktleWZyYW1lUmVzb2x2ZXI9ZGF9c29ydEluc3RhbmNlTm9kZVBvc2l0aW9uKGUsdCl7cmV0dXJuIDImZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0KT8xOi0xfWdldEJhc2VUYXJnZXRGcm9tUHJvcHMoZSx0KXtyZXR1cm4gZS5zdHlsZT9lLnN0eWxlW3RdOnZvaWQgMH1yZW1vdmVWYWx1ZUZyb21SZW5kZXJTdGF0ZShlLHt2YXJzOnQsc3R5bGU6bn0pe2RlbGV0ZSB0W2VdLGRlbGV0ZSBuW2VdfX1jbGFzcyAkZiBleHRlbmRzIFVme2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLnR5cGU9XCJodG1sXCIsdGhpcy5hcHBseVdpbGxDaGFuZ2U9ITAsdGhpcy5yZW5kZXJJbnN0YW5jZT1uZn1yZWFkVmFsdWVGcm9tSW5zdGFuY2UoZSx0KXtpZihOaS5oYXModCkpe2NvbnN0IGU9bGEodCk7cmV0dXJuIGUmJmUuZGVmYXVsdHx8MH17Y29uc3Qgcj0obj1lLHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKG4pKSxvPShRaSh0KT9yLmdldFByb3BlcnR5VmFsdWUodCk6clt0XSl8fDA7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG8/by50cmltKCk6b312YXIgbn1tZWFzdXJlSW5zdGFuY2VWaWV3cG9ydEJveChlLHt0cmFuc2Zvcm1QYWdlUG9pbnQ6dH0pe3JldHVybiBRYyhlLHQpfWJ1aWxkKGUsdCxuKXtiZihlLHQsbi50cmFuc2Zvcm1UZW1wbGF0ZSl9c2NyYXBlTW90aW9uVmFsdWVzRnJvbVByb3BzKGUsdCxuKXtyZXR1cm4gYWYoZSx0LG4pfWhhbmRsZUNoaWxkTW90aW9uVmFsdWUoKXt0aGlzLmNoaWxkU3Vic2NyaXB0aW9uJiYodGhpcy5jaGlsZFN1YnNjcmlwdGlvbigpLGRlbGV0ZSB0aGlzLmNoaWxkU3Vic2NyaXB0aW9uKTtjb25zdHtjaGlsZHJlbjplfT10aGlzLnByb3BzO1dsKGUpJiYodGhpcy5jaGlsZFN1YnNjcmlwdGlvbj1lLm9uKFwiY2hhbmdlXCIsKGU9Pnt0aGlzLmN1cnJlbnQmJih0aGlzLmN1cnJlbnQudGV4dENvbnRlbnQ9YCR7ZX1gKX0pKSl9fWNsYXNzIEtmIGV4dGVuZHMgVWZ7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMudHlwZT1cInN2Z1wiLHRoaXMuaXNTVkdUYWc9ITEsdGhpcy5tZWFzdXJlSW5zdGFuY2VWaWV3cG9ydEJveD1EY31nZXRCYXNlVGFyZ2V0RnJvbVByb3BzKGUsdCl7cmV0dXJuIGVbdF19cmVhZFZhbHVlRnJvbUluc3RhbmNlKGUsdCl7aWYoTmkuaGFzKHQpKXtjb25zdCBlPWxhKHQpO3JldHVybiBlJiZlLmRlZmF1bHR8fDB9cmV0dXJuIHQ9cmYuaGFzKHQpP3Q6TGwodCksZS5nZXRBdHRyaWJ1dGUodCl9c2NyYXBlTW90aW9uVmFsdWVzRnJvbVByb3BzKGUsdCxuKXtyZXR1cm4gbGYoZSx0LG4pfWJ1aWxkKGUsdCxuKXtTZihlLHQsdGhpcy5pc1NWR1RhZyxuLnRyYW5zZm9ybVRlbXBsYXRlKX1yZW5kZXJJbnN0YW5jZShlLHQsbixyKXtvZihlLHQsMCxyKX1tb3VudChlKXt0aGlzLmlzU1ZHVGFnPV9mKGUudGFnTmFtZSksc3VwZXIubW91bnQoZSl9fWNvbnN0IEhmPXhpKElmKHsuLi5lYywuLi5NZCwuLi5rZCwuLi5JZH0sKChlLHQpPT50ZihlKT9uZXcgS2YodCk6bmV3ICRmKHQse2FsbG93UHJvamVjdGlvbjplIT09by5GcmFnbWVudH0pKSkpO3ZhciBxZj1bXCJzbHVnXCIsXCJ0ZXh0XCIsXCJpY29uXCIsXCJjbGFzc05hbWVcIixcImRpc2FibGVkXCIsXCJiYWRnZVwiXTtmdW5jdGlvbiBZZigpe3JldHVybiBZZj1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LFlmLmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgR2Y9KDAsby5jcmVhdGVDb250ZXh0KSgpLFhmPWZ1bmN0aW9uKGUsdCl7dmFyIG49KDAsby51c2VDb250ZXh0KShHZikscj1lLnNsdWcscz1lLnRleHQsYT1lLmljb24sbD1lLmNsYXNzTmFtZSxjPWUuZGlzYWJsZWQsdT12b2lkIDAhPT1jJiZjLGQ9ZS5iYWRnZSxmPXZvaWQgMD09PWQ/bnVsbDpkLGg9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99KGUscWYpO2lmKCFuKXRocm93IG5ldyBFcnJvcihcIlRhYiBzaG91bGQgYmUgdXNlZCBpbnNpZGUgVGFicyBHcm91cFwiKTt2YXIgcD1uLmFjdGl2ZUl0ZW0sbT1uLm9uQ2hhbmdlLGc9bi5zaXplLHY9bi52YXJpYW50LHk9bi5vcmllbnRhdGlvbixiPW4uaWNvblBvc2l0aW9uLHg9bi53aWR0aCx3PXt4czpcInB4LTEuNSBweS0wLjUgdGV4dC14cyBbJl9zdmddOnNpemUtM1wiLHNtOlwidW5kZXJsaW5lXCI9PT12P1wicHktMS41IHRleHQtc20gWyZfc3ZnXTpzaXplLTRcIjpcInB4LTMgcHktMS41IHRleHQtc20gWyZfc3ZnXTpzaXplLTRcIixtZDpcInVuZGVybGluZVwiPT09dj9cInB5LTIgdGV4dC1iYXNlIFsmX3N2Z106c2l6ZS01XCI6XCJweC0zLjUgcHktMS41IHRleHQtYmFzZSBbJl9zdmddOnNpemUtNVwiLGxnOlwidW5kZXJsaW5lXCI9PT12P1wicC0yLjUgdGV4dC1sZyBbJl9zdmddOnNpemUtNlwiOlwicHgtMy41IHB5LTEuNSB0ZXh0LWxnIFsmX3N2Z106c2l6ZS02XCJ9W2ddLEU9dGUoXCJyZWxhdGl2ZSBib3JkZXItbm9uZSBiZy10cmFuc3BhcmVudCB0ZXh0LXRleHQtc2Vjb25kYXJ5IGN1cnNvci1wb2ludGVyIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRyYW5zaXRpb24tW2JveC1zaGFkb3csY29sb3IsYmFja2dyb3VuZC1jb2xvcl0gZHVyYXRpb24tMjAwXCIsXCJmdWxsXCI9PT14P1wiZmxleC0xXCI6XCJcIixcInZlcnRpY2FsXCI9PT15P1widy1mdWxsIGp1c3RpZnktYmV0d2VlblwiOlwiXCIpLFM9XCJyb3VuZGVkLWZ1bGxcIjtcInJvdW5kZWRcIj09PXY/Uz1cInJvdW5kZWQtbWRcIjpcInVuZGVybGluZVwiPT09diYmKFM9XCJyb3VuZGVkLW5vbmVcIik7dmFyIF89dGUoRSxcImJvcmRlci1ub25lXCIsUyxcImhvdmVyOnRleHQtdGV4dC1wcmltYXJ5IGdyb3VwXCIsXCJmb2N1czpvdXRsaW5lLW5vbmVcIix1P1widGV4dC10ZXh0LWRpc2FibGVkIGN1cnNvci1ub3QtYWxsb3dlZFwiOlwiXCIsdyxwPT09cj9cImJnLWJhY2tncm91bmQtcHJpbWFyeSB0ZXh0LXRleHQtcHJpbWFyeSBzaGFkb3ctc21cIjpcIlwiLGwpO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLFlmKHtyZWY6dCxjbGFzc05hbWU6XyxkaXNhYmxlZDp1LG9uQ2xpY2s6ZnVuY3Rpb24oZSl7bShlLHtzbHVnOnIsdGV4dDpzfSl9fSxoKSxwPT09ciYmXCJ1bmRlcmxpbmVcIj09PXYmJmkoKS5jcmVhdGVFbGVtZW50KEhmLnNwYW4se2xheW91dElkOlwidW5kZXJsaW5lXCIsY2xhc3NOYW1lOlwiYWJzb2x1dGUgcmlnaHQtMCBsZWZ0LTAgLWJvdHRvbS1weCBoLXB4IGJnLWJvcmRlci1pbnRlcmFjdGl2ZVwifSksaSgpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcImZsZXggaXRlbXMtY2VudGVyIGdhcC0xXCJ9LFwibGVmdFwiPT09YiYmYSYmaSgpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcIm1yLTEgY29udGVudHMgY2VudGVyLWNlbnRlciBncm91cC1ob3Zlcjp0ZXh0LXRleHQtcHJpbWFyeVwifSxhKSxzLFwicmlnaHRcIj09PWImJmEmJmkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJtbC0xIGNvbnRlbnRzIGNlbnRlci1jZW50ZXIgZ3JvdXAtaG92ZXI6dGV4dC10ZXh0LXByaW1hcnlcIn0sYSkpLGYmJigwLG8uaXNWYWxpZEVsZW1lbnQpKGYpJiZmKX0sSmY9KDAsby5mb3J3YXJkUmVmKShYZik7SmYuZGlzcGxheU5hbWU9XCJUYWJcIjt2YXIgWmY9e0dyb3VwOmZ1bmN0aW9uKGUpe3ZhciB0LG49ZS5jaGlsZHJlbixyPWUuYWN0aXZlSXRlbSxzPXZvaWQgMD09PXI/bnVsbDpyLGE9ZS5vbkNoYW5nZSxsPWUuY2xhc3NOYW1lLGM9ZS5zaXplLHU9dm9pZCAwPT09Yz9cInNtXCI6YyxkPWUub3JpZW50YXRpb24sZj12b2lkIDA9PT1kP1wiaG9yaXpvbnRhbFwiOmQsaD1lLnZhcmlhbnQscD12b2lkIDA9PT1oP1wicGlsbFwiOmgsbT1lLmljb25Qb3NpdGlvbixnPXZvaWQgMD09PW0/XCJsZWZ0XCI6bSx2PWUud2lkdGgseT12b2lkIDA9PT12P1wiZnVsbFwiOnYsYj0oMCxvLnVzZUNhbGxiYWNrKSgoZnVuY3Rpb24oZSx0KXthJiZhKHtldmVudDplLHZhbHVlOnR9KX0pLFthXSkseD1cInJvdW5kZWQtZnVsbFwiLHc9XCJwLTFcIixFPVwiYm9yZGVyIGJvcmRlci10YWItYm9yZGVyIGJvcmRlci1zb2xpZFwiO1widmVydGljYWxcIj09PWY/dD1cImdhcC0wLjVcIjpcInJvdW5kZWRcIiE9PXAmJlwicGlsbFwiIT09cHx8KFwieHNcIj09PXV8fFwic21cIj09PXU/dD1cImdhcC0wLjVcIjpcIm1kXCIhPT11JiZcImxnXCIhPT11fHwodD1cImdhcC0xXCIpKSxcInJvdW5kZWRcIj09PXB8fFwidmVydGljYWxcIj09PWY/eD1cInJvdW5kZWQtbWRcIjpcInVuZGVybGluZVwiPT09cCYmKHg9XCJyb3VuZGVkLW5vbmVcIix3PVwicC0wXCIsRT1cImJvcmRlci10LTAgYm9yZGVyLXItMCBib3JkZXItbC0wIGJvcmRlci1iIGJvcmRlci1zb2xpZCBib3JkZXItdGFiLWJvcmRlclwiLFwieHNcIj09PXU/dD1cImdhcC0wXCI6XCJzbVwiPT09dT90PVwiZ2FwLTIuNVwiOlwibWRcIiE9PXUmJlwibGdcIiE9PXV8fCh0PVwiZ2FwLTNcIikpO3ZhciBTPVwidmVydGljYWxcIj09PWY/XCJmbGV4LWNvbFwiOlwiXCIsXz1cImJveC1ib3JkZXIgWyY+Kl06Ym94LWJvcmRlciBmbGV4IGl0ZW1zLWNlbnRlciBcIi5jb25jYXQoXCJmdWxsXCI9PT15P1widy1mdWxsXCI6XCJcIixcIiBcIikuY29uY2F0KFMpLGs9dGUoXyx4LHcsdCxFLFwidW5kZXJsaW5lXCIhPT1wP1wiYmctdGFiLWJhY2tncm91bmRcIjpcIlwiLGwpO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6a30saSgpLmNyZWF0ZUVsZW1lbnQoR2YuUHJvdmlkZXIse3ZhbHVlOnthY3RpdmVJdGVtOnMsb25DaGFuZ2U6YixzaXplOnUsdmFyaWFudDpwLG9yaWVudGF0aW9uOmYsaWNvblBvc2l0aW9uOmcsd2lkdGg6eX19LGkoKS5DaGlsZHJlbi5tYXAobiwoZnVuY3Rpb24oZSl7cmV0dXJuKDAsby5pc1ZhbGlkRWxlbWVudCkoZSk/aSgpLmNsb25lRWxlbWVudChlKTpudWxsfSkpKSl9LFRhYjpKZn07Y29uc3QgUWY9eGUoXCJDaGV2cm9uc1VwRG93blwiLFtbXCJwYXRoXCIse2Q6XCJtNyAxNSA1IDUgNS01XCIsa2V5OlwiMWhmMXR3XCJ9XSxbXCJwYXRoXCIse2Q6XCJtNyA5IDUtNSA1IDVcIixrZXk6XCJzZ3Q2eGdcIn1dXSksZWg9eGUoXCJDaGV2cm9uRG93blwiLFtbXCJwYXRoXCIse2Q6XCJtNiA5IDYgNiA2LTZcIixrZXk6XCJxcnVuc2xcIn1dXSksdGg9eGUoXCJTZWFyY2hcIixbW1wiY2lyY2xlXCIse2N4OlwiMTFcIixjeTpcIjExXCIscjpcIjhcIixrZXk6XCI0ZWo5N3VcIn1dLFtcInBhdGhcIix7ZDpcIm0yMSAyMS00LjMtNC4zXCIsa2V5OlwiMXFpZTNxXCJ9XV0pO3ZhciBuaD17c206e2ljb246XCJbJj5zdmddOnNpemUtNFwiLHNlYXJjaEljb246XCJbJj5zdmddOnNpemUtNFwiLHNlbGVjdEJ1dHRvbjpcInB4LTIgcHktMiByb3VuZGVkIHRleHQteHMgZm9udC1tZWRpdW0gbGVhZGluZy00IG1pbi1oLVsyLjI1cmVtXVwiLG11bHRpU2VsZWN0OlwicGwtMiBwci0yIHB5LTEuNVwiLGRpc3BsYXlTZWxlY3RlZDpcInRleHQteHMgZm9udC1ub3JtYWxcIixkcm9wZG93bjpcInJvdW5kZWQtbWRcIixkcm9wZG93bkl0ZW1zV3JhcHBlcjpcInAtMS41XCIsc2VhcmNoYmFyV3JhcHBlcjpcInAtMyBmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMC41XCIsc2VhcmNoYmFyOlwiZm9udC1tZWRpdW0gdGV4dC14c1wiLHNlYXJjaGJhckljb246XCJbJj5zdmddOnNpemUtNFwiLGxhYmVsOlwidGV4dC14cyBmb250LW1lZGl1bVwifSxtZDp7aWNvbjpcIlsmPnN2Z106c2l6ZS01XCIsc2VhcmNoSWNvbjpcIlsmPnN2Z106c2l6ZS01XCIsc2VsZWN0QnV0dG9uOlwicHgtMi41IHB5LTIuNSByb3VuZGVkLW1kIHRleHQteHMgZm9udC1tZWRpdW0gbGVhZGluZy00IG1pbi1oLVsyLjVyZW1dXCIsbXVsdGlTZWxlY3Q6XCJwbC0yIHByLTIuNSBweS0yXCIsZGlzcGxheVNlbGVjdGVkOlwidGV4dC1zbSBmb250LW5vcm1hbFwiLGRyb3Bkb3duOlwicm91bmRlZC1sZ1wiLGRyb3Bkb3duSXRlbXNXcmFwcGVyOlwicC0yXCIsc2VhcmNoYmFyV3JhcHBlcjpcInAtMi41IGZsZXggaXRlbXMtY2VudGVyIGdhcC0xXCIsc2VhcmNoYmFyOlwiZm9udC1tZWRpdW0gdGV4dC1zbVwiLHNlYXJjaGJhckljb246XCJbJj5zdmddOnNpemUtNVwiLGxhYmVsOlwidGV4dC1zbSBmb250LW1lZGl1bVwifSxsZzp7aWNvbjpcIlsmPnN2Z106c2l6ZS02XCIsc2VhcmNoSWNvbjpcIlsmPnN2Z106c2l6ZS01XCIsc2VsZWN0QnV0dG9uOlwicHgtMyBweS0zIHJvdW5kZWQtbGcgdGV4dC1zbSBmb250LW1lZGl1bSBsZWFkaW5nLTUgbWluLWgtWzNyZW1dXCIsbXVsdGlTZWxlY3Q6XCJwbC0yLjUgcHItMyBweS0yLjVcIixkaXNwbGF5U2VsZWN0ZWQ6XCJ0ZXh0LXNtIGZvbnQtbm9ybWFsXCIsZHJvcGRvd246XCJyb3VuZGVkLWxnXCIsZHJvcGRvd25JdGVtc1dyYXBwZXI6XCJwLTJcIixzZWFyY2hiYXJXcmFwcGVyOlwicC0yLjUgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTFcIixzZWFyY2hiYXI6XCJmb250LW1lZGl1bSB0ZXh0LXNtXCIsc2VhcmNoYmFySWNvbjpcIlsmPnN2Z106c2l6ZS01XCIsbGFiZWw6XCJ0ZXh0LWJhc2UgZm9udC1tZWRpdW1cIn19LHJoPVwiZ3JvdXAtZGlzYWJsZWQ6dGV4dC1maWVsZC1jb2xvci1kaXNhYmxlZFwiLG9oPVtcInZhbHVlXCIsXCJzZWxlY3RlZFwiLFwiY2hpbGRyZW5cIl07ZnVuY3Rpb24gaWgoZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KGUsdCl8fGxoKGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiBzaCgpe3JldHVybiBzaD1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHNoLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBhaChlKXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gY2goZSl9KGUpfHxmdW5jdGlvbihlKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZudWxsIT1lW1N5bWJvbC5pdGVyYXRvcl18fG51bGwhPWVbXCJAQGl0ZXJhdG9yXCJdKXJldHVybiBBcnJheS5mcm9tKGUpfShlKXx8bGgoZSl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9ZnVuY3Rpb24gbGgoZSx0KXtpZihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gY2goZSx0KTt2YXIgbj17fS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9jaChlLHQpOnZvaWQgMH19ZnVuY3Rpb24gY2goZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfWZ1bmN0aW9uIHVoKGUpe3JldHVybiB1aD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSx1aChlKX1mdW5jdGlvbiBkaChlLHQpe3ZhciBuPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciByPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7dCYmKHI9ci5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSksbi5wdXNoLmFwcGx5KG4scil9cmV0dXJuIG59ZnVuY3Rpb24gZmgoZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49bnVsbCE9YXJndW1lbnRzW3RdP2FyZ3VtZW50c1t0XTp7fTt0JTI/ZGgoT2JqZWN0KG4pLCEwKS5mb3JFYWNoKChmdW5jdGlvbih0KXtoaChlLHQsblt0XSl9KSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhuKSk6ZGgoT2JqZWN0KG4pKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iobix0KSl9KSl9cmV0dXJuIGV9ZnVuY3Rpb24gaGgoZSx0LG4pe3JldHVybih0PWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKGUpe2lmKFwib2JqZWN0XCIhPXVoKGUpfHwhZSlyZXR1cm4gZTt2YXIgdD1lW1N5bWJvbC50b1ByaW1pdGl2ZV07aWYodm9pZCAwIT09dCl7dmFyIG49dC5jYWxsKGUsXCJzdHJpbmdcIik7aWYoXCJvYmplY3RcIiE9dWgobikpcmV0dXJuIG47dGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpfXJldHVybiBTdHJpbmcoZSl9KGUpO3JldHVyblwic3ltYm9sXCI9PXVoKHQpP3Q6dCtcIlwifSh0KSlpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3RdPW4sZX12YXIgcGg9KDAsby5jcmVhdGVDb250ZXh0KSgpLG1oPWZ1bmN0aW9uKCl7cmV0dXJuKDAsby51c2VDb250ZXh0KShwaCl9LGdoPWZ1bmN0aW9uKGUpe3ZhciB0LG49ZS5pZCxyPWUuc2l6ZSxpPXZvaWQgMD09PXI/XCJtZFwiOnIscz1lLnZhbHVlLGE9ZS5kZWZhdWx0VmFsdWUsbD1lLm9uQ2hhbmdlLGM9ZS5ieSx1PXZvaWQgMD09PWM/XCJpZFwiOmMsZD1lLmNoaWxkcmVuLGY9ZS5tdWx0aXBsZSxoPXZvaWQgMCE9PWYmJmYscD1lLmNvbWJvYm94LG09dm9pZCAwIT09cCYmcCxnPWUuZGlzYWJsZWQsdj12b2lkIDAhPT1nJiZnLHk9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gbnx8XCJzZWxlY3QtXCIuY29uY2F0KGNlKCkpfSksW25dKSxiPSgwLG8udXNlTWVtbykoKGZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXN9KSxbc10pLHg9aWgoKDAsby51c2VTdGF0ZSkoYSksMiksdz14WzBdLEU9eFsxXSxTPWloKCgwLG8udXNlU3RhdGUpKFwiXCIpLDIpLF89U1swXSxrPVNbMV0sQz0oMCxvLnVzZUNhbGxiYWNrKSgoZnVuY3Rpb24oKXtyZXR1cm4gYj9zOnd9KSxbYixzLHddKSxQPWloKCgwLG8udXNlU3RhdGUpKCExKSwyKSxUPVBbMF0sTz1QWzFdLFI9aWgoKDAsby51c2VTdGF0ZSkoKSwyKSxOPVJbMF0sQT1SWzFdLGo9aWgoKDAsby51c2VTdGF0ZSkoKSwyKSxNPWpbMF0sST1qWzFdLEQ9e3NtOm0/MjU2OjE3MixtZDptPzI1NjoyMTYsbGc6bT8yNTY6MjE2fSxMPU1vKHtwbGFjZW1lbnQ6XCJib3R0b20tc3RhcnRcIixvcGVuOlQsb25PcGVuQ2hhbmdlOk8sd2hpbGVFbGVtZW50c01vdW50ZWQ6bnIsbWlkZGxld2FyZTpbbXIoNSksZ3Ioe3BhZGRpbmc6MTB9KSwodD17YXBwbHk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZWN0cyxuPWUuZWxlbWVudHMscj1lLmF2YWlsYWJsZUhlaWdodDtPYmplY3QuYXNzaWduKG4uZmxvYXRpbmcuc3R5bGUse21heEhlaWdodDpcIm1pbihcIi5jb25jYXQocixcInB4LCBcIikuY29uY2F0KERbaV0sXCJweClcIiksbWF4V2lkdGg6XCJcIi5jb25jYXQodC5yZWZlcmVuY2Uud2lkdGgsXCJweFwiKX0pfSxwYWRkaW5nOjEwfSx7Li4uc3IodCksb3B0aW9uczpbdCx1bmRlZmluZWRdfSldfSksRj1MLnJlZnMsej1MLmZsb2F0aW5nU3R5bGVzLEI9TC5jb250ZXh0LFY9KDAsby51c2VSZWYpKFtdKSxXPSgwLG8udXNlUmVmKShbXSksVT0oMCxvLnVzZVJlZikoITEpLCQ9T28oQix7ZXZlbnQ6XCJtb3VzZWRvd25cIn0pLEs9am8oQiksSD1IbyhCLHtyb2xlOlwibGlzdGJveFwifSkscT0kbyhCLHtsaXN0UmVmOlYsYWN0aXZlSW5kZXg6TixzZWxlY3RlZEluZGV4Ok0sb25OYXZpZ2F0ZTpBLGxvb3A6ITB9KSxZPWZ1bmN0aW9uKGUsdCl7dmFyIG47Y29uc3R7b3BlbjpyLGRhdGFSZWY6aX09ZSx7bGlzdFJlZjpzLGFjdGl2ZUluZGV4OmEsb25NYXRjaDpsLG9uVHlwaW5nQ2hhbmdlOmMsZW5hYmxlZDp1PSEwLGZpbmRNYXRjaDpkPW51bGwscmVzZXRNczpmPTc1MCxpZ25vcmVLZXlzOmg9W10sc2VsZWN0ZWRJbmRleDpwPW51bGx9PXQsbT1vLnVzZVJlZigpLGc9by51c2VSZWYoXCJcIiksdj1vLnVzZVJlZihudWxsIT0obj1udWxsIT1wP3A6YSk/bjotMSkseT1vLnVzZVJlZihudWxsKSxiPXhyKGwpLHg9eHIoYyksdz1xcihkKSxFPXFyKGgpO0lyKCgoKT0+e3ImJihjbGVhclRpbWVvdXQobS5jdXJyZW50KSx5LmN1cnJlbnQ9bnVsbCxnLmN1cnJlbnQ9XCJcIil9KSxbcl0pLElyKCgoKT0+e3ZhciBlO3ImJlwiXCI9PT1nLmN1cnJlbnQmJih2LmN1cnJlbnQ9bnVsbCE9KGU9bnVsbCE9cD9wOmEpP2U6LTEpfSksW3IscCxhXSk7Y29uc3QgUz14cigoZT0+e2U/aS5jdXJyZW50LnR5cGluZ3x8KGkuY3VycmVudC50eXBpbmc9ZSx4KGUpKTppLmN1cnJlbnQudHlwaW5nJiYoaS5jdXJyZW50LnR5cGluZz1lLHgoZSkpfSkpLF89eHIoKGU9PntmdW5jdGlvbiB0KGUsdCxuKXtjb25zdCByPXcuY3VycmVudD93LmN1cnJlbnQodCxuKTp0LmZpbmQoKGU9PjA9PT0obnVsbD09ZT92b2lkIDA6ZS50b0xvY2FsZUxvd2VyQ2FzZSgpLmluZGV4T2Yobi50b0xvY2FsZUxvd2VyQ2FzZSgpKSkpKTtyZXR1cm4gcj9lLmluZGV4T2Yocik6LTF9Y29uc3Qgbj1zLmN1cnJlbnQ7aWYoZy5jdXJyZW50Lmxlbmd0aD4wJiZcIiBcIiE9PWcuY3VycmVudFswXSYmKC0xPT09dChuLG4sZy5jdXJyZW50KT9TKCExKTpcIiBcIj09PWUua2V5JiZRdChlKSksbnVsbD09bnx8RS5jdXJyZW50LmluY2x1ZGVzKGUua2V5KXx8MSE9PWUua2V5Lmxlbmd0aHx8ZS5jdHJsS2V5fHxlLm1ldGFLZXl8fGUuYWx0S2V5KXJldHVybjtyJiZcIiBcIiE9PWUua2V5JiYoUXQoZSksUyghMCkpLG4uZXZlcnkoKGU9Pnt2YXIgdCxuO3JldHVybiFlfHwobnVsbD09KHQ9ZVswXSk/dm9pZCAwOnQudG9Mb2NhbGVMb3dlckNhc2UoKSkhPT0obnVsbD09KG49ZVsxXSk/dm9pZCAwOm4udG9Mb2NhbGVMb3dlckNhc2UoKSl9KSkmJmcuY3VycmVudD09PWUua2V5JiYoZy5jdXJyZW50PVwiXCIsdi5jdXJyZW50PXkuY3VycmVudCksZy5jdXJyZW50Kz1lLmtleSxjbGVhclRpbWVvdXQobS5jdXJyZW50KSxtLmN1cnJlbnQ9c2V0VGltZW91dCgoKCk9PntnLmN1cnJlbnQ9XCJcIix2LmN1cnJlbnQ9eS5jdXJyZW50LFMoITEpfSksZik7Y29uc3Qgbz12LmN1cnJlbnQsaT10KG4sWy4uLm4uc2xpY2UoKG98fDApKzEpLC4uLm4uc2xpY2UoMCwob3x8MCkrMSldLGcuY3VycmVudCk7LTEhPT1pPyhiKGkpLHkuY3VycmVudD1pKTpcIiBcIiE9PWUua2V5JiYoZy5jdXJyZW50PVwiXCIsUyghMSkpfSkpLGs9by51c2VNZW1vKCgoKT0+KHtvbktleURvd246X30pKSxbX10pLEM9by51c2VNZW1vKCgoKT0+KHtvbktleURvd246XyxvbktleVVwKGUpe1wiIFwiPT09ZS5rZXkmJlMoITEpfX0pKSxbXyxTXSk7cmV0dXJuIG8udXNlTWVtbygoKCk9PnU/e3JlZmVyZW5jZTprLGZsb2F0aW5nOkN9Ont9KSxbdSxrLENdKX0oQix7bGlzdFJlZjpXLGFjdGl2ZUluZGV4Ok4sc2VsZWN0ZWRJbmRleDpNLG9uTWF0Y2g6VD9BOkksb25UeXBpbmdDaGFuZ2U6ZnVuY3Rpb24oZSl7VS5jdXJyZW50PWV9fSksRz1GbyhbSyxILHEsJF0uY29uY2F0KGFoKG0/W106W1ldKSkpLFg9Ry5nZXRSZWZlcmVuY2VQcm9wcyxKPUcuZ2V0RmxvYXRpbmdQcm9wcyxaPUcuZ2V0SXRlbVByb3BzLFE9ZnVuY3Rpb24oZSx0KXtpZihoKXJldHVybiBmdW5jdGlvbihlLHQpe3ZhciBuLHI9YWgobnVsbCE9PShuPUMoKSkmJnZvaWQgMCE9PW4/bjpbXSk7LTE9PT1yLmZpbmRJbmRleCgoZnVuY3Rpb24oZSl7cmV0dXJuXCJvYmplY3RcIj09PXVoKGUpP2VbdV09PT10W3VdOmU9PT10fSkpJiYoci5wdXNoKHQpLGJ8fEUociksSShlKSxGLnJlZmVyZW5jZS5jdXJyZW50LmZvY3VzKCksTyghMSksayhcIlwiKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBsJiZsKHIpKX0oZSx0KTtJKGUpLGJ8fEUodCksRi5yZWZlcmVuY2UuY3VycmVudC5mb2N1cygpLE8oITEpLGsoXCJcIiksXCJmdW5jdGlvblwiPT10eXBlb2YgbCYmbCh0KX0sZWU9KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKGUsdCl7Vi5jdXJyZW50W2VdPXR9KSxbXSk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQocGguUHJvdmlkZXIse3ZhbHVlOntzZWxlY3RlZEluZGV4Ok0sc2V0U2VsZWN0ZWRJbmRleDpJLGFjdGl2ZUluZGV4Ok4sc2V0QWN0aXZlSW5kZXg6QSxzZWxlY3RlZDp3LHNldFNlbGVjdGVkOkUsaGFuZGxlU2VsZWN0OlEsY29tYm9ib3g6bSxzaXplVmFsdWU6aSxtdWx0aXBsZTpoLG9uQ2hhbmdlOmwsaXNUeXBpbmdSZWY6VSxnZXRJdGVtUHJvcHM6WixvbkNsaWNrSXRlbTpmdW5jdGlvbihlLHQpe1EoZSx0KX0sb25LZXlEb3duSXRlbTpmdW5jdGlvbihlLHQsbil7XCJFbnRlclwiPT09ZS5rZXkmJihlLnByZXZlbnREZWZhdWx0KCksUSh0LG4pKSxcIiBcIiE9PWUua2V5fHxVLmN1cnJlbnR8fChlLnByZXZlbnREZWZhdWx0KCksUSh0LG4pKX0sZ2V0VmFsdWVzOkMsc2VsZWN0SWQ6eSxnZXRSZWZlcmVuY2VQcm9wczpYLGlzT3BlbjpULHZhbHVlOnMsdXBkYXRlTGlzdFJlZjplZSxyZWZzOkYsbGlzdENvbnRlbnRSZWY6VyxieTp1LGdldEZsb2F0aW5nUHJvcHM6SixmbG9hdGluZ1N0eWxlczp6LGNvbnRleHQ6QixzZWFyY2hLZXl3b3JkOl8sc2V0U2VhcmNoS2V5d29yZDprLGRpc2FibGVkOnZ9fSxkKX07Z2guQnV0dG9uPWZ1bmN0aW9uKGUpe3ZhciB0LG4scixpPWUuY2hpbGRyZW4scz1lLmljb24sYT12b2lkIDA9PT1zP251bGw6cyxsPWUucGxhY2Vob2xkZXIsYz12b2lkIDA9PT1sP1wiU2VsZWN0IGFuIG9wdGlvblwiOmwsdT1lLm9wdGlvbkljb24sZD12b2lkIDA9PT11P251bGw6dSxmPWUuZGlzcGxheUJ5LGg9dm9pZCAwPT09Zj9cIm5hbWVcIjpmLHA9ZS5sYWJlbCxtPW1oKCksZz1tLnNpemVWYWx1ZSx2PW0uZ2V0UmVmZXJlbmNlUHJvcHMseT1tLmdldFZhbHVlcyxiPW0uc2VsZWN0SWQseD1tLnJlZnMsdz1tLmlzT3BlbixFPW0ubXVsdGlwbGUsUz1tLmNvbWJvYm94LF89bS5zZXRTZWxlY3RlZCxrPW0ub25DaGFuZ2UsQz1tLmlzQ29udHJvbGxlZCxQPW0uZGlzYWJsZWQsVD1tLmJ5LE89bnVsbD09PSh0PXtzbTpcInhzXCIsbWQ6XCJzbVwiLGxnOlwibWRcIn0pfHx2b2lkIDA9PT10P3ZvaWQgMDp0W2ddLFI9KDAsby51c2VDYWxsYmFjaykoKGZ1bmN0aW9uKCl7aWYoYSlyZXR1cm4gYTt2YXIgZT1cInRleHQtZmllbGQtcGxhY2Vob2xkZXIgZ3JvdXAtZGlzYWJsZWQ6dGV4dC1pY29uLWRpc2FibGVkXCI7cmV0dXJuIFM/UmVhY3QuY3JlYXRlRWxlbWVudChRZix7Y2xhc3NOYW1lOmV9KTpSZWFjdC5jcmVhdGVFbGVtZW50KGVoLHtjbGFzc05hbWU6ZX0pfSksW2FdKSxOPSgwLG8udXNlQ2FsbGJhY2spKChmdW5jdGlvbigpe3ZhciBlPXkoKTtpZighZSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBpKXt2YXIgdD1maCh7dmFsdWU6ZX0sRT97b25DbG9zZTpBfTp7fSk7cmV0dXJuIGkodCl9aWYoRSlyZXR1cm4gZS5tYXAoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoR2Use2ljb246ZCx0eXBlOlwicm91bmRlZFwiLGtleTp0LHNpemU6Tyxvbk1vdXNlRG93bjpBKGUpLGxhYmVsOlwib2JqZWN0XCI9PT11aChlKT9lW2hdOmUsY2xvc2FibGU6ITAsZGlzYWJsZWQ6UH0pfSkpO3ZhciBuPVwib2JqZWN0XCI9PT11aChlKT9lW2hdOmU7cmV0dXJuKDAsby5pc1ZhbGlkRWxlbWVudCkoaSkmJihuPWkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTp0ZShuaFtnXS5kaXNwbGF5U2VsZWN0ZWQscmgpfSxuKX0pLFt5XSksQT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIG47bnVsbD09dHx8dC5wcmV2ZW50RGVmYXVsdCgpLG51bGw9PXR8fHQuc3RvcFByb3BhZ2F0aW9uKCk7dmFyIHI9YWgobnVsbCE9PShuPXkoKSkmJnZvaWQgMCE9PW4/bjpbXSksbz1yLmZpbmRJbmRleCgoZnVuY3Rpb24odCl7cmV0dXJuXCJvYmplY3RcIj09PXVoKHQpP3RbVF09PT1lW1RdOnQ9PT1lfSkpOy0xIT09byYmKHIuc3BsaWNlKG8sMSksQ3x8XyhyKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBrJiZrKHIpKX19O3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImZsZXggZmxleC1jb2wgaXRlbXMtc3RhcnQgZ2FwLTEuNSBbJl8qXTpib3gtYm9yZGVyIGJveC1ib3JkZXJcIn0sUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIse2NsYXNzTmFtZTp0ZShudWxsPT09KG49bmhbZ10pfHx2b2lkIDA9PT1uP3ZvaWQgMDpuLmxhYmVsLFwidGV4dC1maWVsZC1sYWJlbFwiKSxodG1sRm9yOmJ9LHApLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIixzaCh7aWQ6YixyZWY6eC5zZXRSZWZlcmVuY2UsY2xhc3NOYW1lOnRlKFwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGJvcmRlciBib3JkZXItc29saWQgdy1mdWxsIGJveC1ib3JkZXIgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMTUwIGJnLXdoaXRlXCIsXCJib3JkZXIgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgYm9yZGVyLXNvbGlkIGJvcmRlci1maWVsZC1ib3JkZXJcIiwhdyYmXCJmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1vZmZzZXQtNCBmb2N1czpib3JkZXItZm9jdXMtYm9yZGVyIGZvY3VzOnJpbmctZm9jdXMgWyY6aG92ZXI6bm90KDpmb2N1cyk6bm90KDpkaXNhYmxlZCldOmJvcmRlci1ib3JkZXItc3Ryb25nXCIsbmhbZ10uc2VsZWN0QnV0dG9uLEUmJm5oW2ddLm11bHRpU2VsZWN0LFwiZ3JvdXAgZGlzYWJsZWQ6Ym9yZGVyLWZpZWxkLWJvcmRlci1kaXNhYmxlZCBbJjpob3ZlcjpoYXMoOmRpc2FibGVkKV06Ym9yZGVyLWZpZWxkLWJvcmRlci1kaXNhYmxlZFwiKSxcImFyaWEtbGFiZWxsZWRieVwiOlwic2VsZWN0LWxhYmVsXCIsdGFiSW5kZXg6MCxkaXNhYmxlZDpQfSx2KCkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiZmxleC0xIGdyaWQgaXRlbXMtY2VudGVyIGp1c3RpZnktc3RhcnQgZ2FwLTEuNSBcIix5KCkmJlwiZmxleCBmbGV4LXdyYXBcIil9LE4oKSwoRT8hKG51bGwhPT0ocj15KCkpJiZ2b2lkIDAhPT1yJiZyLmxlbmd0aCk6IXkoKSkmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiW2dyaWQtYXJlYToxLzEvMi8zXSB0ZXh0LWZpZWxkLWlucHV0XCIsbmhbZ10uZGlzcGxheVNlbGVjdGVkLHJoKX0sYykpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiZmxleCBpdGVtcy1jZW50ZXIgWyY+c3ZnXTpzaHJpbmstMFwiLG5oW2ddLmljb24pfSxSKCkpKSl9LGdoLk9wdGlvbnM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuc2VhcmNoQnkscj12b2lkIDA9PT1uP1wiaWRcIjpuLGk9ZS5zZWFyY2hQbGFjZWhvbGRlcixzPXZvaWQgMD09PWk/XCJTZWFyY2guLi5cIjppLGE9ZS5kcm9wZG93blBvcnRhbFJvb3QsbD12b2lkIDA9PT1hP251bGw6YSxjPWUuZHJvcGRvd25Qb3J0YWxJZCx1PXZvaWQgMD09PWM/XCJcIjpjLGQ9bWgoKSxmPWQuaXNPcGVuLGg9ZC5jb250ZXh0LHA9ZC5yZWZzLG09ZC5jb21ib2JveCxnPWQuZmxvYXRpbmdTdHlsZXMsdj1kLmdldEZsb2F0aW5nUHJvcHMseT1kLnNpemVWYWx1ZSxiPWQuc2V0U2VhcmNoS2V5d29yZCx4PWQuc2V0QWN0aXZlSW5kZXgsdz1kLnNldFNlbGVjdGVkSW5kZXgsRT1kLnZhbHVlLFM9ZC5zZWxlY3RlZCxfPWQuZ2V0VmFsdWVzLGs9ZC5zZWFyY2hLZXl3b3JkLEM9ZC5saXN0Q29udGVudFJlZixQPWQuYnksVD0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3ZhciBlPV8oKSxuPTA7cmV0dXJuIGUmJihuPW8uQ2hpbGRyZW4udG9BcnJheSh0KS5maW5kSW5kZXgoKGZ1bmN0aW9uKHQpe3JldHVyblwib2JqZWN0XCI9PT11aCh0LnByb3BzLnZhbHVlKT90LnByb3BzLnZhbHVlW1BdPT09ZVtQXTp0LnByb3BzLnZhbHVlPT09ZX0pKSksLTE9PT1uPzA6bn0pLFtFLFMsdF0pOygwLG8udXNlTGF5b3V0RWZmZWN0KSgoZnVuY3Rpb24oKXt4KFQpLHcoVCl9KSxbXSk7dmFyIE89KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gby5DaGlsZHJlbi5tYXAodCwoZnVuY3Rpb24oZSx0KXtpZighKDAsby5pc1ZhbGlkRWxlbWVudCkoZSkpcmV0dXJuIG51bGw7aWYoayl7dmFyIG49ZS5wcm9wcy52YWx1ZTtpZihcIm9iamVjdFwiPT09dWgobikpe2lmKC0xPT09bltyXS50b0xvd2VyQ2FzZSgpLmluZGV4T2Yoay50b0xvd2VyQ2FzZSgpKSlyZXR1cm4gbnVsbH1lbHNlIGlmKC0xPT09bi50b0xvd2VyQ2FzZSgpLmluZGV4T2Yoay50b0xvd2VyQ2FzZSgpKSlyZXR1cm4gbnVsbH1yZXR1cm4oMCxvLmNsb25lRWxlbWVudCkoZSxmaChmaCh7fSxlLnByb3BzKSx7fSx7aW5kZXg6dH0pKX0pKX0pLFtrLEUsUyx0XSksUj1vLkNoaWxkcmVuLmNvdW50KE8pO3JldHVybigwLG8udXNlRWZmZWN0KSgoZnVuY3Rpb24oKXtDLmN1cnJlbnQ9W10sby5DaGlsZHJlbi5mb3JFYWNoKHQsKGZ1bmN0aW9uKGUpe2lmKCgwLG8uaXNWYWxpZEVsZW1lbnQpKGUpJiZlLnByb3BzLnZhbHVlKXtpZihrKXt2YXIgdD1lLnByb3BzLnZhbHVlO2lmKFwib2JqZWN0XCI9PT11aCh0KSl7aWYoLTE9PT10W3JdLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihrLnRvTG93ZXJDYXNlKCkpKXJldHVybn1lbHNlIGlmKC0xPT09dC50b0xvd2VyQ2FzZSgpLmluZGV4T2Yoay50b0xvd2VyQ2FzZSgpKSlyZXR1cm59Qy5jdXJyZW50LnB1c2goZS5wcm9wcy52YWx1ZSl9fSkpfSksW2tdKSxSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsZiYmUmVhY3QuY3JlYXRlRWxlbWVudCh2byx7aWQ6dSxyb290Omx9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ28se2NvbnRleHQ6aCxtb2RhbDohMX0sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHNoKHtyZWY6cC5zZXRGbG9hdGluZyxjbGFzc05hbWU6dGUoXCJib3gtYm9yZGVyIFsmXypdOmJveC1ib3JkZXIgdy1mdWxsIGJnLXdoaXRlIG91dGxpbmUtbm9uZSBzaGFkb3ctbGcgYm9yZGVyIGJvcmRlci1zb2xpZCBib3JkZXItYm9yZGVyLXN1YnRsZSBvdmVyZmxvdy1oaWRkZW5cIixtJiZcImdyaWQgZ3JpZC1jb2xzLTEgZ3JpZC1yb3dzLVthdXRvXzFmcl0gZGl2aWRlLXkgZGl2aWRlLXgtMCBkaXZpZGUtc29saWQgZGl2aWRlLWJvcmRlci1zdWJ0bGVcIixuaFt5XS5kcm9wZG93biwhbSYmXCJoLWZ1bGxcIiksc3R5bGU6Zmgoe30sZyl9LHYoKSksbSYmUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUobmhbeV0uc2VhcmNoYmFyV3JhcHBlcil9LFJlYWN0LmNyZWF0ZUVsZW1lbnQodGgse2NsYXNzTmFtZTp0ZShcInRleHQtaWNvbi1zZWNvbmRhcnkgc2hyaW5rLTBcIixuaFt5XS5zZWFyY2hiYXJJY29uKX0pLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLHtjbGFzc05hbWU6dGUoXCJweC0xIHctZnVsbCBwbGFjZWhvbGRlcjp0ZXh0LWZpZWxkLXBsYWNlaG9sZGVyIGJvcmRlci0wIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpzaGFkb3ctbm9uZVwiLG5oW3ldLnNlYXJjaGJhciksdHlwZTpcInNlYXJjaFwiLG5hbWU6XCJrZXl3b3JkXCIscGxhY2Vob2xkZXI6cyxvbkNoYW5nZTpmdW5jdGlvbihlKXtyZXR1cm4gYihlLnRhcmdldC52YWx1ZSl9LGF1dG9Db21wbGV0ZTpcIm9mZlwifSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwib3ZlcmZsb3cteS1hdXRvXCIsIW0mJlwidy1mdWxsIGgtZnVsbFwiLG5oW3ldLmRyb3Bkb3duSXRlbXNXcmFwcGVyKX0sISFSJiZPLCFSJiZSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInAtMiB0ZXh0LWNlbnRlciB0ZXh0LWJhc2UgZm9udC1tZWRpdW0gdGV4dC1maWVsZC1wbGFjZWhvbGRlclwifSxcIk5vIGl0ZW1zIGZvdW5kXCIpKSkpKSl9LGdoLk9wdGlvbj1mdW5jdGlvbihlKXt2YXIgdD1lLnZhbHVlLG49ZS5zZWxlY3RlZCxyPWUuY2hpbGRyZW4saT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxvaCkscz1taCgpLGE9cy5zaXplVmFsdWUsbD1zLmdldEl0ZW1Qcm9wcyxjPXMub25LZXlEb3duSXRlbSx1PXMub25DbGlja0l0ZW0sZD1zLmFjdGl2ZUluZGV4LGY9cy5zZWxlY3RlZEluZGV4LGg9cy51cGRhdGVMaXN0UmVmLHA9cy5nZXRWYWx1ZXMsbT1zLmJ5LGc9cy5tdWx0aXBsZSx2PWkuaW5kZXgseT0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe2lmKCFnKXJldHVybiExO3ZhciBlPXAoKTtyZXR1cm4hIWUmJmUuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuXCJvYmplY3RcIj09PXVoKGUpP2VbbV09PT10W21dOmU9PT10fSkpfSksW3QscF0pLGI9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm5cImJvb2xlYW5cIj09dHlwZW9mIG4/bjpnP3k6dj09PWZ9KSxbeSxmLG5dKTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHNoKHtjbGFzc05hbWU6dGUoXCJ3LWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHRleHQtdGV4dC1wcmltYXJ5IGhvdmVyOmJnLWJ1dHRvbi10ZXJ0aWFyeS1ob3ZlciByb3VuZGVkLW1kIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTE1MCBjdXJzb3ItcG9pbnRlclwiLHtzbTpcInB5LTEuNSBweC0yIHRleHQtc20gZm9udC1ub3JtYWxcIixtZDpcInAtMiB0ZXh0LWJhc2UgZm9udC1ub3JtYWxcIixsZzpcInAtMiB0ZXh0LWJhc2UgZm9udC1ub3JtYWxcIn1bYV0sdj09PWQmJlwiYmctYnV0dG9uLXRlcnRpYXJ5LWhvdmVyXCIpLHJlZjpmdW5jdGlvbihlKXtoKHYsZSl9LHJvbGU6XCJvcHRpb25cIix0YWJJbmRleDp2PT09ZD8wOi0xLFwiYXJpYS1zZWxlY3RlZFwiOmImJnY9PT1kfSxsKHtvbkNsaWNrOmZ1bmN0aW9uKCl7dSh2LHQpfSxvbktleURvd246ZnVuY3Rpb24oZSl7YyhlLHYsdCl9fSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpcInctZnVsbCB0cnVuY2F0ZVwifSxyKSxiJiZSZWFjdC5jcmVhdGVFbGVtZW50KEVlLHtjbGFzc05hbWU6dGUoXCJ0ZXh0LWljb24tb24tY29sb3ItZGlzYWJsZWRcIix7c206XCJzaXplLTRcIixtZDpcInNpemUtNVwiLGxnOlwic2l6ZS01XCJ9W2FdKX0pKX07dmFyIHZoPWdoLHloPVtcImlkXCIsXCJtZXNzYWdlXCIsXCJqc3hcIl07ZnVuY3Rpb24gYmgoZSl7cmV0dXJuIGJoPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LGJoKGUpfWZ1bmN0aW9uIHhoKGUsdCl7dmFyIG49T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIHI9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYocj1yLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxuLnB1c2guYXBwbHkobixyKX1yZXR1cm4gbn1mdW5jdGlvbiB3aChlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj94aChPYmplY3QobiksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe0VoKGUsdCxuW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG4pKTp4aChPYmplY3QobikpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihuLHQpKX0pKX1yZXR1cm4gZX1mdW5jdGlvbiBFaChlLHQsbil7cmV0dXJuKHQ9X2godCkpaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1uLGV9ZnVuY3Rpb24gU2goZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9dFtuXTtyLmVudW1lcmFibGU9ci5lbnVtZXJhYmxlfHwhMSxyLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiByJiYoci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsX2goci5rZXkpLHIpfX1mdW5jdGlvbiBfaChlKXt2YXIgdD1mdW5jdGlvbihlKXtpZihcIm9iamVjdFwiIT1iaChlKXx8IWUpcmV0dXJuIGU7dmFyIHQ9ZVtTeW1ib2wudG9QcmltaXRpdmVdO2lmKHZvaWQgMCE9PXQpe3ZhciBuPXQuY2FsbChlLFwic3RyaW5nXCIpO2lmKFwib2JqZWN0XCIhPWJoKG4pKXJldHVybiBuO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKX1yZXR1cm4gU3RyaW5nKGUpfShlKTtyZXR1cm5cInN5bWJvbFwiPT1iaCh0KT90OnQrXCJcIn1mdW5jdGlvbiBraChlLHQsbil7KGZ1bmN0aW9uKGUsdCl7aWYodC5oYXMoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBpbml0aWFsaXplIHRoZSBzYW1lIHByaXZhdGUgZWxlbWVudHMgdHdpY2Ugb24gYW4gb2JqZWN0XCIpfSkoZSx0KSx0LnNldChlLG4pfWZ1bmN0aW9uIENoKGUsdCl7cmV0dXJuIGUuZ2V0KFRoKGUsdCkpfWZ1bmN0aW9uIFBoKGUsdCxuKXtyZXR1cm4gZS5zZXQoVGgoZSx0KSxuKSxufWZ1bmN0aW9uIFRoKGUsdCxuKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2U9PT10OmUuaGFzKHQpKXJldHVybiBhcmd1bWVudHMubGVuZ3RoPDM/dDpuO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGVsZW1lbnQgaXMgbm90IHByZXNlbnQgb24gdGhpcyBvYmplY3RcIil9dmFyIE9oPTEsUmg9bmV3IFdlYWtNYXAsTmg9bmV3IFdlYWtNYXAsQWg9ZnVuY3Rpb24oKXtyZXR1cm4gZT1mdW5jdGlvbiBlKCl7IWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyxlKSxraCh0aGlzLFJoLHZvaWQgMCksa2godGhpcyxOaCx2b2lkIDApLFBoKFJoLHRoaXMsW10pLFBoKE5oLHRoaXMsW10pfSx0PVt7a2V5Olwic3Vic2NyaWJlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gQ2goTmgsdGhpcykucHVzaChlKSxmdW5jdGlvbigpe1BoKE5oLHQsQ2goTmgsdCkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdCE9PWV9KSkpfX19LHtrZXk6XCJub3RpZnlcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7Q2goTmgsdGhpcykuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIHQoQ2goUmgsZSkpfSkpfX0se2tleTpcInB1Ymxpc2hcIix2YWx1ZTpmdW5jdGlvbihlKXtDaChOaCx0aGlzKS5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gdChlKX0pKX19LHtrZXk6XCJhZGRcIix2YWx1ZTpmdW5jdGlvbihlKXtDaChSaCx0aGlzKS5wdXNoKGUpLHRoaXMucHVibGlzaChlKX19LHtrZXk6XCJyZW1vdmVcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gUGgoUmgsdGhpcyxDaChSaCx0aGlzKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlkIT09ZX0pKSksZX19LHtrZXk6XCJjcmVhdGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49ZS5pZCxyPXZvaWQgMD09PW4/dm9pZCAwOm4sbz1lLm1lc3NhZ2UsaT12b2lkIDA9PT1vP1wiXCI6byxzPWUuanN4LGE9dm9pZCAwPT09cz92b2lkIDA6cyxsPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfShlLHloKTtpZihpfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBhKXt2YXIgYz1cIm51bWJlclwiPT10eXBlb2Ygcj9yOk9oKyssdT1DaChSaCx0aGlzKS5maW5kKChmdW5jdGlvbihlKXtyZXR1cm4gZS5pZD09PWN9KSk7cmV0dXJuIHUmJlBoKFJoLHRoaXMsQ2goUmgsdGhpcykubWFwKChmdW5jdGlvbihlKXtyZXR1cm4gZS5pZD09PWM/KHQucHVibGlzaCh3aCh3aCh7fSxlKSx7fSx7dGl0bGU6aSxqc3g6YX0sbCkpLHdoKHdoKHt9LGUpLHt9LHt0aXRsZTppLGpzeDphfSxsKSk6ZX0pKSksdGhpcy5hZGQod2goe2lkOmMsdGl0bGU6aSxqc3g6YX0sbCkpLGN9fX0se2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxyPXQucmVuZGVyLG89dm9pZCAwPT09cj92b2lkIDA6cixpPXQ7c3dpdGNoKGJoKG8pKXtjYXNlXCJmdW5jdGlvblwiOmk9d2goe2pzeDpvfSx0KTticmVhaztjYXNlXCJzdHJpbmdcIjppPXdoKHt0aXRsZTpvfSx0KX1QaChSaCx0aGlzLENoKFJoLHRoaXMpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQ9PT1lPyhuLnB1Ymxpc2god2god2goe30sdCksaSkpLHdoKHdoKHt9LHQpLGkpKTp0fSkpKX19LHtrZXk6XCJkaXNtaXNzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gZXx8Q2goUmgsdGhpcykuZm9yRWFjaCgoZnVuY3Rpb24oZSl7cmV0dXJuIENoKE5oLHQpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiB0KHtpZDplLmlkLGRpc21pc3M6ITB9KX0pKX0pKSxDaChOaCx0aGlzKS5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gdCh7aWQ6ZSxkaXNtaXNzOiEwfSl9KSksZX19LHtrZXk6XCJoaXN0b3J5XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gQ2goUmgsdGhpcyl9fSx7a2V5OlwiZGVmYXVsdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOlwiXCIsdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307cmV0dXJuIHRoaXMuY3JlYXRlKHdoKHttZXNzYWdlOmUsdHlwZTpcIm5ldXRyYWxcIn0sdCkpfX0se2tleTpcInN1Y2Nlc3NcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcIlwiLHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O3JldHVybiB0aGlzLmNyZWF0ZSh3aCh7bWVzc2FnZTplLHR5cGU6XCJzdWNjZXNzXCJ9LHQpKX19LHtrZXk6XCJlcnJvclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOlwiXCIsdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307cmV0dXJuIHRoaXMuY3JlYXRlKHdoKHttZXNzYWdlOmUsdHlwZTpcImVycm9yXCJ9LHQpKX19LHtrZXk6XCJ3YXJuaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCJcIix0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtyZXR1cm4gdGhpcy5jcmVhdGUod2goe21lc3NhZ2U6ZSx0eXBlOlwid2FybmluZ1wifSx0KSl9fSx7a2V5OlwiaW5mb1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOlwiXCIsdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307cmV0dXJuIHRoaXMuY3JlYXRlKHdoKHttZXNzYWdlOmUsdHlwZTpcImluZm9cIn0sdCkpfX0se2tleTpcImN1c3RvbVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOmZ1bmN0aW9uKCl7fSx0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fTtyZXR1cm4gdGhpcy5jcmVhdGUod2goe2pzeDplLHR5cGU6XCJjdXN0b21cIn0sdCkpfX1dLHQmJlNoKGUucHJvdG90eXBlLHQpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksZTt2YXIgZSx0fSgpLGpoPW5ldyBBaCxNaD1PYmplY3Quc2VhbChPYmplY3QuYXNzaWduKChmdW5jdGlvbihlLHQpe3JldHVybiBqaC5kZWZhdWx0KGUsdCl9KSx7c3VjY2VzczpqaC5zdWNjZXNzLmJpbmQoamgpLGVycm9yOmpoLmVycm9yLmJpbmQoamgpLHdhcm5pbmc6amgud2FybmluZy5iaW5kKGpoKSxpbmZvOmpoLmluZm8uYmluZChqaCksY3VzdG9tOmpoLmN1c3RvbS5iaW5kKGpoKSxkaXNtaXNzOmpoLmRpc21pc3MuYmluZChqaCksdXBkYXRlOmpoLnVwZGF0ZS5iaW5kKGpoKX0se2dldEhpc3Rvcnk6amguaGlzdG9yeS5iaW5kKGpoKX0pKSxJaD0hMSxEaD17XCJ0b3AtbGVmdFwiOlwidG9wLTAgYm90dG9tLTAgbGVmdC0wIGp1c3RpZnktc3RhcnQgaXRlbXMtc3RhcnRcIixcInRvcC1yaWdodFwiOlwidG9wLTAgYm90dG9tLTAgcmlnaHQtMCBqdXN0aWZ5LXN0YXJ0IGl0ZW1zLWVuZFwiLFwiYm90dG9tLWxlZnRcIjpcInRvcC0wIGJvdHRvbS0wIGxlZnQtMCBqdXN0aWZ5LWVuZCBpdGVtcy1zdGFydFwiLFwiYm90dG9tLXJpZ2h0XCI6XCJ0b3AtMCBib3R0b20tMCByaWdodC0wIGp1c3RpZnktZW5kIGl0ZW1zLWVuZFwifSxMaD17bmV1dHJhbDpcImJvcmRlci1hbGVydC1ib3JkZXItbmV1dHJhbCBiZy1hbGVydC1iYWNrZ3JvdW5kLW5ldXRyYWxcIixjdXN0b206XCJib3JkZXItYWxlcnQtYm9yZGVyLW5ldXRyYWwgYmctYWxlcnQtYmFja2dyb3VuZC1uZXV0cmFsXCIsaW5mbzpcImJvcmRlci1hbGVydC1ib3JkZXItaW5mbyBiZy1hbGVydC1iYWNrZ3JvdW5kLWluZm9cIixzdWNjZXNzOlwiYm9yZGVyLWFsZXJ0LWJvcmRlci1ncmVlbiBiZy1hbGVydC1iYWNrZ3JvdW5kLWdyZWVuXCIsd2FybmluZzpcImJvcmRlci1hbGVydC1ib3JkZXItd2FybmluZyBiZy1hbGVydC1iYWNrZ3JvdW5kLXdhcm5pbmdcIixlcnJvcjpcImJvcmRlci1hbGVydC1ib3JkZXItZGFuZ2VyIGJnLWFsZXJ0LWJhY2tncm91bmQtZGFuZ2VyXCJ9LEZoPVwiYmctYmFja2dyb3VuZC1pbnZlcnNlIGJvcmRlci1iYWNrZ3JvdW5kLWludmVyc2VcIix6aD17bGlnaHQ6XCJ0ZXh0LWljb24tc2Vjb25kYXJ5XCIsZGFyazpcInRleHQtaWNvbi1pbnZlcnNlXCJ9O2NsYXNzIEJoIGV4dGVuZHMgby5Db21wb25lbnR7Z2V0U25hcHNob3RCZWZvcmVVcGRhdGUoZSl7Y29uc3QgdD10aGlzLnByb3BzLmNoaWxkUmVmLmN1cnJlbnQ7aWYodCYmZS5pc1ByZXNlbnQmJiF0aGlzLnByb3BzLmlzUHJlc2VudCl7Y29uc3QgZT10aGlzLnByb3BzLnNpemVSZWYuY3VycmVudDtlLmhlaWdodD10Lm9mZnNldEhlaWdodHx8MCxlLndpZHRoPXQub2Zmc2V0V2lkdGh8fDAsZS50b3A9dC5vZmZzZXRUb3AsZS5sZWZ0PXQub2Zmc2V0TGVmdH1yZXR1cm4gbnVsbH1jb21wb25lbnREaWRVcGRhdGUoKXt9cmVuZGVyKCl7cmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW59fWZ1bmN0aW9uIFZoKHtjaGlsZHJlbjplLGlzUHJlc2VudDp0fSl7Y29uc3Qgbj0oMCxvLnVzZUlkKSgpLHI9KDAsby51c2VSZWYpKG51bGwpLGk9KDAsby51c2VSZWYpKHt3aWR0aDowLGhlaWdodDowLHRvcDowLGxlZnQ6MH0pLHtub25jZTpzfT0oMCxvLnVzZUNvbnRleHQpKERkKTtyZXR1cm4oMCxvLnVzZUluc2VydGlvbkVmZmVjdCkoKCgpPT57Y29uc3R7d2lkdGg6ZSxoZWlnaHQ6byx0b3A6YSxsZWZ0Omx9PWkuY3VycmVudDtpZih0fHwhci5jdXJyZW50fHwhZXx8IW8pcmV0dXJuO3IuY3VycmVudC5kYXRhc2V0Lm1vdGlvblBvcElkPW47Y29uc3QgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7cmV0dXJuIHMmJihjLm5vbmNlPXMpLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoYyksYy5zaGVldCYmYy5zaGVldC5pbnNlcnRSdWxlKGBcXG4gICAgICAgICAgW2RhdGEtbW90aW9uLXBvcC1pZD1cIiR7bn1cIl0ge1xcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xcbiAgICAgICAgICAgIHdpZHRoOiAke2V9cHggIWltcG9ydGFudDtcXG4gICAgICAgICAgICBoZWlnaHQ6ICR7b31weCAhaW1wb3J0YW50O1xcbiAgICAgICAgICAgIHRvcDogJHthfXB4ICFpbXBvcnRhbnQ7XFxuICAgICAgICAgICAgbGVmdDogJHtsfXB4ICFpbXBvcnRhbnQ7XFxuICAgICAgICAgIH1cXG4gICAgICAgIGApLCgpPT57ZG9jdW1lbnQuaGVhZC5yZW1vdmVDaGlsZChjKX19KSxbdF0pLCgwLGl1LmpzeCkoQmgse2lzUHJlc2VudDp0LGNoaWxkUmVmOnIsc2l6ZVJlZjppLGNoaWxkcmVuOm8uY2xvbmVFbGVtZW50KGUse3JlZjpyfSl9KX1jb25zdCBXaD0oe2NoaWxkcmVuOmUsaW5pdGlhbDp0LGlzUHJlc2VudDpuLG9uRXhpdENvbXBsZXRlOnIsY3VzdG9tOmkscHJlc2VuY2VBZmZlY3RzTGF5b3V0OnMsbW9kZTphfSk9Pntjb25zdCBsPWNmKFVoKSxjPSgwLG8udXNlSWQpKCksdT0oMCxvLnVzZU1lbW8pKCgoKT0+KHtpZDpjLGluaXRpYWw6dCxpc1ByZXNlbnQ6bixjdXN0b206aSxvbkV4aXRDb21wbGV0ZTplPT57bC5zZXQoZSwhMCk7Zm9yKGNvbnN0IGUgb2YgbC52YWx1ZXMoKSlpZighZSlyZXR1cm47ciYmcigpfSxyZWdpc3RlcjplPT4obC5zZXQoZSwhMSksKCk9PmwuZGVsZXRlKGUpKX0pKSxzP1tNYXRoLnJhbmRvbSgpXTpbbl0pO3JldHVybigwLG8udXNlTWVtbykoKCgpPT57bC5mb3JFYWNoKCgoZSx0KT0+bC5zZXQodCwhMSkpKX0pLFtuXSksby51c2VFZmZlY3QoKCgpPT57IW4mJiFsLnNpemUmJnImJnIoKX0pLFtuXSksXCJwb3BMYXlvdXRcIj09PWEmJihlPSgwLGl1LmpzeCkoVmgse2lzUHJlc2VudDpuLGNoaWxkcmVuOmV9KSksKDAsaXUuanN4KShzdS5Qcm92aWRlcix7dmFsdWU6dSxjaGlsZHJlbjplfSl9O2Z1bmN0aW9uIFVoKCl7cmV0dXJuIG5ldyBNYXB9Y29uc3QgJGg9ZT0+ZS5rZXl8fFwiXCI7ZnVuY3Rpb24gS2goZSl7Y29uc3QgdD1bXTtyZXR1cm4gby5DaGlsZHJlbi5mb3JFYWNoKGUsKGU9PnsoMCxvLmlzVmFsaWRFbGVtZW50KShlKSYmdC5wdXNoKGUpfSkpLHR9Y29uc3QgSGg9KHtjaGlsZHJlbjplLGV4aXRCZWZvcmVFbnRlcjp0LGN1c3RvbTpuLGluaXRpYWw6cj0hMCxvbkV4aXRDb21wbGV0ZTppLHByZXNlbmNlQWZmZWN0c0xheW91dDpzPSEwLG1vZGU6YT1cInN5bmNcIn0pPT57WGkoIXQsXCJSZXBsYWNlIGV4aXRCZWZvcmVFbnRlciB3aXRoIG1vZGU9J3dhaXQnXCIpO2NvbnN0IGw9KDAsby51c2VNZW1vKSgoKCk9PktoKGUpKSxbZV0pLGM9bC5tYXAoJGgpLHU9KDAsby51c2VSZWYpKCEwKSxkPSgwLG8udXNlUmVmKShsKSxmPWNmKCgoKT0+bmV3IE1hcCkpLFtoLHBdPSgwLG8udXNlU3RhdGUpKGwpLFttLGddPSgwLG8udXNlU3RhdGUpKGwpO3pkKCgoKT0+e3UuY3VycmVudD0hMSxkLmN1cnJlbnQ9bDtmb3IobGV0IGU9MDtlPG0ubGVuZ3RoO2UrKyl7Y29uc3QgdD0kaChtW2VdKTtjLmluY2x1ZGVzKHQpP2YuZGVsZXRlKHQpOiEwIT09Zi5nZXQodCkmJmYuc2V0KHQsITEpfX0pLFttLGMubGVuZ3RoLGMuam9pbihcIi1cIildKTtjb25zdCB2PVtdO2lmKGwhPT1oKXtsZXQgZT1bLi4ubF07Zm9yKGxldCB0PTA7dDxtLmxlbmd0aDt0Kyspe2NvbnN0IG49bVt0XSxyPSRoKG4pO2MuaW5jbHVkZXMocil8fChlLnNwbGljZSh0LDAsbiksdi5wdXNoKG4pKX1yZXR1cm5cIndhaXRcIj09PWEmJnYubGVuZ3RoJiYoZT12KSxnKEtoKGUpKSx2b2lkIHAobCl9Y29uc3R7Zm9yY2VSZW5kZXI6eX09KDAsby51c2VDb250ZXh0KShhdSk7cmV0dXJuKDAsaXUuanN4KShpdS5GcmFnbWVudCx7Y2hpbGRyZW46bS5tYXAoKGU9Pntjb25zdCB0PSRoKGUpLG89bD09PW18fGMuaW5jbHVkZXModCk7cmV0dXJuKDAsaXUuanN4KShXaCx7aXNQcmVzZW50Om8saW5pdGlhbDohKHUuY3VycmVudCYmIXIpJiZ2b2lkIDAsY3VzdG9tOm8/dm9pZCAwOm4scHJlc2VuY2VBZmZlY3RzTGF5b3V0OnMsbW9kZTphLG9uRXhpdENvbXBsZXRlOm8/dm9pZCAwOigpPT57aWYoIWYuaGFzKHQpKXJldHVybjtmLnNldCh0LCEwKTtsZXQgZT0hMDtmLmZvckVhY2goKHQ9Pnt0fHwoZT0hMSl9KSksZSYmKG51bGw9PXl8fHkoKSxnKGQuY3VycmVudCksaSYmaSgpKX0sY2hpbGRyZW46ZX0sdCl9KSl9KX07ZnVuY3Rpb24gcWgoZSl7cmV0dXJuIHFoPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LHFoKGUpfWZ1bmN0aW9uIFloKGUsdCl7dmFyIG49T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIHI9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYocj1yLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxuLnB1c2guYXBwbHkobixyKX1yZXR1cm4gbn1mdW5jdGlvbiBHaChlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9ZaChPYmplY3QobiksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe1hoKGUsdCxuW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG4pKTpZaChPYmplY3QobikpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihuLHQpKX0pKX1yZXR1cm4gZX1mdW5jdGlvbiBYaChlLHQsbil7cmV0dXJuKHQ9ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oZSl7aWYoXCJvYmplY3RcIiE9cWgoZSl8fCFlKXJldHVybiBlO3ZhciB0PWVbU3ltYm9sLnRvUHJpbWl0aXZlXTtpZih2b2lkIDAhPT10KXt2YXIgbj10LmNhbGwoZSxcInN0cmluZ1wiKTtpZihcIm9iamVjdFwiIT1xaChuKSlyZXR1cm4gbjt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIil9cmV0dXJuIFN0cmluZyhlKX0oZSk7cmV0dXJuXCJzeW1ib2xcIj09cWgodCk/dDp0K1wiXCJ9KHQpKWluIGU/T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmVbdF09bixlfWZ1bmN0aW9uIEpoKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIFpoKGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/WmgoZSx0KTp2b2lkIDB9fWZ1bmN0aW9uIFpoKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn12YXIgUWgsZXA9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS50b2FzdEl0ZW0sbj1lLnRpdGxlLHI9dm9pZCAwPT09bj9udWxsOm4saT1lLmNvbnRlbnQscz12b2lkIDA9PT1pP251bGw6aSxhPWUuYXV0b0Rpc21pc3MsbD12b2lkIDA9PT1hfHxhLGM9ZS5kaXNtaXNzQWZ0ZXIsdT12b2lkIDA9PT1jPzVlMzpjLGQ9ZS50aGVtZSxmPXZvaWQgMD09PWQ/XCJsaWdodFwiOmQsaD1lLmRlc2lnbixwPXZvaWQgMD09PWg/XCJzdGFja1wiOmgsbT1lLmljb24sZz12b2lkIDA9PT1tP251bGw6bSx2PWUudmFyaWFudCx5PXZvaWQgMD09PXY/XCJuZXV0cmFsXCI6dixiPWUucmVtb3ZlVG9hc3QseD0oMCxvLnVzZVJlZikoMCksdz0oMCxvLnVzZVJlZikoMCksRT0oMCxvLnVzZVJlZikoMCksUz1mdW5jdGlvbihlKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06dTtpZihsJiYhKHU8MCkpcmV0dXJuIHguY3VycmVudD0obmV3IERhdGUpLmdldFRpbWUoKSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe2IoZS5pZCl9KSx0KX07KDAsby51c2VFZmZlY3QpKChmdW5jdGlvbigpe3ZhciBlPXU7cmV0dXJuIEUuY3VycmVudD1TKHQsZSksZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoRS5jdXJyZW50KX19KSxbXSksKDAsby51c2VFZmZlY3QpKChmdW5jdGlvbigpe251bGwhPXQmJnQuZGlzbWlzcyYmYih0LmlkKX0pLFt0XSk7dmFyIF8sayxDLFAsVCxPLFIsTixBLGosTT1mdW5jdGlvbigpe3ZhciBlLG47bnVsbD09dHx8bnVsbD09PShlPXQuYWN0aW9uKXx8dm9pZCAwPT09ZXx8bnVsbD09PShuPWUub25DbGljayl8fHZvaWQgMD09PW58fG4uY2FsbChlLChmdW5jdGlvbigpe3JldHVybiBiKHQuaWQpfSkpfSxJPW51bGw7cmV0dXJuXCJzdGFja1wiPT09cCYmKEk9UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LXN0YXJ0IHAtNCBnYXAtMiByZWxhdGl2ZSBib3JkZXIgYm9yZGVyLXNvbGlkIHJvdW5kZWQtbWQgc2hhZG93LWxnXCIsXCJkYXJrXCI9PT1mP0ZoOm51bGw9PT0oXz1MaCl8fHZvaWQgMD09PV8/dm9pZCAwOl9beV0sXCJ3LVsyMi41cmVtXVwiKSxvbk1vdXNlRW50ZXI6ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoRS5jdXJyZW50KSx3LmN1cnJlbnQ9KG5ldyBEYXRlKS5nZXRUaW1lKCl9LG9uTW91c2VMZWF2ZTpmdW5jdGlvbigpe0UuY3VycmVudD1TKHQsdS0ody5jdXJyZW50LXguY3VycmVudCkpfX0sXCJjdXN0b21cIiE9PXQudHlwZT9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJzZWxmLXN0YXJ0IGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIFsmX3N2Z106c2l6ZS01IHNocmluay0wXCJ9LHRpKHt2YXJpYW50OnksaWNvbjpnLHRoZW1lOmZ9KSksUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJmbGV4IGZsZXgtY29sIGl0ZW1zLXN0YXJ0IGp1c3RpZnktc3RhcnQgZ2FwLTAuNVwifSxyaSh7dGl0bGU6cix0aGVtZTpmfSksb2koe2NvbnRlbnQ6cyx0aGVtZTpmfSksKG51bGw9PXR8fG51bGw9PT0oaz10LmFjdGlvbil8fHZvaWQgMD09PWs/dm9pZCAwOmsubGFiZWwpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZihudWxsPT10fHxudWxsPT09KEM9dC5hY3Rpb24pfHx2b2lkIDA9PT1DP3ZvaWQgMDpDLm9uQ2xpY2spJiZSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcIm10LTIuNVwifSxuaSh7YWN0aW9uTGFiZWw6bnVsbD09dHx8bnVsbD09PShQPXQuYWN0aW9uKXx8dm9pZCAwPT09UD92b2lkIDA6UC5sYWJlbCxhY3Rpb25UeXBlOm51bGwhPT0oVD1udWxsPT10fHxudWxsPT09KE89dC5hY3Rpb24pfHx2b2lkIDA9PT1PP3ZvaWQgMDpPLnR5cGUpJiZ2b2lkIDAhPT1UP1Q6XCJidXR0b25cIixvbkFjdGlvbjpNLHRoZW1lOmZ9KSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwiYWJzb2x1dGUgcmlnaHQtNCB0b3AtNCBbJl9zdmddOnNpemUtNVwifSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIse2NsYXNzTmFtZTp0ZShcImJnLXRyYW5zcGFyZW50IG0tMCBwLTAgYm9yZGVyLW5vbmUgZm9jdXM6b3V0bGluZS1ub25lIGFjdGl2ZTpvdXRsaW5lLW5vbmUgY3Vyc29yLXBvaW50ZXJcIixudWxsIT09KFI9emhbZl0pJiZ2b2lkIDAhPT1SP1I6emgubGlnaHQpLG9uQ2xpY2s6ZnVuY3Rpb24oKXtyZXR1cm4gYih0LmlkKX19LFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGUsbnVsbCkpKSk6bnVsbD09dHx8bnVsbD09PShOPXQuanN4KXx8dm9pZCAwPT09Tj92b2lkIDA6Ti5jYWxsKHQse2Nsb3NlOmZ1bmN0aW9uKCl7cmV0dXJuIGIodC5pZCl9LGFjdGlvbjpudWxsIT10JiZ0LmFjdGlvbj9HaChHaCh7fSxudWxsPT10P3ZvaWQgMDp0LmFjdGlvbikse30se29uQ2xpY2s6TX0pOm51bGx9KSkpLFwiaW5saW5lXCI9PT1wJiYoST1SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktc3RhcnQgcC0zIGdhcC0yIHJlbGF0aXZlIGJvcmRlciBib3JkZXItc29saWQgcm91bmRlZC1tZCBzaGFkb3ctbGdcIixcImRhcmtcIj09PWY/Rmg6bnVsbD09PShBPUxoKXx8dm9pZCAwPT09QT92b2lkIDA6QVt5XSxcImxnOnctWzQ3LjVyZW1dIHctZnVsbFwiKX0sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJzZWxmLXN0YXJ0IGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIFsmX3N2Z106c2l6ZS01IHNocmluay0wXCJ9LHRpKHt2YXJpYW50OnksaWNvbjpnLHRoZW1lOmZ9KSksUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJmbGV4IGl0ZW1zLXN0YXJ0IGp1c3RpZnktc3RhcnQgZ2FwLTEgbXItMTAgWyY+c3BhbjpmaXJzdC1jaGlsZF06c2hyaW5rLTBcIn0scmkoe3RpdGxlOnIsdGhlbWU6Zn0pLG9pKHtjb250ZW50OnMsdGhlbWU6Zn0pKSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImFic29sdXRlIHJpZ2h0LTMgdG9wLTMgWyZfc3ZnXTpzaXplLTVcIn0sUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLHtjbGFzc05hbWU6dGUoXCJiZy10cmFuc3BhcmVudCBtLTAgcC0wIGJvcmRlci1ub25lIGZvY3VzOm91dGxpbmUtbm9uZSBhY3RpdmU6b3V0bGluZS1ub25lIGN1cnNvci1wb2ludGVyXCIsbnVsbCE9PShqPXpoW2ZdKSYmdm9pZCAwIT09aj9qOnpoLmxpZ2h0KSxvbkNsaWNrOmZ1bmN0aW9uKCl7cmV0dXJuIGIodC5pZCl9fSxSZWFjdC5jcmVhdGVFbGVtZW50KEhlLG51bGwpKSkpKSxJfSx0cD0oUWg9ZnVuY3Rpb24oZSl7dmFyIHQsbixyLGk9ZS5wb3NpdGlvbixzPXZvaWQgMD09PWk/XCJ0b3AtcmlnaHRcIjppLGE9ZS5kZXNpZ24sbD12b2lkIDA9PT1hP1wic3RhY2tcIjphLGM9ZS50aGVtZSx1PXZvaWQgMD09PWM/XCJsaWdodFwiOmMsZD1lLmNsYXNzTmFtZSxmPXZvaWQgMD09PWQ/XCJcIjpkLGg9ZS5hdXRvRGlzbWlzcyxwPXZvaWQgMD09PWh8fGgsbT1lLmRpc21pc3NBZnRlcixnPXZvaWQgMD09PW0/NWUzOm0sdj0obj0oMCxvLnVzZVN0YXRlKShbXSkscj0yLGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KG4pfHxmdW5jdGlvbihlLHQpe3ZhciBuPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saSxzLGE9W10sbD0hMCxjPSExO3RyeXtpZihpPShuPW4uY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KG4pIT09bilyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShyPWkuY2FsbChuKSkuZG9uZSkmJihhLnB1c2goci52YWx1ZSksYS5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxvPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPW4ucmV0dXJuJiYocz1uLnJldHVybigpLE9iamVjdChzKSE9PXMpKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgb319cmV0dXJuIGF9fShuLHIpfHxKaChuLHIpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCkpLHk9dlswXSxiPXZbMV07KDAsby51c2VFZmZlY3QpKChmdW5jdGlvbigpe2poLnN1YnNjcmliZSgoZnVuY3Rpb24oZSl7bnVsbCE9ZSYmZS5kaXNtaXNzP2IoKGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQ9PT1lLmlkP0doKEdoKHt9LHQpLHt9LHtkaXNtaXNzOiEwfSk6dH0pKX0pKTpzZXRUaW1lb3V0KChmdW5jdGlvbigpeygwLHpuLmZsdXNoU3luYykoKGZ1bmN0aW9uKCl7cmV0dXJuIGIoKGZ1bmN0aW9uKHQpe3JldHVybi0xIT09dC5maW5kSW5kZXgoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlkPT09ZS5pZH0pKT90Lm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQ9PT1lLmlkP0doKEdoKHt9LHQpLGUpOnR9KSk6W10uY29uY2F0KGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBaaChlKX0oZSl8fGZ1bmN0aW9uKGUpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJm51bGwhPWVbU3ltYm9sLml0ZXJhdG9yXXx8bnVsbCE9ZVtcIkBAaXRlcmF0b3JcIl0pcmV0dXJuIEFycmF5LmZyb20oZSl9KGUpfHxKaChlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX0odCksW2VdKX0pKX0pKX0pKX0pKX0pLFtdKTt2YXIgeD1mdW5jdGlvbihlKXtiKChmdW5jdGlvbih0KXtyZXR1cm4gdC5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmlkIT09ZX0pKX0pKX07cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLHtjbGFzc05hbWU6dGUoXCJmaXhlZCBmbGV4IGZsZXgtY29sIGxpc3Qtbm9uZSB6LTIwIHAtMTAgcG9pbnRlci1ldmVudHMtbm9uZSBbJj5saV06cG9pbnRlci1ldmVudHMtYXV0byBnYXAtM1wiLG51bGwhPT0odD1EaFtzXSkmJnZvaWQgMCE9PXQ/dDpEaFtcInRvcC1yaWdodFwiXSxmKX0sUmVhY3QuY3JlYXRlRWxlbWVudChIaCx7aW5pdGlhbDohMX0seS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0LG4scixvLGk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGYubGkse2tleTplLmlkLHBvc2l0aW9uVHJhbnNpdGlvbjohMCxpbml0aWFsOntvcGFjaXR5OjAseTo1MCxzY2FsZTouN30sYW5pbWF0ZTp7b3BhY2l0eToxLHk6MCxzY2FsZToxfSxleGl0OntvcGFjaXR5OjAsc2NhbGU6LjYsdHJhbnNpdGlvbjp7ZHVyYXRpb246LjE1fX0sbGF5b3V0SWQ6XCJ0b2FzdC1cIi5jb25jYXQoZS5pZCl9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoZXAse3RvYXN0SXRlbTplLHRpdGxlOmUudGl0bGUsY29udGVudDpudWxsPT1lP3ZvaWQgMDplLmRlc2NyaXB0aW9uLGljb246bnVsbCE9PSh0PW51bGw9PWU/dm9pZCAwOmUuaWNvbikmJnZvaWQgMCE9PXQ/dDpudWxsLGRlc2lnbjpudWxsIT09KG49bnVsbD09ZT92b2lkIDA6ZS5kZXNpZ24pJiZ2b2lkIDAhPT1uP246bCxhdXRvRGlzbWlzczpudWxsIT09KHI9bnVsbD09ZT92b2lkIDA6ZS5hdXRvRGlzbWlzcykmJnZvaWQgMCE9PXI/cjpwLGRpc21pc3NBZnRlcjpudWxsIT09KG89bnVsbD09ZT92b2lkIDA6ZS5kaXNtaXNzQWZ0ZXIpJiZ2b2lkIDAhPT1vP286ZyxyZW1vdmVUb2FzdDp4LHZhcmlhbnQ6ZS50eXBlLHRoZW1lOm51bGwhPT0oaT1udWxsPT1lP3ZvaWQgMDplLnRoZW1lKSYmdm9pZCAwIT09aT9pOnV9KSl9KSkpKX0sKDAsby5tZW1vKSgoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zaW5nbGVUb247cmV0dXJuIEloJiZ0P251bGw6KEloPSEwLFJlYWN0LmNyZWF0ZUVsZW1lbnQoUWgsZSkpfSkpKSxucD17c206ezE6XCJncmlkLWNvbHMtMVwiLDI6XCJncmlkLWNvbHMtMlwiLDM6XCJncmlkLWNvbHMtM1wiLDQ6XCJncmlkLWNvbHMtNFwiLDU6XCJncmlkLWNvbHMtNVwiLDY6XCJncmlkLWNvbHMtNlwiLDc6XCJncmlkLWNvbHMtN1wiLDg6XCJncmlkLWNvbHMtOFwiLDk6XCJncmlkLWNvbHMtOVwiLDEwOlwiZ3JpZC1jb2xzLTEwXCIsMTE6XCJncmlkLWNvbHMtMTFcIiwxMjpcImdyaWQtY29scy0xMlwifSxtZDp7MTpcIm1kOmdyaWQtY29scy0xXCIsMjpcIm1kOmdyaWQtY29scy0yXCIsMzpcIm1kOmdyaWQtY29scy0zXCIsNDpcIm1kOmdyaWQtY29scy00XCIsNTpcIm1kOmdyaWQtY29scy01XCIsNjpcIm1kOmdyaWQtY29scy02XCIsNzpcIm1kOmdyaWQtY29scy03XCIsODpcIm1kOmdyaWQtY29scy04XCIsOTpcIm1kOmdyaWQtY29scy05XCIsMTA6XCJtZDpncmlkLWNvbHMtMTBcIiwxMTpcIm1kOmdyaWQtY29scy0xMVwiLDEyOlwibWQ6Z3JpZC1jb2xzLTEyXCJ9LGxnOnsxOlwibGc6Z3JpZC1jb2xzLTFcIiwyOlwibGc6Z3JpZC1jb2xzLTJcIiwzOlwibGc6Z3JpZC1jb2xzLTNcIiw0OlwibGc6Z3JpZC1jb2xzLTRcIiw1OlwibGc6Z3JpZC1jb2xzLTVcIiw2OlwibGc6Z3JpZC1jb2xzLTZcIiw3OlwibGc6Z3JpZC1jb2xzLTdcIiw4OlwibGc6Z3JpZC1jb2xzLThcIiw5OlwibGc6Z3JpZC1jb2xzLTlcIiwxMDpcImxnOmdyaWQtY29scy0xMFwiLDExOlwibGc6Z3JpZC1jb2xzLTExXCIsMTI6XCJsZzpncmlkLWNvbHMtMTJcIn19LHJwPXtzbTp7eHM6XCJnYXAtMlwiLHNtOlwiZ2FwLTRcIixtZDpcImdhcC01XCIsbGc6XCJnYXAtNlwiLHhsOlwiZ2FwLTZcIixcIjJ4bFwiOlwiZ2FwLThcIn0sbWQ6e3hzOlwibWQ6Z2FwLTJcIixzbTpcIm1kOmdhcC00XCIsbWQ6XCJtZDpnYXAtNVwiLGxnOlwibWQ6Z2FwLTZcIix4bDpcIm1kOmdhcC02XCIsXCIyeGxcIjpcIm1kOmdhcC04XCJ9LGxnOnt4czpcImxnOmdhcC0yXCIsc206XCJsZzpnYXAtNFwiLG1kOlwibGc6Z2FwLTVcIixsZzpcImxnOmdhcC02XCIseGw6XCJsZzpnYXAtNlwiLFwiMnhsXCI6XCJsZzpnYXAtOFwifX0sb3A9e3NtOnt4czpcImdhcC14LTJcIixzbTpcImdhcC14LTRcIixtZDpcImdhcC14LTVcIixsZzpcImdhcC14LTZcIix4bDpcImdhcC14LTZcIixcIjJ4bFwiOlwiZ2FwLXgtOFwifSxtZDp7eHM6XCJtZDpnYXAteC0yXCIsc206XCJtZDpnYXAteC00XCIsbWQ6XCJtZDpnYXAteC01XCIsbGc6XCJtZDpnYXAteC02XCIseGw6XCJtZDpnYXAteC02XCIsXCIyeGxcIjpcIm1kOmdhcC14LThcIn0sbGc6e3hzOlwibGc6Z2FwLXgtMlwiLHNtOlwibGc6Z2FwLXgtNFwiLG1kOlwibGc6Z2FwLXgtNVwiLGxnOlwibGc6Z2FwLXgtNlwiLHhsOlwibGc6Z2FwLXgtNlwiLFwiMnhsXCI6XCJsZzpnYXAteC04XCJ9fSxpcD17c206e3hzOlwiZ2FwLXktMlwiLHNtOlwiZ2FwLXktNFwiLG1kOlwiZ2FwLXktNVwiLGxnOlwiZ2FwLXktNlwiLHhsOlwiZ2FwLXktNlwiLFwiMnhsXCI6XCJnYXAteS04XCJ9LG1kOnt4czpcIm1kOmdhcC15LTJcIixzbTpcIm1kOmdhcC15LTRcIixtZDpcIm1kOmdhcC15LTVcIixsZzpcIm1kOmdhcC15LTZcIix4bDpcIm1kOmdhcC15LTZcIixcIjJ4bFwiOlwibWQ6Z2FwLXktOFwifSxsZzp7eHM6XCJsZzpnYXAteS0yXCIsc206XCJsZzpnYXAteS00XCIsbWQ6XCJsZzpnYXAteS01XCIsbGc6XCJsZzpnYXAteS02XCIseGw6XCJsZzpnYXAteS02XCIsXCIyeGxcIjpcImxnOmdhcC15LThcIn19LHNwPXtzbTp7MTpcImNvbC1zcGFuLTFcIiwyOlwiY29sLXNwYW4tMlwiLDM6XCJjb2wtc3Bhbi0zXCIsNDpcImNvbC1zcGFuLTRcIiw1OlwiY29sLXNwYW4tNVwiLDY6XCJjb2wtc3Bhbi02XCIsNzpcImNvbC1zcGFuLTdcIiw4OlwiY29sLXNwYW4tOFwiLDk6XCJjb2wtc3Bhbi05XCIsMTA6XCJjb2wtc3Bhbi0xMFwiLDExOlwiY29sLXNwYW4tMTFcIiwxMjpcImNvbC1zcGFuLTEyXCJ9LG1kOnsxOlwibWQ6Y29sLXNwYW4tMVwiLDI6XCJtZDpjb2wtc3Bhbi0yXCIsMzpcIm1kOmNvbC1zcGFuLTNcIiw0OlwibWQ6Y29sLXNwYW4tNFwiLDU6XCJtZDpjb2wtc3Bhbi01XCIsNjpcIm1kOmNvbC1zcGFuLTZcIiw3OlwibWQ6Y29sLXNwYW4tN1wiLDg6XCJtZDpjb2wtc3Bhbi04XCIsOTpcIm1kOmNvbC1zcGFuLTlcIiwxMDpcIm1kOmNvbC1zcGFuLTEwXCIsMTE6XCJtZDpjb2wtc3Bhbi0xMVwiLDEyOlwibWQ6Y29sLXNwYW4tMTJcIn0sbGc6ezE6XCJsZzpjb2wtc3Bhbi0xXCIsMjpcImxnOmNvbC1zcGFuLTJcIiwzOlwibGc6Y29sLXNwYW4tM1wiLDQ6XCJsZzpjb2wtc3Bhbi00XCIsNTpcImxnOmNvbC1zcGFuLTVcIiw2OlwibGc6Y29sLXNwYW4tNlwiLDc6XCJsZzpjb2wtc3Bhbi03XCIsODpcImxnOmNvbC1zcGFuLThcIiw5OlwibGc6Y29sLXNwYW4tOVwiLDEwOlwibGc6Y29sLXNwYW4tMTBcIiwxMTpcImxnOmNvbC1zcGFuLTExXCIsMTI6XCJsZzpjb2wtc3Bhbi0xMlwifX0sYXA9e3NtOnsxOlwiY29sLXN0YXJ0LTFcIiwyOlwiY29sLXN0YXJ0LTJcIiwzOlwiY29sLXN0YXJ0LTNcIiw0OlwiY29sLXN0YXJ0LTRcIiw1OlwiY29sLXN0YXJ0LTVcIiw2OlwiY29sLXN0YXJ0LTZcIiw3OlwiY29sLXN0YXJ0LTdcIiw4OlwiY29sLXN0YXJ0LThcIiw5OlwiY29sLXN0YXJ0LTlcIiwxMDpcImNvbC1zdGFydC0xMFwiLDExOlwiY29sLXN0YXJ0LTExXCIsMTI6XCJjb2wtc3RhcnQtMTJcIn0sbWQ6ezE6XCJtZDpjb2wtc3RhcnQtMVwiLDI6XCJtZDpjb2wtc3RhcnQtMlwiLDM6XCJtZDpjb2wtc3RhcnQtM1wiLDQ6XCJtZDpjb2wtc3RhcnQtNFwiLDU6XCJtZDpjb2wtc3RhcnQtNVwiLDY6XCJtZDpjb2wtc3RhcnQtNlwiLDc6XCJtZDpjb2wtc3RhcnQtN1wiLDg6XCJtZDpjb2wtc3RhcnQtOFwiLDk6XCJtZDpjb2wtc3RhcnQtOVwiLDEwOlwibWQ6Y29sLXN0YXJ0LTEwXCIsMTE6XCJtZDpjb2wtc3RhcnQtMTFcIiwxMjpcIm1kOmNvbC1zdGFydC0xMlwifSxsZzp7MTpcImxnOmNvbC1zdGFydC0xXCIsMjpcImxnOmNvbC1zdGFydC0yXCIsMzpcImxnOmNvbC1zdGFydC0zXCIsNDpcImxnOmNvbC1zdGFydC00XCIsNTpcImxnOmNvbC1zdGFydC01XCIsNjpcImxnOmNvbC1zdGFydC02XCIsNzpcImxnOmNvbC1zdGFydC03XCIsODpcImxnOmNvbC1zdGFydC04XCIsOTpcImxnOmNvbC1zdGFydC05XCIsMTA6XCJsZzpjb2wtc3RhcnQtMTBcIiwxMTpcImxnOmNvbC1zdGFydC0xMVwiLDEyOlwibGc6Y29sLXN0YXJ0LTEyXCJ9fSxscD17c206e3JvdzpcImdyaWQtZmxvdy1yb3dcIixjb2x1bW46XCJncmlkLWZsb3ctY29sXCIsXCJyb3ctZGVuc2VcIjpcImdyaWQtZmxvdy1yb3ctZGVuc2VcIixcImNvbHVtbi1kZW5zZVwiOlwiZ3JpZC1mbG93LWNvbC1kZW5zZVwifSxtZDp7cm93OlwibWQ6Z3JpZC1mbG93LXJvd1wiLGNvbHVtbjpcIm1kOmdyaWQtZmxvdy1jb2xcIixcInJvdy1kZW5zZVwiOlwibWQ6Z3JpZC1mbG93LXJvdy1kZW5zZVwiLFwiY29sdW1uLWRlbnNlXCI6XCJtZDpncmlkLWZsb3ctY29sLWRlbnNlXCJ9LGxnOntyb3c6XCJsZzpncmlkLWZsb3ctcm93XCIsY29sdW1uOlwibGc6Z3JpZC1mbG93LWNvbFwiLFwicm93LWRlbnNlXCI6XCJsZzpncmlkLWZsb3ctcm93LWRlbnNlXCIsXCJjb2x1bW4tZGVuc2VcIjpcImxnOmdyaWQtZmxvdy1jb2wtZGVuc2VcIn19LGNwPXtzbTp7bm9ybWFsOlwianVzdGlmeS1ub3JtYWxcIixzdGFydDpcImp1c3RpZnktc3RhcnRcIixlbmQ6XCJqdXN0aWZ5LWVuZFwiLGNlbnRlcjpcImp1c3RpZnktY2VudGVyXCIsYmV0d2VlbjpcImp1c3RpZnktYmV0d2VlblwiLGFyb3VuZDpcImp1c3RpZnktYXJvdW5kXCIsZXZlbmx5OlwianVzdGlmeS1ldmVubHlcIixzdHJldGNoOlwianVzdGlmeS1zdHJldGNoXCJ9LG1kOntub3JtYWw6XCJtZDpqdXN0aWZ5LW5vcm1hbFwiLHN0YXJ0OlwibWQ6anVzdGlmeS1zdGFydFwiLGVuZDpcIm1kOmp1c3RpZnktZW5kXCIsY2VudGVyOlwibWQ6anVzdGlmeS1jZW50ZXJcIixiZXR3ZWVuOlwibWQ6anVzdGlmeS1iZXR3ZWVuXCIsYXJvdW5kOlwibWQ6anVzdGlmeS1hcm91bmRcIixldmVubHk6XCJtZDpqdXN0aWZ5LWV2ZW5seVwiLHN0cmV0Y2g6XCJtZDpqdXN0aWZ5LXN0cmV0Y2hcIn0sbGc6e25vcm1hbDpcImxnOmp1c3RpZnktbm9ybWFsXCIsc3RhcnQ6XCJsZzpqdXN0aWZ5LXN0YXJ0XCIsZW5kOlwibGc6anVzdGlmeS1lbmRcIixjZW50ZXI6XCJsZzpqdXN0aWZ5LWNlbnRlclwiLGJldHdlZW46XCJsZzpqdXN0aWZ5LWJldHdlZW5cIixhcm91bmQ6XCJsZzpqdXN0aWZ5LWFyb3VuZFwiLGV2ZW5seTpcImxnOmp1c3RpZnktZXZlbmx5XCIsc3RyZXRjaDpcImxnOmp1c3RpZnktc3RyZXRjaFwifX0sdXA9e3NtOntzdGFydDpcIml0ZW1zLXN0YXJ0XCIsZW5kOlwiaXRlbXMtZW5kXCIsY2VudGVyOlwiaXRlbXMtY2VudGVyXCIsYmFzZWxpbmU6XCJpdGVtcy1iYXNlbGluZVwiLHN0cmV0Y2g6XCJpdGVtcy1zdHJldGNoXCJ9LG1kOntzdGFydDpcIm1kOml0ZW1zLXN0YXJ0XCIsZW5kOlwibWQ6aXRlbXMtZW5kXCIsY2VudGVyOlwibWQ6aXRlbXMtY2VudGVyXCIsYmFzZWxpbmU6XCJtZDppdGVtcy1iYXNlbGluZVwiLHN0cmV0Y2g6XCJtZDppdGVtcy1zdHJldGNoXCJ9LGxnOntzdGFydDpcImxnOml0ZW1zLXN0YXJ0XCIsZW5kOlwibGc6aXRlbXMtZW5kXCIsY2VudGVyOlwibGc6aXRlbXMtY2VudGVyXCIsYmFzZWxpbmU6XCJsZzppdGVtcy1iYXNlbGluZVwiLHN0cmV0Y2g6XCJsZzppdGVtcy1zdHJldGNoXCJ9fSxkcD17c206e3N0YXJ0Olwic2VsZi1zdGFydFwiLGVuZDpcInNlbGYtZW5kXCIsY2VudGVyOlwic2VsZi1jZW50ZXJcIixiYXNlbGluZTpcInNlbGYtYmFzZWxpbmVcIixzdHJldGNoOlwic2VsZi1zdHJldGNoXCJ9LG1kOntzdGFydDpcIm1kOnNlbGYtc3RhcnRcIixlbmQ6XCJtZDpzZWxmLWVuZFwiLGNlbnRlcjpcIm1kOnNlbGYtY2VudGVyXCIsYmFzZWxpbmU6XCJtZDpzZWxmLWJhc2VsaW5lXCIsc3RyZXRjaDpcIm1kOnNlbGYtc3RyZXRjaFwifSxsZzp7c3RhcnQ6XCJsZzpzZWxmLXN0YXJ0XCIsZW5kOlwibGc6c2VsZi1lbmRcIixjZW50ZXI6XCJsZzpzZWxmLWNlbnRlclwiLGJhc2VsaW5lOlwibGc6c2VsZi1iYXNlbGluZVwiLHN0cmV0Y2g6XCJsZzpzZWxmLXN0cmV0Y2hcIn19LGZwPXtzbTp7YXV0bzpcImp1c3RpZnktc2VsZi1hdXRvXCIsc3RhcnQ6XCJqdXN0aWZ5LXNlbGYtc3RhcnRcIixlbmQ6XCJqdXN0aWZ5LXNlbGYtZW5kXCIsY2VudGVyOlwianVzdGlmeS1zZWxmLWNlbnRlclwiLGJhc2VsaW5lOlwianVzdGlmeS1zZWxmLWJhc2VsaW5lXCIsc3RyZXRjaDpcImp1c3RpZnktc2VsZi1zdHJldGNoXCJ9LG1kOnthdXRvOlwibWQ6anVzdGlmeS1zZWxmLWF1dG9cIixzdGFydDpcIm1kOmp1c3RpZnktc2VsZi1zdGFydFwiLGVuZDpcIm1kOmp1c3RpZnktc2VsZi1lbmRcIixjZW50ZXI6XCJtZDpqdXN0aWZ5LXNlbGYtY2VudGVyXCIsYmFzZWxpbmU6XCJtZDpqdXN0aWZ5LXNlbGYtYmFzZWxpbmVcIixzdHJldGNoOlwibWQ6anVzdGlmeS1zZWxmLXN0cmV0Y2hcIn0sbGc6e2F1dG86XCJsZzpqdXN0aWZ5LXNlbGYtYXV0b1wiLHN0YXJ0OlwibGc6anVzdGlmeS1zZWxmLXN0YXJ0XCIsZW5kOlwibGc6anVzdGlmeS1zZWxmLWVuZFwiLGNlbnRlcjpcImxnOmp1c3RpZnktc2VsZi1jZW50ZXJcIixiYXNlbGluZTpcImxnOmp1c3RpZnktc2VsZi1iYXNlbGluZVwiLHN0cmV0Y2g6XCJsZzpqdXN0aWZ5LXNlbGYtc3RyZXRjaFwifX0saHA9e3NtOntyb3c6XCJmbGV4LXJvd1wiLFwicm93LXJldmVyc2VcIjpcImZsZXgtcm93LXJldmVyc2VcIixjb2x1bW46XCJmbGV4LWNvbFwiLFwiY29sdW1uLXJldmVyc2VcIjpcImZsZXgtY29sLXJldmVyc2VcIn0sbWQ6e3JvdzpcIm1kOmZsZXgtcm93XCIsXCJyb3ctcmV2ZXJzZVwiOlwibWQ6ZmxleC1yb3ctcmV2ZXJzZVwiLGNvbHVtbjpcIm1kOmZsZXgtY29sXCIsXCJjb2x1bW4tcmV2ZXJzZVwiOlwibWQ6ZmxleC1jb2wtcmV2ZXJzZVwifSxsZzp7cm93OlwibGc6ZmxleC1yb3dcIixcInJvdy1yZXZlcnNlXCI6XCJsZzpmbGV4LXJvdy1yZXZlcnNlXCIsY29sdW1uOlwibGc6ZmxleC1jb2xcIixcImNvbHVtbi1yZXZlcnNlXCI6XCJsZzpmbGV4LWNvbC1yZXZlcnNlXCJ9fSxwcD17c206e3dyYXA6XCJmbGV4LXdyYXBcIixcIndyYXAtcmV2ZXJzZVwiOlwiZmxleC13cmFwLXJldmVyc2VcIixub3dyYXA6XCJmbGV4LW5vd3JhcFwifSxtZDp7d3JhcDpcIm1kOmZsZXgtd3JhcFwiLFwid3JhcC1yZXZlcnNlXCI6XCJtZDpmbGV4LXdyYXAtcmV2ZXJzZVwiLG5vd3JhcDpcIm1kOmZsZXgtbm93cmFwXCJ9LGxnOnt3cmFwOlwibGc6ZmxleC13cmFwXCIsXCJ3cmFwLXJldmVyc2VcIjpcImxnOmZsZXgtd3JhcC1yZXZlcnNlXCIsbm93cmFwOlwibGc6ZmxleC1ub3dyYXBcIn19LG1wPXtzbTp7MTpcInctZnVsbFwiLDI6XCJ3LTEvMlwiLDM6XCJ3LTEvM1wiLDQ6XCJ3LTEvNFwiLDU6XCJ3LTEvNVwiLDY6XCJ3LTEvNlwiLDc6XCJ3LTEvN1wiLDg6XCJ3LTEvOFwiLDk6XCJ3LTEvOVwiLDEwOlwidy0xLzEwXCIsMTE6XCJ3LTEvMTFcIiwxMjpcInctMS8xMlwifSxtZDp7MTpcIm1kOnctZnVsbFwiLDI6XCJtZDp3LTEvMlwiLDM6XCJtZDp3LTEvM1wiLDQ6XCJtZDp3LTEvNFwiLDU6XCJtZDp3LTEvNVwiLDY6XCJtZDp3LTEvNlwiLDc6XCJtZDp3LTEvN1wiLDg6XCJtZDp3LTEvOFwiLDk6XCJtZDp3LTEvOVwiLDEwOlwibWQ6dy0xLzEwXCIsMTE6XCJtZDp3LTEvMTFcIiwxMjpcIm1kOnctMS8xMlwifSxsZzp7MTpcImxnOnctZnVsbFwiLDI6XCJsZzp3LTEvMlwiLDM6XCJsZzp3LTEvM1wiLDQ6XCJsZzp3LTEvNFwiLDU6XCJsZzp3LTEvNVwiLDY6XCJsZzp3LTEvNlwiLDc6XCJsZzp3LTEvN1wiLDg6XCJsZzp3LTEvOFwiLDk6XCJsZzp3LTEvOVwiLDEwOlwibGc6dy0xLzEwXCIsMTE6XCJsZzp3LTEvMTFcIiwxMjpcImxnOnctMS8xMlwifX0sZ3A9e3NtOnsxOlwib3JkZXItMVwiLDI6XCJvcmRlci0yXCIsMzpcIm9yZGVyLTNcIiw0Olwib3JkZXItNFwiLDU6XCJvcmRlci01XCIsNjpcIm9yZGVyLTZcIiw3Olwib3JkZXItN1wiLDg6XCJvcmRlci04XCIsOTpcIm9yZGVyLTlcIiwxMDpcIm9yZGVyLTEwXCIsMTE6XCJvcmRlci0xMVwiLDEyOlwib3JkZXItMTJcIixmaXJzdDpcIm9yZGVyLWZpcnN0XCIsbGFzdDpcIm9yZGVyLWxhc3RcIixub25lOlwib3JkZXItbm9uZVwifSxtZDp7MTpcIm1kOm9yZGVyLTFcIiwyOlwibWQ6b3JkZXItMlwiLDM6XCJtZDpvcmRlci0zXCIsNDpcIm1kOm9yZGVyLTRcIiw1OlwibWQ6b3JkZXItNVwiLDY6XCJtZDpvcmRlci02XCIsNzpcIm1kOm9yZGVyLTdcIiw4OlwibWQ6b3JkZXItOFwiLDk6XCJtZDpvcmRlci05XCIsMTA6XCJtZDpvcmRlci0xMFwiLDExOlwibWQ6b3JkZXItMTFcIiwxMjpcIm1kOm9yZGVyLTEyXCIsZmlyc3Q6XCJtZDpvcmRlci1maXJzdFwiLGxhc3Q6XCJtZDpvcmRlci1sYXN0XCIsbm9uZTpcIm1kOm9yZGVyLW5vbmVcIn0sbGc6ezE6XCJsZzpvcmRlci0xXCIsMjpcImxnOm9yZGVyLTJcIiwzOlwibGc6b3JkZXItM1wiLDQ6XCJsZzpvcmRlci00XCIsNTpcImxnOm9yZGVyLTVcIiw2OlwibGc6b3JkZXItNlwiLDc6XCJsZzpvcmRlci03XCIsODpcImxnOm9yZGVyLThcIiw5OlwibGc6b3JkZXItOVwiLDEwOlwibGc6b3JkZXItMTBcIiwxMTpcImxnOm9yZGVyLTExXCIsMTI6XCJsZzpvcmRlci0xMlwiLGZpcnN0OlwibGc6b3JkZXItZmlyc3RcIixsYXN0OlwibGc6b3JkZXItbGFzdFwiLG5vbmU6XCJsZzpvcmRlci1ub25lXCJ9fSx2cD17c206ezA6XCJncm93LTBcIiwxOlwiZ3Jvd1wifSxtZDp7MDpcIm1kOmdyb3ctMFwiLDE6XCJtZDpncm93XCJ9LGxnOnswOlwibGc6Z3Jvdy0wXCIsMTpcImxnOmdyb3dcIn19LHlwPXtzbTp7MDpcInNocmluay0wXCIsMTpcInNocmlua1wifSxtZDp7MDpcIm1kOnNocmluay0wXCIsMTpcIm1kOnNocmlua1wifSxsZzp7MDpcImxnOnNocmluay0wXCIsMTpcImxnOnNocmlua1wifX07ZnVuY3Rpb24gYnAoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfWZ1bmN0aW9uIHhwKGUpe3JldHVybiB4cD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSx4cChlKX12YXIgd3A9ZnVuY3Rpb24oZSx0LG4pe3ZhciByLG8saSxzLGEsbCxjLHUsZD1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106XCJzbVwiLGY9W107c3dpdGNoKHhwKGUpKXtjYXNlXCJvYmplY3RcIjpmb3IodmFyIGg9MCxwPU9iamVjdC5lbnRyaWVzKGUpO2g8cC5sZW5ndGg7aCsrKXt2YXIgbSxnLHYseSxiPShjPXBbaF0sdT0yLGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGMpfHxmdW5jdGlvbihlLHQpe3ZhciBuPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saSxzLGE9W10sbD0hMCxjPSExO3RyeXtpZihpPShuPW4uY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KG4pIT09bilyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShyPWkuY2FsbChuKSkuZG9uZSkmJihhLnB1c2goci52YWx1ZSksYS5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxvPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPW4ucmV0dXJuJiYocz1uLnJldHVybigpLE9iamVjdChzKSE9PXMpKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgb319cmV0dXJuIGF9fShjLHUpfHxmdW5jdGlvbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBicChlLHQpO3ZhciBuPXt9LnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP2JwKGUsdCk6dm9pZCAwfX0oYyx1KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpKSx4PWJbMF0sdz1iWzFdO3RbeF0mJmYucHVzaChudWxsIT09KG09bnVsbCE9PShnPW51bGw9PXR8fG51bGw9PT0odj10W3hdKXx8dm9pZCAwPT09dj92b2lkIDA6dlt3XSkmJnZvaWQgMCE9PWc/ZzpudWxsPT10fHxudWxsPT09KHk9dFt4XSl8fHZvaWQgMD09PXk/dm9pZCAwOnlbbnVsbD09bj92b2lkIDA6blt4XV0pJiZ2b2lkIDAhPT1tP206XCJcIil9YnJlYWs7Y2FzZVwic3RyaW5nXCI6Y2FzZVwibnVtYmVyXCI6dmFyIEU9ZDtmLnB1c2gobnVsbCE9PShyPW51bGwhPT0obz1udWxsPT10fHxudWxsPT09KGk9dFtFXSl8fHZvaWQgMD09PWk/dm9pZCAwOmlbZV0pJiZ2b2lkIDAhPT1vP286bnVsbD09dHx8bnVsbD09PShzPXRbRV0pfHx2b2lkIDA9PT1zP3ZvaWQgMDpzW251bGw9PW4/dm9pZCAwOm5bRV1dKSYmdm9pZCAwIT09cj9yOlwiXCIpO2JyZWFrO2RlZmF1bHQ6Zi5wdXNoKG51bGwhPT0oYT1udWxsPT10fHxudWxsPT09KGw9dFtkXSl8fHZvaWQgMD09PWw/dm9pZCAwOmxbbl0pJiZ2b2lkIDAhPT1hP2E6XCJcIil9cmV0dXJuIGYuam9pbihcIiBcIil9LEVwPVtcImNsYXNzTmFtZVwiLFwiY29sc1wiLFwiZ2FwXCIsXCJnYXBYXCIsXCJnYXBZXCIsXCJhbGlnblwiLFwianVzdGlmeVwiLFwiZ3JpZEZsb3dcIixcImNvbHNTdWJHcmlkXCIsXCJyb3dzU3ViR3JpZFwiLFwiYXV0b1Jvd3NcIixcImF1dG9Db2xzXCIsXCJjaGlsZHJlblwiXSxTcD1bXCJjbGFzc05hbWVcIixcImNoaWxkcmVuXCIsXCJjb2xTcGFuXCIsXCJjb2xTdGFydFwiLFwiYWxpZ25TZWxmXCIsXCJqdXN0aWZ5U2VsZlwiXTtmdW5jdGlvbiBfcCgpe3JldHVybiBfcD1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LF9wLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBrcChlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb312YXIgQ3A9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jbGFzc05hbWUsbj1lLmNvbHMscj1lLmdhcCxvPWUuZ2FwWCxzPWUuZ2FwWSxhPWUuYWxpZ24sbD1lLmp1c3RpZnksYz1lLmdyaWRGbG93LHU9dm9pZCAwPT09Yz9cIlwiOmMsZD1lLmNvbHNTdWJHcmlkLGY9dm9pZCAwIT09ZCYmZCxoPWUucm93c1N1YkdyaWQscD12b2lkIDAhPT1oJiZoLG09ZS5hdXRvUm93cyxnPXZvaWQgMCE9PW0mJm0sdj1lLmF1dG9Db2xzLHk9dm9pZCAwIT09diYmdixiPWUuY2hpbGRyZW4seD1rcChlLEVwKSx3PXdwKG4sbnAsMSksRT13cChyLHJwLFwic21cIiksUz13cChvLG9wLFwiXCIpLF89d3AocyxpcCxcIlwiKSxrPXdwKGEsdXAsXCJcIiksQz13cChsLGNwLFwiXCIpLFA9d3AodSxscCxcIlwiKTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixfcCh7Y2xhc3NOYW1lOnRlKFwiZ3JpZFwiLHtcImdyaWQtY29scy1zdWJncmlkXCI6ZixcImdyaWQtcm93cy1zdWJncmlkXCI6cCxcImF1dG8tY29scy1hdXRvXCI6eSxcImF1dG8tcm93cy1hdXRvXCI6Z30sdyxFLFMsXyxrLEMsUCx0KX0seCksYil9O09iamVjdC5hc3NpZ24oQ3Ase0l0ZW06ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jbGFzc05hbWUsbj1lLmNoaWxkcmVuLHI9ZS5jb2xTcGFuLG89ZS5jb2xTdGFydCxzPWUuYWxpZ25TZWxmLGE9ZS5qdXN0aWZ5U2VsZixsPWtwKGUsU3ApLGM9d3AocixzcCwwKSx1PXdwKG8sYXAsMCksZD13cChzLGRwLFwiXCIpLGY9d3AoYSxmcCxcIlwiKTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixfcCh7Y2xhc3NOYW1lOnRlKGMsdSxkLGYsdCl9LGwpLG4pfX0pO3ZhciBQcD1DcCxUcD1bXCJjb250YWluZXJUeXBlXCIsXCJnYXBcIixcImdhcFhcIixcImdhcFlcIixcImRpcmVjdGlvblwiLFwianVzdGlmeVwiLFwiYWxpZ25cIixcIndyYXBcIixcImNvbHNcIixcImNsYXNzTmFtZVwiLFwiY2hpbGRyZW5cIl0sT3A9W1wiY29udGFpbmVyVHlwZVwiXSxScD1bXCJncm93XCIsXCJzaHJpbmtcIixcIm9yZGVyXCIsXCJhbGlnblNlbGZcIixcImp1c3RpZnlTZWxmXCIsXCJjbGFzc05hbWVcIixcImNoaWxkcmVuXCJdO2Z1bmN0aW9uIE5wKCl7cmV0dXJuIE5wPU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKSh7fSkuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sTnAuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIEFwKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfXZhciBqcD0oMCxvLmNyZWF0ZUNvbnRleHQpKCksTXA9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jb250YWluZXJUeXBlLG49dm9pZCAwPT09dD9cImZsZXhcIjp0LHI9ZS5nYXAsbz12b2lkIDA9PT1yP1wic21cIjpyLHM9ZS5nYXBYLGE9dm9pZCAwPT09cz9cIlwiOnMsbD1lLmdhcFksYz12b2lkIDA9PT1sP1wiXCI6bCx1PWUuZGlyZWN0aW9uLGQ9dm9pZCAwPT09dT9cIlwiOnUsZj1lLmp1c3RpZnksaD12b2lkIDA9PT1mP1wiXCI6ZixwPWUuYWxpZ24sbT12b2lkIDA9PT1wP1wiXCI6cCxnPWUud3JhcCx2PWUuY29scyx5PXZvaWQgMD09PXY/XCJcIjp2LGI9ZS5jbGFzc05hbWUseD1lLmNoaWxkcmVuLHc9QXAoZSxUcCk7aWYoXCJncmlkXCI9PT1uKXt2YXIgRT1lLmNvbnRhaW5lclR5cGUsUz1BcChlLE9wKTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoanAuUHJvdmlkZXIse3ZhbHVlOntjb250YWluZXJUeXBlOkV9fSxpKCkuY3JlYXRlRWxlbWVudChQcCxTKSl9dmFyIF89d3AoZyxwcCxcIlwiKSxrPXdwKG8scnAsXCJzbVwiKSxDPXdwKGEsb3AsXCJcIiksUD13cChjLGlwLFwiXCIpLFQ9d3AoZCxocCxcIlwiKSxPPXdwKGgsY3AsXCJcIiksUj13cChtLHVwLFwiXCIpLE49dGUoXCJmbGV4XCIsXyxrLEMsUCxULE8sUixiKTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoanAuUHJvdmlkZXIse3ZhbHVlOntjb250YWluZXJUeXBlOm4sY29sczp5fX0sXCJncmlkXCI9PT1uP2koKS5jcmVhdGVFbGVtZW50KFBwLGUpOmkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsTnAoe2NsYXNzTmFtZTpOfSx3KSx4KSl9O01wLkl0ZW09ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5ncm93LG49ZS5zaHJpbmsscj1lLm9yZGVyLHM9ZS5hbGlnblNlbGYsYT1lLmp1c3RpZnlTZWxmLGw9ZS5jbGFzc05hbWUsYz1lLmNoaWxkcmVuLHU9QXAoZSxScCksZD0oMCxvLnVzZUNvbnRleHQpKGpwKSxmPWQuY29udGFpbmVyVHlwZSxoPWQuY29scztpZihcImdyaWRcIj09PWYpe3ZhciBwPU5wKHt9LChmdW5jdGlvbihlKXtpZihudWxsPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgZGVzdHJ1Y3R1cmUgXCIrZSl9KGUpLGUpKTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoUHAuSXRlbSxwKX12YXIgbT13cChzLGRwLFwiXCIpLGc9d3AoYSxmcCxcIlwiKSx2PXdwKHQsdnAsMCkseT13cChuLHlwLDApLGI9d3AocixncCwwKSx4PXdwKGgsbXAsMSk7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsTnAoe2NsYXNzTmFtZTp0ZShcImJveC1ib3JkZXJcIix2LHksYixtLGcseCxsKX0sdSksYyl9LE1wLmRpc3BsYXlOYW1lPVwiQ29udGFpbmVyXCIsTXAuSXRlbS5kaXNwbGF5TmFtZT1cIkNvbnRhaW5lci5JdGVtXCI7dmFyIElwLERwPU1wLExwPWZ1bmN0aW9uKGUpe3ZhciB0LG4scixvLGkscyxhPWUuZGVzaWduLGw9dm9pZCAwPT09YT9cImlubGluZVwiOmEsYz1lLnRoZW1lLHU9dm9pZCAwPT09Yz9cImxpZ2h0XCI6YyxkPWUudmFyaWFudCxmPXZvaWQgMD09PWQ/XCJuZXV0cmFsXCI6ZCxoPWUuY2xhc3NOYW1lLHA9dm9pZCAwPT09aD9cIlwiOmgsbT1lLnRpdGxlLGc9dm9pZCAwPT09bT9cIlRpdGxlXCI6bSx2PWUuY29udGVudCx5PXZvaWQgMD09PXY/XCJEZXNjcmlwdGlvblwiOnYsYj1lLmljb24seD12b2lkIDA9PT1iP251bGw6Yix3PWUub25DbG9zZSxFPXZvaWQgMD09PXc/ZnVuY3Rpb24oKXt9OncsUz1lLmFjdGlvbixfPXZvaWQgMD09PVM/e2xhYmVsOlwiQWN0aW9uXCIsb25DbGljazpmdW5jdGlvbigpe30sdHlwZTpcImxpbmtcIn06UyxrPWZ1bmN0aW9uKCl7RSgpfSxDPVwibGc6dy1bNDcuNXJlbV0gdy1mdWxsXCIsUD17bmV1dHJhbDpcImJvcmRlci1hbGVydC1ib3JkZXItbmV1dHJhbCBiZy1hbGVydC1iYWNrZ3JvdW5kLW5ldXRyYWxcIixjdXN0b206XCJib3JkZXItYWxlcnQtYm9yZGVyLW5ldXRyYWwgYmctYWxlcnQtYmFja2dyb3VuZC1uZXV0cmFsXCIsaW5mbzpcImJvcmRlci1hbGVydC1ib3JkZXItaW5mbyBiZy1hbGVydC1iYWNrZ3JvdW5kLWluZm9cIixzdWNjZXNzOlwiYm9yZGVyLWFsZXJ0LWJvcmRlci1ncmVlbiBiZy1hbGVydC1iYWNrZ3JvdW5kLWdyZWVuXCIsd2FybmluZzpcImJvcmRlci1hbGVydC1ib3JkZXItd2FybmluZyBiZy1hbGVydC1iYWNrZ3JvdW5kLXdhcm5pbmdcIixlcnJvcjpcImJvcmRlci1hbGVydC1ib3JkZXItZGFuZ2VyIGJnLWFsZXJ0LWJhY2tncm91bmQtZGFuZ2VyXCJ9LFQ9XCJiZy1iYWNrZ3JvdW5kLWludmVyc2UgYm9yZGVyLWJhY2tncm91bmQtaW52ZXJzZVwiLE89e2xpZ2h0OlwidGV4dC1pY29uLXNlY29uZGFyeVwiLGRhcms6XCJ0ZXh0LWljb24taW52ZXJzZVwifSxSPWZ1bmN0aW9uKCl7dmFyIGU7bnVsbD09X3x8bnVsbD09PShlPV8ub25DbGljayl8fHZvaWQgMD09PWV8fGUuY2FsbChfLChmdW5jdGlvbigpe3JldHVybiBrKCl9KSl9O3JldHVyblwic3RhY2tcIj09PWw/UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LXN0YXJ0IHAtNCBnYXAtMiByZWxhdGl2ZSBib3JkZXIgYm9yZGVyLXNvbGlkIHJvdW5kZWQtbWQgc2hhZG93LWxnXCIsXCJkYXJrXCI9PT11P1Q6bnVsbD09PShvPVApfHx2b2lkIDA9PT1vP3ZvaWQgMDpvW2ZdLEMscCl9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCxSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInNlbGYtc3RhcnQgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgWyZfc3ZnXTpzaXplLTUgc2hyaW5rLTBcIn0sdGkoe3ZhcmlhbnQ6ZixpY29uOngsdGhlbWU6dX0pKSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImZsZXggZmxleC1jb2wgaXRlbXMtc3RhcnQganVzdGlmeS1zdGFydCBnYXAtMC41XCJ9LHJpKHt0aXRsZTpnLHRoZW1lOnV9KSxvaSh7Y29udGVudDp5LHRoZW1lOnV9KSwobnVsbD09Xz92b2lkIDA6Xy5sYWJlbCkmJlwiZnVuY3Rpb25cIj09dHlwZW9mKG51bGw9PV8/dm9pZCAwOl8ub25DbGljaykmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwibXQtMi41XCJ9LG5pKHthY3Rpb25MYWJlbDpudWxsPT1fP3ZvaWQgMDpfLmxhYmVsLGFjdGlvblR5cGU6bnVsbCE9PShpPW51bGw9PV8/dm9pZCAwOl8udHlwZSkmJnZvaWQgMCE9PWk/aTpcImJ1dHRvblwiLG9uQWN0aW9uOlIsdGhlbWU6dX0pKSksUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJhYnNvbHV0ZSByaWdodC00IHRvcC00IFsmX3N2Z106c2l6ZS01XCJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIix7Y2xhc3NOYW1lOnRlKFwiYmctdHJhbnNwYXJlbnQgbS0wIHAtMCBib3JkZXItbm9uZSBmb2N1czpvdXRsaW5lLW5vbmUgYWN0aXZlOm91dGxpbmUtbm9uZSBjdXJzb3ItcG9pbnRlclwiLG51bGwhPT0ocz1PW3VdKSYmdm9pZCAwIT09cz9zOk8ubGlnaHQpLG9uQ2xpY2s6ZnVuY3Rpb24oKXtyZXR1cm4gaygpfX0sUmVhY3QuY3JlYXRlRWxlbWVudChIZSxudWxsKSkpKSk6UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gcC0zIGdhcC0yIHJlbGF0aXZlIGJvcmRlciBib3JkZXItc29saWQgcm91bmRlZC1tZCBzaGFkb3ctbGdcIixcImRhcmtcIj09PXU/VDpudWxsPT09KHQ9UCl8fHZvaWQgMD09PXQ/dm9pZCAwOnRbZl0sQyxwKX0sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LXN0YXJ0IGdhcC0yXCJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwic2VsZi1zdGFydCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBbJl9zdmddOnNpemUtNSBzaHJpbmstMFwifSx0aSh7dmFyaWFudDpmLGljb246eCx0aGVtZTp1fSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwiZmxleCBpdGVtcy1zdGFydCBqdXN0aWZ5LXN0YXJ0IGdhcC0xIG1yLTEwIFsmPnNwYW46Zmlyc3QtY2hpbGRdOnNocmluay0wXCJ9LHJpKHt0aXRsZTpnLHRoZW1lOnV9KSxvaSh7Y29udGVudDp5LHRoZW1lOnV9KSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1zdGFydCBnYXAtNCBbJl9zdmddOnNpemUtNVwifSwobnVsbD09Xz92b2lkIDA6Xy5sYWJlbCkmJlwiZnVuY3Rpb25cIj09dHlwZW9mKG51bGw9PV8/dm9pZCAwOl8ub25DbGljaykmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwiZmxleFwifSxuaSh7YWN0aW9uTGFiZWw6bnVsbD09Xz92b2lkIDA6Xy5sYWJlbCxhY3Rpb25UeXBlOm51bGwhPT0obj1udWxsPT1fP3ZvaWQgMDpfLnR5cGUpJiZ2b2lkIDAhPT1uP246XCJidXR0b25cIixvbkFjdGlvbjpSLHRoZW1lOnV9KSksUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLHtjbGFzc05hbWU6dGUoXCJiZy10cmFuc3BhcmVudCBtLTAgcC0wIGJvcmRlci1ub25lIGZvY3VzOm91dGxpbmUtbm9uZSBhY3RpdmU6b3V0bGluZS1ub25lIGN1cnNvci1wb2ludGVyXCIsbnVsbCE9PShyPU9bdV0pJiZ2b2lkIDAhPT1yP3I6Ty5saWdodCksb25DbGljazpmdW5jdGlvbigpe3JldHVybiBrKCl9fSxSZWFjdC5jcmVhdGVFbGVtZW50KEhlLG51bGwpKSkpfSxGcD0oSXA9ZnVuY3Rpb24oZSl7Y29uc3QgdD1uZXcgVVJMU2VhcmNoUGFyYW1zO3QuYXBwZW5kKFwiY29kZVwiLGUpO2ZvcihsZXQgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdC5hcHBlbmQoXCJ2XCIsYXJndW1lbnRzW2VdKTt0aHJvdyBFcnJvcihgTWluaWZpZWQgTGV4aWNhbCBlcnJvciAjJHtlfTsgdmlzaXQgaHR0cHM6Ly9sZXhpY2FsLmRldi9kb2NzL2Vycm9yPyR7dH0gZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLmApfSxJcCYmSXAuX19lc01vZHVsZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKElwLFwiZGVmYXVsdFwiKT9JcC5kZWZhdWx0OklwKTtjb25zdCB6cD0oMCxvLmNyZWF0ZUNvbnRleHQpKG51bGwpO2Z1bmN0aW9uIEJwKCl7Y29uc3QgZT0oMCxvLnVzZUNvbnRleHQpKHpwKTtyZXR1cm4gbnVsbD09ZSYmRnAoOCksZX1mdW5jdGlvbiBWcCh7ZGVmYXVsdFNlbGVjdGlvbjplfSl7Y29uc3RbdF09QnAoKTtyZXR1cm4oMCxvLnVzZUVmZmVjdCkoKCgpPT57dC5mb2N1cygoKCk9Pntjb25zdCBlPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQsbj10LmdldFJvb3RFbGVtZW50KCk7bnVsbD09PW58fG51bGwhPT1lJiZuLmNvbnRhaW5zKGUpfHxuLmZvY3VzKHtwcmV2ZW50U2Nyb2xsOiEwfSl9KSx7ZGVmYXVsdFNlbGVjdGlvbjplfSl9KSxbZSx0XSksbnVsbH1jb25zdCBXcD17fSxVcD17fSwkcD17fSxLcD17fSxIcD17fSxxcD17fSxZcD17fSxHcD17fSxYcD17fSxKcD17fSxacD17fSxRcD17fSxlbT17fSx0bT17fSxubT17fSxybT17fSxvbT17fSxpbT17fSxzbT17fSxhbT17fSxsbT17fSxjbT17fSx1bT17fSxkbT17fSxmbT17fSxobT17fSxwbT17fSxtbT17fSxnbT17fSx2bT17fSx5bT17fSxibT17fSx4bT17fSx3bT17fSxFbT17fSxTbT17fSxfbT17fSxrbT17fSxDbT17fSxQbT17fSxUbT1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQmJnZvaWQgMCE9PXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50LE9tPVRtJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQ/ZG9jdW1lbnQuZG9jdW1lbnRNb2RlOm51bGwsUm09VG0mJi9NYWN8aVBvZHxpUGhvbmV8aVBhZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pLE5tPVRtJiYvXig/IS4qU2VhbW9ua2V5KSg/PS4qRmlyZWZveCkuKi9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksQW09ISghVG18fCEoXCJJbnB1dEV2ZW50XCJpbiB3aW5kb3cpfHxPbSkmJlwiZ2V0VGFyZ2V0UmFuZ2VzXCJpbiBuZXcgd2luZG93LklucHV0RXZlbnQoXCJpbnB1dFwiKSxqbT1UbSYmL1ZlcnNpb25cXC9bXFxkLl0rLipTYWZhcmkvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksTW09VG0mJi9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYhd2luZG93Lk1TU3RyZWFtLEltPVRtJiYvQW5kcm9pZC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxEbT1UbSYmL14oPz0uKkNocm9tZSkuKi9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksTG09VG0mJkltJiZEbSxGbT1UbSYmL0FwcGxlV2ViS2l0XFwvW1xcZC5dKy8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSYmIURtLHptPTEsQm09MyxWbT0wLFdtPTIsVW09MCwkbT0xLEttPTIsSG09NCxxbT04LFltPTN8SG18cW18MjQwLEdtPTEsWG09MixKbT0zLFptPTQsUW09NSxlZz02LHRnPWptfHxNbXx8Rm0/XCLCoFwiOlwi4oCLXCIsbmc9XCJcXG5cXG5cIixyZz1ObT9cIsKgXCI6dGcsb2c9XCLWkS3fv++snS3vt73vubAt77u8XCIsaWc9XCJBLVphLXrDgC3DlsOYLcO2w7gtyrjMgC3WkOCggC3hv7/igI7isIAt76yc77iALe+5r++7vS3vv79cIixzZz1uZXcgUmVnRXhwKFwiXlteXCIraWcrXCJdKltcIitvZytcIl1cIiksYWc9bmV3IFJlZ0V4cChcIl5bXlwiK29nK1wiXSpbXCIraWcrXCJdXCIpLGxnPXtib2xkOjEsY29kZToxNixoaWdobGlnaHQ6MTI4LGl0YWxpYzoyLHN0cmlrZXRocm91Z2g6SG0sc3Vic2NyaXB0OjMyLHN1cGVyc2NyaXB0OjY0LHVuZGVybGluZTpxbX0sY2c9e2RpcmVjdGlvbmxlc3M6MSx1bm1lcmdlYWJsZToyfSx1Zz17Y2VudGVyOlhtLGVuZDplZyxqdXN0aWZ5OlptLGxlZnQ6R20scmlnaHQ6Sm0sc3RhcnQ6UW19LGRnPXtbWG1dOlwiY2VudGVyXCIsW2VnXTpcImVuZFwiLFtabV06XCJqdXN0aWZ5XCIsW0dtXTpcImxlZnRcIixbSm1dOlwicmlnaHRcIixbUW1dOlwic3RhcnRcIn0sZmc9e25vcm1hbDowLHNlZ21lbnRlZDoyLHRva2VuOjF9LGhnPXtbVW1dOlwibm9ybWFsXCIsW0ttXTpcInNlZ21lbnRlZFwiLFskbV06XCJ0b2tlblwifTt2YXIgcGcsbWc9KHBnPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9bmV3IFVSTFNlYXJjaFBhcmFtczt0LmFwcGVuZChcImNvZGVcIixlKTtmb3IobGV0IGU9MTtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXQuYXBwZW5kKFwidlwiLGFyZ3VtZW50c1tlXSk7dGhyb3cgRXJyb3IoYE1pbmlmaWVkIExleGljYWwgZXJyb3IgIyR7ZX07IHZpc2l0IGh0dHBzOi8vbGV4aWNhbC5kZXYvZG9jcy9lcnJvcj8ke3R9IGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5gKX0scGcmJnBnLl9fZXNNb2R1bGUmJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwZyxcImRlZmF1bHRcIik/cGcuZGVmYXVsdDpwZyk7ZnVuY3Rpb24gZ2coLi4uZSl7Y29uc3QgdD1bXTtmb3IoY29uc3QgbiBvZiBlKWlmKG4mJlwic3RyaW5nXCI9PXR5cGVvZiBuKWZvcihjb25zdFtlXW9mIG4ubWF0Y2hBbGwoL1xcUysvZykpdC5wdXNoKGUpO3JldHVybiB0fWNvbnN0IHZnPTEwMDtsZXQgeWc9ITEsYmc9MDtmdW5jdGlvbiB4ZyhlKXtiZz1lLnRpbWVTdGFtcH1mdW5jdGlvbiB3ZyhlLHQsbil7cmV0dXJuIHQuX19sZXhpY2FsTGluZUJyZWFrPT09ZXx8dm9pZCAwIT09ZVtgX19sZXhpY2FsS2V5XyR7bi5fa2V5fWBdfWZ1bmN0aW9uIEVnKGUsdCxuKXtjb25zdCByPVJ2KG4uX3dpbmRvdyk7bGV0IG89bnVsbCxpPW51bGw7bnVsbCE9PXImJnIuYW5jaG9yTm9kZT09PWUmJihvPXIuYW5jaG9yT2Zmc2V0LGk9ci5mb2N1c09mZnNldCk7Y29uc3Qgcz1lLm5vZGVWYWx1ZTtudWxsIT09cyYmYXYodCxzLG8saSwhMSl9ZnVuY3Rpb24gU2coZSx0LG4pe2lmKHdiKGUpKXtjb25zdCB0PWUuYW5jaG9yLmdldE5vZGUoKTtpZih0LmlzKG4pJiZlLmZvcm1hdCE9PXQuZ2V0Rm9ybWF0KCkpcmV0dXJuITF9cmV0dXJuIHQubm9kZVR5cGU9PT1CbSYmbi5pc0F0dGFjaGVkKCl9ZnVuY3Rpb24gX2coZSx0LG4pe3lnPSEwO2NvbnN0IHI9cGVyZm9ybWFuY2Uubm93KCktYmc+dmc7dHJ5e2N4KGUsKCgpPT57Y29uc3Qgbz1NYigpfHxmdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRFZGl0b3JTdGF0ZSgpLnJlYWQoKCgpPT57Y29uc3QgZT1NYigpO3JldHVybiBudWxsIT09ZT9lLmNsb25lKCk6bnVsbH0pKX0oZSksaT1uZXcgTWFwLHM9ZS5nZXRSb290RWxlbWVudCgpLGE9ZS5fZWRpdG9yU3RhdGUsbD1lLl9ibG9ja0N1cnNvckVsZW1lbnQ7bGV0IGM9ITEsdT1cIlwiO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKXtjb25zdCBkPXRbbl0sZj1kLnR5cGUsaD1kLnRhcmdldDtsZXQgcD1ZZyhoLGEpO2lmKCEobnVsbD09PXAmJmghPT1zfHxweChwKSkpaWYoXCJjaGFyYWN0ZXJEYXRhXCI9PT1mKXImJmRiKHApJiZTZyhvLGgscCkmJkVnKGgscCxlKTtlbHNlIGlmKFwiY2hpbGRMaXN0XCI9PT1mKXtjPSEwO2NvbnN0IHQ9ZC5hZGRlZE5vZGVzO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKXtjb25zdCByPXRbbl0sbz1xZyhyKSxpPXIucGFyZW50Tm9kZTtpZihudWxsIT1pJiZyIT09bCYmbnVsbD09PW8mJihcIkJSXCIhPT1yLm5vZGVOYW1lfHwhd2cocixpLGUpKSl7aWYoTm0pe2NvbnN0IGU9ci5pbm5lclRleHR8fHIubm9kZVZhbHVlO2UmJih1Kz1lKX1pLnJlbW92ZUNoaWxkKHIpfX1jb25zdCBuPWQucmVtb3ZlZE5vZGVzLHI9bi5sZW5ndGg7aWYocj4wKXtsZXQgdD0wO2ZvcihsZXQgbz0wO288cjtvKyspe2NvbnN0IHI9bltvXTsoXCJCUlwiPT09ci5ub2RlTmFtZSYmd2cocixoLGUpfHxsPT09cikmJihoLmFwcGVuZENoaWxkKHIpLHQrKyl9ciE9PXQmJihoPT09cyYmKHA9WmcoYSkpLGkuc2V0KGgscCkpfX19aWYoaS5zaXplPjApZm9yKGNvbnN0W3Qsbl1vZiBpKWlmKGR4KG4pKXtjb25zdCByPW4uZ2V0Q2hpbGRyZW5LZXlzKCk7bGV0IG89dC5maXJzdENoaWxkO2ZvcihsZXQgbj0wO248ci5sZW5ndGg7bisrKXtjb25zdCBpPXJbbl0scz1lLmdldEVsZW1lbnRCeUtleShpKTtudWxsIT09cyYmKG51bGw9PW8/KHQuYXBwZW5kQ2hpbGQocyksbz1zKTpvIT09cyYmdC5yZXBsYWNlQ2hpbGQocyxvKSxvPW8ubmV4dFNpYmxpbmcpfX1lbHNlIGRiKG4pJiZuLm1hcmtEaXJ0eSgpO2NvbnN0IGQ9bi50YWtlUmVjb3JkcygpO2lmKGQubGVuZ3RoPjApe2ZvcihsZXQgdD0wO3Q8ZC5sZW5ndGg7dCsrKXtjb25zdCBuPWRbdF0scj1uLmFkZGVkTm9kZXMsbz1uLnRhcmdldDtmb3IobGV0IHQ9MDt0PHIubGVuZ3RoO3QrKyl7Y29uc3Qgbj1yW3RdLGk9bi5wYXJlbnROb2RlO251bGw9PWl8fFwiQlJcIiE9PW4ubm9kZU5hbWV8fHdnKG4sbyxlKXx8aS5yZW1vdmVDaGlsZChuKX19bi50YWtlUmVjb3JkcygpfW51bGwhPT1vJiYoYyYmKG8uZGlydHk9ITAsUWcobykpLE5tJiZidihlKSYmby5pbnNlcnRSYXdUZXh0KHUpKX0pKX1maW5hbGx5e3lnPSExfX1mdW5jdGlvbiBrZyhlKXtjb25zdCB0PWUuX29ic2VydmVyO251bGwhPT10JiZfZyhlLHQudGFrZVJlY29yZHMoKSx0KX1mdW5jdGlvbiBDZyhlKXshZnVuY3Rpb24oZSl7MD09PWJnJiZrdihlKS5hZGRFdmVudExpc3RlbmVyKFwidGV4dElucHV0XCIseGcsITApfShlKSxlLl9vYnNlcnZlcj1uZXcgTXV0YXRpb25PYnNlcnZlcigoKHQsbik9PntfZyhlLHQsbil9KSl9ZnVuY3Rpb24gUGcoZSx0KXtjb25zdCBuPWUuX19tb2RlLHI9ZS5fX2Zvcm1hdCxvPWUuX19zdHlsZSxpPXQuX19tb2RlLHM9dC5fX2Zvcm1hdCxhPXQuX19zdHlsZTtyZXR1cm4hKG51bGwhPT1uJiZuIT09aXx8bnVsbCE9PXImJnIhPT1zfHxudWxsIT09byYmbyE9PWEpfWZ1bmN0aW9uIFRnKGUsdCl7Y29uc3Qgbj1lLm1lcmdlV2l0aFNpYmxpbmcodCkscj1aYigpLl9ub3JtYWxpemVkTm9kZXM7cmV0dXJuIHIuYWRkKGUuX19rZXkpLHIuYWRkKHQuX19rZXkpLG59ZnVuY3Rpb24gT2coZSl7bGV0IHQsbixyPWU7aWYoXCJcIiE9PXIuX190ZXh0fHwhci5pc1NpbXBsZVRleHQoKXx8ci5pc1VubWVyZ2VhYmxlKCkpe2Zvcig7bnVsbCE9PSh0PXIuZ2V0UHJldmlvdXNTaWJsaW5nKCkpJiZkYih0KSYmdC5pc1NpbXBsZVRleHQoKSYmIXQuaXNVbm1lcmdlYWJsZSgpOyl7aWYoXCJcIiE9PXQuX190ZXh0KXtpZihQZyh0LHIpKXtyPVRnKHQscik7YnJlYWt9YnJlYWt9dC5yZW1vdmUoKX1mb3IoO251bGwhPT0obj1yLmdldE5leHRTaWJsaW5nKCkpJiZkYihuKSYmbi5pc1NpbXBsZVRleHQoKSYmIW4uaXNVbm1lcmdlYWJsZSgpOyl7aWYoXCJcIiE9PW4uX190ZXh0KXtpZihQZyhyLG4pKXtyPVRnKHIsbik7YnJlYWt9YnJlYWt9bi5yZW1vdmUoKX19ZWxzZSByLnJlbW92ZSgpfWZ1bmN0aW9uIFJnKGUpe2Zvcig7XCJlbGVtZW50XCI9PT1lLnR5cGU7KXtjb25zdCB0PWUuZ2V0Tm9kZSgpLG49ZS5vZmZzZXQ7bGV0IHIsbztpZihuPT09dC5nZXRDaGlsZHJlblNpemUoKT8ocj10LmdldENoaWxkQXRJbmRleChuLTEpLG89ITApOihyPXQuZ2V0Q2hpbGRBdEluZGV4KG4pLG89ITEpLGRiKHIpKXtlLnNldChyLl9fa2V5LG8/ci5nZXRUZXh0Q29udGVudFNpemUoKTowLFwidGV4dFwiKTticmVha31pZighZHgocikpYnJlYWs7ZS5zZXQoci5fX2tleSxvP3IuZ2V0Q2hpbGRyZW5TaXplKCk6MCxcImVsZW1lbnRcIil9fWxldCBOZz0xO2NvbnN0IEFnPVwiZnVuY3Rpb25cIj09dHlwZW9mIHF1ZXVlTWljcm90YXNrP3F1ZXVlTWljcm90YXNrOmU9PntQcm9taXNlLnJlc29sdmUoKS50aGVuKGUpfTtmdW5jdGlvbiBqZyhlKXtjb25zdCB0PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7aWYobnVsbD09PXQpcmV0dXJuITE7Y29uc3Qgbj10Lm5vZGVOYW1lO3JldHVybiBweChZZyhlKSkmJihcIklOUFVUXCI9PT1ufHxcIlRFWFRBUkVBXCI9PT1ufHxcInRydWVcIj09PXQuY29udGVudEVkaXRhYmxlJiZudWxsPT1MZyh0KSl9ZnVuY3Rpb24gTWcoZSx0LG4pe2NvbnN0IHI9ZS5nZXRSb290RWxlbWVudCgpO3RyeXtyZXR1cm4gbnVsbCE9PXImJnIuY29udGFpbnModCkmJnIuY29udGFpbnMobikmJm51bGwhPT10JiYhamcodCkmJkRnKHQpPT09ZX1jYXRjaChlKXtyZXR1cm4hMX19ZnVuY3Rpb24gSWcoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBUeH1mdW5jdGlvbiBEZyhlKXtsZXQgdD1lO2Zvcig7bnVsbCE9dDspe2NvbnN0IGU9TGcodCk7aWYoSWcoZSkpcmV0dXJuIGU7dD1Tdih0KX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMZyhlKXtyZXR1cm4gZT9lLl9fbGV4aWNhbEVkaXRvcjpudWxsfWZ1bmN0aW9uIEZnKGUpe3JldHVybiBlLmlzVG9rZW4oKXx8ZS5pc1NlZ21lbnRlZCgpfWZ1bmN0aW9uIHpnKGUpe3JldHVybiBlLm5vZGVUeXBlPT09Qm19ZnVuY3Rpb24gQmcoZSl7bGV0IHQ9ZTtmb3IoO251bGwhPXQ7KXtpZih6Zyh0KSlyZXR1cm4gdDt0PXQuZmlyc3RDaGlsZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBWZyhlLHQsbil7Y29uc3Qgcj1sZ1t0XTtpZihudWxsIT09biYmKGUmcik9PShuJnIpKXJldHVybiBlO2xldCBvPWVecjtyZXR1cm5cInN1YnNjcmlwdFwiPT09dD9vJj1+bGcuc3VwZXJzY3JpcHQ6XCJzdXBlcnNjcmlwdFwiPT09dCYmKG8mPX5sZy5zdWJzY3JpcHQpLG99ZnVuY3Rpb24gV2coZSl7Y29uc3QgdD1lLmdldFBhcmVudCgpO2lmKG51bGwhPT10KXtjb25zdCBuPWUuZ2V0V3JpdGFibGUoKSxyPXQuZ2V0V3JpdGFibGUoKSxvPWUuZ2V0UHJldmlvdXNTaWJsaW5nKCksaT1lLmdldE5leHRTaWJsaW5nKCk7aWYobnVsbD09PW8paWYobnVsbCE9PWkpe2NvbnN0IGU9aS5nZXRXcml0YWJsZSgpO3IuX19maXJzdD1pLl9fa2V5LGUuX19wcmV2PW51bGx9ZWxzZSByLl9fZmlyc3Q9bnVsbDtlbHNle2NvbnN0IGU9by5nZXRXcml0YWJsZSgpO2lmKG51bGwhPT1pKXtjb25zdCB0PWkuZ2V0V3JpdGFibGUoKTt0Ll9fcHJldj1lLl9fa2V5LGUuX19uZXh0PXQuX19rZXl9ZWxzZSBlLl9fbmV4dD1udWxsO24uX19wcmV2PW51bGx9aWYobnVsbD09PWkpaWYobnVsbCE9PW8pe2NvbnN0IGU9by5nZXRXcml0YWJsZSgpO3IuX19sYXN0PW8uX19rZXksZS5fX25leHQ9bnVsbH1lbHNlIHIuX19sYXN0PW51bGw7ZWxzZXtjb25zdCBlPWkuZ2V0V3JpdGFibGUoKTtpZihudWxsIT09byl7Y29uc3QgdD1vLmdldFdyaXRhYmxlKCk7dC5fX25leHQ9ZS5fX2tleSxlLl9fcHJldj10Ll9fa2V5fWVsc2UgZS5fX3ByZXY9bnVsbDtuLl9fbmV4dD1udWxsfXIuX19zaXplLS0sbi5fX3BhcmVudD1udWxsfX1mdW5jdGlvbiBVZyhlKXtYYigpO2NvbnN0IHQ9ZS5nZXRMYXRlc3QoKSxuPXQuX19wYXJlbnQscj1KYigpLG89WmIoKSxpPXIuX25vZGVNYXAscz1vLl9kaXJ0eUVsZW1lbnRzO251bGwhPT1uJiZmdW5jdGlvbihlLHQsbil7bGV0IHI9ZTtmb3IoO251bGwhPT1yOyl7aWYobi5oYXMocikpcmV0dXJuO2NvbnN0IGU9dC5nZXQocik7aWYodm9pZCAwPT09ZSlicmVhaztuLnNldChyLCExKSxyPWUuX19wYXJlbnR9fShuLGkscyk7Y29uc3QgYT10Ll9fa2V5O28uX2RpcnR5VHlwZT0xLGR4KGUpP3Muc2V0KGEsITApOm8uX2RpcnR5TGVhdmVzLmFkZChhKX1mdW5jdGlvbiAkZyhlKXtHYigpO2NvbnN0IHQ9WmIoKSxuPXQuX2NvbXBvc2l0aW9uS2V5O2lmKGUhPT1uKXtpZih0Ll9jb21wb3NpdGlvbktleT1lLG51bGwhPT1uKXtjb25zdCBlPUhnKG4pO251bGwhPT1lJiZlLmdldFdyaXRhYmxlKCl9aWYobnVsbCE9PWUpe2NvbnN0IHQ9SGcoZSk7bnVsbCE9PXQmJnQuZ2V0V3JpdGFibGUoKX19fWZ1bmN0aW9uIEtnKCl7cmV0dXJuIFliKCk/bnVsbDpaYigpLl9jb21wb3NpdGlvbktleX1mdW5jdGlvbiBIZyhlLHQpe2NvbnN0IG49KHR8fEpiKCkpLl9ub2RlTWFwLmdldChlKTtyZXR1cm4gdm9pZCAwPT09bj9udWxsOm59ZnVuY3Rpb24gcWcoZSx0KXtjb25zdCBuPWVbYF9fbGV4aWNhbEtleV8ke1piKCkuX2tleX1gXTtyZXR1cm4gdm9pZCAwIT09bj9IZyhuLHQpOm51bGx9ZnVuY3Rpb24gWWcoZSx0KXtsZXQgbj1lO2Zvcig7bnVsbCE9bjspe2NvbnN0IGU9cWcobix0KTtpZihudWxsIT09ZSlyZXR1cm4gZTtuPVN2KG4pfXJldHVybiBudWxsfWZ1bmN0aW9uIEdnKGUpe2NvbnN0IHQ9ZS5fZGVjb3JhdG9ycyxuPU9iamVjdC5hc3NpZ24oe30sdCk7cmV0dXJuIGUuX3BlbmRpbmdEZWNvcmF0b3JzPW4sbn1mdW5jdGlvbiBYZyhlKXtyZXR1cm4gZS5yZWFkKCgoKT0+SmcoKS5nZXRUZXh0Q29udGVudCgpKSl9ZnVuY3Rpb24gSmcoKXtyZXR1cm4gWmcoSmIoKSl9ZnVuY3Rpb24gWmcoZSl7cmV0dXJuIGUuX25vZGVNYXAuZ2V0KFwicm9vdFwiKX1mdW5jdGlvbiBRZyhlKXtHYigpO2NvbnN0IHQ9SmIoKTtudWxsIT09ZSYmKGUuZGlydHk9ITAsZS5zZXRDYWNoZWROb2RlcyhudWxsKSksdC5fc2VsZWN0aW9uPWV9ZnVuY3Rpb24gZXYoZSl7Y29uc3QgdD1aYigpLG49ZnVuY3Rpb24oZSx0KXtsZXQgbj1lO2Zvcig7bnVsbCE9bjspe2NvbnN0IGU9bltgX19sZXhpY2FsS2V5XyR7dC5fa2V5fWBdO2lmKHZvaWQgMCE9PWUpcmV0dXJuIGU7bj1TdihuKX1yZXR1cm4gbnVsbH0oZSx0KTtyZXR1cm4gbnVsbD09PW4/ZT09PXQuZ2V0Um9vdEVsZW1lbnQoKT9IZyhcInJvb3RcIik6bnVsbDpIZyhuKX1mdW5jdGlvbiB0dihlLHQpe3JldHVybiB0P2UuZ2V0VGV4dENvbnRlbnRTaXplKCk6MH1mdW5jdGlvbiBudihlKXtyZXR1cm4vW1xcdUQ4MDAtXFx1REJGRl1bXFx1REMwMC1cXHVERkZGXS9nLnRlc3QoZSl9ZnVuY3Rpb24gcnYoZSl7Y29uc3QgdD1bXTtsZXQgbj1lO2Zvcig7bnVsbCE9PW47KXQucHVzaChuKSxuPW4uX3BhcmVudEVkaXRvcjtyZXR1cm4gdH1mdW5jdGlvbiBvdigpe3JldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5yZXBsYWNlKC9bXmEtel0rL2csXCJcIikuc3Vic3RyKDAsNSl9ZnVuY3Rpb24gaXYoZSl7cmV0dXJuIGUubm9kZVR5cGU9PT1CbT9lLm5vZGVWYWx1ZTpudWxsfWZ1bmN0aW9uIHN2KGUsdCxuKXtjb25zdCByPVJ2KHQuX3dpbmRvdyk7aWYobnVsbD09PXIpcmV0dXJuO2NvbnN0IG89ci5hbmNob3JOb2RlO2xldHthbmNob3JPZmZzZXQ6aSxmb2N1c09mZnNldDpzfT1yO2lmKG51bGwhPT1vKXtsZXQgdD1pdihvKTtjb25zdCByPVlnKG8pO2lmKG51bGwhPT10JiZkYihyKSl7aWYodD09PXRnJiZuKXtjb25zdCBlPW4ubGVuZ3RoO3Q9bixpPWUscz1lfW51bGwhPT10JiZhdihyLHQsaSxzLGUpfX19ZnVuY3Rpb24gYXYoZSx0LG4scixvKXtsZXQgaT1lO2lmKGkuaXNBdHRhY2hlZCgpJiYob3x8IWkuaXNEaXJ0eSgpKSl7Y29uc3Qgcz1pLmlzQ29tcG9zaW5nKCk7bGV0IGE9dDsoc3x8bykmJnRbdC5sZW5ndGgtMV09PT10ZyYmKGE9dC5zbGljZSgwLC0xKSk7Y29uc3QgbD1pLmdldFRleHRDb250ZW50KCk7aWYob3x8YSE9PWwpe2lmKFwiXCI9PT1hKXtpZigkZyhudWxsKSxqbXx8TW18fEZtKWkucmVtb3ZlKCk7ZWxzZXtjb25zdCBlPVpiKCk7c2V0VGltZW91dCgoKCk9PntlLnVwZGF0ZSgoKCk9PntpLmlzQXR0YWNoZWQoKSYmaS5yZW1vdmUoKX0pKX0pLDIwKX1yZXR1cm59Y29uc3QgdD1pLmdldFBhcmVudCgpLG89SWIoKSxsPWkuZ2V0VGV4dENvbnRlbnRTaXplKCksYz1LZygpLHU9aS5nZXRLZXkoKTtpZihpLmlzVG9rZW4oKXx8bnVsbCE9PWMmJnU9PT1jJiYhc3x8d2IobykmJihudWxsIT09dCYmIXQuY2FuSW5zZXJ0VGV4dEJlZm9yZSgpJiYwPT09by5hbmNob3Iub2Zmc2V0fHxvLmFuY2hvci5rZXk9PT1lLl9fa2V5JiYwPT09by5hbmNob3Iub2Zmc2V0JiYhaS5jYW5JbnNlcnRUZXh0QmVmb3JlKCkmJiFzfHxvLmZvY3VzLmtleT09PWUuX19rZXkmJm8uZm9jdXMub2Zmc2V0PT09bCYmIWkuY2FuSW5zZXJ0VGV4dEFmdGVyKCkmJiFzKSlyZXR1cm4gdm9pZCBpLm1hcmtEaXJ0eSgpO2NvbnN0IGQ9TWIoKTtpZighd2IoZCl8fG51bGw9PT1ufHxudWxsPT09cilyZXR1cm4gdm9pZCBpLnNldFRleHRDb250ZW50KGEpO2lmKGQuc2V0VGV4dE5vZGVSYW5nZShpLG4saSxyKSxpLmlzU2VnbWVudGVkKCkpe2NvbnN0IGU9dWIoaS5nZXRUZXh0Q29udGVudCgpKTtpLnJlcGxhY2UoZSksaT1lfWkuc2V0VGV4dENvbnRlbnQoYSl9fX1mdW5jdGlvbiBsdihlKXtyZXR1cm5cIkFycm93TGVmdFwiPT09ZX1mdW5jdGlvbiBjdihlKXtyZXR1cm5cIkFycm93UmlnaHRcIj09PWV9ZnVuY3Rpb24gdXYoZSx0KXtyZXR1cm4gUm0/ZTp0fWZ1bmN0aW9uIGR2KGUpe3JldHVyblwiRW50ZXJcIj09PWV9ZnVuY3Rpb24gZnYoZSl7cmV0dXJuXCJCYWNrc3BhY2VcIj09PWV9ZnVuY3Rpb24gaHYoZSl7cmV0dXJuXCJEZWxldGVcIj09PWV9ZnVuY3Rpb24gcHYoZSx0LG4pe3JldHVyblwiYVwiPT09ZS50b0xvd2VyQ2FzZSgpJiZ1dih0LG4pfWZ1bmN0aW9uIG12KGUsdCl7dm9pZCAwPT09ZS5fX2xleGljYWxDbGFzc05hbWVDYWNoZSYmKGUuX19sZXhpY2FsQ2xhc3NOYW1lQ2FjaGU9e30pO2NvbnN0IG49ZS5fX2xleGljYWxDbGFzc05hbWVDYWNoZSxyPW5bdF07aWYodm9pZCAwIT09cilyZXR1cm4gcjtjb25zdCBvPWVbdF07aWYoXCJzdHJpbmdcIj09dHlwZW9mIG8pe2NvbnN0IGU9Z2cobyk7cmV0dXJuIG5bdF09ZSxlfXJldHVybiBvfWZ1bmN0aW9uIGd2KGUsdCxuLHIsbyl7aWYoMD09PW4uc2l6ZSlyZXR1cm47Y29uc3QgaT1yLl9fdHlwZSxzPXIuX19rZXksYT10LmdldChpKTt2b2lkIDA9PT1hJiZtZygzMyxpKTtjb25zdCBsPWEua2xhc3M7bGV0IGM9ZS5nZXQobCk7dm9pZCAwPT09YyYmKGM9bmV3IE1hcCxlLnNldChsLGMpKTtjb25zdCB1PWMuZ2V0KHMpLGQ9XCJkZXN0cm95ZWRcIj09PXUmJlwiY3JlYXRlZFwiPT09bzsodm9pZCAwPT09dXx8ZCkmJmMuc2V0KHMsZD9cInVwZGF0ZWRcIjpvKX1mdW5jdGlvbiB2dihlLHQsbil7Y29uc3Qgcj1lLmdldFBhcmVudCgpO2xldCBvPW4saT1lO3JldHVybiBudWxsIT09ciYmKHQmJjA9PT1uPyhvPWkuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKSxpPXIpOnR8fG4hPT1pLmdldENoaWxkcmVuU2l6ZSgpfHwobz1pLmdldEluZGV4V2l0aGluUGFyZW50KCkrMSxpPXIpKSxpLmdldENoaWxkQXRJbmRleCh0P28tMTpvKX1mdW5jdGlvbiB5dihlLHQpe2NvbnN0IG49ZS5vZmZzZXQ7aWYoXCJlbGVtZW50XCI9PT1lLnR5cGUpcmV0dXJuIHZ2KGUuZ2V0Tm9kZSgpLHQsbik7e2NvbnN0IHI9ZS5nZXROb2RlKCk7aWYodCYmMD09PW58fCF0JiZuPT09ci5nZXRUZXh0Q29udGVudFNpemUoKSl7Y29uc3QgZT10P3IuZ2V0UHJldmlvdXNTaWJsaW5nKCk6ci5nZXROZXh0U2libGluZygpO3JldHVybiBudWxsPT09ZT92dihyLmdldFBhcmVudE9yVGhyb3coKSx0LHIuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKSsodD8wOjEpKTplfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBidihlKXtjb25zdCB0PWt2KGUpLmV2ZW50LG49dCYmdC5pbnB1dFR5cGU7cmV0dXJuXCJpbnNlcnRGcm9tUGFzdGVcIj09PW58fFwiaW5zZXJ0RnJvbVBhc3RlQXNRdW90YXRpb25cIj09PW59ZnVuY3Rpb24geHYoZSx0LG4pe3JldHVybiBzeChlLHQsbil9ZnVuY3Rpb24gd3YoZSl7cmV0dXJuIWd4KGUpJiYhZS5pc0xhc3RDaGlsZCgpJiYhZS5pc0lubGluZSgpfWZ1bmN0aW9uIEV2KGUsdCl7Y29uc3Qgbj1lLl9rZXlUb0RPTU1hcC5nZXQodCk7cmV0dXJuIHZvaWQgMD09PW4mJm1nKDc1LHQpLG59ZnVuY3Rpb24gU3YoZSl7Y29uc3QgdD1lLmFzc2lnbmVkU2xvdHx8ZS5wYXJlbnRFbGVtZW50O3JldHVybiBudWxsIT09dCYmMTE9PT10Lm5vZGVUeXBlP3QuaG9zdDp0fWZ1bmN0aW9uIF92KGUsdCl7bGV0IG49ZS5nZXRQYXJlbnQoKTtmb3IoO251bGwhPT1uOyl7aWYobi5pcyh0KSlyZXR1cm4hMDtuPW4uZ2V0UGFyZW50KCl9cmV0dXJuITF9ZnVuY3Rpb24ga3YoZSl7Y29uc3QgdD1lLl93aW5kb3c7cmV0dXJuIG51bGw9PT10JiZtZyg3OCksdH1mdW5jdGlvbiBDdihlKXtyZXR1cm4gZ3goZSl8fGR4KGUpJiZlLmlzU2hhZG93Um9vdCgpfWZ1bmN0aW9uIFB2KGUpe2NvbnN0IHQ9WmIoKSxuPWUuY29uc3RydWN0b3IuZ2V0VHlwZSgpLHI9dC5fbm9kZXMuZ2V0KG4pO3ZvaWQgMD09PXImJm1nKDk3KTtjb25zdCBvPXIucmVwbGFjZTtpZihudWxsIT09byl7Y29uc3QgdD1vKGUpO3JldHVybiB0IGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcnx8bWcoOTgpLHR9cmV0dXJuIGV9ZnVuY3Rpb24gVHYoZSx0KXshZ3goZS5nZXRQYXJlbnQoKSl8fGR4KHQpfHxweCh0KXx8bWcoOTkpfWZ1bmN0aW9uIE92KGUpe3JldHVybihweChlKXx8ZHgoZSkmJiFlLmNhbkJlRW1wdHkoKSkmJiFlLmlzSW5saW5lKCl9ZnVuY3Rpb24gX24oZSx0LG4pe24uc3R5bGUucmVtb3ZlUHJvcGVydHkoXCJjYXJldC1jb2xvclwiKSx0Ll9ibG9ja0N1cnNvckVsZW1lbnQ9bnVsbDtjb25zdCByPWUucGFyZW50RWxlbWVudDtudWxsIT09ciYmci5yZW1vdmVDaGlsZChlKX1mdW5jdGlvbiBSdihlKXtyZXR1cm4gVG0/KGV8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCk6bnVsbH1mdW5jdGlvbiBOdihlKXtyZXR1cm4gMT09PWUubm9kZVR5cGV9ZnVuY3Rpb24gQXYoZSl7Y29uc3QgdD1uZXcgUmVnRXhwKC9eKGF8YWJicnxhY3JvbnltfGJ8Y2l0ZXxjb2RlfGRlbHxlbXxpfGluc3xrYmR8bGFiZWx8b3V0cHV0fHF8cnVieXxzfHNhbXB8c3BhbnxzdHJvbmd8c3VifHN1cHx0aW1lfHV8dHR8dmFyfCN0ZXh0KSQvLFwiaVwiKTtyZXR1cm4gbnVsbCE9PWUubm9kZU5hbWUubWF0Y2godCl9ZnVuY3Rpb24ganYoZSl7Y29uc3QgdD1uZXcgUmVnRXhwKC9eKGFkZHJlc3N8YXJ0aWNsZXxhc2lkZXxibG9ja3F1b3RlfGNhbnZhc3xkZHxkaXZ8ZGx8ZHR8ZmllbGRzZXR8ZmlnY2FwdGlvbnxmaWd1cmV8Zm9vdGVyfGZvcm18aDF8aDJ8aDN8aDR8aDV8aDZ8aGVhZGVyfGhyfGxpfG1haW58bmF2fG5vc2NyaXB0fG9sfHB8cHJlfHNlY3Rpb258dGFibGV8dGR8dGZvb3R8dWx8dmlkZW8pJC8sXCJpXCIpO3JldHVybiBudWxsIT09ZS5ub2RlTmFtZS5tYXRjaCh0KX1mdW5jdGlvbiBNdihlKXtpZihneChlKXx8cHgoZSkmJiFlLmlzSW5saW5lKCkpcmV0dXJuITA7aWYoIWR4KGUpfHxDdihlKSlyZXR1cm4hMTtjb25zdCB0PWUuZ2V0Rmlyc3RDaGlsZCgpLG49bnVsbD09PXR8fHF5KHQpfHxkYih0KXx8dC5pc0lubGluZSgpO3JldHVybiFlLmlzSW5saW5lKCkmJiExIT09ZS5jYW5CZUVtcHR5KCkmJm59ZnVuY3Rpb24gSXYoZSx0KXtsZXQgbj1lO2Zvcig7bnVsbCE9PW4mJm51bGwhPT1uLmdldFBhcmVudCgpJiYhdChuKTspbj1uLmdldFBhcmVudE9yVGhyb3coKTtyZXR1cm4gdChuKT9uOm51bGx9Y29uc3QgRHY9bmV3IFdlYWtNYXAsTHY9bmV3IE1hcDtmdW5jdGlvbiBGdihlKXtjb25zdCB0PWUuY29uc3RydWN0b3IuY2xvbmUoZSk7cmV0dXJuIHQuYWZ0ZXJDbG9uZUZyb20oZSksdH1mdW5jdGlvbiB6dihlLHQsbixyLG8saSl7bGV0IHM9ZS5nZXRGaXJzdENoaWxkKCk7Zm9yKDtudWxsIT09czspe2NvbnN0IGU9cy5fX2tleTtzLl9fcGFyZW50PT09dCYmKGR4KHMpJiZ6dihzLGUsbixyLG8saSksbi5oYXMoZSl8fGkuZGVsZXRlKGUpLG8ucHVzaChlKSkscz1zLmdldE5leHRTaWJsaW5nKCl9fWxldCBCdixWdixXdixVdiwkdixLdixIdixxdixZdixHdixYdj1cIlwiLEp2PVwiXCIsWnY9bnVsbCxRdj1cIlwiLGV5PVwiXCIsdHk9ITEsbnk9ITEscnk9bnVsbDtmdW5jdGlvbiBveShlLHQpe2NvbnN0IG49SHYuZ2V0KGUpO2lmKG51bGwhPT10KXtjb25zdCBuPWJ5KGUpO24ucGFyZW50Tm9kZT09PXQmJnQucmVtb3ZlQ2hpbGQobil9aWYocXYuaGFzKGUpfHxWdi5fa2V5VG9ET01NYXAuZGVsZXRlKGUpLGR4KG4pKXtjb25zdCBlPW15KG4sSHYpO2l5KGUsMCxlLmxlbmd0aC0xLG51bGwpfXZvaWQgMCE9PW4mJmd2KEd2LFd2LFV2LG4sXCJkZXN0cm95ZWRcIil9ZnVuY3Rpb24gaXkoZSx0LG4scil7bGV0IG89dDtmb3IoO288PW47KytvKXtjb25zdCB0PWVbb107dm9pZCAwIT09dCYmb3kodCxyKX19ZnVuY3Rpb24gc3koZSx0KXtlLnNldFByb3BlcnR5KFwidGV4dC1hbGlnblwiLHQpfWNvbnN0IGF5PVwiNDBweFwiO2Z1bmN0aW9uIGx5KGUsdCl7Y29uc3Qgbj1Cdi50aGVtZS5pbmRlbnQ7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pe2NvbnN0IHI9ZS5jbGFzc0xpc3QuY29udGFpbnMobik7dD4wJiYhcj9lLmNsYXNzTGlzdC5hZGQobik6dDwxJiZyJiZlLmNsYXNzTGlzdC5yZW1vdmUobil9Y29uc3Qgcj1nZXRDb21wdXRlZFN0eWxlKGUpLmdldFByb3BlcnR5VmFsdWUoXCItLWxleGljYWwtaW5kZW50LWJhc2UtdmFsdWVcIil8fGF5O2Uuc3R5bGUuc2V0UHJvcGVydHkoXCJwYWRkaW5nLWlubGluZS1zdGFydFwiLDA9PT10P1wiXCI6YGNhbGMoJHt0fSAqICR7cn0pYCl9ZnVuY3Rpb24gY3koZSx0KXtjb25zdCBuPWUuc3R5bGU7MD09PXQ/c3kobixcIlwiKTp0PT09R20/c3kobixcImxlZnRcIik6dD09PVhtP3N5KG4sXCJjZW50ZXJcIik6dD09PUptP3N5KG4sXCJyaWdodFwiKTp0PT09Wm0/c3kobixcImp1c3RpZnlcIik6dD09PVFtP3N5KG4sXCJzdGFydFwiKTp0PT09ZWcmJnN5KG4sXCJlbmRcIil9ZnVuY3Rpb24gdXkoZSx0LG4pe2NvbnN0IHI9cXYuZ2V0KGUpO3ZvaWQgMD09PXImJm1nKDYwKTtjb25zdCBvPXIuY3JlYXRlRE9NKEJ2LFZ2KTtpZihmdW5jdGlvbihlLHQsbil7Y29uc3Qgcj1uLl9rZXlUb0RPTU1hcDt0W1wiX19sZXhpY2FsS2V5X1wiK24uX2tleV09ZSxyLnNldChlLHQpfShlLG8sVnYpLGRiKHIpP28uc2V0QXR0cmlidXRlKFwiZGF0YS1sZXhpY2FsLXRleHRcIixcInRydWVcIik6cHgocikmJm8uc2V0QXR0cmlidXRlKFwiZGF0YS1sZXhpY2FsLWRlY29yYXRvclwiLFwidHJ1ZVwiKSxkeChyKSl7Y29uc3QgZT1yLl9faW5kZW50LHQ9ci5fX3NpemU7aWYoMCE9PWUmJmx5KG8sZSksMCE9PXQpe2NvbnN0IGU9dC0xOyFmdW5jdGlvbihlLHQsbixyKXtjb25zdCBvPUp2O0p2PVwiXCIsZHkoZSxuLDAsdCxyLG51bGwpLHB5KG4sciksSnY9b30obXkocixxdiksZSxyLG8pfWNvbnN0IG49ci5fX2Zvcm1hdDswIT09biYmY3kobyxuKSxyLmlzSW5saW5lKCl8fGh5KG51bGwscixvKSx3dihyKSYmKFh2Kz1uZyxleSs9bmcpfWVsc2V7Y29uc3QgdD1yLmdldFRleHRDb250ZW50KCk7aWYocHgocikpe2NvbnN0IHQ9ci5kZWNvcmF0ZShWdixCdik7bnVsbCE9PXQmJnZ5KGUsdCksby5jb250ZW50RWRpdGFibGU9XCJmYWxzZVwifWVsc2UgZGIocikmJihyLmlzRGlyZWN0aW9ubGVzcygpfHwoSnYrPXQpKTtYdis9dCxleSs9dH1pZihudWxsIT09dClpZihudWxsIT1uKXQuaW5zZXJ0QmVmb3JlKG8sbik7ZWxzZXtjb25zdCBlPXQuX19sZXhpY2FsTGluZUJyZWFrO251bGwhPWU/dC5pbnNlcnRCZWZvcmUobyxlKTp0LmFwcGVuZENoaWxkKG8pfXJldHVybiBndihHdixXdixVdixyLFwiY3JlYXRlZFwiKSxvfWZ1bmN0aW9uIGR5KGUsdCxuLHIsbyxpKXtjb25zdCBzPVh2O1h2PVwiXCI7bGV0IGE9bjtmb3IoO2E8PXI7KythKXt1eShlW2FdLG8saSk7Y29uc3QgdD1xdi5nZXQoZVthXSk7bnVsbCE9PXQmJmRiKHQpJiYobnVsbD09PVp2JiYoWnY9dC5nZXRGb3JtYXQoKSksXCJcIj09PVF2JiYoUXY9dC5nZXRTdHlsZSgpKSl9d3YodCkmJihYdis9bmcpLG8uX19sZXhpY2FsVGV4dENvbnRlbnQ9WHYsWHY9cytYdn1mdW5jdGlvbiBmeShlLHQpe2NvbnN0IG49dC5nZXQoZSk7cmV0dXJuIHF5KG4pfHxweChuKSYmbi5pc0lubGluZSgpfWZ1bmN0aW9uIGh5KGUsdCxuKXtjb25zdCByPW51bGwhPT1lJiYoMD09PWUuX19zaXplfHxmeShlLl9fbGFzdCxIdikpLG89MD09PXQuX19zaXplfHxmeSh0Ll9fbGFzdCxxdik7aWYocil7aWYoIW8pe2NvbnN0IGU9bi5fX2xleGljYWxMaW5lQnJlYWs7aWYobnVsbCE9ZSl0cnl7bi5yZW1vdmVDaGlsZChlKX1jYXRjaCh0KXtpZihcIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9dCl7Y29uc3Qgcj1gJHt0LnRvU3RyaW5nKCl9IFBhcmVudDogJHtuLnRhZ05hbWV9LCBjaGlsZDogJHtlLnRhZ05hbWV9LmA7dGhyb3cgbmV3IEVycm9yKHIpfXRocm93IHR9bi5fX2xleGljYWxMaW5lQnJlYWs9bnVsbH19ZWxzZSBpZihvKXtjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKTtuLl9fbGV4aWNhbExpbmVCcmVhaz1lLG4uYXBwZW5kQ2hpbGQoZSl9fWZ1bmN0aW9uIHB5KGUsdCl7Y29uc3Qgbj10Ll9fbGV4aWNhbERpclRleHRDb250ZW50LHI9dC5fX2xleGljYWxEaXI7aWYobiE9PUp2fHxyIT09cnkpe2NvbnN0IG49XCJcIj09PUp2LGk9bj9yeToobz1KdixzZy50ZXN0KG8pP1wicnRsXCI6YWcudGVzdChvKT9cImx0clwiOm51bGwpO2lmKGkhPT1yKXtjb25zdCBvPXQuY2xhc3NMaXN0LHM9QnYudGhlbWU7bGV0IGE9bnVsbCE9PXI/c1tyXTp2b2lkIDAsbD1udWxsIT09aT9zW2ldOnZvaWQgMDtpZih2b2lkIDAhPT1hKXtpZihcInN0cmluZ1wiPT10eXBlb2YgYSl7Y29uc3QgZT1nZyhhKTthPXNbcl09ZX1vLnJlbW92ZSguLi5hKX1pZihudWxsPT09aXx8biYmXCJsdHJcIj09PWkpdC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXJcIik7ZWxzZXtpZih2b2lkIDAhPT1sKXtpZihcInN0cmluZ1wiPT10eXBlb2YgbCl7Y29uc3QgZT1nZyhsKTtsPXNbaV09ZX12b2lkIDAhPT1sJiZvLmFkZCguLi5sKX10LmRpcj1pfW55fHwoZS5nZXRXcml0YWJsZSgpLl9fZGlyPWkpfXJ5PWksdC5fX2xleGljYWxEaXJUZXh0Q29udGVudD1Kdix0Ll9fbGV4aWNhbERpcj1pfXZhciBvfWZ1bmN0aW9uIG15KGUsdCl7Y29uc3Qgbj1bXTtsZXQgcj1lLl9fZmlyc3Q7Zm9yKDtudWxsIT09cjspe2NvbnN0IGU9dC5nZXQocik7dm9pZCAwPT09ZSYmbWcoMTAxKSxuLnB1c2gocikscj1lLl9fbmV4dH1yZXR1cm4gbn1mdW5jdGlvbiBneShlLHQpe2NvbnN0IG49SHYuZ2V0KGUpO2xldCByPXF2LmdldChlKTt2b2lkIDAhPT1uJiZ2b2lkIDAhPT1yfHxtZyg2MSk7Y29uc3Qgbz10eXx8S3YuaGFzKGUpfHwkdi5oYXMoZSksaT1FdihWdixlKTtpZihuPT09ciYmIW8pe2lmKGR4KG4pKXtjb25zdCBlPWkuX19sZXhpY2FsVGV4dENvbnRlbnQ7dm9pZCAwIT09ZSYmKFh2Kz1lLGV5Kz1lKTtjb25zdCB0PWkuX19sZXhpY2FsRGlyVGV4dENvbnRlbnQ7dm9pZCAwIT09dCYmKEp2Kz10KX1lbHNle2NvbnN0IGU9bi5nZXRUZXh0Q29udGVudCgpO2RiKG4pJiYhbi5pc0RpcmVjdGlvbmxlc3MoKSYmKEp2Kz1lKSxleSs9ZSxYdis9ZX1yZXR1cm4gaX1pZihuIT09ciYmbyYmZ3YoR3YsV3YsVXYscixcInVwZGF0ZWRcIiksci51cGRhdGVET00obixpLEJ2KSl7Y29uc3Qgbj11eShlLG51bGwsbnVsbCk7cmV0dXJuIG51bGw9PT10JiZtZyg2MiksdC5yZXBsYWNlQ2hpbGQobixpKSxveShlLG51bGwpLG59aWYoZHgobikmJmR4KHIpKXtjb25zdCBlPXIuX19pbmRlbnQ7ZSE9PW4uX19pbmRlbnQmJmx5KGksZSk7Y29uc3QgdD1yLl9fZm9ybWF0O3QhPT1uLl9fZm9ybWF0JiZjeShpLHQpLG8mJihmdW5jdGlvbihlLHQsbil7Y29uc3Qgcj1Kdjt2YXIgbztKdj1cIlwiLFp2PW51bGwsUXY9XCJcIixmdW5jdGlvbihlLHQsbil7Y29uc3Qgcj1YdixvPWUuX19zaXplLGk9dC5fX3NpemU7aWYoWHY9XCJcIiwxPT09byYmMT09PWkpe2NvbnN0IHI9ZS5fX2ZpcnN0LG89dC5fX2ZpcnN0O2lmKHI9PT1vKWd5KHIsbik7ZWxzZXtjb25zdCBlPWJ5KHIpLHQ9dXkobyxudWxsLG51bGwpO3RyeXtuLnJlcGxhY2VDaGlsZCh0LGUpfWNhdGNoKGkpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiZudWxsIT1pKXtjb25zdCBzPWAke2kudG9TdHJpbmcoKX0gUGFyZW50OiAke24udGFnTmFtZX0sIG5ldyBjaGlsZDoge3RhZzogJHt0LnRhZ05hbWV9IGtleTogJHtvfX0sIG9sZCBjaGlsZDoge3RhZzogJHtlLnRhZ05hbWV9LCBrZXk6ICR7cn19LmA7dGhyb3cgbmV3IEVycm9yKHMpfXRocm93IGl9b3kocixudWxsKX1jb25zdCBzPXF2LmdldChvKTtkYihzKSYmKG51bGw9PT1adiYmKFp2PXMuZ2V0Rm9ybWF0KCkpLFwiXCI9PT1RdiYmKFF2PXMuZ2V0U3R5bGUoKSkpfWVsc2V7Y29uc3Qgcj1teShlLEh2KSxzPW15KHQscXYpO2lmKDA9PT1vKTAhPT1pJiZkeShzLHQsMCxpLTEsbixudWxsKTtlbHNlIGlmKDA9PT1pKXtpZigwIT09byl7Y29uc3QgZT1udWxsPT1uLl9fbGV4aWNhbExpbmVCcmVhaztpeShyLDAsby0xLGU/bnVsbDpuKSxlJiYobi50ZXh0Q29udGVudD1cIlwiKX19ZWxzZSFmdW5jdGlvbihlLHQsbixyLG8saSl7Y29uc3Qgcz1yLTEsYT1vLTE7bGV0IGwsYyx1PWkuZmlyc3RDaGlsZCxkPTAsZj0wO2Zvcig7ZDw9cyYmZjw9YTspe2NvbnN0IGU9dFtkXSxyPW5bZl07aWYoZT09PXIpdT15eShneShyLGkpKSxkKyssZisrO2Vsc2V7dm9pZCAwPT09bCYmKGw9bmV3IFNldCh0KSksdm9pZCAwPT09YyYmKGM9bmV3IFNldChuKSk7Y29uc3Qgbz1jLmhhcyhlKSxzPWwuaGFzKHIpO2lmKG8paWYocyl7Y29uc3QgZT1FdihWdixyKTtlPT09dT91PXl5KGd5KHIsaSkpOihudWxsIT11P2kuaW5zZXJ0QmVmb3JlKGUsdSk6aS5hcHBlbmRDaGlsZChlKSxneShyLGkpKSxkKyssZisrfWVsc2UgdXkocixpLHUpLGYrKztlbHNlIHU9eXkoYnkoZSkpLG95KGUsaSksZCsrfWNvbnN0IG89cXYuZ2V0KHIpO251bGwhPT1vJiZkYihvKSYmKG51bGw9PT1adiYmKFp2PW8uZ2V0Rm9ybWF0KCkpLFwiXCI9PT1RdiYmKFF2PW8uZ2V0U3R5bGUoKSkpfWNvbnN0IGg9ZD5zLHA9Zj5hO2lmKGgmJiFwKXtjb25zdCB0PW5bYSsxXTtkeShuLGUsZixhLGksdm9pZCAwPT09dD9udWxsOlZ2LmdldEVsZW1lbnRCeUtleSh0KSl9ZWxzZSBwJiYhaCYmaXkodCxkLHMsaSl9KHQscixzLG8saSxuKX13dih0KSYmKFh2Kz1uZyksbi5fX2xleGljYWxUZXh0Q29udGVudD1YdixYdj1yK1h2fShlLHQsbikscHkodCxuKSxreChvPXQpJiZudWxsIT1adiYmWnYhPT1vLl9fdGV4dEZvcm1hdCYmIW55JiYoby5zZXRUZXh0Rm9ybWF0KFp2KSxvLnNldFRleHRTdHlsZShRdikpLGZ1bmN0aW9uKGUpe2t4KGUpJiZcIlwiIT09UXYmJlF2IT09ZS5fX3RleHRTdHlsZSYmIW55JiZlLnNldFRleHRTdHlsZShRdil9KHQpLEp2PXJ9KG4scixpKSxneChyKXx8ci5pc0lubGluZSgpfHxoeShuLHIsaSkpLHd2KHIpJiYoWHYrPW5nLGV5Kz1uZyl9ZWxzZXtjb25zdCB0PXIuZ2V0VGV4dENvbnRlbnQoKTtpZihweChyKSl7Y29uc3QgdD1yLmRlY29yYXRlKFZ2LEJ2KTtudWxsIT09dCYmdnkoZSx0KX1lbHNlIGRiKHIpJiYhci5pc0RpcmVjdGlvbmxlc3MoKSYmKEp2Kz10KTtYdis9dCxleSs9dH1pZighbnkmJmd4KHIpJiZyLl9fY2FjaGVkVGV4dCE9PWV5KXtjb25zdCBlPXIuZ2V0V3JpdGFibGUoKTtlLl9fY2FjaGVkVGV4dD1leSxyPWV9cmV0dXJuIGl9ZnVuY3Rpb24gdnkoZSx0KXtsZXQgbj1Wdi5fcGVuZGluZ0RlY29yYXRvcnM7Y29uc3Qgcj1Wdi5fZGVjb3JhdG9ycztpZihudWxsPT09bil7aWYocltlXT09PXQpcmV0dXJuO249R2coVnYpfW5bZV09dH1mdW5jdGlvbiB5eShlKXtsZXQgdD1lLm5leHRTaWJsaW5nO3JldHVybiBudWxsIT09dCYmdD09PVZ2Ll9ibG9ja0N1cnNvckVsZW1lbnQmJih0PXQubmV4dFNpYmxpbmcpLHR9ZnVuY3Rpb24gYnkoZSl7Y29uc3QgdD1Zdi5nZXQoZSk7cmV0dXJuIHZvaWQgMD09PXQmJm1nKDc1LGUpLHR9Y29uc3QgeHk9T2JqZWN0LmZyZWV6ZSh7fSksd3k9W1tcImtleWRvd25cIixmdW5jdGlvbihlLHQpe2lmKEV5PWUudGltZVN0YW1wLFN5PWUua2V5LHQuaXNDb21wb3NpbmcoKSlyZXR1cm47Y29uc3R7a2V5Om4sc2hpZnRLZXk6cixjdHJsS2V5Om8sbWV0YUtleTppLGFsdEtleTpzfT1lO3h2KHQsdG0sZSl8fG51bGwhPW4mJihmdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gY3YoZSkmJiF0JiYhciYmIW59KG4sbyxzLGkpP3h2KHQsbm0sZSk6ZnVuY3Rpb24oZSx0LG4scixvKXtyZXR1cm4gY3YoZSkmJiFyJiYhbiYmKHR8fG8pfShuLG8scixzLGkpP3h2KHQscm0sZSk6ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIGx2KGUpJiYhdCYmIXImJiFufShuLG8scyxpKT94dih0LG9tLGUpOmZ1bmN0aW9uKGUsdCxuLHIsbyl7cmV0dXJuIGx2KGUpJiYhciYmIW4mJih0fHxvKX0obixvLHIscyxpKT94dih0LGltLGUpOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuXCJBcnJvd1VwXCI9PT1lfShlKSYmIXQmJiFufShuLG8saSk/eHYodCxzbSxlKTpmdW5jdGlvbihlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVyblwiQXJyb3dEb3duXCI9PT1lfShlKSYmIXQmJiFufShuLG8saSk/eHYodCxhbSxlKTpmdW5jdGlvbihlLHQpe3JldHVybiBkdihlKSYmdH0obixyKT8oT3k9ITAseHYodCxsbSxlKSk6ZnVuY3Rpb24oZSl7cmV0dXJuXCIgXCI9PT1lfShuKT94dih0LGNtLGUpOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIFJtJiZ0JiZcIm9cIj09PWUudG9Mb3dlckNhc2UoKX0obixvKT8oZS5wcmV2ZW50RGVmYXVsdCgpLE95PSEwLHh2KHQsS3AsITApKTpmdW5jdGlvbihlLHQpe3JldHVybiBkdihlKSYmIXR9KG4scik/KE95PSExLHh2KHQsbG0sZSkpOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBSbT8hdCYmIW4mJihmdihlKXx8XCJoXCI9PT1lLnRvTG93ZXJDYXNlKCkmJnIpOiEocnx8dHx8bikmJmZ2KGUpfShuLHMsaSxvKT9mdihuKT94dih0LHVtLGUpOihlLnByZXZlbnREZWZhdWx0KCkseHYodCwkcCwhMCkpOmZ1bmN0aW9uKGUpe3JldHVyblwiRXNjYXBlXCI9PT1lfShuKT94dih0LGRtLGUpOmZ1bmN0aW9uKGUsdCxuLHIsbyl7cmV0dXJuIFJtPyEobnx8cnx8bykmJihodihlKXx8XCJkXCI9PT1lLnRvTG93ZXJDYXNlKCkmJnQpOiEodHx8cnx8bykmJmh2KGUpfShuLG8scixzLGkpP2h2KG4pP3h2KHQsZm0sZSk6KGUucHJldmVudERlZmF1bHQoKSx4dih0LCRwLCExKSk6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBmdihlKSYmKFJtP3Q6bil9KG4scyxvKT8oZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQsWHAsITApKTpmdW5jdGlvbihlLHQsbil7cmV0dXJuIGh2KGUpJiYoUm0/dDpuKX0obixzLG8pPyhlLnByZXZlbnREZWZhdWx0KCkseHYodCxYcCwhMSkpOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIFJtJiZ0JiZmdihlKX0obixpKT8oZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQsSnAsITApKTpmdW5jdGlvbihlLHQpe3JldHVybiBSbSYmdCYmaHYoZSl9KG4saSk/KGUucHJldmVudERlZmF1bHQoKSx4dih0LEpwLCExKSk6ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuXCJiXCI9PT1lLnRvTG93ZXJDYXNlKCkmJiF0JiZ1dihuLHIpfShuLHMsaSxvKT8oZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQsWnAsXCJib2xkXCIpKTpmdW5jdGlvbihlLHQsbixyKXtyZXR1cm5cInVcIj09PWUudG9Mb3dlckNhc2UoKSYmIXQmJnV2KG4scil9KG4scyxpLG8pPyhlLnByZXZlbnREZWZhdWx0KCkseHYodCxacCxcInVuZGVybGluZVwiKSk6ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuXCJpXCI9PT1lLnRvTG93ZXJDYXNlKCkmJiF0JiZ1dihuLHIpfShuLHMsaSxvKT8oZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQsWnAsXCJpdGFsaWNcIikpOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVyblwiVGFiXCI9PT1lJiYhdCYmIW4mJiFyfShuLHMsbyxpKT94dih0LGhtLGUpOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVyblwielwiPT09ZS50b0xvd2VyQ2FzZSgpJiYhdCYmdXYobixyKX0obixyLGksbyk/KGUucHJldmVudERlZmF1bHQoKSx4dih0LFFwLHZvaWQgMCkpOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBSbT9cInpcIj09PWUudG9Mb3dlckNhc2UoKSYmbiYmdDpcInlcIj09PWUudG9Mb3dlckNhc2UoKSYmcnx8XCJ6XCI9PT1lLnRvTG93ZXJDYXNlKCkmJnImJnR9KG4scixpLG8pPyhlLnByZXZlbnREZWZhdWx0KCkseHYodCxlbSx2b2lkIDApKTpTYih0Ll9lZGl0b3JTdGF0ZS5fc2VsZWN0aW9uKT9mdW5jdGlvbihlLHQsbixyKXtyZXR1cm4hdCYmXCJjXCI9PT1lLnRvTG93ZXJDYXNlKCkmJihSbT9uOnIpfShuLHIsaSxvKT8oZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQseW0sZSkpOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiF0JiZcInhcIj09PWUudG9Mb3dlckNhc2UoKSYmKFJtP246cil9KG4scixpLG8pPyhlLnByZXZlbnREZWZhdWx0KCkseHYodCxibSxlKSk6cHYobixpLG8pJiYoZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQseG0sZSkpOiFObSYmcHYobixpLG8pJiYoZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQseG0sZSkpLGZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBlfHx0fHxufHxyfShvLHIscyxpKSYmeHYodCxQbSxlKSl9XSxbXCJwb2ludGVyZG93blwiLGZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1lLnRhcmdldCxyPWUucG9pbnRlclR5cGU7biBpbnN0YW5jZW9mIE5vZGUmJlwidG91Y2hcIiE9PXImJmN4KHQsKCgpPT57cHgoWWcobikpfHwoVHk9ITApfSkpfV0sW1wiY29tcG9zaXRpb25zdGFydFwiLGZ1bmN0aW9uKGUsdCl7Y3godCwoKCk9Pntjb25zdCBuPU1iKCk7aWYod2IobikmJiF0LmlzQ29tcG9zaW5nKCkpe2NvbnN0IHI9bi5hbmNob3Isbz1uLmFuY2hvci5nZXROb2RlKCk7JGcoci5rZXkpLChlLnRpbWVTdGFtcDxFeSszMHx8XCJlbGVtZW50XCI9PT1yLnR5cGV8fCFuLmlzQ29sbGFwc2VkKCl8fG8uZ2V0Rm9ybWF0KCkhPT1uLmZvcm1hdHx8ZGIobykmJm8uZ2V0U3R5bGUoKSE9PW4uc3R5bGUpJiZ4dih0LHFwLHJnKX19KSl9XSxbXCJjb21wb3NpdGlvbmVuZFwiLGZ1bmN0aW9uKGUsdCl7Tm0/Unk9ITA6Y3godCwoKCk9PntEeSh0LGUuZGF0YSl9KSl9XSxbXCJpbnB1dFwiLGZ1bmN0aW9uKGUsdCl7ZS5zdG9wUHJvcGFnYXRpb24oKSxjeCh0LCgoKT0+e2NvbnN0IG49TWIoKSxyPWUuZGF0YSxvPUl5KGUpO2lmKG51bGwhPXImJndiKG4pJiZBeShuLG8scixlLnRpbWVTdGFtcCwhMSkpe1J5JiYoRHkodCxyKSxSeT0hMSk7Y29uc3Qgbz1uLmFuY2hvci5nZXROb2RlKCksaT1Sdih0Ll93aW5kb3cpO2lmKG51bGw9PT1pKXJldHVybjtjb25zdCBzPW4uaXNCYWNrd2FyZCgpLGE9cz9uLmFuY2hvci5vZmZzZXQ6bi5mb2N1cy5vZmZzZXQsbD1zP24uZm9jdXMub2Zmc2V0Om4uYW5jaG9yLm9mZnNldDtBbSYmIW4uaXNDb2xsYXBzZWQoKSYmZGIobykmJm51bGwhPT1pLmFuY2hvck5vZGUmJm8uZ2V0VGV4dENvbnRlbnQoKS5zbGljZSgwLGEpK3Irby5nZXRUZXh0Q29udGVudCgpLnNsaWNlKGErbCk9PT1pdihpLmFuY2hvck5vZGUpfHx4dih0LHFwLHIpO2NvbnN0IGM9ci5sZW5ndGg7Tm0mJmM+MSYmXCJpbnNlcnRDb21wb3NpdGlvblRleHRcIj09PWUuaW5wdXRUeXBlJiYhdC5pc0NvbXBvc2luZygpJiYobi5hbmNob3Iub2Zmc2V0LT1jKSxqbXx8TW18fEZtfHwhdC5pc0NvbXBvc2luZygpfHwoRXk9MCwkZyhudWxsKSl9ZWxzZSBzdighMSx0LG51bGwhPT1yP3I6dm9pZCAwKSxSeSYmKER5KHQscnx8dm9pZCAwKSxSeT0hMSk7R2IoKSxrZyhaYigpKX0pKSxreT1udWxsfV0sW1wiY2xpY2tcIixmdW5jdGlvbihlLHQpe2N4KHQsKCgpPT57Y29uc3Qgbj1NYigpLHI9UnYodC5fd2luZG93KSxvPUliKCk7aWYocilpZih3YihuKSl7Y29uc3QgdD1uLmFuY2hvcixpPXQuZ2V0Tm9kZSgpO1wiZWxlbWVudFwiPT09dC50eXBlJiYwPT09dC5vZmZzZXQmJm4uaXNDb2xsYXBzZWQoKSYmIWd4KGkpJiYxPT09SmcoKS5nZXRDaGlsZHJlblNpemUoKSYmaS5nZXRUb3BMZXZlbEVsZW1lbnRPclRocm93KCkuaXNFbXB0eSgpJiZudWxsIT09byYmbi5pcyhvKT8oci5yZW1vdmVBbGxSYW5nZXMoKSxuLmRpcnR5PSEwKTozIT09ZS5kZXRhaWx8fG4uaXNDb2xsYXBzZWQoKXx8aSE9PW4uZm9jdXMuZ2V0Tm9kZSgpJiYoZHgoaSk/aS5zZWxlY3QoMCk6aS5nZXRQYXJlbnRPclRocm93KCkuc2VsZWN0KDApKX1lbHNlIGlmKFwidG91Y2hcIj09PWUucG9pbnRlclR5cGUpe2NvbnN0IG49ci5hbmNob3JOb2RlO2lmKG51bGwhPT1uKXtjb25zdCBpPW4ubm9kZVR5cGU7aSE9PXptJiZpIT09Qm18fFFnKGpiKG8scix0LGUpKX19eHYodCxVcCxlKX0pKX1dLFtcImN1dFwiLHh5XSxbXCJjb3B5XCIseHldLFtcImRyYWdzdGFydFwiLHh5XSxbXCJkcmFnb3ZlclwiLHh5XSxbXCJkcmFnZW5kXCIseHldLFtcInBhc3RlXCIseHldLFtcImZvY3VzXCIseHldLFtcImJsdXJcIix4eV0sW1wiZHJvcFwiLHh5XV07QW0mJnd5LnB1c2goW1wiYmVmb3JlaW5wdXRcIiwoZSx0KT0+ZnVuY3Rpb24oZSx0KXtjb25zdCBuPWUuaW5wdXRUeXBlLHI9SXkoZSk7XCJkZWxldGVDb21wb3NpdGlvblRleHRcIj09PW58fE5tJiZidih0KXx8XCJpbnNlcnRDb21wb3NpdGlvblRleHRcIiE9PW4mJmN4KHQsKCgpPT57Y29uc3Qgbz1NYigpO2lmKFwiZGVsZXRlQ29udGVudEJhY2t3YXJkXCI9PT1uKXtpZihudWxsPT09byl7Y29uc3QgZT1JYigpO2lmKCF3YihlKSlyZXR1cm47UWcoZS5jbG9uZSgpKX1pZih3YihvKSl7Y29uc3Qgbj1vLmFuY2hvci5rZXk9PT1vLmZvY3VzLmtleTtpZihpPWUudGltZVN0YW1wLFwiTWVkaWFMYXN0XCI9PT1TeSYmaTxFeSszMCYmdC5pc0NvbXBvc2luZygpJiZuKXtpZigkZyhudWxsKSxFeT0wLHNldFRpbWVvdXQoKCgpPT57Y3godCwoKCk9PnskZyhudWxsKX0pKX0pLDMwKSx3YihvKSl7Y29uc3QgZT1vLmFuY2hvci5nZXROb2RlKCk7ZS5tYXJrRGlydHkoKSxvLmZvcm1hdD1lLmdldEZvcm1hdCgpLGRiKGUpfHxtZygxNDIpLG8uc3R5bGU9ZS5nZXRTdHlsZSgpfX1lbHNleyRnKG51bGwpLGUucHJldmVudERlZmF1bHQoKTtjb25zdCByPW8uYW5jaG9yLmdldE5vZGUoKS5nZXRUZXh0Q29udGVudCgpLGk9MD09PW8uYW5jaG9yLm9mZnNldCYmby5mb2N1cy5vZmZzZXQ9PT1yLmxlbmd0aDtMbSYmbiYmIWl8fHh2KHQsJHAsITApfXJldHVybn19dmFyIGk7aWYoIXdiKG8pKXJldHVybjtjb25zdCBzPWUuZGF0YTtudWxsIT09a3kmJnN2KCExLHQsa3kpLG8uZGlydHkmJm51bGw9PT1reXx8IW8uaXNDb2xsYXBzZWQoKXx8Z3goby5hbmNob3IuZ2V0Tm9kZSgpKXx8bnVsbD09PXJ8fG8uYXBwbHlET01SYW5nZShyKSxreT1udWxsO2NvbnN0IGE9by5hbmNob3IsbD1vLmZvY3VzLGM9YS5nZXROb2RlKCksdT1sLmdldE5vZGUoKTtpZihcImluc2VydFRleHRcIiE9PW4mJlwiaW5zZXJ0VHJhbnNwb3NlXCIhPT1uKXN3aXRjaChlLnByZXZlbnREZWZhdWx0KCksbil7Y2FzZVwiaW5zZXJ0RnJvbVlhbmtcIjpjYXNlXCJpbnNlcnRGcm9tRHJvcFwiOmNhc2VcImluc2VydFJlcGxhY2VtZW50VGV4dFwiOnh2KHQscXAsZSk7YnJlYWs7Y2FzZVwiaW5zZXJ0RnJvbUNvbXBvc2l0aW9uXCI6JGcobnVsbCkseHYodCxxcCxlKTticmVhaztjYXNlXCJpbnNlcnRMaW5lQnJlYWtcIjokZyhudWxsKSx4dih0LEtwLCExKTticmVhaztjYXNlXCJpbnNlcnRQYXJhZ3JhcGhcIjokZyhudWxsKSxPeSYmIU1tPyhPeT0hMSx4dih0LEtwLCExKSk6eHYodCxIcCx2b2lkIDApO2JyZWFrO2Nhc2VcImluc2VydEZyb21QYXN0ZVwiOmNhc2VcImluc2VydEZyb21QYXN0ZUFzUXVvdGF0aW9uXCI6eHYodCxZcCxlKTticmVhaztjYXNlXCJkZWxldGVCeUNvbXBvc2l0aW9uXCI6KGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUhPT10fHxkeChlKXx8ZHgodCl8fCFlLmlzVG9rZW4oKXx8IXQuaXNUb2tlbigpfSkoYyx1KSYmeHYodCxHcCxlKTticmVhaztjYXNlXCJkZWxldGVCeURyYWdcIjpjYXNlXCJkZWxldGVCeUN1dFwiOnh2KHQsR3AsZSk7YnJlYWs7Y2FzZVwiZGVsZXRlQ29udGVudFwiOnh2KHQsJHAsITEpO2JyZWFrO2Nhc2VcImRlbGV0ZVdvcmRCYWNrd2FyZFwiOnh2KHQsWHAsITApO2JyZWFrO2Nhc2VcImRlbGV0ZVdvcmRGb3J3YXJkXCI6eHYodCxYcCwhMSk7YnJlYWs7Y2FzZVwiZGVsZXRlSGFyZExpbmVCYWNrd2FyZFwiOmNhc2VcImRlbGV0ZVNvZnRMaW5lQmFja3dhcmRcIjp4dih0LEpwLCEwKTticmVhaztjYXNlXCJkZWxldGVDb250ZW50Rm9yd2FyZFwiOmNhc2VcImRlbGV0ZUhhcmRMaW5lRm9yd2FyZFwiOmNhc2VcImRlbGV0ZVNvZnRMaW5lRm9yd2FyZFwiOnh2KHQsSnAsITEpO2JyZWFrO2Nhc2VcImZvcm1hdFN0cmlrZVRocm91Z2hcIjp4dih0LFpwLFwic3RyaWtldGhyb3VnaFwiKTticmVhaztjYXNlXCJmb3JtYXRCb2xkXCI6eHYodCxacCxcImJvbGRcIik7YnJlYWs7Y2FzZVwiZm9ybWF0SXRhbGljXCI6eHYodCxacCxcIml0YWxpY1wiKTticmVhaztjYXNlXCJmb3JtYXRVbmRlcmxpbmVcIjp4dih0LFpwLFwidW5kZXJsaW5lXCIpO2JyZWFrO2Nhc2VcImhpc3RvcnlVbmRvXCI6eHYodCxRcCx2b2lkIDApO2JyZWFrO2Nhc2VcImhpc3RvcnlSZWRvXCI6eHYodCxlbSx2b2lkIDApfWVsc2V7aWYoXCJcXG5cIj09PXMpZS5wcmV2ZW50RGVmYXVsdCgpLHh2KHQsS3AsITEpO2Vsc2UgaWYocz09PW5nKWUucHJldmVudERlZmF1bHQoKSx4dih0LEhwLHZvaWQgMCk7ZWxzZSBpZihudWxsPT1zJiZlLmRhdGFUcmFuc2Zlcil7Y29uc3QgdD1lLmRhdGFUcmFuc2Zlci5nZXREYXRhKFwidGV4dC9wbGFpblwiKTtlLnByZXZlbnREZWZhdWx0KCksby5pbnNlcnRSYXdUZXh0KHQpfWVsc2UgbnVsbCE9cyYmQXkobyxyLHMsZS50aW1lU3RhbXAsITApPyhlLnByZXZlbnREZWZhdWx0KCkseHYodCxxcCxzKSk6a3k9cztfeT1lLnRpbWVTdGFtcH19KSl9KGUsdCldKTtsZXQgRXk9MCxTeT1udWxsLF95PTAsa3k9bnVsbDtjb25zdCBDeT1uZXcgV2Vha01hcDtsZXQgUHk9ITEsVHk9ITEsT3k9ITEsUnk9ITEsTnk9WzAsXCJcIiwwLFwicm9vdFwiLDBdO2Z1bmN0aW9uIEF5KGUsdCxuLHIsbyl7Y29uc3QgaT1lLmFuY2hvcixzPWUuZm9jdXMsYT1pLmdldE5vZGUoKSxsPVpiKCksYz1SdihsLl93aW5kb3cpLHU9bnVsbCE9PWM/Yy5hbmNob3JOb2RlOm51bGwsZD1pLmtleSxmPWwuZ2V0RWxlbWVudEJ5S2V5KGQpLGg9bi5sZW5ndGg7cmV0dXJuIGQhPT1zLmtleXx8IWRiKGEpfHwoIW8mJighQW18fF95PHIrNTApfHxhLmlzRGlydHkoKSYmaDwyfHxudihuKSkmJmkub2Zmc2V0IT09cy5vZmZzZXQmJiFhLmlzQ29tcG9zaW5nKCl8fEZnKGEpfHxhLmlzRGlydHkoKSYmaD4xfHwob3x8IUFtKSYmbnVsbCE9PWYmJiFhLmlzQ29tcG9zaW5nKCkmJnUhPT1CZyhmKXx8bnVsbCE9PWMmJm51bGwhPT10JiYoIXQuY29sbGFwc2VkfHx0LnN0YXJ0Q29udGFpbmVyIT09Yy5hbmNob3JOb2RlfHx0LnN0YXJ0T2Zmc2V0IT09Yy5hbmNob3JPZmZzZXQpfHxhLmdldEZvcm1hdCgpIT09ZS5mb3JtYXR8fGEuZ2V0U3R5bGUoKSE9PWUuc3R5bGV8fGZ1bmN0aW9uKGUsdCl7aWYodC5pc1NlZ21lbnRlZCgpKXJldHVybiEwO2lmKCFlLmlzQ29sbGFwc2VkKCkpcmV0dXJuITE7Y29uc3Qgbj1lLmFuY2hvci5vZmZzZXQscj10LmdldFBhcmVudE9yVGhyb3coKSxvPXQuaXNUb2tlbigpO3JldHVybiAwPT09bj8hdC5jYW5JbnNlcnRUZXh0QmVmb3JlKCl8fCFyLmNhbkluc2VydFRleHRCZWZvcmUoKSYmIXQuaXNDb21wb3NpbmcoKXx8b3x8ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmdldFByZXZpb3VzU2libGluZygpO3JldHVybihkYih0KXx8ZHgodCkmJnQuaXNJbmxpbmUoKSkmJiF0LmNhbkluc2VydFRleHRBZnRlcigpfSh0KTpuPT09dC5nZXRUZXh0Q29udGVudFNpemUoKSYmKCF0LmNhbkluc2VydFRleHRBZnRlcigpfHwhci5jYW5JbnNlcnRUZXh0QWZ0ZXIoKSYmIXQuaXNDb21wb3NpbmcoKXx8byl9KGUsYSl9ZnVuY3Rpb24gankoZSx0KXtyZXR1cm4gbnVsbCE9PWUmJm51bGwhPT1lLm5vZGVWYWx1ZSYmZS5ub2RlVHlwZT09PUJtJiYwIT09dCYmdCE9PWUubm9kZVZhbHVlLmxlbmd0aH1mdW5jdGlvbiBNeShlLHQsbil7Y29uc3R7YW5jaG9yTm9kZTpyLGFuY2hvck9mZnNldDpvLGZvY3VzTm9kZTppLGZvY3VzT2Zmc2V0OnN9PWU7UHkmJihQeT0hMSxqeShyLG8pJiZqeShpLHMpKXx8Y3godCwoKCk9PntpZighbilyZXR1cm4gdm9pZCBRZyhudWxsKTtpZighTWcodCxyLGkpKXJldHVybjtjb25zdCBhPU1iKCk7aWYod2IoYSkpe2NvbnN0IG49YS5hbmNob3Iscj1uLmdldE5vZGUoKTtpZihhLmlzQ29sbGFwc2VkKCkpe1wiUmFuZ2VcIj09PWUudHlwZSYmZS5hbmNob3JOb2RlPT09ZS5mb2N1c05vZGUmJihhLmRpcnR5PSEwKTtjb25zdCBvPWt2KHQpLmV2ZW50LGk9bz9vLnRpbWVTdGFtcDpwZXJmb3JtYW5jZS5ub3coKSxbcyxsLGMsdSxkXT1OeSxmPUpnKCksaD0hMT09PXQuaXNDb21wb3NpbmcoKSYmXCJcIj09PWYuZ2V0VGV4dENvbnRlbnQoKTtpZihpPGQrMjAwJiZuLm9mZnNldD09PWMmJm4ua2V5PT09dSlhLmZvcm1hdD1zLGEuc3R5bGU9bDtlbHNlIGlmKFwidGV4dFwiPT09bi50eXBlKWRiKHIpfHxtZygxNDEpLGEuZm9ybWF0PXIuZ2V0Rm9ybWF0KCksYS5zdHlsZT1yLmdldFN0eWxlKCk7ZWxzZSBpZihcImVsZW1lbnRcIj09PW4udHlwZSYmIWgpe2NvbnN0IGU9bi5nZXROb2RlKCk7YS5zdHlsZT1cIlwiLGUgaW5zdGFuY2VvZiB3eCYmMD09PWUuZ2V0Q2hpbGRyZW5TaXplKCk/KGEuZm9ybWF0PWUuZ2V0VGV4dEZvcm1hdCgpLGEuc3R5bGU9ZS5nZXRUZXh0U3R5bGUoKSk6YS5mb3JtYXQ9MH19ZWxzZXtjb25zdCBlPW4ua2V5LHQ9YS5mb2N1cy5rZXkscj1hLmdldE5vZGVzKCksaT1yLmxlbmd0aCxsPWEuaXNCYWNrd2FyZCgpLGM9bD9zOm8sdT1sP286cyxkPWw/dDplLGY9bD9lOnQ7bGV0IGg9WW0scD0hMTtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCB0PXJbZV0sbj10LmdldFRleHRDb250ZW50U2l6ZSgpO2lmKGRiKHQpJiYwIT09biYmISgwPT09ZSYmdC5fX2tleT09PWQmJmM9PT1ufHxlPT09aS0xJiZ0Ll9fa2V5PT09ZiYmMD09PXUpJiYocD0hMCxoJj10LmdldEZvcm1hdCgpLDA9PT1oKSlicmVha31hLmZvcm1hdD1wP2g6MH19eHYodCxXcCx2b2lkIDApfSkpfWZ1bmN0aW9uIEl5KGUpe2lmKCFlLmdldFRhcmdldFJhbmdlcylyZXR1cm4gbnVsbDtjb25zdCB0PWUuZ2V0VGFyZ2V0UmFuZ2VzKCk7cmV0dXJuIDA9PT10Lmxlbmd0aD9udWxsOnRbMF19ZnVuY3Rpb24gRHkoZSx0KXtjb25zdCBuPWUuX2NvbXBvc2l0aW9uS2V5O2lmKCRnKG51bGwpLG51bGwhPT1uJiZudWxsIT10KXtpZihcIlwiPT09dCl7Y29uc3QgdD1IZyhuKSxyPUJnKGUuZ2V0RWxlbWVudEJ5S2V5KG4pKTtyZXR1cm4gdm9pZChudWxsIT09ciYmbnVsbCE9PXIubm9kZVZhbHVlJiZkYih0KSYmYXYodCxyLm5vZGVWYWx1ZSxudWxsLG51bGwsITApKX1pZihcIlxcblwiPT09dFt0Lmxlbmd0aC0xXSl7Y29uc3QgdD1NYigpO2lmKHdiKHQpKXtjb25zdCBuPXQuZm9jdXM7cmV0dXJuIHQuYW5jaG9yLnNldChuLmtleSxuLm9mZnNldCxuLnR5cGUpLHZvaWQgeHYoZSxsbSxudWxsKX19fXN2KCEwLGUsdCl9ZnVuY3Rpb24gTHkoZSl7bGV0IHQ9ZS5fX2xleGljYWxFdmVudEhhbmRsZXM7cmV0dXJuIHZvaWQgMD09PXQmJih0PVtdLGUuX19sZXhpY2FsRXZlbnRIYW5kbGVzPXQpLHR9Y29uc3QgRnk9bmV3IE1hcDtmdW5jdGlvbiB6eShlKXtjb25zdCB0PWUudGFyZ2V0LG49UnYobnVsbD09dD9udWxsOjk9PT10Lm5vZGVUeXBlP3QuZGVmYXVsdFZpZXc6dC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KTtpZihudWxsPT09bilyZXR1cm47Y29uc3Qgcj1EZyhuLmFuY2hvck5vZGUpO2lmKG51bGw9PT1yKXJldHVybjtUeSYmKFR5PSExLGN4KHIsKCgpPT57Y29uc3QgdD1JYigpLG89bi5hbmNob3JOb2RlO2lmKG51bGw9PT1vKXJldHVybjtjb25zdCBpPW8ubm9kZVR5cGU7aSE9PXptJiZpIT09Qm18fFFnKGpiKHQsbixyLGUpKX0pKSk7Y29uc3Qgbz1ydihyKSxpPW9bby5sZW5ndGgtMV0scz1pLl9rZXksYT1GeS5nZXQocyksbD1hfHxpO2whPT1yJiZNeShuLGwsITEpLE15KG4sciwhMCksciE9PWk/Rnkuc2V0KHMscik6YSYmRnkuZGVsZXRlKHMpfWZ1bmN0aW9uIEJ5KGUpe2UuX2xleGljYWxIYW5kbGVkPSEwfWZ1bmN0aW9uIFZ5KGUpe3JldHVybiEwPT09ZS5fbGV4aWNhbEhhbmRsZWR9ZnVuY3Rpb24gV3koZSx0LG4pe0diKCk7Y29uc3Qgcj1lLl9fa2V5LG89ZS5nZXRQYXJlbnQoKTtpZihudWxsPT09bylyZXR1cm47Y29uc3QgaT1mdW5jdGlvbihlKXtjb25zdCB0PU1iKCk7aWYoIXdiKHQpfHwhZHgoZSkpcmV0dXJuIHQ7Y29uc3R7YW5jaG9yOm4sZm9jdXM6cn09dCxvPW4uZ2V0Tm9kZSgpLGk9ci5nZXROb2RlKCk7cmV0dXJuIF92KG8sZSkmJm4uc2V0KGUuX19rZXksMCxcImVsZW1lbnRcIiksX3YoaSxlKSYmci5zZXQoZS5fX2tleSwwLFwiZWxlbWVudFwiKSx0fShlKTtsZXQgcz0hMTtpZih3YihpKSYmdCl7Y29uc3QgdD1pLmFuY2hvcixuPWkuZm9jdXM7dC5rZXk9PT1yJiYoRmIodCxlLG8sZS5nZXRQcmV2aW91c1NpYmxpbmcoKSxlLmdldE5leHRTaWJsaW5nKCkpLHM9ITApLG4ua2V5PT09ciYmKEZiKG4sZSxvLGUuZ2V0UHJldmlvdXNTaWJsaW5nKCksZS5nZXROZXh0U2libGluZygpKSxzPSEwKX1lbHNlIFNiKGkpJiZ0JiZlLmlzU2VsZWN0ZWQoKSYmZS5zZWxlY3RQcmV2aW91cygpO2lmKHdiKGkpJiZ0JiYhcyl7Y29uc3QgdD1lLmdldEluZGV4V2l0aGluUGFyZW50KCk7V2coZSksRGIoaSxvLHQsLTEpfWVsc2UgV2coZSk7bnx8Q3Yobyl8fG8uY2FuQmVFbXB0eSgpfHwhby5pc0VtcHR5KCl8fFd5KG8sdCksdCYmZ3gobykmJm8uaXNFbXB0eSgpJiZvLnNlbGVjdEVuZCgpfWNsYXNzIFV5e3N0YXRpYyBnZXRUeXBlKCl7bWcoNjQsdGhpcy5uYW1lKX1zdGF0aWMgY2xvbmUoZSl7bWcoNjUsdGhpcy5uYW1lKX1hZnRlckNsb25lRnJvbShlKXt0aGlzLl9fcGFyZW50PWUuX19wYXJlbnQsdGhpcy5fX25leHQ9ZS5fX25leHQsdGhpcy5fX3ByZXY9ZS5fX3ByZXZ9Y29uc3RydWN0b3IoZSl7dGhpcy5fX3R5cGU9dGhpcy5jb25zdHJ1Y3Rvci5nZXRUeXBlKCksdGhpcy5fX3BhcmVudD1udWxsLHRoaXMuX19wcmV2PW51bGwsdGhpcy5fX25leHQ9bnVsbCxmdW5jdGlvbihlLHQpe2lmKG51bGwhPXQpcmV0dXJuIHZvaWQoZS5fX2tleT10KTtHYigpLFhiKCk7Y29uc3Qgbj1aYigpLHI9SmIoKSxvPVwiXCIrTmcrKztyLl9ub2RlTWFwLnNldChvLGUpLGR4KGUpP24uX2RpcnR5RWxlbWVudHMuc2V0KG8sITApOm4uX2RpcnR5TGVhdmVzLmFkZChvKSxuLl9jbG9uZU5vdE5lZWRlZC5hZGQobyksbi5fZGlydHlUeXBlPTEsZS5fX2tleT1vfSh0aGlzLGUpfWdldFR5cGUoKXtyZXR1cm4gdGhpcy5fX3R5cGV9aXNJbmxpbmUoKXttZygxMzcsdGhpcy5jb25zdHJ1Y3Rvci5uYW1lKX1pc0F0dGFjaGVkKCl7bGV0IGU9dGhpcy5fX2tleTtmb3IoO251bGwhPT1lOyl7aWYoXCJyb290XCI9PT1lKXJldHVybiEwO2NvbnN0IHQ9SGcoZSk7aWYobnVsbD09PXQpYnJlYWs7ZT10Ll9fcGFyZW50fXJldHVybiExfWlzU2VsZWN0ZWQoZSl7Y29uc3QgdD1lfHxNYigpO2lmKG51bGw9PXQpcmV0dXJuITE7Y29uc3Qgbj10LmdldE5vZGVzKCkuc29tZSgoZT0+ZS5fX2tleT09PXRoaXMuX19rZXkpKTtpZihkYih0aGlzKSlyZXR1cm4gbjtpZih3Yih0KSYmXCJlbGVtZW50XCI9PT10LmFuY2hvci50eXBlJiZcImVsZW1lbnRcIj09PXQuZm9jdXMudHlwZSl7aWYodC5pc0NvbGxhcHNlZCgpKXJldHVybiExO2NvbnN0IGU9dGhpcy5nZXRQYXJlbnQoKTtpZihweCh0aGlzKSYmdGhpcy5pc0lubGluZSgpJiZlKXtjb25zdCBuPXQuaXNCYWNrd2FyZCgpP3QuZm9jdXM6dC5hbmNob3Iscj1uLmdldE5vZGUoKTtpZihuLm9mZnNldD09PXIuZ2V0Q2hpbGRyZW5TaXplKCkmJnIuaXMoZSkmJnIuZ2V0TGFzdENoaWxkT3JUaHJvdygpLmlzKHRoaXMpKXJldHVybiExfX1yZXR1cm4gbn1nZXRLZXkoKXtyZXR1cm4gdGhpcy5fX2tleX1nZXRJbmRleFdpdGhpblBhcmVudCgpe2NvbnN0IGU9dGhpcy5nZXRQYXJlbnQoKTtpZihudWxsPT09ZSlyZXR1cm4tMTtsZXQgdD1lLmdldEZpcnN0Q2hpbGQoKSxuPTA7Zm9yKDtudWxsIT09dDspe2lmKHRoaXMuaXModCkpcmV0dXJuIG47bisrLHQ9dC5nZXROZXh0U2libGluZygpfXJldHVybi0xfWdldFBhcmVudCgpe2NvbnN0IGU9dGhpcy5nZXRMYXRlc3QoKS5fX3BhcmVudDtyZXR1cm4gbnVsbD09PWU/bnVsbDpIZyhlKX1nZXRQYXJlbnRPclRocm93KCl7Y29uc3QgZT10aGlzLmdldFBhcmVudCgpO3JldHVybiBudWxsPT09ZSYmbWcoNjYsdGhpcy5fX2tleSksZX1nZXRUb3BMZXZlbEVsZW1lbnQoKXtsZXQgZT10aGlzO2Zvcig7bnVsbCE9PWU7KXtjb25zdCB0PWUuZ2V0UGFyZW50KCk7aWYoQ3YodCkpcmV0dXJuIGR4KGUpfHxlPT09dGhpcyYmcHgoZSl8fG1nKDE5NCksZTtlPXR9cmV0dXJuIG51bGx9Z2V0VG9wTGV2ZWxFbGVtZW50T3JUaHJvdygpe2NvbnN0IGU9dGhpcy5nZXRUb3BMZXZlbEVsZW1lbnQoKTtyZXR1cm4gbnVsbD09PWUmJm1nKDY3LHRoaXMuX19rZXkpLGV9Z2V0UGFyZW50cygpe2NvbnN0IGU9W107bGV0IHQ9dGhpcy5nZXRQYXJlbnQoKTtmb3IoO251bGwhPT10OyllLnB1c2godCksdD10LmdldFBhcmVudCgpO3JldHVybiBlfWdldFBhcmVudEtleXMoKXtjb25zdCBlPVtdO2xldCB0PXRoaXMuZ2V0UGFyZW50KCk7Zm9yKDtudWxsIT09dDspZS5wdXNoKHQuX19rZXkpLHQ9dC5nZXRQYXJlbnQoKTtyZXR1cm4gZX1nZXRQcmV2aW91c1NpYmxpbmcoKXtjb25zdCBlPXRoaXMuZ2V0TGF0ZXN0KCkuX19wcmV2O3JldHVybiBudWxsPT09ZT9udWxsOkhnKGUpfWdldFByZXZpb3VzU2libGluZ3MoKXtjb25zdCBlPVtdLHQ9dGhpcy5nZXRQYXJlbnQoKTtpZihudWxsPT09dClyZXR1cm4gZTtsZXQgbj10LmdldEZpcnN0Q2hpbGQoKTtmb3IoO251bGwhPT1uJiYhbi5pcyh0aGlzKTspZS5wdXNoKG4pLG49bi5nZXROZXh0U2libGluZygpO3JldHVybiBlfWdldE5leHRTaWJsaW5nKCl7Y29uc3QgZT10aGlzLmdldExhdGVzdCgpLl9fbmV4dDtyZXR1cm4gbnVsbD09PWU/bnVsbDpIZyhlKX1nZXROZXh0U2libGluZ3MoKXtjb25zdCBlPVtdO2xldCB0PXRoaXMuZ2V0TmV4dFNpYmxpbmcoKTtmb3IoO251bGwhPT10OyllLnB1c2godCksdD10LmdldE5leHRTaWJsaW5nKCk7cmV0dXJuIGV9Z2V0Q29tbW9uQW5jZXN0b3IoZSl7Y29uc3QgdD10aGlzLmdldFBhcmVudHMoKSxuPWUuZ2V0UGFyZW50cygpO2R4KHRoaXMpJiZ0LnVuc2hpZnQodGhpcyksZHgoZSkmJm4udW5zaGlmdChlKTtjb25zdCByPXQubGVuZ3RoLG89bi5sZW5ndGg7aWYoMD09PXJ8fDA9PT1vfHx0W3ItMV0hPT1uW28tMV0pcmV0dXJuIG51bGw7Y29uc3QgaT1uZXcgU2V0KG4pO2ZvcihsZXQgZT0wO2U8cjtlKyspe2NvbnN0IG49dFtlXTtpZihpLmhhcyhuKSlyZXR1cm4gbn1yZXR1cm4gbnVsbH1pcyhlKXtyZXR1cm4gbnVsbCE9ZSYmdGhpcy5fX2tleT09PWUuX19rZXl9aXNCZWZvcmUoZSl7aWYodGhpcz09PWUpcmV0dXJuITE7aWYoZS5pc1BhcmVudE9mKHRoaXMpKXJldHVybiEwO2lmKHRoaXMuaXNQYXJlbnRPZihlKSlyZXR1cm4hMTtjb25zdCB0PXRoaXMuZ2V0Q29tbW9uQW5jZXN0b3IoZSk7bGV0IG49MCxyPTAsbz10aGlzO2Zvcig7Oyl7Y29uc3QgZT1vLmdldFBhcmVudE9yVGhyb3coKTtpZihlPT09dCl7bj1vLmdldEluZGV4V2l0aGluUGFyZW50KCk7YnJlYWt9bz1lfWZvcihvPWU7Oyl7Y29uc3QgZT1vLmdldFBhcmVudE9yVGhyb3coKTtpZihlPT09dCl7cj1vLmdldEluZGV4V2l0aGluUGFyZW50KCk7YnJlYWt9bz1lfXJldHVybiBuPHJ9aXNQYXJlbnRPZihlKXtjb25zdCB0PXRoaXMuX19rZXk7aWYodD09PWUuX19rZXkpcmV0dXJuITE7bGV0IG49ZTtmb3IoO251bGwhPT1uOyl7aWYobi5fX2tleT09PXQpcmV0dXJuITA7bj1uLmdldFBhcmVudCgpfXJldHVybiExfWdldE5vZGVzQmV0d2VlbihlKXtjb25zdCB0PXRoaXMuaXNCZWZvcmUoZSksbj1bXSxyPW5ldyBTZXQ7bGV0IG89dGhpcztmb3IoO251bGwhPT1vOyl7Y29uc3QgaT1vLl9fa2V5O2lmKHIuaGFzKGkpfHwoci5hZGQoaSksbi5wdXNoKG8pKSxvPT09ZSlicmVhaztjb25zdCBzPWR4KG8pP3Q/by5nZXRGaXJzdENoaWxkKCk6by5nZXRMYXN0Q2hpbGQoKTpudWxsO2lmKG51bGwhPT1zKXtvPXM7Y29udGludWV9Y29uc3QgYT10P28uZ2V0TmV4dFNpYmxpbmcoKTpvLmdldFByZXZpb3VzU2libGluZygpO2lmKG51bGwhPT1hKXtvPWE7Y29udGludWV9Y29uc3QgbD1vLmdldFBhcmVudE9yVGhyb3coKTtpZihyLmhhcyhsLl9fa2V5KXx8bi5wdXNoKGwpLGw9PT1lKWJyZWFrO2xldCBjPW51bGwsdT1sO2Rve2lmKG51bGw9PT11JiZtZyg2OCksYz10P3UuZ2V0TmV4dFNpYmxpbmcoKTp1LmdldFByZXZpb3VzU2libGluZygpLHU9dS5nZXRQYXJlbnQoKSxudWxsPT09dSlicmVhaztudWxsIT09Y3x8ci5oYXModS5fX2tleSl8fG4ucHVzaCh1KX13aGlsZShudWxsPT09Yyk7bz1jfXJldHVybiB0fHxuLnJldmVyc2UoKSxufWlzRGlydHkoKXtjb25zdCBlPVpiKCkuX2RpcnR5TGVhdmVzO3JldHVybiBudWxsIT09ZSYmZS5oYXModGhpcy5fX2tleSl9Z2V0TGF0ZXN0KCl7Y29uc3QgZT1IZyh0aGlzLl9fa2V5KTtyZXR1cm4gbnVsbD09PWUmJm1nKDExMyksZX1nZXRXcml0YWJsZSgpe0diKCk7Y29uc3QgZT1KYigpLHQ9WmIoKSxuPWUuX25vZGVNYXAscj10aGlzLl9fa2V5LG89dGhpcy5nZXRMYXRlc3QoKSxpPXQuX2Nsb25lTm90TmVlZGVkLHM9TWIoKTtpZihudWxsIT09cyYmcy5zZXRDYWNoZWROb2RlcyhudWxsKSxpLmhhcyhyKSlyZXR1cm4gVWcobyksbztjb25zdCBhPUZ2KG8pO3JldHVybiBpLmFkZChyKSxVZyhhKSxuLnNldChyLGEpLGF9Z2V0VGV4dENvbnRlbnQoKXtyZXR1cm5cIlwifWdldFRleHRDb250ZW50U2l6ZSgpe3JldHVybiB0aGlzLmdldFRleHRDb250ZW50KCkubGVuZ3RofWNyZWF0ZURPTShlLHQpe21nKDcwKX11cGRhdGVET00oZSx0LG4pe21nKDcxKX1leHBvcnRET00oZSl7cmV0dXJue2VsZW1lbnQ6dGhpcy5jcmVhdGVET00oZS5fY29uZmlnLGUpfX1leHBvcnRKU09OKCl7bWcoNzIpfXN0YXRpYyBpbXBvcnRKU09OKGUpe21nKDE4LHRoaXMubmFtZSl9c3RhdGljIHRyYW5zZm9ybSgpe3JldHVybiBudWxsfXJlbW92ZShlKXtXeSh0aGlzLCEwLGUpfXJlcGxhY2UoZSx0KXtHYigpO2xldCBuPU1iKCk7bnVsbCE9PW4mJihuPW4uY2xvbmUoKSksVHYodGhpcyxlKTtjb25zdCByPXRoaXMuZ2V0TGF0ZXN0KCksbz10aGlzLl9fa2V5LGk9ZS5fX2tleSxzPWUuZ2V0V3JpdGFibGUoKSxhPXRoaXMuZ2V0UGFyZW50T3JUaHJvdygpLmdldFdyaXRhYmxlKCksbD1hLl9fc2l6ZTtXZyhzKTtjb25zdCBjPXIuZ2V0UHJldmlvdXNTaWJsaW5nKCksdT1yLmdldE5leHRTaWJsaW5nKCksZD1yLl9fcHJldixmPXIuX19uZXh0LGg9ci5fX3BhcmVudDtpZihXeShyLCExLCEwKSxudWxsPT09Yz9hLl9fZmlyc3Q9aTpjLmdldFdyaXRhYmxlKCkuX19uZXh0PWkscy5fX3ByZXY9ZCxudWxsPT09dT9hLl9fbGFzdD1pOnUuZ2V0V3JpdGFibGUoKS5fX3ByZXY9aSxzLl9fbmV4dD1mLHMuX19wYXJlbnQ9aCxhLl9fc2l6ZT1sLHQmJihkeCh0aGlzKSYmZHgocyl8fG1nKDEzOSksdGhpcy5nZXRDaGlsZHJlbigpLmZvckVhY2goKGU9PntzLmFwcGVuZChlKX0pKSksd2Iobikpe1FnKG4pO2NvbnN0IGU9bi5hbmNob3IsdD1uLmZvY3VzO2Uua2V5PT09byYmeWIoZSxzKSx0LmtleT09PW8mJnliKHQscyl9cmV0dXJuIEtnKCk9PT1vJiYkZyhpKSxzfWluc2VydEFmdGVyKGUsdD0hMCl7R2IoKSxUdih0aGlzLGUpO2NvbnN0IG49dGhpcy5nZXRXcml0YWJsZSgpLHI9ZS5nZXRXcml0YWJsZSgpLG89ci5nZXRQYXJlbnQoKSxpPU1iKCk7bGV0IHM9ITEsYT0hMTtpZihudWxsIT09byl7Y29uc3QgdD1lLmdldEluZGV4V2l0aGluUGFyZW50KCk7aWYoV2cociksd2IoaSkpe2NvbnN0IGU9by5fX2tleSxuPWkuYW5jaG9yLHI9aS5mb2N1cztzPVwiZWxlbWVudFwiPT09bi50eXBlJiZuLmtleT09PWUmJm4ub2Zmc2V0PT09dCsxLGE9XCJlbGVtZW50XCI9PT1yLnR5cGUmJnIua2V5PT09ZSYmci5vZmZzZXQ9PT10KzF9fWNvbnN0IGw9dGhpcy5nZXROZXh0U2libGluZygpLGM9dGhpcy5nZXRQYXJlbnRPclRocm93KCkuZ2V0V3JpdGFibGUoKSx1PXIuX19rZXksZD1uLl9fbmV4dDtpZihudWxsPT09bD9jLl9fbGFzdD11OmwuZ2V0V3JpdGFibGUoKS5fX3ByZXY9dSxjLl9fc2l6ZSsrLG4uX19uZXh0PXUsci5fX25leHQ9ZCxyLl9fcHJldj1uLl9fa2V5LHIuX19wYXJlbnQ9bi5fX3BhcmVudCx0JiZ3YihpKSl7Y29uc3QgZT10aGlzLmdldEluZGV4V2l0aGluUGFyZW50KCk7RGIoaSxjLGUrMSk7Y29uc3QgdD1jLl9fa2V5O3MmJmkuYW5jaG9yLnNldCh0LGUrMixcImVsZW1lbnRcIiksYSYmaS5mb2N1cy5zZXQodCxlKzIsXCJlbGVtZW50XCIpfXJldHVybiBlfWluc2VydEJlZm9yZShlLHQ9ITApe0diKCksVHYodGhpcyxlKTtjb25zdCBuPXRoaXMuZ2V0V3JpdGFibGUoKSxyPWUuZ2V0V3JpdGFibGUoKSxvPXIuX19rZXk7V2cocik7Y29uc3QgaT10aGlzLmdldFByZXZpb3VzU2libGluZygpLHM9dGhpcy5nZXRQYXJlbnRPclRocm93KCkuZ2V0V3JpdGFibGUoKSxhPW4uX19wcmV2LGw9dGhpcy5nZXRJbmRleFdpdGhpblBhcmVudCgpO251bGw9PT1pP3MuX19maXJzdD1vOmkuZ2V0V3JpdGFibGUoKS5fX25leHQ9byxzLl9fc2l6ZSsrLG4uX19wcmV2PW8sci5fX3ByZXY9YSxyLl9fbmV4dD1uLl9fa2V5LHIuX19wYXJlbnQ9bi5fX3BhcmVudDtjb25zdCBjPU1iKCk7cmV0dXJuIHQmJndiKGMpJiZEYihjLHRoaXMuZ2V0UGFyZW50T3JUaHJvdygpLGwpLGV9aXNQYXJlbnRSZXF1aXJlZCgpe3JldHVybiExfWNyZWF0ZVBhcmVudEVsZW1lbnROb2RlKCl7cmV0dXJuIFN4KCl9c2VsZWN0U3RhcnQoKXtyZXR1cm4gdGhpcy5zZWxlY3RQcmV2aW91cygpfXNlbGVjdEVuZCgpe3JldHVybiB0aGlzLnNlbGVjdE5leHQoMCwwKX1zZWxlY3RQcmV2aW91cyhlLHQpe0diKCk7Y29uc3Qgbj10aGlzLmdldFByZXZpb3VzU2libGluZygpLHI9dGhpcy5nZXRQYXJlbnRPclRocm93KCk7aWYobnVsbD09PW4pcmV0dXJuIHIuc2VsZWN0KDAsMCk7aWYoZHgobikpcmV0dXJuIG4uc2VsZWN0KCk7aWYoIWRiKG4pKXtjb25zdCBlPW4uZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKSsxO3JldHVybiByLnNlbGVjdChlLGUpfXJldHVybiBuLnNlbGVjdChlLHQpfXNlbGVjdE5leHQoZSx0KXtHYigpO2NvbnN0IG49dGhpcy5nZXROZXh0U2libGluZygpLHI9dGhpcy5nZXRQYXJlbnRPclRocm93KCk7aWYobnVsbD09PW4pcmV0dXJuIHIuc2VsZWN0KCk7aWYoZHgobikpcmV0dXJuIG4uc2VsZWN0KDAsMCk7aWYoIWRiKG4pKXtjb25zdCBlPW4uZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKTtyZXR1cm4gci5zZWxlY3QoZSxlKX1yZXR1cm4gbi5zZWxlY3QoZSx0KX1tYXJrRGlydHkoKXt0aGlzLmdldFdyaXRhYmxlKCl9fWNsYXNzICR5IGV4dGVuZHMgVXl7c3RhdGljIGdldFR5cGUoKXtyZXR1cm5cImxpbmVicmVha1wifXN0YXRpYyBjbG9uZShlKXtyZXR1cm4gbmV3ICR5KGUuX19rZXkpfWNvbnN0cnVjdG9yKGUpe3N1cGVyKGUpfWdldFRleHRDb250ZW50KCl7cmV0dXJuXCJcXG5cIn1jcmVhdGVET00oKXtyZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpfXVwZGF0ZURPTSgpe3JldHVybiExfXN0YXRpYyBpbXBvcnRET00oKXtyZXR1cm57YnI6ZT0+ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLnBhcmVudEVsZW1lbnQ7aWYobnVsbCE9PXQmJmp2KHQpKXtjb25zdCBuPXQuZmlyc3RDaGlsZDtpZihuPT09ZXx8bi5uZXh0U2libGluZz09PWUmJll5KG4pKXtjb25zdCBuPXQubGFzdENoaWxkO2lmKG49PT1lfHxuLnByZXZpb3VzU2libGluZz09PWUmJll5KG4pKXJldHVybiEwfX1yZXR1cm4hMX0oZSl8fGZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5wYXJlbnRFbGVtZW50O2lmKG51bGwhPT10JiZqdih0KSl7Y29uc3Qgbj10LmZpcnN0Q2hpbGQ7aWYobj09PWV8fG4ubmV4dFNpYmxpbmc9PT1lJiZZeShuKSlyZXR1cm4hMTtjb25zdCByPXQubGFzdENoaWxkO2lmKHI9PT1lfHxyLnByZXZpb3VzU2libGluZz09PWUmJll5KHIpKXJldHVybiEwfXJldHVybiExfShlKT9udWxsOntjb252ZXJzaW9uOkt5LHByaW9yaXR5OjB9fX1zdGF0aWMgaW1wb3J0SlNPTihlKXtyZXR1cm4gSHkoKX1leHBvcnRKU09OKCl7cmV0dXJue3R5cGU6XCJsaW5lYnJlYWtcIix2ZXJzaW9uOjF9fX1mdW5jdGlvbiBLeShlKXtyZXR1cm57bm9kZTpIeSgpfX1mdW5jdGlvbiBIeSgpe3JldHVybiBQdihuZXcgJHkpfWZ1bmN0aW9uIHF5KGUpe3JldHVybiBlIGluc3RhbmNlb2YgJHl9ZnVuY3Rpb24gWXkoZSl7cmV0dXJuIGUubm9kZVR5cGU9PT1CbSYmL14oIHxcXHR8XFxyP1xcbikrJC8udGVzdChlLnRleHRDb250ZW50fHxcIlwiKX1mdW5jdGlvbiBHeShlLHQpe3JldHVybiAxNiZ0P1wiY29kZVwiOjEyOCZ0P1wibWFya1wiOjMyJnQ/XCJzdWJcIjo2NCZ0P1wic3VwXCI6bnVsbH1mdW5jdGlvbiBYeShlLHQpe3JldHVybiAxJnQ/XCJzdHJvbmdcIjoyJnQ/XCJlbVwiOlwic3BhblwifWZ1bmN0aW9uIEp5KGUsdCxuLHIsbyl7Y29uc3QgaT1yLmNsYXNzTGlzdDtsZXQgcz1tdihvLFwiYmFzZVwiKTt2b2lkIDAhPT1zJiZpLmFkZCguLi5zKSxzPW12KG8sXCJ1bmRlcmxpbmVTdHJpa2V0aHJvdWdoXCIpO2xldCBhPSExO2NvbnN0IGw9dCZxbSYmdCZIbTt2b2lkIDAhPT1zJiYobiZxbSYmbiZIbT8oYT0hMCxsfHxpLmFkZCguLi5zKSk6bCYmaS5yZW1vdmUoLi4ucykpO2Zvcihjb25zdCBlIGluIGxnKXtjb25zdCByPWxnW2VdO2lmKHM9bXYobyxlKSx2b2lkIDAhPT1zKWlmKG4mcil7aWYoYSYmKFwidW5kZXJsaW5lXCI9PT1lfHxcInN0cmlrZXRocm91Z2hcIj09PWUpKXt0JnImJmkucmVtb3ZlKC4uLnMpO2NvbnRpbnVlfXQmciYmKCFsfHxcInVuZGVybGluZVwiIT09ZSkmJlwic3RyaWtldGhyb3VnaFwiIT09ZXx8aS5hZGQoLi4ucyl9ZWxzZSB0JnImJmkucmVtb3ZlKC4uLnMpfX1mdW5jdGlvbiBaeShlLHQsbil7Y29uc3Qgcj10LmZpcnN0Q2hpbGQsbz1uLmlzQ29tcG9zaW5nKCksaT1lKyhvP3RnOlwiXCIpO2lmKG51bGw9PXIpdC50ZXh0Q29udGVudD1pO2Vsc2V7Y29uc3QgZT1yLm5vZGVWYWx1ZTtpZihlIT09aSlpZihvfHxObSl7Y29uc3RbdCxuLG9dPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1lLmxlbmd0aCxyPXQubGVuZ3RoO2xldCBvPTAsaT0wO2Zvcig7bzxuJiZvPHImJmVbb109PT10W29dOylvKys7Zm9yKDtpK288biYmaStvPHImJmVbbi1pLTFdPT09dFtyLWktMV07KWkrKztyZXR1cm5bbyxuLW8taSx0LnNsaWNlKG8sci1pKV19KGUsaSk7MCE9PW4mJnIuZGVsZXRlRGF0YSh0LG4pLHIuaW5zZXJ0RGF0YSh0LG8pfWVsc2Ugci5ub2RlVmFsdWU9aX19ZnVuY3Rpb24gUXkoZSx0LG4scixvLGkpe1p5KG8sZSx0KTtjb25zdCBzPWkudGhlbWUudGV4dDt2b2lkIDAhPT1zJiZKeSgwLDAscixlLHMpfWZ1bmN0aW9uIGViKGUsdCl7Y29uc3Qgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KHQpO3JldHVybiBuLmFwcGVuZENoaWxkKGUpLG59Y2xhc3MgdGIgZXh0ZW5kcyBVeXtzdGF0aWMgZ2V0VHlwZSgpe3JldHVyblwidGV4dFwifXN0YXRpYyBjbG9uZShlKXtyZXR1cm4gbmV3IHRiKGUuX190ZXh0LGUuX19rZXkpfWFmdGVyQ2xvbmVGcm9tKGUpe3N1cGVyLmFmdGVyQ2xvbmVGcm9tKGUpLHRoaXMuX19mb3JtYXQ9ZS5fX2Zvcm1hdCx0aGlzLl9fc3R5bGU9ZS5fX3N0eWxlLHRoaXMuX19tb2RlPWUuX19tb2RlLHRoaXMuX19kZXRhaWw9ZS5fX2RldGFpbH1jb25zdHJ1Y3RvcihlLHQpe3N1cGVyKHQpLHRoaXMuX190ZXh0PWUsdGhpcy5fX2Zvcm1hdD0wLHRoaXMuX19zdHlsZT1cIlwiLHRoaXMuX19tb2RlPTAsdGhpcy5fX2RldGFpbD0wfWdldEZvcm1hdCgpe3JldHVybiB0aGlzLmdldExhdGVzdCgpLl9fZm9ybWF0fWdldERldGFpbCgpe3JldHVybiB0aGlzLmdldExhdGVzdCgpLl9fZGV0YWlsfWdldE1vZGUoKXtjb25zdCBlPXRoaXMuZ2V0TGF0ZXN0KCk7cmV0dXJuIGhnW2UuX19tb2RlXX1nZXRTdHlsZSgpe3JldHVybiB0aGlzLmdldExhdGVzdCgpLl9fc3R5bGV9aXNUb2tlbigpe3JldHVybiAxPT09dGhpcy5nZXRMYXRlc3QoKS5fX21vZGV9aXNDb21wb3NpbmcoKXtyZXR1cm4gdGhpcy5fX2tleT09PUtnKCl9aXNTZWdtZW50ZWQoKXtyZXR1cm4gMj09PXRoaXMuZ2V0TGF0ZXN0KCkuX19tb2RlfWlzRGlyZWN0aW9ubGVzcygpe3JldHVybiEhKDEmdGhpcy5nZXRMYXRlc3QoKS5fX2RldGFpbCl9aXNVbm1lcmdlYWJsZSgpe3JldHVybiEhKDImdGhpcy5nZXRMYXRlc3QoKS5fX2RldGFpbCl9aGFzRm9ybWF0KGUpe2NvbnN0IHQ9bGdbZV07cmV0dXJuISEodGhpcy5nZXRGb3JtYXQoKSZ0KX1pc1NpbXBsZVRleHQoKXtyZXR1cm5cInRleHRcIj09PXRoaXMuX190eXBlJiYwPT09dGhpcy5fX21vZGV9Z2V0VGV4dENvbnRlbnQoKXtyZXR1cm4gdGhpcy5nZXRMYXRlc3QoKS5fX3RleHR9Z2V0Rm9ybWF0RmxhZ3MoZSx0KXtyZXR1cm4gVmcodGhpcy5nZXRMYXRlc3QoKS5fX2Zvcm1hdCxlLHQpfWNhbkhhdmVGb3JtYXQoKXtyZXR1cm4hMH1jcmVhdGVET00oZSx0KXtjb25zdCBuPXRoaXMuX19mb3JtYXQscj1HeSgwLG4pLG89WHkoMCxuKSxpPW51bGw9PT1yP286cixzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaSk7bGV0IGE9czt0aGlzLmhhc0Zvcm1hdChcImNvZGVcIikmJnMuc2V0QXR0cmlidXRlKFwic3BlbGxjaGVja1wiLFwiZmFsc2VcIiksbnVsbCE9PXImJihhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobykscy5hcHBlbmRDaGlsZChhKSksUXkoYSx0aGlzLDAsbix0aGlzLl9fdGV4dCxlKTtjb25zdCBsPXRoaXMuX19zdHlsZTtyZXR1cm5cIlwiIT09bCYmKHMuc3R5bGUuY3NzVGV4dD1sKSxzfXVwZGF0ZURPTShlLHQsbil7Y29uc3Qgcj10aGlzLl9fdGV4dCxvPWUuX19mb3JtYXQsaT10aGlzLl9fZm9ybWF0LHM9R3koMCxvKSxhPUd5KDAsaSksbD1YeSgwLG8pLGM9WHkoMCxpKTtpZigobnVsbD09PXM/bDpzKSE9PShudWxsPT09YT9jOmEpKXJldHVybiEwO2lmKHM9PT1hJiZsIT09Yyl7Y29uc3QgZT10LmZpcnN0Q2hpbGQ7bnVsbD09ZSYmbWcoNDgpO2NvbnN0IG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChjKTtyZXR1cm4gUXkobyx0aGlzLDAsaSxyLG4pLHQucmVwbGFjZUNoaWxkKG8sZSksITF9bGV0IHU9dDtudWxsIT09YSYmbnVsbCE9PXMmJih1PXQuZmlyc3RDaGlsZCxudWxsPT11JiZtZyg0OSkpLFp5KHIsdSx0aGlzKTtjb25zdCBkPW4udGhlbWUudGV4dDt2b2lkIDAhPT1kJiZvIT09aSYmSnkoMCxvLGksdSxkKTtjb25zdCBmPWUuX19zdHlsZSxoPXRoaXMuX19zdHlsZTtyZXR1cm4gZiE9PWgmJih0LnN0eWxlLmNzc1RleHQ9aCksITF9c3RhdGljIGltcG9ydERPTSgpe3JldHVybntcIiN0ZXh0XCI6KCk9Pih7Y29udmVyc2lvbjpzYixwcmlvcml0eTowfSksYjooKT0+KHtjb252ZXJzaW9uOnJiLHByaW9yaXR5OjB9KSxjb2RlOigpPT4oe2NvbnZlcnNpb246Y2IscHJpb3JpdHk6MH0pLGVtOigpPT4oe2NvbnZlcnNpb246Y2IscHJpb3JpdHk6MH0pLGk6KCk9Pih7Y29udmVyc2lvbjpjYixwcmlvcml0eTowfSksczooKT0+KHtjb252ZXJzaW9uOmNiLHByaW9yaXR5OjB9KSxzcGFuOigpPT4oe2NvbnZlcnNpb246bmIscHJpb3JpdHk6MH0pLHN0cm9uZzooKT0+KHtjb252ZXJzaW9uOmNiLHByaW9yaXR5OjB9KSxzdWI6KCk9Pih7Y29udmVyc2lvbjpjYixwcmlvcml0eTowfSksc3VwOigpPT4oe2NvbnZlcnNpb246Y2IscHJpb3JpdHk6MH0pLHU6KCk9Pih7Y29udmVyc2lvbjpjYixwcmlvcml0eTowfSl9fXN0YXRpYyBpbXBvcnRKU09OKGUpe2NvbnN0IHQ9dWIoZS50ZXh0KTtyZXR1cm4gdC5zZXRGb3JtYXQoZS5mb3JtYXQpLHQuc2V0RGV0YWlsKGUuZGV0YWlsKSx0LnNldE1vZGUoZS5tb2RlKSx0LnNldFN0eWxlKGUuc3R5bGUpLHR9ZXhwb3J0RE9NKGUpe2xldHtlbGVtZW50OnR9PXN1cGVyLmV4cG9ydERPTShlKTtyZXR1cm4gbnVsbCE9PXQmJk52KHQpfHxtZygxMzIpLHQuc3R5bGUud2hpdGVTcGFjZT1cInByZS13cmFwXCIsdGhpcy5oYXNGb3JtYXQoXCJib2xkXCIpJiYodD1lYih0LFwiYlwiKSksdGhpcy5oYXNGb3JtYXQoXCJpdGFsaWNcIikmJih0PWViKHQsXCJpXCIpKSx0aGlzLmhhc0Zvcm1hdChcInN0cmlrZXRocm91Z2hcIikmJih0PWViKHQsXCJzXCIpKSx0aGlzLmhhc0Zvcm1hdChcInVuZGVybGluZVwiKSYmKHQ9ZWIodCxcInVcIikpLHtlbGVtZW50OnR9fWV4cG9ydEpTT04oKXtyZXR1cm57ZGV0YWlsOnRoaXMuZ2V0RGV0YWlsKCksZm9ybWF0OnRoaXMuZ2V0Rm9ybWF0KCksbW9kZTp0aGlzLmdldE1vZGUoKSxzdHlsZTp0aGlzLmdldFN0eWxlKCksdGV4dDp0aGlzLmdldFRleHRDb250ZW50KCksdHlwZTpcInRleHRcIix2ZXJzaW9uOjF9fXNlbGVjdGlvblRyYW5zZm9ybShlLHQpe31zZXRGb3JtYXQoZSl7Y29uc3QgdD10aGlzLmdldFdyaXRhYmxlKCk7cmV0dXJuIHQuX19mb3JtYXQ9XCJzdHJpbmdcIj09dHlwZW9mIGU/bGdbZV06ZSx0fXNldERldGFpbChlKXtjb25zdCB0PXRoaXMuZ2V0V3JpdGFibGUoKTtyZXR1cm4gdC5fX2RldGFpbD1cInN0cmluZ1wiPT10eXBlb2YgZT9jZ1tlXTplLHR9c2V0U3R5bGUoZSl7Y29uc3QgdD10aGlzLmdldFdyaXRhYmxlKCk7cmV0dXJuIHQuX19zdHlsZT1lLHR9dG9nZ2xlRm9ybWF0KGUpe2NvbnN0IHQ9VmcodGhpcy5nZXRGb3JtYXQoKSxlLG51bGwpO3JldHVybiB0aGlzLnNldEZvcm1hdCh0KX10b2dnbGVEaXJlY3Rpb25sZXNzKCl7Y29uc3QgZT10aGlzLmdldFdyaXRhYmxlKCk7cmV0dXJuIGUuX19kZXRhaWxePTEsZX10b2dnbGVVbm1lcmdlYWJsZSgpe2NvbnN0IGU9dGhpcy5nZXRXcml0YWJsZSgpO3JldHVybiBlLl9fZGV0YWlsXj0yLGV9c2V0TW9kZShlKXtjb25zdCB0PWZnW2VdO2lmKHRoaXMuX19tb2RlPT09dClyZXR1cm4gdGhpcztjb25zdCBuPXRoaXMuZ2V0V3JpdGFibGUoKTtyZXR1cm4gbi5fX21vZGU9dCxufXNldFRleHRDb250ZW50KGUpe2lmKHRoaXMuX190ZXh0PT09ZSlyZXR1cm4gdGhpcztjb25zdCB0PXRoaXMuZ2V0V3JpdGFibGUoKTtyZXR1cm4gdC5fX3RleHQ9ZSx0fXNlbGVjdChlLHQpe0diKCk7bGV0IG49ZSxyPXQ7Y29uc3Qgbz1NYigpLGk9dGhpcy5nZXRUZXh0Q29udGVudCgpLHM9dGhpcy5fX2tleTtpZihcInN0cmluZ1wiPT10eXBlb2YgaSl7Y29uc3QgZT1pLmxlbmd0aDt2b2lkIDA9PT1uJiYobj1lKSx2b2lkIDA9PT1yJiYocj1lKX1lbHNlIG49MCxyPTA7aWYoIXdiKG8pKXJldHVybiBOYihzLG4scyxyLFwidGV4dFwiLFwidGV4dFwiKTt7Y29uc3QgZT1LZygpO2UhPT1vLmFuY2hvci5rZXkmJmUhPT1vLmZvY3VzLmtleXx8JGcocyksby5zZXRUZXh0Tm9kZVJhbmdlKHRoaXMsbix0aGlzLHIpfXJldHVybiBvfXNlbGVjdFN0YXJ0KCl7cmV0dXJuIHRoaXMuc2VsZWN0KDAsMCl9c2VsZWN0RW5kKCl7Y29uc3QgZT10aGlzLmdldFRleHRDb250ZW50U2l6ZSgpO3JldHVybiB0aGlzLnNlbGVjdChlLGUpfXNwbGljZVRleHQoZSx0LG4scil7Y29uc3Qgbz10aGlzLmdldFdyaXRhYmxlKCksaT1vLl9fdGV4dCxzPW4ubGVuZ3RoO2xldCBhPWU7YTwwJiYoYT1zK2EsYTwwJiYoYT0wKSk7Y29uc3QgbD1NYigpO2lmKHImJndiKGwpKXtjb25zdCB0PWUrcztsLnNldFRleHROb2RlUmFuZ2Uobyx0LG8sdCl9Y29uc3QgYz1pLnNsaWNlKDAsYSkrbitpLnNsaWNlKGErdCk7cmV0dXJuIG8uX190ZXh0PWMsb31jYW5JbnNlcnRUZXh0QmVmb3JlKCl7cmV0dXJuITB9Y2FuSW5zZXJ0VGV4dEFmdGVyKCl7cmV0dXJuITB9c3BsaXRUZXh0KC4uLmUpe0diKCk7Y29uc3QgdD10aGlzLmdldExhdGVzdCgpLG49dC5nZXRUZXh0Q29udGVudCgpLHI9dC5fX2tleSxvPUtnKCksaT1uZXcgU2V0KGUpLHM9W10sYT1uLmxlbmd0aDtsZXQgbD1cIlwiO2ZvcihsZXQgZT0wO2U8YTtlKyspXCJcIiE9PWwmJmkuaGFzKGUpJiYocy5wdXNoKGwpLGw9XCJcIiksbCs9bltlXTtcIlwiIT09bCYmcy5wdXNoKGwpO2NvbnN0IGM9cy5sZW5ndGg7aWYoMD09PWMpcmV0dXJuW107aWYoc1swXT09PW4pcmV0dXJuW3RdO2NvbnN0IHU9c1swXSxkPXQuZ2V0UGFyZW50KCk7bGV0IGY7Y29uc3QgaD10LmdldEZvcm1hdCgpLHA9dC5nZXRTdHlsZSgpLG09dC5fX2RldGFpbDtsZXQgZz0hMTt0LmlzU2VnbWVudGVkKCk/KGY9dWIodSksZi5fX2Zvcm1hdD1oLGYuX19zdHlsZT1wLGYuX19kZXRhaWw9bSxnPSEwKTooZj10LmdldFdyaXRhYmxlKCksZi5fX3RleHQ9dSk7Y29uc3Qgdj1NYigpLHk9W2ZdO2xldCBiPXUubGVuZ3RoO2ZvcihsZXQgZT0xO2U8YztlKyspe2NvbnN0IHQ9c1tlXSxuPXQubGVuZ3RoLGk9dWIodCkuZ2V0V3JpdGFibGUoKTtpLl9fZm9ybWF0PWgsaS5fX3N0eWxlPXAsaS5fX2RldGFpbD1tO2NvbnN0IGE9aS5fX2tleSxsPWIrbjtpZih3Yih2KSl7Y29uc3QgZT12LmFuY2hvcix0PXYuZm9jdXM7ZS5rZXk9PT1yJiZcInRleHRcIj09PWUudHlwZSYmZS5vZmZzZXQ+YiYmZS5vZmZzZXQ8PWwmJihlLmtleT1hLGUub2Zmc2V0LT1iLHYuZGlydHk9ITApLHQua2V5PT09ciYmXCJ0ZXh0XCI9PT10LnR5cGUmJnQub2Zmc2V0PmImJnQub2Zmc2V0PD1sJiYodC5rZXk9YSx0Lm9mZnNldC09Yix2LmRpcnR5PSEwKX1vPT09ciYmJGcoYSksYj1sLHkucHVzaChpKX1pZihudWxsIT09ZCl7IWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5nZXRQcmV2aW91c1NpYmxpbmcoKSxuPWUuZ2V0TmV4dFNpYmxpbmcoKTtudWxsIT09dCYmVWcodCksbnVsbCE9PW4mJlVnKG4pfSh0aGlzKTtjb25zdCBlPWQuZ2V0V3JpdGFibGUoKSx0PXRoaXMuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKTtnPyhlLnNwbGljZSh0LDAseSksdGhpcy5yZW1vdmUoKSk6ZS5zcGxpY2UodCwxLHkpLHdiKHYpJiZEYih2LGQsdCxjLTEpfXJldHVybiB5fW1lcmdlV2l0aFNpYmxpbmcoZSl7Y29uc3QgdD1lPT09dGhpcy5nZXRQcmV2aW91c1NpYmxpbmcoKTt0fHxlPT09dGhpcy5nZXROZXh0U2libGluZygpfHxtZyg1MCk7Y29uc3Qgbj10aGlzLl9fa2V5LHI9ZS5fX2tleSxvPXRoaXMuX190ZXh0LGk9by5sZW5ndGg7S2coKT09PXImJiRnKG4pO2NvbnN0IHM9TWIoKTtpZih3YihzKSl7Y29uc3Qgbz1zLmFuY2hvcixhPXMuZm9jdXM7bnVsbCE9PW8mJm8ua2V5PT09ciYmKHpiKG8sdCxuLGUsaSkscy5kaXJ0eT0hMCksbnVsbCE9PWEmJmEua2V5PT09ciYmKHpiKGEsdCxuLGUsaSkscy5kaXJ0eT0hMCl9Y29uc3QgYT1lLl9fdGV4dCxsPXQ/YStvOm8rYTt0aGlzLnNldFRleHRDb250ZW50KGwpO2NvbnN0IGM9dGhpcy5nZXRXcml0YWJsZSgpO3JldHVybiBlLnJlbW92ZSgpLGN9aXNUZXh0RW50aXR5KCl7cmV0dXJuITF9fWZ1bmN0aW9uIG5iKGUpe3JldHVybntmb3JDaGlsZDpmYihlLnN0eWxlKSxub2RlOm51bGx9fWZ1bmN0aW9uIHJiKGUpe2NvbnN0IHQ9ZSxuPVwibm9ybWFsXCI9PT10LnN0eWxlLmZvbnRXZWlnaHQ7cmV0dXJue2ZvckNoaWxkOmZiKHQuc3R5bGUsbj92b2lkIDA6XCJib2xkXCIpLG5vZGU6bnVsbH19Y29uc3Qgb2I9bmV3IFdlYWtNYXA7ZnVuY3Rpb24gaWIoZSl7cmV0dXJuXCJQUkVcIj09PWUubm9kZU5hbWV8fGUubm9kZVR5cGU9PT16bSYmdm9pZCAwIT09ZS5zdHlsZSYmdm9pZCAwIT09ZS5zdHlsZS53aGl0ZVNwYWNlJiZlLnN0eWxlLndoaXRlU3BhY2Uuc3RhcnRzV2l0aChcInByZVwiKX1mdW5jdGlvbiBzYihlKXtjb25zdCB0PWU7bnVsbD09PWUucGFyZW50RWxlbWVudCYmbWcoMTI5KTtsZXQgbj10LnRleHRDb250ZW50fHxcIlwiO2lmKG51bGwhPT1mdW5jdGlvbihlKXtsZXQgdCxuPWUucGFyZW50Tm9kZTtjb25zdCByPVtlXTtmb3IoO251bGwhPT1uJiZ2b2lkIDA9PT0odD1vYi5nZXQobikpJiYhaWIobik7KXIucHVzaChuKSxuPW4ucGFyZW50Tm9kZTtjb25zdCBvPXZvaWQgMD09PXQ/bjp0O2ZvcihsZXQgZT0wO2U8ci5sZW5ndGg7ZSsrKW9iLnNldChyW2VdLG8pO3JldHVybiBvfSh0KSl7Y29uc3QgZT1uLnNwbGl0KC8oXFxyP1xcbnxcXHQpLyksdD1bXSxyPWUubGVuZ3RoO2ZvcihsZXQgbj0wO248cjtuKyspe2NvbnN0IHI9ZVtuXTtcIlxcblwiPT09cnx8XCJcXHJcXG5cIj09PXI/dC5wdXNoKEh5KCkpOlwiXFx0XCI9PT1yP3QucHVzaChwYigpKTpcIlwiIT09ciYmdC5wdXNoKHViKHIpKX1yZXR1cm57bm9kZTp0fX1pZihuPW4ucmVwbGFjZSgvXFxyL2csXCJcIikucmVwbGFjZSgvWyBcXHRcXG5dKy9nLFwiIFwiKSxcIlwiPT09bilyZXR1cm57bm9kZTpudWxsfTtpZihcIiBcIj09PW5bMF0pe2xldCBlPXQscj0hMDtmb3IoO251bGwhPT1lJiZudWxsIT09KGU9YWIoZSwhMSkpOyl7Y29uc3QgdD1lLnRleHRDb250ZW50fHxcIlwiO2lmKHQubGVuZ3RoPjApey9bIFxcdFxcbl0kLy50ZXN0KHQpJiYobj1uLnNsaWNlKDEpKSxyPSExO2JyZWFrfX1yJiYobj1uLnNsaWNlKDEpKX1pZihcIiBcIj09PW5bbi5sZW5ndGgtMV0pe2xldCBlPXQscj0hMDtmb3IoO251bGwhPT1lJiZudWxsIT09KGU9YWIoZSwhMCkpOylpZigoZS50ZXh0Q29udGVudHx8XCJcIikucmVwbGFjZSgvXiggfFxcdHxcXHI/XFxuKSsvLFwiXCIpLmxlbmd0aD4wKXtyPSExO2JyZWFrfXImJihuPW4uc2xpY2UoMCxuLmxlbmd0aC0xKSl9cmV0dXJuXCJcIj09PW4/e25vZGU6bnVsbH06e25vZGU6dWIobil9fWZ1bmN0aW9uIGFiKGUsdCl7bGV0IG49ZTtmb3IoOzspe2xldCBlO2Zvcig7bnVsbD09PShlPXQ/bi5uZXh0U2libGluZzpuLnByZXZpb3VzU2libGluZyk7KXtjb25zdCBlPW4ucGFyZW50RWxlbWVudDtpZihudWxsPT09ZSlyZXR1cm4gbnVsbDtuPWV9aWYobj1lLG4ubm9kZVR5cGU9PT16bSl7Y29uc3QgZT1uLnN0eWxlLmRpc3BsYXk7aWYoXCJcIj09PWUmJiFBdihuKXx8XCJcIiE9PWUmJiFlLnN0YXJ0c1dpdGgoXCJpbmxpbmVcIikpcmV0dXJuIG51bGx9bGV0IHI9bjtmb3IoO251bGwhPT0ocj10P24uZmlyc3RDaGlsZDpuLmxhc3RDaGlsZCk7KW49cjtpZihuLm5vZGVUeXBlPT09Qm0pcmV0dXJuIG47aWYoXCJCUlwiPT09bi5ub2RlTmFtZSlyZXR1cm4gbnVsbH19Y29uc3QgbGI9e2NvZGU6XCJjb2RlXCIsZW06XCJpdGFsaWNcIixpOlwiaXRhbGljXCIsczpcInN0cmlrZXRocm91Z2hcIixzdHJvbmc6XCJib2xkXCIsc3ViOlwic3Vic2NyaXB0XCIsc3VwOlwic3VwZXJzY3JpcHRcIix1OlwidW5kZXJsaW5lXCJ9O2Z1bmN0aW9uIGNiKGUpe2NvbnN0IHQ9bGJbZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXTtyZXR1cm4gdm9pZCAwPT09dD97bm9kZTpudWxsfTp7Zm9yQ2hpbGQ6ZmIoZS5zdHlsZSx0KSxub2RlOm51bGx9fWZ1bmN0aW9uIHViKGU9XCJcIil7cmV0dXJuIFB2KG5ldyB0YihlKSl9ZnVuY3Rpb24gZGIoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiB0Yn1mdW5jdGlvbiBmYihlLHQpe2NvbnN0IG49ZS5mb250V2VpZ2h0LHI9ZS50ZXh0RGVjb3JhdGlvbi5zcGxpdChcIiBcIiksbz1cIjcwMFwiPT09bnx8XCJib2xkXCI9PT1uLGk9ci5pbmNsdWRlcyhcImxpbmUtdGhyb3VnaFwiKSxzPVwiaXRhbGljXCI9PT1lLmZvbnRTdHlsZSxhPXIuaW5jbHVkZXMoXCJ1bmRlcmxpbmVcIiksbD1lLnZlcnRpY2FsQWxpZ247cmV0dXJuIGU9PmRiKGUpPyhvJiYhZS5oYXNGb3JtYXQoXCJib2xkXCIpJiZlLnRvZ2dsZUZvcm1hdChcImJvbGRcIiksaSYmIWUuaGFzRm9ybWF0KFwic3RyaWtldGhyb3VnaFwiKSYmZS50b2dnbGVGb3JtYXQoXCJzdHJpa2V0aHJvdWdoXCIpLHMmJiFlLmhhc0Zvcm1hdChcIml0YWxpY1wiKSYmZS50b2dnbGVGb3JtYXQoXCJpdGFsaWNcIiksYSYmIWUuaGFzRm9ybWF0KFwidW5kZXJsaW5lXCIpJiZlLnRvZ2dsZUZvcm1hdChcInVuZGVybGluZVwiKSxcInN1YlwiIT09bHx8ZS5oYXNGb3JtYXQoXCJzdWJzY3JpcHRcIil8fGUudG9nZ2xlRm9ybWF0KFwic3Vic2NyaXB0XCIpLFwic3VwZXJcIiE9PWx8fGUuaGFzRm9ybWF0KFwic3VwZXJzY3JpcHRcIil8fGUudG9nZ2xlRm9ybWF0KFwic3VwZXJzY3JpcHRcIiksdCYmIWUuaGFzRm9ybWF0KHQpJiZlLnRvZ2dsZUZvcm1hdCh0KSxlKTplfWNsYXNzIGhiIGV4dGVuZHMgdGJ7c3RhdGljIGdldFR5cGUoKXtyZXR1cm5cInRhYlwifXN0YXRpYyBjbG9uZShlKXtyZXR1cm4gbmV3IGhiKGUuX19rZXkpfWFmdGVyQ2xvbmVGcm9tKGUpe3N1cGVyLmFmdGVyQ2xvbmVGcm9tKGUpLHRoaXMuX190ZXh0PWUuX190ZXh0fWNvbnN0cnVjdG9yKGUpe3N1cGVyKFwiXFx0XCIsZSksdGhpcy5fX2RldGFpbD0yfXN0YXRpYyBpbXBvcnRET00oKXtyZXR1cm4gbnVsbH1zdGF0aWMgaW1wb3J0SlNPTihlKXtjb25zdCB0PXBiKCk7cmV0dXJuIHQuc2V0Rm9ybWF0KGUuZm9ybWF0KSx0LnNldFN0eWxlKGUuc3R5bGUpLHR9ZXhwb3J0SlNPTigpe3JldHVybnsuLi5zdXBlci5leHBvcnRKU09OKCksdHlwZTpcInRhYlwiLHZlcnNpb246MX19c2V0VGV4dENvbnRlbnQoZSl7bWcoMTI2KX1zZXREZXRhaWwoZSl7bWcoMTI3KX1zZXRNb2RlKGUpe21nKDEyOCl9Y2FuSW5zZXJ0VGV4dEJlZm9yZSgpe3JldHVybiExfWNhbkluc2VydFRleHRBZnRlcigpe3JldHVybiExfX1mdW5jdGlvbiBwYigpe3JldHVybiBQdihuZXcgaGIpfWNsYXNzIG1ie2NvbnN0cnVjdG9yKGUsdCxuKXt0aGlzLl9zZWxlY3Rpb249bnVsbCx0aGlzLmtleT1lLHRoaXMub2Zmc2V0PXQsdGhpcy50eXBlPW59aXMoZSl7cmV0dXJuIHRoaXMua2V5PT09ZS5rZXkmJnRoaXMub2Zmc2V0PT09ZS5vZmZzZXQmJnRoaXMudHlwZT09PWUudHlwZX1pc0JlZm9yZShlKXtsZXQgdD10aGlzLmdldE5vZGUoKSxuPWUuZ2V0Tm9kZSgpO2NvbnN0IHI9dGhpcy5vZmZzZXQsbz1lLm9mZnNldDtpZihkeCh0KSl7Y29uc3QgZT10LmdldERlc2NlbmRhbnRCeUluZGV4KHIpO3Q9bnVsbCE9ZT9lOnR9aWYoZHgobikpe2NvbnN0IGU9bi5nZXREZXNjZW5kYW50QnlJbmRleChvKTtuPW51bGwhPWU/ZTpufXJldHVybiB0PT09bj9yPG86dC5pc0JlZm9yZShuKX1nZXROb2RlKCl7Y29uc3QgZT1IZyh0aGlzLmtleSk7cmV0dXJuIG51bGw9PT1lJiZtZygyMCksZX1zZXQoZSx0LG4pe2NvbnN0IHI9dGhpcy5fc2VsZWN0aW9uLG89dGhpcy5rZXk7dGhpcy5rZXk9ZSx0aGlzLm9mZnNldD10LHRoaXMudHlwZT1uLFliKCl8fChLZygpPT09byYmJGcoZSksbnVsbCE9PXImJihyLnNldENhY2hlZE5vZGVzKG51bGwpLHIuZGlydHk9ITApKX19ZnVuY3Rpb24gZ2IoZSx0LG4pe3JldHVybiBuZXcgbWIoZSx0LG4pfWZ1bmN0aW9uIHZiKGUsdCl7bGV0IG49dC5fX2tleSxyPWUub2Zmc2V0LG89XCJlbGVtZW50XCI7aWYoZGIodCkpe289XCJ0ZXh0XCI7Y29uc3QgZT10LmdldFRleHRDb250ZW50U2l6ZSgpO3I+ZSYmKHI9ZSl9ZWxzZSBpZighZHgodCkpe2NvbnN0IGU9dC5nZXROZXh0U2libGluZygpO2lmKGRiKGUpKW49ZS5fX2tleSxyPTAsbz1cInRleHRcIjtlbHNle2NvbnN0IGU9dC5nZXRQYXJlbnQoKTtlJiYobj1lLl9fa2V5LHI9dC5nZXRJbmRleFdpdGhpblBhcmVudCgpKzEpfX1lLnNldChuLHIsbyl9ZnVuY3Rpb24geWIoZSx0KXtpZihkeCh0KSl7Y29uc3Qgbj10LmdldExhc3REZXNjZW5kYW50KCk7ZHgobil8fGRiKG4pP3ZiKGUsbik6dmIoZSx0KX1lbHNlIHZiKGUsdCl9ZnVuY3Rpb24gYmIoZSx0LG4scil7ZS5rZXk9dCxlLm9mZnNldD1uLGUudHlwZT1yfWNsYXNzIHhie2NvbnN0cnVjdG9yKGUpe3RoaXMuX2NhY2hlZE5vZGVzPW51bGwsdGhpcy5fbm9kZXM9ZSx0aGlzLmRpcnR5PSExfWdldENhY2hlZE5vZGVzKCl7cmV0dXJuIHRoaXMuX2NhY2hlZE5vZGVzfXNldENhY2hlZE5vZGVzKGUpe3RoaXMuX2NhY2hlZE5vZGVzPWV9aXMoZSl7aWYoIVNiKGUpKXJldHVybiExO2NvbnN0IHQ9dGhpcy5fbm9kZXMsbj1lLl9ub2RlcztyZXR1cm4gdC5zaXplPT09bi5zaXplJiZBcnJheS5mcm9tKHQpLmV2ZXJ5KChlPT5uLmhhcyhlKSkpfWlzQ29sbGFwc2VkKCl7cmV0dXJuITF9aXNCYWNrd2FyZCgpe3JldHVybiExfWdldFN0YXJ0RW5kUG9pbnRzKCl7cmV0dXJuIG51bGx9YWRkKGUpe3RoaXMuZGlydHk9ITAsdGhpcy5fbm9kZXMuYWRkKGUpLHRoaXMuX2NhY2hlZE5vZGVzPW51bGx9ZGVsZXRlKGUpe3RoaXMuZGlydHk9ITAsdGhpcy5fbm9kZXMuZGVsZXRlKGUpLHRoaXMuX2NhY2hlZE5vZGVzPW51bGx9Y2xlYXIoKXt0aGlzLmRpcnR5PSEwLHRoaXMuX25vZGVzLmNsZWFyKCksdGhpcy5fY2FjaGVkTm9kZXM9bnVsbH1oYXMoZSl7cmV0dXJuIHRoaXMuX25vZGVzLmhhcyhlKX1jbG9uZSgpe3JldHVybiBuZXcgeGIobmV3IFNldCh0aGlzLl9ub2RlcykpfWV4dHJhY3QoKXtyZXR1cm4gdGhpcy5nZXROb2RlcygpfWluc2VydFJhd1RleHQoZSl7fWluc2VydFRleHQoKXt9aW5zZXJ0Tm9kZXMoZSl7Y29uc3QgdD10aGlzLmdldE5vZGVzKCksbj10Lmxlbmd0aCxyPXRbbi0xXTtsZXQgbztpZihkYihyKSlvPXIuc2VsZWN0KCk7ZWxzZXtjb25zdCBlPXIuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKSsxO289ci5nZXRQYXJlbnRPclRocm93KCkuc2VsZWN0KGUsZSl9by5pbnNlcnROb2RlcyhlKTtmb3IobGV0IGU9MDtlPG47ZSsrKXRbZV0ucmVtb3ZlKCl9Z2V0Tm9kZXMoKXtjb25zdCBlPXRoaXMuX2NhY2hlZE5vZGVzO2lmKG51bGwhPT1lKXJldHVybiBlO2NvbnN0IHQ9dGhpcy5fbm9kZXMsbj1bXTtmb3IoY29uc3QgZSBvZiB0KXtjb25zdCB0PUhnKGUpO251bGwhPT10JiZuLnB1c2godCl9cmV0dXJuIFliKCl8fCh0aGlzLl9jYWNoZWROb2Rlcz1uKSxufWdldFRleHRDb250ZW50KCl7Y29uc3QgZT10aGlzLmdldE5vZGVzKCk7bGV0IHQ9XCJcIjtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl0Kz1lW25dLmdldFRleHRDb250ZW50KCk7cmV0dXJuIHR9fWZ1bmN0aW9uIHdiKGUpe3JldHVybiBlIGluc3RhbmNlb2YgRWJ9Y2xhc3MgRWJ7Y29uc3RydWN0b3IoZSx0LG4scil7dGhpcy5hbmNob3I9ZSx0aGlzLmZvY3VzPXQsZS5fc2VsZWN0aW9uPXRoaXMsdC5fc2VsZWN0aW9uPXRoaXMsdGhpcy5fY2FjaGVkTm9kZXM9bnVsbCx0aGlzLmZvcm1hdD1uLHRoaXMuc3R5bGU9cix0aGlzLmRpcnR5PSExfWdldENhY2hlZE5vZGVzKCl7cmV0dXJuIHRoaXMuX2NhY2hlZE5vZGVzfXNldENhY2hlZE5vZGVzKGUpe3RoaXMuX2NhY2hlZE5vZGVzPWV9aXMoZSl7cmV0dXJuISF3YihlKSYmdGhpcy5hbmNob3IuaXMoZS5hbmNob3IpJiZ0aGlzLmZvY3VzLmlzKGUuZm9jdXMpJiZ0aGlzLmZvcm1hdD09PWUuZm9ybWF0JiZ0aGlzLnN0eWxlPT09ZS5zdHlsZX1pc0NvbGxhcHNlZCgpe3JldHVybiB0aGlzLmFuY2hvci5pcyh0aGlzLmZvY3VzKX1nZXROb2Rlcygpe2NvbnN0IGU9dGhpcy5fY2FjaGVkTm9kZXM7aWYobnVsbCE9PWUpcmV0dXJuIGU7Y29uc3QgdD10aGlzLmFuY2hvcixuPXRoaXMuZm9jdXMscj10LmlzQmVmb3JlKG4pLG89cj90Om4saT1yP246dDtsZXQgcz1vLmdldE5vZGUoKSxhPWkuZ2V0Tm9kZSgpO2NvbnN0IGw9by5vZmZzZXQsYz1pLm9mZnNldDtpZihkeChzKSl7Y29uc3QgZT1zLmdldERlc2NlbmRhbnRCeUluZGV4KGwpO3M9bnVsbCE9ZT9lOnN9aWYoZHgoYSkpe2xldCBlPWEuZ2V0RGVzY2VuZGFudEJ5SW5kZXgoYyk7bnVsbCE9PWUmJmUhPT1zJiZhLmdldENoaWxkQXRJbmRleChjKT09PWUmJihlPWUuZ2V0UHJldmlvdXNTaWJsaW5nKCkpLGE9bnVsbCE9ZT9lOmF9bGV0IHU7cmV0dXJuIHU9cy5pcyhhKT9keChzKSYmcy5nZXRDaGlsZHJlblNpemUoKT4wP1tdOltzXTpzLmdldE5vZGVzQmV0d2VlbihhKSxZYigpfHwodGhpcy5fY2FjaGVkTm9kZXM9dSksdX1zZXRUZXh0Tm9kZVJhbmdlKGUsdCxuLHIpe2JiKHRoaXMuYW5jaG9yLGUuX19rZXksdCxcInRleHRcIiksYmIodGhpcy5mb2N1cyxuLl9fa2V5LHIsXCJ0ZXh0XCIpLHRoaXMuX2NhY2hlZE5vZGVzPW51bGwsdGhpcy5kaXJ0eT0hMH1nZXRUZXh0Q29udGVudCgpe2NvbnN0IGU9dGhpcy5nZXROb2RlcygpO2lmKDA9PT1lLmxlbmd0aClyZXR1cm5cIlwiO2NvbnN0IHQ9ZVswXSxuPWVbZS5sZW5ndGgtMV0scj10aGlzLmFuY2hvcixvPXRoaXMuZm9jdXMsaT1yLmlzQmVmb3JlKG8pLFtzLGFdPWtiKHRoaXMpO2xldCBsPVwiXCIsYz0hMDtmb3IobGV0IHU9MDt1PGUubGVuZ3RoO3UrKyl7Y29uc3QgZD1lW3VdO2lmKGR4KGQpJiYhZC5pc0lubGluZSgpKWN8fChsKz1cIlxcblwiKSxjPSFkLmlzRW1wdHkoKTtlbHNlIGlmKGM9ITEsZGIoZCkpe2xldCBlPWQuZ2V0VGV4dENvbnRlbnQoKTtkPT09dD9kPT09bj9cImVsZW1lbnRcIj09PXIudHlwZSYmXCJlbGVtZW50XCI9PT1vLnR5cGUmJm8ub2Zmc2V0IT09ci5vZmZzZXR8fChlPXM8YT9lLnNsaWNlKHMsYSk6ZS5zbGljZShhLHMpKTplPWk/ZS5zbGljZShzKTplLnNsaWNlKGEpOmQ9PT1uJiYoZT1pP2Uuc2xpY2UoMCxhKTplLnNsaWNlKDAscykpLGwrPWV9ZWxzZSFweChkKSYmIXF5KGQpfHxkPT09biYmdGhpcy5pc0NvbGxhcHNlZCgpfHwobCs9ZC5nZXRUZXh0Q29udGVudCgpKX1yZXR1cm4gbH1hcHBseURPTVJhbmdlKGUpe2NvbnN0IHQ9WmIoKSxuPXQuZ2V0RWRpdG9yU3RhdGUoKS5fc2VsZWN0aW9uLHI9UmIoZS5zdGFydENvbnRhaW5lcixlLnN0YXJ0T2Zmc2V0LGUuZW5kQ29udGFpbmVyLGUuZW5kT2Zmc2V0LHQsbik7aWYobnVsbD09PXIpcmV0dXJuO2NvbnN0W28saV09cjtiYih0aGlzLmFuY2hvcixvLmtleSxvLm9mZnNldCxvLnR5cGUpLGJiKHRoaXMuZm9jdXMsaS5rZXksaS5vZmZzZXQsaS50eXBlKSx0aGlzLl9jYWNoZWROb2Rlcz1udWxsfWNsb25lKCl7Y29uc3QgZT10aGlzLmFuY2hvcix0PXRoaXMuZm9jdXM7cmV0dXJuIG5ldyBFYihnYihlLmtleSxlLm9mZnNldCxlLnR5cGUpLGdiKHQua2V5LHQub2Zmc2V0LHQudHlwZSksdGhpcy5mb3JtYXQsdGhpcy5zdHlsZSl9dG9nZ2xlRm9ybWF0KGUpe3RoaXMuZm9ybWF0PVZnKHRoaXMuZm9ybWF0LGUsbnVsbCksdGhpcy5kaXJ0eT0hMH1zZXRTdHlsZShlKXt0aGlzLnN0eWxlPWUsdGhpcy5kaXJ0eT0hMH1oYXNGb3JtYXQoZSl7Y29uc3QgdD1sZ1tlXTtyZXR1cm4hISh0aGlzLmZvcm1hdCZ0KX1pbnNlcnRSYXdUZXh0KGUpe2NvbnN0IHQ9ZS5zcGxpdCgvKFxccj9cXG58XFx0KS8pLG49W10scj10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPHI7ZSsrKXtjb25zdCByPXRbZV07XCJcXG5cIj09PXJ8fFwiXFxyXFxuXCI9PT1yP24ucHVzaChIeSgpKTpcIlxcdFwiPT09cj9uLnB1c2gocGIoKSk6bi5wdXNoKHViKHIpKX10aGlzLmluc2VydE5vZGVzKG4pfWluc2VydFRleHQoZSl7Y29uc3QgdD10aGlzLmFuY2hvcixuPXRoaXMuZm9jdXMscj10aGlzLmZvcm1hdCxvPXRoaXMuc3R5bGU7bGV0IGk9dCxzPW47IXRoaXMuaXNDb2xsYXBzZWQoKSYmbi5pc0JlZm9yZSh0KSYmKGk9bixzPXQpLFwiZWxlbWVudFwiPT09aS50eXBlJiZmdW5jdGlvbihlLHQsbixyKXtjb25zdCBvPWUuZ2V0Tm9kZSgpLGk9by5nZXRDaGlsZEF0SW5kZXgoZS5vZmZzZXQpLHM9dWIoKSxhPWd4KG8pP1N4KCkuYXBwZW5kKHMpOnM7cy5zZXRGb3JtYXQobikscy5zZXRTdHlsZShyKSxudWxsPT09aT9vLmFwcGVuZChhKTppLmluc2VydEJlZm9yZShhKSxlLmlzKHQpJiZ0LnNldChzLl9fa2V5LDAsXCJ0ZXh0XCIpLGUuc2V0KHMuX19rZXksMCxcInRleHRcIil9KGkscyxyLG8pO2NvbnN0IGE9aS5vZmZzZXQ7bGV0IGw9cy5vZmZzZXQ7Y29uc3QgYz10aGlzLmdldE5vZGVzKCksdT1jLmxlbmd0aDtsZXQgZD1jWzBdO2RiKGQpfHxtZygyNik7Y29uc3QgZj1kLmdldFRleHRDb250ZW50KCkubGVuZ3RoLGg9ZC5nZXRQYXJlbnRPclRocm93KCk7bGV0IHA9Y1t1LTFdO2lmKDE9PT11JiZcImVsZW1lbnRcIj09PXMudHlwZSYmKGw9ZixzLnNldChpLmtleSxsLFwidGV4dFwiKSksdGhpcy5pc0NvbGxhcHNlZCgpJiZhPT09ZiYmKGQuaXNTZWdtZW50ZWQoKXx8ZC5pc1Rva2VuKCl8fCFkLmNhbkluc2VydFRleHRBZnRlcigpfHwhaC5jYW5JbnNlcnRUZXh0QWZ0ZXIoKSYmbnVsbD09PWQuZ2V0TmV4dFNpYmxpbmcoKSkpe2xldCB0PWQuZ2V0TmV4dFNpYmxpbmcoKTtpZihkYih0KSYmdC5jYW5JbnNlcnRUZXh0QmVmb3JlKCkmJiFGZyh0KXx8KHQ9dWIoKSx0LnNldEZvcm1hdChyKSx0LnNldFN0eWxlKG8pLGguY2FuSW5zZXJ0VGV4dEFmdGVyKCk/ZC5pbnNlcnRBZnRlcih0KTpoLmluc2VydEFmdGVyKHQpKSx0LnNlbGVjdCgwLDApLGQ9dCxcIlwiIT09ZSlyZXR1cm4gdm9pZCB0aGlzLmluc2VydFRleHQoZSl9ZWxzZSBpZih0aGlzLmlzQ29sbGFwc2VkKCkmJjA9PT1hJiYoZC5pc1NlZ21lbnRlZCgpfHxkLmlzVG9rZW4oKXx8IWQuY2FuSW5zZXJ0VGV4dEJlZm9yZSgpfHwhaC5jYW5JbnNlcnRUZXh0QmVmb3JlKCkmJm51bGw9PT1kLmdldFByZXZpb3VzU2libGluZygpKSl7bGV0IHQ9ZC5nZXRQcmV2aW91c1NpYmxpbmcoKTtpZihkYih0KSYmIUZnKHQpfHwodD11YigpLHQuc2V0Rm9ybWF0KHIpLGguY2FuSW5zZXJ0VGV4dEJlZm9yZSgpP2QuaW5zZXJ0QmVmb3JlKHQpOmguaW5zZXJ0QmVmb3JlKHQpKSx0LnNlbGVjdCgpLGQ9dCxcIlwiIT09ZSlyZXR1cm4gdm9pZCB0aGlzLmluc2VydFRleHQoZSl9ZWxzZSBpZihkLmlzU2VnbWVudGVkKCkmJmEhPT1mKXtjb25zdCBlPXViKGQuZ2V0VGV4dENvbnRlbnQoKSk7ZS5zZXRGb3JtYXQociksZC5yZXBsYWNlKGUpLGQ9ZX1lbHNlIGlmKCF0aGlzLmlzQ29sbGFwc2VkKCkmJlwiXCIhPT1lKXtjb25zdCB0PXAuZ2V0UGFyZW50KCk7aWYoIWguY2FuSW5zZXJ0VGV4dEJlZm9yZSgpfHwhaC5jYW5JbnNlcnRUZXh0QWZ0ZXIoKXx8ZHgodCkmJighdC5jYW5JbnNlcnRUZXh0QmVmb3JlKCl8fCF0LmNhbkluc2VydFRleHRBZnRlcigpKSlyZXR1cm4gdGhpcy5pbnNlcnRUZXh0KFwiXCIpLE9iKHRoaXMuYW5jaG9yLHRoaXMuZm9jdXMsbnVsbCksdm9pZCB0aGlzLmluc2VydFRleHQoZSl9aWYoMT09PXUpe2lmKGQuaXNUb2tlbigpKXtjb25zdCB0PXViKGUpO3JldHVybiB0LnNlbGVjdCgpLHZvaWQgZC5yZXBsYWNlKHQpfWNvbnN0IHQ9ZC5nZXRGb3JtYXQoKSxuPWQuZ2V0U3R5bGUoKTtpZihhIT09bHx8dD09PXImJm49PT1vKXtpZihmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIGhifShkKSl7Y29uc3QgdD11YihlKTtyZXR1cm4gdC5zZXRGb3JtYXQociksdC5zZXRTdHlsZShvKSx0LnNlbGVjdCgpLHZvaWQgZC5yZXBsYWNlKHQpfX1lbHNle2lmKFwiXCIhPT1kLmdldFRleHRDb250ZW50KCkpe2NvbnN0IHQ9dWIoZSk7aWYodC5zZXRGb3JtYXQociksdC5zZXRTdHlsZShvKSx0LnNlbGVjdCgpLDA9PT1hKWQuaW5zZXJ0QmVmb3JlKHQsITEpO2Vsc2V7Y29uc3RbZV09ZC5zcGxpdFRleHQoYSk7ZS5pbnNlcnRBZnRlcih0LCExKX1yZXR1cm4gdm9pZCh0LmlzQ29tcG9zaW5nKCkmJlwidGV4dFwiPT09dGhpcy5hbmNob3IudHlwZSYmKHRoaXMuYW5jaG9yLm9mZnNldC09ZS5sZW5ndGgpKX1kLnNldEZvcm1hdChyKSxkLnNldFN0eWxlKG8pfWNvbnN0IGk9bC1hO2Q9ZC5zcGxpY2VUZXh0KGEsaSxlLCEwKSxcIlwiPT09ZC5nZXRUZXh0Q29udGVudCgpP2QucmVtb3ZlKCk6XCJ0ZXh0XCI9PT10aGlzLmFuY2hvci50eXBlJiYoZC5pc0NvbXBvc2luZygpP3RoaXMuYW5jaG9yLm9mZnNldC09ZS5sZW5ndGg6KHRoaXMuZm9ybWF0PXQsdGhpcy5zdHlsZT1uKSl9ZWxzZXtjb25zdCB0PW5ldyBTZXQoWy4uLmQuZ2V0UGFyZW50S2V5cygpLC4uLnAuZ2V0UGFyZW50S2V5cygpXSksbj1keChkKT9kOmQuZ2V0UGFyZW50T3JUaHJvdygpO2xldCByPWR4KHApP3A6cC5nZXRQYXJlbnRPclRocm93KCksbz1wO2lmKCFuLmlzKHIpJiZyLmlzSW5saW5lKCkpZG97bz1yLHI9ci5nZXRQYXJlbnRPclRocm93KCl9d2hpbGUoci5pc0lubGluZSgpKTtpZihcInRleHRcIj09PXMudHlwZSYmKDAhPT1sfHxcIlwiPT09cC5nZXRUZXh0Q29udGVudCgpKXx8XCJlbGVtZW50XCI9PT1zLnR5cGUmJnAuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKTxsKWlmKGRiKHApJiYhcC5pc1Rva2VuKCkmJmwhPT1wLmdldFRleHRDb250ZW50U2l6ZSgpKXtpZihwLmlzU2VnbWVudGVkKCkpe2NvbnN0IGU9dWIocC5nZXRUZXh0Q29udGVudCgpKTtwLnJlcGxhY2UoZSkscD1lfWd4KHMuZ2V0Tm9kZSgpKXx8XCJ0ZXh0XCIhPT1zLnR5cGV8fChwPXAuc3BsaWNlVGV4dCgwLGwsXCJcIikpLHQuYWRkKHAuX19rZXkpfWVsc2V7Y29uc3QgZT1wLmdldFBhcmVudE9yVGhyb3coKTtlLmNhbkJlRW1wdHkoKXx8MSE9PWUuZ2V0Q2hpbGRyZW5TaXplKCk/cC5yZW1vdmUoKTplLnJlbW92ZSgpfWVsc2UgdC5hZGQocC5fX2tleSk7Y29uc3QgaT1yLmdldENoaWxkcmVuKCksaD1uZXcgU2V0KGMpLG09bi5pcyhyKSxnPW4uaXNJbmxpbmUoKSYmbnVsbD09PWQuZ2V0TmV4dFNpYmxpbmcoKT9uOmQ7Zm9yKGxldCBlPWkubGVuZ3RoLTE7ZT49MDtlLS0pe2NvbnN0IHQ9aVtlXTtpZih0LmlzKGQpfHxkeCh0KSYmdC5pc1BhcmVudE9mKGQpKWJyZWFrO3QuaXNBdHRhY2hlZCgpJiYoIWguaGFzKHQpfHx0LmlzKG8pP218fGcuaW5zZXJ0QWZ0ZXIodCwhMSk6dC5yZW1vdmUoKSl9aWYoIW0pe2xldCBlPXIsbj1udWxsO2Zvcig7bnVsbCE9PWU7KXtjb25zdCByPWUuZ2V0Q2hpbGRyZW4oKSxvPXIubGVuZ3RoOygwPT09b3x8cltvLTFdLmlzKG4pKSYmKHQuZGVsZXRlKGUuX19rZXkpLG49ZSksZT1lLmdldFBhcmVudCgpfX1pZihkLmlzVG9rZW4oKSlpZihhPT09ZilkLnNlbGVjdCgpO2Vsc2V7Y29uc3QgdD11YihlKTt0LnNlbGVjdCgpLGQucmVwbGFjZSh0KX1lbHNlIGQ9ZC5zcGxpY2VUZXh0KGEsZi1hLGUsITApLFwiXCI9PT1kLmdldFRleHRDb250ZW50KCk/ZC5yZW1vdmUoKTpkLmlzQ29tcG9zaW5nKCkmJlwidGV4dFwiPT09dGhpcy5hbmNob3IudHlwZSYmKHRoaXMuYW5jaG9yLm9mZnNldC09ZS5sZW5ndGgpO2ZvcihsZXQgZT0xO2U8dTtlKyspe2NvbnN0IG49Y1tlXSxyPW4uX19rZXk7dC5oYXMocil8fG4ucmVtb3ZlKCl9fX1yZW1vdmVUZXh0KCl7dGhpcy5pbnNlcnRUZXh0KFwiXCIpfWZvcm1hdFRleHQoZSl7aWYodGhpcy5pc0NvbGxhcHNlZCgpKXJldHVybiB0aGlzLnRvZ2dsZUZvcm1hdChlKSx2b2lkICRnKG51bGwpO2NvbnN0IHQ9dGhpcy5nZXROb2RlcygpLG49W107Zm9yKGNvbnN0IGUgb2YgdClkYihlKSYmbi5wdXNoKGUpO2NvbnN0IHI9bi5sZW5ndGg7aWYoMD09PXIpcmV0dXJuIHRoaXMudG9nZ2xlRm9ybWF0KGUpLHZvaWQgJGcobnVsbCk7Y29uc3Qgbz10aGlzLmFuY2hvcixpPXRoaXMuZm9jdXMscz10aGlzLmlzQmFja3dhcmQoKSxhPXM/aTpvLGw9cz9vOmk7bGV0IGM9MCx1PW5bMF0sZD1cImVsZW1lbnRcIj09PWEudHlwZT8wOmEub2Zmc2V0O2lmKFwidGV4dFwiPT09YS50eXBlJiZkPT09dS5nZXRUZXh0Q29udGVudFNpemUoKSYmKGM9MSx1PW5bMV0sZD0wKSxudWxsPT11KXJldHVybjtjb25zdCBmPXUuZ2V0Rm9ybWF0RmxhZ3MoZSxudWxsKSxoPXItMTtsZXQgcD1uW2hdO2NvbnN0IG09XCJ0ZXh0XCI9PT1sLnR5cGU/bC5vZmZzZXQ6cC5nZXRUZXh0Q29udGVudFNpemUoKTtpZih1LmlzKHApKXtpZihkPT09bSlyZXR1cm47aWYoRmcodSl8fDA9PT1kJiZtPT09dS5nZXRUZXh0Q29udGVudFNpemUoKSl1LnNldEZvcm1hdChmKTtlbHNle2NvbnN0IGU9dS5zcGxpdFRleHQoZCxtKSx0PTA9PT1kP2VbMF06ZVsxXTt0LnNldEZvcm1hdChmKSxcInRleHRcIj09PWEudHlwZSYmYS5zZXQodC5fX2tleSwwLFwidGV4dFwiKSxcInRleHRcIj09PWwudHlwZSYmbC5zZXQodC5fX2tleSxtLWQsXCJ0ZXh0XCIpfXJldHVybiB2b2lkKHRoaXMuZm9ybWF0PWYpfTA9PT1kfHxGZyh1KXx8KFssdV09dS5zcGxpdFRleHQoZCksZD0wKSx1LnNldEZvcm1hdChmKTtjb25zdCBnPXAuZ2V0Rm9ybWF0RmxhZ3MoZSxmKTttPjAmJihtPT09cC5nZXRUZXh0Q29udGVudFNpemUoKXx8RmcocCl8fChbcF09cC5zcGxpdFRleHQobSkpLHAuc2V0Rm9ybWF0KGcpKTtmb3IobGV0IHQ9YysxO3Q8aDt0Kyspe2NvbnN0IHI9blt0XSxvPXIuZ2V0Rm9ybWF0RmxhZ3MoZSxnKTtyLnNldEZvcm1hdChvKX1cInRleHRcIj09PWEudHlwZSYmYS5zZXQodS5fX2tleSxkLFwidGV4dFwiKSxcInRleHRcIj09PWwudHlwZSYmbC5zZXQocC5fX2tleSxtLFwidGV4dFwiKSx0aGlzLmZvcm1hdD1mfGd9aW5zZXJ0Tm9kZXMoZSl7aWYoMD09PWUubGVuZ3RoKXJldHVybjtpZihcInJvb3RcIj09PXRoaXMuYW5jaG9yLmtleSl7dGhpcy5pbnNlcnRQYXJhZ3JhcGgoKTtjb25zdCB0PU1iKCk7cmV0dXJuIHdiKHQpfHxtZygxMzQpLHQuaW5zZXJ0Tm9kZXMoZSl9Y29uc3QgdD1JdigodGhpcy5pc0JhY2t3YXJkKCk/dGhpcy5mb2N1czp0aGlzLmFuY2hvcikuZ2V0Tm9kZSgpLE12KSxuPWVbZS5sZW5ndGgtMV07aWYoXCJfX2xhbmd1YWdlXCJpbiB0JiZkeCh0KSl7aWYoXCJfX2xhbmd1YWdlXCJpbiBlWzBdKXRoaXMuaW5zZXJ0VGV4dChlWzBdLmdldFRleHRDb250ZW50KCkpO2Vsc2V7Y29uc3Qgcj1CYih0aGlzKTt0LnNwbGljZShyLDAsZSksbi5zZWxlY3RFbmQoKX1yZXR1cm59aWYoIWUuc29tZSgoZT0+KGR4KGUpfHxweChlKSkmJiFlLmlzSW5saW5lKCkpKSl7ZHgodCl8fG1nKDEzNSk7Y29uc3Qgcj1CYih0aGlzKTtyZXR1cm4gdC5zcGxpY2UociwwLGUpLHZvaWQgbi5zZWxlY3RFbmQoKX1jb25zdCByPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9U3goKTtsZXQgbj1udWxsO2ZvcihsZXQgcj0wO3I8ZS5sZW5ndGg7cisrKXtjb25zdCBvPWVbcl0saT1xeShvKTtpZihpfHxweChvKSYmby5pc0lubGluZSgpfHxkeChvKSYmby5pc0lubGluZSgpfHxkYihvKXx8by5pc1BhcmVudFJlcXVpcmVkKCkpe2lmKG51bGw9PT1uJiYobj1vLmNyZWF0ZVBhcmVudEVsZW1lbnROb2RlKCksdC5hcHBlbmQobiksaSkpY29udGludWU7bnVsbCE9PW4mJm4uYXBwZW5kKG8pfWVsc2UgdC5hcHBlbmQobyksbj1udWxsfXJldHVybiB0fShlKSxvPXIuZ2V0TGFzdERlc2NlbmRhbnQoKSxpPXIuZ2V0Q2hpbGRyZW4oKSxzPWR4KHQpJiZ0LmlzRW1wdHkoKT9udWxsOnRoaXMuaW5zZXJ0UGFyYWdyYXBoKCksYT1pW2kubGVuZ3RoLTFdO2xldCBsPWlbMF07dmFyIGM7ZHgoYz1sKSYmTXYoYykmJiFjLmlzRW1wdHkoKSYmZHgodCkmJighdC5pc0VtcHR5KCl8fHQuY2FuTWVyZ2VXaGVuRW1wdHkoKSkmJihkeCh0KXx8bWcoMTM1KSx0LmFwcGVuZCguLi5sLmdldENoaWxkcmVuKCkpLGw9aVsxXSksbCYmZnVuY3Rpb24oZSx0KXtjb25zdCBuPXQuZ2V0UGFyZW50T3JUaHJvdygpLmdldExhc3RDaGlsZCgpO2xldCByPXQ7Y29uc3Qgbz1bdF07Zm9yKDtyIT09bjspci5nZXROZXh0U2libGluZygpfHxtZygxNDApLHI9ci5nZXROZXh0U2libGluZygpLG8ucHVzaChyKTtsZXQgaT1lO2Zvcihjb25zdCBlIG9mIG8paT1pLmluc2VydEFmdGVyKGUpfSh0LGwpO2NvbnN0IHU9SXYobyxNdik7cyYmZHgodSkmJihzLmNhbk1lcmdlV2hlbkVtcHR5KCl8fE12KGEpKSYmKHUuYXBwZW5kKC4uLnMuZ2V0Q2hpbGRyZW4oKSkscy5yZW1vdmUoKSksZHgodCkmJnQuaXNFbXB0eSgpJiZ0LnJlbW92ZSgpLG8uc2VsZWN0RW5kKCk7Y29uc3QgZD1keCh0KT90LmdldExhc3RDaGlsZCgpOm51bGw7cXkoZCkmJnUhPT10JiZkLnJlbW92ZSgpfWluc2VydFBhcmFncmFwaCgpe2lmKFwicm9vdFwiPT09dGhpcy5hbmNob3Iua2V5KXtjb25zdCBlPVN4KCk7cmV0dXJuIEpnKCkuc3BsaWNlKHRoaXMuYW5jaG9yLm9mZnNldCwwLFtlXSksZS5zZWxlY3QoKSxlfWNvbnN0IGU9QmIodGhpcyksdD1Jdih0aGlzLmFuY2hvci5nZXROb2RlKCksTXYpO2R4KHQpfHxtZygxMzYpO2NvbnN0IG49dC5nZXRDaGlsZEF0SW5kZXgoZSkscj1uP1tuLC4uLm4uZ2V0TmV4dFNpYmxpbmdzKCldOltdLG89dC5pbnNlcnROZXdBZnRlcih0aGlzLCExKTtyZXR1cm4gbz8oby5hcHBlbmQoLi4uciksby5zZWxlY3RTdGFydCgpLG8pOm51bGx9aW5zZXJ0TGluZUJyZWFrKGUpe2NvbnN0IHQ9SHkoKTtpZih0aGlzLmluc2VydE5vZGVzKFt0XSksZSl7Y29uc3QgZT10LmdldFBhcmVudE9yVGhyb3coKSxuPXQuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKTtlLnNlbGVjdChuLG4pfX1leHRyYWN0KCl7Y29uc3QgZT10aGlzLmdldE5vZGVzKCksdD1lLmxlbmd0aCxuPXQtMSxyPXRoaXMuYW5jaG9yLG89dGhpcy5mb2N1cztsZXQgaT1lWzBdLHM9ZVtuXTtjb25zdFthLGxdPWtiKHRoaXMpO2lmKDA9PT10KXJldHVybltdO2lmKDE9PT10KXtpZihkYihpKSYmIXRoaXMuaXNDb2xsYXBzZWQoKSl7Y29uc3QgZT1hPmw/bDphLHQ9YT5sP2E6bCxuPWkuc3BsaXRUZXh0KGUsdCkscj0wPT09ZT9uWzBdOm5bMV07cmV0dXJuIG51bGwhPXI/W3JdOltdfXJldHVybltpXX1jb25zdCBjPXIuaXNCZWZvcmUobyk7aWYoZGIoaSkpe2NvbnN0IHQ9Yz9hOmw7dD09PWkuZ2V0VGV4dENvbnRlbnRTaXplKCk/ZS5zaGlmdCgpOjAhPT10JiYoWyxpXT1pLnNwbGl0VGV4dCh0KSxlWzBdPWkpfWlmKGRiKHMpKXtjb25zdCB0PXMuZ2V0VGV4dENvbnRlbnQoKS5sZW5ndGgscj1jP2w6YTswPT09cj9lLnBvcCgpOnIhPT10JiYoW3NdPXMuc3BsaXRUZXh0KHIpLGVbbl09cyl9cmV0dXJuIGV9bW9kaWZ5KGUsdCxuKXtjb25zdCByPXRoaXMuZm9jdXMsbz10aGlzLmFuY2hvcixpPVwibW92ZVwiPT09ZSxzPXl2KHIsdCk7aWYocHgocykmJiFzLmlzSXNvbGF0ZWQoKSl7aWYoaSYmcy5pc0tleWJvYXJkU2VsZWN0YWJsZSgpKXtjb25zdCBlPUFiKCk7cmV0dXJuIGUuYWRkKHMuX19rZXkpLHZvaWQgUWcoZSl9Y29uc3QgZT10P3MuZ2V0UHJldmlvdXNTaWJsaW5nKCk6cy5nZXROZXh0U2libGluZygpO2lmKGRiKGUpKXtjb25zdCBuPWUuX19rZXkscz10P2UuZ2V0VGV4dENvbnRlbnQoKS5sZW5ndGg6MDtyZXR1cm4gci5zZXQobixzLFwidGV4dFwiKSx2b2lkKGkmJm8uc2V0KG4scyxcInRleHRcIikpfXtjb25zdCBuPXMuZ2V0UGFyZW50T3JUaHJvdygpO2xldCBhLGw7cmV0dXJuIGR4KGUpPyhsPWUuX19rZXksYT10P2UuZ2V0Q2hpbGRyZW5TaXplKCk6MCk6KGE9cy5nZXRJbmRleFdpdGhpblBhcmVudCgpLGw9bi5fX2tleSx0fHxhKyspLHIuc2V0KGwsYSxcImVsZW1lbnRcIiksdm9pZChpJiZvLnNldChsLGEsXCJlbGVtZW50XCIpKX19Y29uc3QgYT1aYigpLGw9UnYoYS5fd2luZG93KTtpZighbClyZXR1cm47Y29uc3QgYz1hLl9ibG9ja0N1cnNvckVsZW1lbnQsdT1hLl9yb290RWxlbWVudDtpZihudWxsPT09dXx8bnVsbD09PWN8fCFkeChzKXx8cy5pc0lubGluZSgpfHxzLmNhbkJlRW1wdHkoKXx8X24oYyxhLHUpLGZ1bmN0aW9uKGUsdCxuLHIpe2UubW9kaWZ5KHQsbixyKX0obCxlLHQ/XCJiYWNrd2FyZFwiOlwiZm9yd2FyZFwiLG4pLGwucmFuZ2VDb3VudD4wKXtjb25zdCBlPWwuZ2V0UmFuZ2VBdCgwKSxuPXRoaXMuYW5jaG9yLmdldE5vZGUoKSxyPWd4KG4pP246ZnVuY3Rpb24oZSl7bGV0IHQ9ZS5nZXRQYXJlbnRPclRocm93KCk7Zm9yKDtudWxsIT09dDspe2lmKEN2KHQpKXJldHVybiB0O3Q9dC5nZXRQYXJlbnRPclRocm93KCl9cmV0dXJuIHR9KG4pO2lmKHRoaXMuYXBwbHlET01SYW5nZShlKSx0aGlzLmRpcnR5PSEwLCFpKXtjb25zdCBuPXRoaXMuZ2V0Tm9kZXMoKSxvPVtdO2xldCBpPSExO2ZvcihsZXQgZT0wO2U8bi5sZW5ndGg7ZSsrKXtjb25zdCB0PW5bZV07X3YodCxyKT9vLnB1c2godCk6aT0hMH1pZihpJiZvLmxlbmd0aD4wKWlmKHQpe2NvbnN0IGU9b1swXTtkeChlKT9lLnNlbGVjdFN0YXJ0KCk6ZS5nZXRQYXJlbnRPclRocm93KCkuc2VsZWN0U3RhcnQoKX1lbHNle2NvbnN0IGU9b1tvLmxlbmd0aC0xXTtkeChlKT9lLnNlbGVjdEVuZCgpOmUuZ2V0UGFyZW50T3JUaHJvdygpLnNlbGVjdEVuZCgpfWwuYW5jaG9yTm9kZT09PWUuc3RhcnRDb250YWluZXImJmwuYW5jaG9yT2Zmc2V0PT09ZS5zdGFydE9mZnNldHx8ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmZvY3VzLG49ZS5hbmNob3Iscj1uLmtleSxvPW4ub2Zmc2V0LGk9bi50eXBlO2JiKG4sdC5rZXksdC5vZmZzZXQsdC50eXBlKSxiYih0LHIsbyxpKSxlLl9jYWNoZWROb2Rlcz1udWxsfSh0aGlzKX19fWZvcndhcmREZWxldGlvbihlLHQsbil7aWYoIW4mJihcImVsZW1lbnRcIj09PWUudHlwZSYmZHgodCkmJmUub2Zmc2V0PT09dC5nZXRDaGlsZHJlblNpemUoKXx8XCJ0ZXh0XCI9PT1lLnR5cGUmJmUub2Zmc2V0PT09dC5nZXRUZXh0Q29udGVudFNpemUoKSkpe2NvbnN0IGU9dC5nZXRQYXJlbnQoKSxuPXQuZ2V0TmV4dFNpYmxpbmcoKXx8KG51bGw9PT1lP251bGw6ZS5nZXROZXh0U2libGluZygpKTtpZihkeChuKSYmbi5pc1NoYWRvd1Jvb3QoKSlyZXR1cm4hMH1yZXR1cm4hMX1kZWxldGVDaGFyYWN0ZXIoZSl7Y29uc3QgdD10aGlzLmlzQ29sbGFwc2VkKCk7aWYodGhpcy5pc0NvbGxhcHNlZCgpKXtjb25zdCB0PXRoaXMuYW5jaG9yO2xldCBuPXQuZ2V0Tm9kZSgpO2lmKHRoaXMuZm9yd2FyZERlbGV0aW9uKHQsbixlKSlyZXR1cm47Y29uc3Qgcj10aGlzLmZvY3VzLG89eXYocixlKTtpZihweChvKSYmIW8uaXNJc29sYXRlZCgpKXtpZihvLmlzS2V5Ym9hcmRTZWxlY3RhYmxlKCkmJmR4KG4pJiYwPT09bi5nZXRDaGlsZHJlblNpemUoKSl7bi5yZW1vdmUoKTtjb25zdCBlPUFiKCk7ZS5hZGQoby5fX2tleSksUWcoZSl9ZWxzZSBvLnJlbW92ZSgpLFpiKCkuZGlzcGF0Y2hDb21tYW5kKFdwLHZvaWQgMCk7cmV0dXJufWlmKCFlJiZkeChvKSYmZHgobikmJm4uaXNFbXB0eSgpKXJldHVybiBuLnJlbW92ZSgpLHZvaWQgby5zZWxlY3RTdGFydCgpO2lmKHRoaXMubW9kaWZ5KFwiZXh0ZW5kXCIsZSxcImNoYXJhY3RlclwiKSx0aGlzLmlzQ29sbGFwc2VkKCkpe2lmKGUmJjA9PT10Lm9mZnNldCYmKFwiZWxlbWVudFwiPT09dC50eXBlP3QuZ2V0Tm9kZSgpOnQuZ2V0Tm9kZSgpLmdldFBhcmVudE9yVGhyb3coKSkuY29sbGFwc2VBdFN0YXJ0KHRoaXMpKXJldHVybn1lbHNle2NvbnN0IG89XCJ0ZXh0XCI9PT1yLnR5cGU/ci5nZXROb2RlKCk6bnVsbDtpZihuPVwidGV4dFwiPT09dC50eXBlP3QuZ2V0Tm9kZSgpOm51bGwsbnVsbCE9PW8mJm8uaXNTZWdtZW50ZWQoKSl7Y29uc3QgdD1yLm9mZnNldCxpPW8uZ2V0VGV4dENvbnRlbnRTaXplKCk7aWYoby5pcyhuKXx8ZSYmdCE9PWl8fCFlJiYwIT09dClyZXR1cm4gdm9pZCBDYihvLGUsdCl9ZWxzZSBpZihudWxsIT09biYmbi5pc1NlZ21lbnRlZCgpKXtjb25zdCByPXQub2Zmc2V0LGk9bi5nZXRUZXh0Q29udGVudFNpemUoKTtpZihuLmlzKG8pfHxlJiYwIT09cnx8IWUmJnIhPT1pKXJldHVybiB2b2lkIENiKG4sZSxyKX0hZnVuY3Rpb24oZSx0KXtjb25zdCBuPWUuYW5jaG9yLHI9ZS5mb2N1cyxvPW4uZ2V0Tm9kZSgpO2lmKG89PT1yLmdldE5vZGUoKSYmXCJ0ZXh0XCI9PT1uLnR5cGUmJlwidGV4dFwiPT09ci50eXBlKXtjb25zdCBlPW4ub2Zmc2V0LGk9ci5vZmZzZXQscz1lPGksYT1zP2U6aSxsPXM/aTplLGM9bC0xO2EhPT1jJiYobnYoby5nZXRUZXh0Q29udGVudCgpLnNsaWNlKGEsbCkpfHwodD9yLm9mZnNldD1jOm4ub2Zmc2V0PWMpKX19KHRoaXMsZSl9fWlmKHRoaXMucmVtb3ZlVGV4dCgpLGUmJiF0JiZ0aGlzLmlzQ29sbGFwc2VkKCkmJlwiZWxlbWVudFwiPT09dGhpcy5hbmNob3IudHlwZSYmMD09PXRoaXMuYW5jaG9yLm9mZnNldCl7Y29uc3QgZT10aGlzLmFuY2hvci5nZXROb2RlKCk7ZS5pc0VtcHR5KCkmJmd4KGUuZ2V0UGFyZW50KCkpJiYwPT09ZS5nZXRJbmRleFdpdGhpblBhcmVudCgpJiZlLmNvbGxhcHNlQXRTdGFydCh0aGlzKX19ZGVsZXRlTGluZShlKXtpZih0aGlzLmlzQ29sbGFwc2VkKCkpe2NvbnN0IHQ9XCJlbGVtZW50XCI9PT10aGlzLmFuY2hvci50eXBlO2lmKHQmJnRoaXMuaW5zZXJ0VGV4dChcIiBcIiksdGhpcy5tb2RpZnkoXCJleHRlbmRcIixlLFwibGluZWJvdW5kYXJ5XCIpLDA9PT0oZT90aGlzLmZvY3VzOnRoaXMuYW5jaG9yKS5vZmZzZXQmJnRoaXMubW9kaWZ5KFwiZXh0ZW5kXCIsZSxcImNoYXJhY3RlclwiKSx0KXtjb25zdCB0PWU/dGhpcy5hbmNob3I6dGhpcy5mb2N1czt0LnNldCh0LmtleSx0Lm9mZnNldCsxLHQudHlwZSl9fXRoaXMucmVtb3ZlVGV4dCgpfWRlbGV0ZVdvcmQoZSl7aWYodGhpcy5pc0NvbGxhcHNlZCgpKXtjb25zdCB0PXRoaXMuYW5jaG9yLG49dC5nZXROb2RlKCk7aWYodGhpcy5mb3J3YXJkRGVsZXRpb24odCxuLGUpKXJldHVybjt0aGlzLm1vZGlmeShcImV4dGVuZFwiLGUsXCJ3b3JkXCIpfXRoaXMucmVtb3ZlVGV4dCgpfWlzQmFja3dhcmQoKXtyZXR1cm4gdGhpcy5mb2N1cy5pc0JlZm9yZSh0aGlzLmFuY2hvcil9Z2V0U3RhcnRFbmRQb2ludHMoKXtyZXR1cm5bdGhpcy5hbmNob3IsdGhpcy5mb2N1c119fWZ1bmN0aW9uIFNiKGUpe3JldHVybiBlIGluc3RhbmNlb2YgeGJ9ZnVuY3Rpb24gX2IoZSl7Y29uc3QgdD1lLm9mZnNldDtpZihcInRleHRcIj09PWUudHlwZSlyZXR1cm4gdDtjb25zdCBuPWUuZ2V0Tm9kZSgpO3JldHVybiB0PT09bi5nZXRDaGlsZHJlblNpemUoKT9uLmdldFRleHRDb250ZW50KCkubGVuZ3RoOjB9ZnVuY3Rpb24ga2IoZSl7Y29uc3QgdD1lLmdldFN0YXJ0RW5kUG9pbnRzKCk7aWYobnVsbD09PXQpcmV0dXJuWzAsMF07Y29uc3RbbixyXT10O3JldHVyblwiZWxlbWVudFwiPT09bi50eXBlJiZcImVsZW1lbnRcIj09PXIudHlwZSYmbi5rZXk9PT1yLmtleSYmbi5vZmZzZXQ9PT1yLm9mZnNldD9bMCwwXTpbX2IobiksX2IocildfWZ1bmN0aW9uIENiKGUsdCxuKXtjb25zdCByPWUsbz1yLmdldFRleHRDb250ZW50KCkuc3BsaXQoLyg/PVxccykvZyksaT1vLmxlbmd0aDtsZXQgcz0wLGE9MDtmb3IobGV0IGU9MDtlPGk7ZSsrKXtjb25zdCByPWU9PT1pLTE7aWYoYT1zLHMrPW9bZV0ubGVuZ3RoLHQmJnM9PT1ufHxzPm58fHIpe28uc3BsaWNlKGUsMSksciYmKGE9dm9pZCAwKTticmVha319Y29uc3QgbD1vLmpvaW4oXCJcIikudHJpbSgpO1wiXCI9PT1sP3IucmVtb3ZlKCk6KHIuc2V0VGV4dENvbnRlbnQobCksci5zZWxlY3QoYSxhKSl9ZnVuY3Rpb24gUGIoZSx0LG4scil7bGV0IG8saT10O2lmKGUubm9kZVR5cGU9PT16bSl7bGV0IHM9ITE7Y29uc3QgYT1lLmNoaWxkTm9kZXMsbD1hLmxlbmd0aCxjPXIuX2Jsb2NrQ3Vyc29yRWxlbWVudDtpPT09bCYmKHM9ITAsaT1sLTEpO2xldCB1PWFbaV0sZD0hMTtpZih1PT09Yyl1PWFbaSsxXSxkPSEwO2Vsc2UgaWYobnVsbCE9PWMpe2NvbnN0IG49Yy5wYXJlbnROb2RlO2U9PT1uJiZ0PkFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwobi5jaGlsZHJlbixjKSYmaS0tfWlmKG89ZXYodSksZGIobykpaT10dihvLHMpO2Vsc2V7bGV0IHI9ZXYoZSk7aWYobnVsbD09PXIpcmV0dXJuIG51bGw7aWYoZHgocikpe2k9TWF0aC5taW4oci5nZXRDaGlsZHJlblNpemUoKSxpKTtsZXQgZT1yLmdldENoaWxkQXRJbmRleChpKTtpZihkeChlKSYmZnVuY3Rpb24oZSx0LG4pe2NvbnN0IHI9ZS5nZXRQYXJlbnQoKTtyZXR1cm4gbnVsbD09PW58fG51bGw9PT1yfHwhci5jYW5CZUVtcHR5KCl8fHIhPT1uLmdldE5vZGUoKX0oZSwwLG4pKXtjb25zdCB0PXM/ZS5nZXRMYXN0RGVzY2VuZGFudCgpOmUuZ2V0Rmlyc3REZXNjZW5kYW50KCk7bnVsbD09PXQ/cj1lOihlPXQscj1keChlKT9lOmUuZ2V0UGFyZW50T3JUaHJvdygpKSxpPTB9ZGIoZSk/KG89ZSxyPW51bGwsaT10dihlLHMpKTplIT09ciYmcyYmIWQmJmkrK31lbHNle2NvbnN0IG49ci5nZXRJbmRleFdpdGhpblBhcmVudCgpO2k9MD09PXQmJnB4KHIpJiZldihlKT09PXI/bjpuKzEscj1yLmdldFBhcmVudE9yVGhyb3coKX1pZihkeChyKSlyZXR1cm4gZ2Ioci5fX2tleSxpLFwiZWxlbWVudFwiKX19ZWxzZSBvPWV2KGUpO3JldHVybiBkYihvKT9nYihvLl9fa2V5LGksXCJ0ZXh0XCIpOm51bGx9ZnVuY3Rpb24gVGIoZSx0LG4pe2NvbnN0IHI9ZS5vZmZzZXQsbz1lLmdldE5vZGUoKTtpZigwPT09cil7Y29uc3Qgcj1vLmdldFByZXZpb3VzU2libGluZygpLGk9by5nZXRQYXJlbnQoKTtpZih0KXtpZigobnx8IXQpJiZudWxsPT09ciYmZHgoaSkmJmkuaXNJbmxpbmUoKSl7Y29uc3QgdD1pLmdldFByZXZpb3VzU2libGluZygpO2RiKHQpJiYoZS5rZXk9dC5fX2tleSxlLm9mZnNldD10LmdldFRleHRDb250ZW50KCkubGVuZ3RoKX19ZWxzZSBkeChyKSYmIW4mJnIuaXNJbmxpbmUoKT8oZS5rZXk9ci5fX2tleSxlLm9mZnNldD1yLmdldENoaWxkcmVuU2l6ZSgpLGUudHlwZT1cImVsZW1lbnRcIik6ZGIocikmJihlLmtleT1yLl9fa2V5LGUub2Zmc2V0PXIuZ2V0VGV4dENvbnRlbnQoKS5sZW5ndGgpfWVsc2UgaWYocj09PW8uZ2V0VGV4dENvbnRlbnQoKS5sZW5ndGgpe2NvbnN0IHI9by5nZXROZXh0U2libGluZygpLGk9by5nZXRQYXJlbnQoKTtpZih0JiZkeChyKSYmci5pc0lubGluZSgpKWUua2V5PXIuX19rZXksZS5vZmZzZXQ9MCxlLnR5cGU9XCJlbGVtZW50XCI7ZWxzZSBpZigobnx8dCkmJm51bGw9PT1yJiZkeChpKSYmaS5pc0lubGluZSgpJiYhaS5jYW5JbnNlcnRUZXh0QWZ0ZXIoKSl7Y29uc3QgdD1pLmdldE5leHRTaWJsaW5nKCk7ZGIodCkmJihlLmtleT10Ll9fa2V5LGUub2Zmc2V0PTApfX19ZnVuY3Rpb24gT2IoZSx0LG4pe2lmKFwidGV4dFwiPT09ZS50eXBlJiZcInRleHRcIj09PXQudHlwZSl7Y29uc3Qgcj1lLmlzQmVmb3JlKHQpLG89ZS5pcyh0KTtUYihlLHIsbyksVGIodCwhcixvKSxvJiYodC5rZXk9ZS5rZXksdC5vZmZzZXQ9ZS5vZmZzZXQsdC50eXBlPWUudHlwZSk7Y29uc3QgaT1aYigpO2lmKGkuaXNDb21wb3NpbmcoKSYmaS5fY29tcG9zaXRpb25LZXkhPT1lLmtleSYmd2Iobikpe2NvbnN0IHI9bi5hbmNob3Isbz1uLmZvY3VzO2JiKGUsci5rZXksci5vZmZzZXQsci50eXBlKSxiYih0LG8ua2V5LG8ub2Zmc2V0LG8udHlwZSl9fX1mdW5jdGlvbiBSYihlLHQsbixyLG8saSl7aWYobnVsbD09PWV8fG51bGw9PT1ufHwhTWcobyxlLG4pKXJldHVybiBudWxsO2NvbnN0IHM9UGIoZSx0LHdiKGkpP2kuYW5jaG9yOm51bGwsbyk7aWYobnVsbD09PXMpcmV0dXJuIG51bGw7Y29uc3QgYT1QYihuLHIsd2IoaSk/aS5mb2N1czpudWxsLG8pO2lmKG51bGw9PT1hKXJldHVybiBudWxsO2lmKFwiZWxlbWVudFwiPT09cy50eXBlJiZcImVsZW1lbnRcIj09PWEudHlwZSl7Y29uc3QgdD1ldihlKSxyPWV2KG4pO2lmKHB4KHQpJiZweChyKSlyZXR1cm4gbnVsbH1yZXR1cm4gT2IocyxhLGkpLFtzLGFdfWZ1bmN0aW9uIE5iKGUsdCxuLHIsbyxpKXtjb25zdCBzPUpiKCksYT1uZXcgRWIoZ2IoZSx0LG8pLGdiKG4scixpKSwwLFwiXCIpO3JldHVybiBhLmRpcnR5PSEwLHMuX3NlbGVjdGlvbj1hLGF9ZnVuY3Rpb24gQWIoKXtyZXR1cm4gbmV3IHhiKG5ldyBTZXQpfWZ1bmN0aW9uIGpiKGUsdCxuLHIpe2NvbnN0IG89bi5fd2luZG93O2lmKG51bGw9PT1vKXJldHVybiBudWxsO2NvbnN0IGk9cnx8by5ldmVudCxzPWk/aS50eXBlOnZvaWQgMCxhPVwic2VsZWN0aW9uY2hhbmdlXCI9PT1zLGw9IXlnJiYoYXx8XCJiZWZvcmVpbnB1dFwiPT09c3x8XCJjb21wb3NpdGlvbnN0YXJ0XCI9PT1zfHxcImNvbXBvc2l0aW9uZW5kXCI9PT1zfHxcImNsaWNrXCI9PT1zJiZpJiYzPT09aS5kZXRhaWx8fFwiZHJvcFwiPT09c3x8dm9pZCAwPT09cyk7bGV0IGMsdSxkLGY7aWYod2IoZSkmJiFsKXJldHVybiBlLmNsb25lKCk7aWYobnVsbD09PXQpcmV0dXJuIG51bGw7aWYoYz10LmFuY2hvck5vZGUsdT10LmZvY3VzTm9kZSxkPXQuYW5jaG9yT2Zmc2V0LGY9dC5mb2N1c09mZnNldCxhJiZ3YihlKSYmIU1nKG4sYyx1KSlyZXR1cm4gZS5jbG9uZSgpO2NvbnN0IGg9UmIoYyxkLHUsZixuLGUpO2lmKG51bGw9PT1oKXJldHVybiBudWxsO2NvbnN0W3AsbV09aDtyZXR1cm4gbmV3IEViKHAsbSx3YihlKT9lLmZvcm1hdDowLHdiKGUpP2Uuc3R5bGU6XCJcIil9ZnVuY3Rpb24gTWIoKXtyZXR1cm4gSmIoKS5fc2VsZWN0aW9ufWZ1bmN0aW9uIEliKCl7cmV0dXJuIFpiKCkuX2VkaXRvclN0YXRlLl9zZWxlY3Rpb259ZnVuY3Rpb24gRGIoZSx0LG4scj0xKXtjb25zdCBvPWUuYW5jaG9yLGk9ZS5mb2N1cyxzPW8uZ2V0Tm9kZSgpLGE9aS5nZXROb2RlKCk7aWYoIXQuaXMocykmJiF0LmlzKGEpKXJldHVybjtjb25zdCBsPXQuX19rZXk7aWYoZS5pc0NvbGxhcHNlZCgpKXtjb25zdCB0PW8ub2Zmc2V0O2lmKG48PXQmJnI+MHx8bjx0JiZyPDApe2NvbnN0IG49TWF0aC5tYXgoMCx0K3IpO28uc2V0KGwsbixcImVsZW1lbnRcIiksaS5zZXQobCxuLFwiZWxlbWVudFwiKSxMYihlKX19ZWxzZXtjb25zdCBzPWUuaXNCYWNrd2FyZCgpLGE9cz9pOm8sYz1hLmdldE5vZGUoKSx1PXM/bzppLGQ9dS5nZXROb2RlKCk7aWYodC5pcyhjKSl7Y29uc3QgZT1hLm9mZnNldDsobjw9ZSYmcj4wfHxuPGUmJnI8MCkmJmEuc2V0KGwsTWF0aC5tYXgoMCxlK3IpLFwiZWxlbWVudFwiKX1pZih0LmlzKGQpKXtjb25zdCBlPXUub2Zmc2V0OyhuPD1lJiZyPjB8fG48ZSYmcjwwKSYmdS5zZXQobCxNYXRoLm1heCgwLGUrciksXCJlbGVtZW50XCIpfX1MYihlKX1mdW5jdGlvbiBMYihlKXtjb25zdCB0PWUuYW5jaG9yLG49dC5vZmZzZXQscj1lLmZvY3VzLG89ci5vZmZzZXQsaT10LmdldE5vZGUoKSxzPXIuZ2V0Tm9kZSgpO2lmKGUuaXNDb2xsYXBzZWQoKSl7aWYoIWR4KGkpKXJldHVybjtjb25zdCBlPWkuZ2V0Q2hpbGRyZW5TaXplKCksbz1uPj1lLHM9bz9pLmdldENoaWxkQXRJbmRleChlLTEpOmkuZ2V0Q2hpbGRBdEluZGV4KG4pO2lmKGRiKHMpKXtsZXQgZT0wO28mJihlPXMuZ2V0VGV4dENvbnRlbnRTaXplKCkpLHQuc2V0KHMuX19rZXksZSxcInRleHRcIiksci5zZXQocy5fX2tleSxlLFwidGV4dFwiKX19ZWxzZXtpZihkeChpKSl7Y29uc3QgZT1pLmdldENoaWxkcmVuU2l6ZSgpLHI9bj49ZSxvPXI/aS5nZXRDaGlsZEF0SW5kZXgoZS0xKTppLmdldENoaWxkQXRJbmRleChuKTtpZihkYihvKSl7bGV0IGU9MDtyJiYoZT1vLmdldFRleHRDb250ZW50U2l6ZSgpKSx0LnNldChvLl9fa2V5LGUsXCJ0ZXh0XCIpfX1pZihkeChzKSl7Y29uc3QgZT1zLmdldENoaWxkcmVuU2l6ZSgpLHQ9bz49ZSxuPXQ/cy5nZXRDaGlsZEF0SW5kZXgoZS0xKTpzLmdldENoaWxkQXRJbmRleChvKTtpZihkYihuKSl7bGV0IGU9MDt0JiYoZT1uLmdldFRleHRDb250ZW50U2l6ZSgpKSxyLnNldChuLl9fa2V5LGUsXCJ0ZXh0XCIpfX19fWZ1bmN0aW9uIEZiKGUsdCxuLHIsbyl7bGV0IGk9bnVsbCxzPTAsYT1udWxsO251bGwhPT1yPyhpPXIuX19rZXksZGIocik/KHM9ci5nZXRUZXh0Q29udGVudFNpemUoKSxhPVwidGV4dFwiKTpkeChyKSYmKHM9ci5nZXRDaGlsZHJlblNpemUoKSxhPVwiZWxlbWVudFwiKSk6bnVsbCE9PW8mJihpPW8uX19rZXksZGIobyk/YT1cInRleHRcIjpkeChvKSYmKGE9XCJlbGVtZW50XCIpKSxudWxsIT09aSYmbnVsbCE9PWE/ZS5zZXQoaSxzLGEpOihzPXQuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKSwtMT09PXMmJihzPW4uZ2V0Q2hpbGRyZW5TaXplKCkpLGUuc2V0KG4uX19rZXkscyxcImVsZW1lbnRcIikpfWZ1bmN0aW9uIHpiKGUsdCxuLHIsbyl7XCJ0ZXh0XCI9PT1lLnR5cGU/KGUua2V5PW4sdHx8KGUub2Zmc2V0Kz1vKSk6ZS5vZmZzZXQ+ci5nZXRJbmRleFdpdGhpblBhcmVudCgpJiYoZS5vZmZzZXQtPTEpfWZ1bmN0aW9uIEJiKGUpe2xldCB0PWU7ZS5pc0NvbGxhcHNlZCgpfHx0LnJlbW92ZVRleHQoKTtjb25zdCBuPU1iKCk7d2IobikmJih0PW4pLHdiKHQpfHxtZygxNjEpO2NvbnN0IHI9dC5hbmNob3I7bGV0IG89ci5nZXROb2RlKCksaT1yLm9mZnNldDtmb3IoOyFNdihvKTspW28saV09VmIobyxpKTtyZXR1cm4gaX1mdW5jdGlvbiBWYihlLHQpe2NvbnN0IG49ZS5nZXRQYXJlbnQoKTtpZighbil7Y29uc3QgZT1TeCgpO3JldHVybiBKZygpLmFwcGVuZChlKSxlLnNlbGVjdCgpLFtKZygpLDBdfWlmKGRiKGUpKXtjb25zdCByPWUuc3BsaXRUZXh0KHQpO2lmKDA9PT1yLmxlbmd0aClyZXR1cm5bbixlLmdldEluZGV4V2l0aGluUGFyZW50KCldO2NvbnN0IG89MD09PXQ/MDoxO3JldHVybltuLHJbMF0uZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKStvXX1pZighZHgoZSl8fDA9PT10KXJldHVybltuLGUuZ2V0SW5kZXhXaXRoaW5QYXJlbnQoKV07Y29uc3Qgcj1lLmdldENoaWxkQXRJbmRleCh0KTtpZihyKXtjb25zdCBuPW5ldyBFYihnYihlLl9fa2V5LHQsXCJlbGVtZW50XCIpLGdiKGUuX19rZXksdCxcImVsZW1lbnRcIiksMCxcIlwiKSxvPWUuaW5zZXJ0TmV3QWZ0ZXIobik7byYmby5hcHBlbmQociwuLi5yLmdldE5leHRTaWJsaW5ncygpKX1yZXR1cm5bbixlLmdldEluZGV4V2l0aGluUGFyZW50KCkrMV19bGV0IFdiPW51bGwsVWI9bnVsbCwkYj0hMSxLYj0hMSxIYj0wO2NvbnN0IHFiPXtjaGFyYWN0ZXJEYXRhOiEwLGNoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfTtmdW5jdGlvbiBZYigpe3JldHVybiAkYnx8bnVsbCE9PVdiJiZXYi5fcmVhZE9ubHl9ZnVuY3Rpb24gR2IoKXskYiYmbWcoMTMpfWZ1bmN0aW9uIFhiKCl7SGI+OTkmJm1nKDE0KX1mdW5jdGlvbiBKYigpe3JldHVybiBudWxsPT09V2ImJm1nKDE5NSxRYigpKSxXYn1mdW5jdGlvbiBaYigpe3JldHVybiBudWxsPT09VWImJm1nKDE5NixRYigpKSxVYn1mdW5jdGlvbiBRYigpe2xldCBlPTA7Y29uc3QgdD1uZXcgU2V0LG49VHgudmVyc2lvbjtpZihcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93KWZvcihjb25zdCByIG9mIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbY29udGVudGVkaXRhYmxlXVwiKSl7Y29uc3Qgbz1MZyhyKTtpZihJZyhvKSllKys7ZWxzZSBpZihvKXtsZXQgZT1TdHJpbmcoby5jb25zdHJ1Y3Rvci52ZXJzaW9ufHxcIjwwLjE3LjFcIik7ZT09PW4mJihlKz1cIiAoc2VwYXJhdGVseSBidWlsdCwgbGlrZWx5IGEgYnVuZGxlciBjb25maWd1cmF0aW9uIGlzc3VlKVwiKSx0LmFkZChlKX19bGV0IHI9YCBEZXRlY3RlZCBvbiB0aGUgcGFnZTogJHtlfSBjb21wYXRpYmxlIGVkaXRvcihzKSB3aXRoIHZlcnNpb24gJHtufWA7cmV0dXJuIHQuc2l6ZSYmKHIrPWAgYW5kIGluY29tcGF0aWJsZSBlZGl0b3JzIHdpdGggdmVyc2lvbnMgJHtBcnJheS5mcm9tKHQpLmpvaW4oXCIsIFwiKX1gKSxyfWZ1bmN0aW9uIGV4KGUsdCxuKXtjb25zdCByPXQuX190eXBlLG89ZnVuY3Rpb24oZSx0KXtjb25zdCBuPWUuX25vZGVzLmdldCh0KTtyZXR1cm4gdm9pZCAwPT09biYmbWcoMzAsdCksbn0oZSxyKTtsZXQgaT1uLmdldChyKTt2b2lkIDA9PT1pJiYoaT1BcnJheS5mcm9tKG8udHJhbnNmb3Jtcyksbi5zZXQocixpKSk7Y29uc3Qgcz1pLmxlbmd0aDtmb3IobGV0IGU9MDtlPHMmJihpW2VdKHQpLHQuaXNBdHRhY2hlZCgpKTtlKyspO31mdW5jdGlvbiB0eChlLHQpe3JldHVybiB2b2lkIDAhPT1lJiZlLl9fa2V5IT09dCYmZS5pc0F0dGFjaGVkKCl9ZnVuY3Rpb24gbngoZSx0KXtjb25zdCBuPWUudHlwZSxyPXQuZ2V0KG4pO3ZvaWQgMD09PXImJm1nKDE3LG4pO2NvbnN0IG89ci5rbGFzcztlLnR5cGUhPT1vLmdldFR5cGUoKSYmbWcoMTgsby5uYW1lKTtjb25zdCBpPW8uaW1wb3J0SlNPTihlKSxzPWUuY2hpbGRyZW47aWYoZHgoaSkmJkFycmF5LmlzQXJyYXkocykpZm9yKGxldCBlPTA7ZTxzLmxlbmd0aDtlKyspe2NvbnN0IG49bngoc1tlXSx0KTtpLmFwcGVuZChuKX1yZXR1cm4gaX1mdW5jdGlvbiByeChlLHQsbil7Y29uc3Qgcj1XYixvPSRiLGk9VWI7V2I9dCwkYj0hMCxVYj1lO3RyeXtyZXR1cm4gbigpfWZpbmFsbHl7V2I9ciwkYj1vLFViPWl9fWZ1bmN0aW9uIG94KGUsdCl7Y29uc3Qgbj1lLl9wZW5kaW5nRWRpdG9yU3RhdGUscj1lLl9yb290RWxlbWVudCxvPWUuX2hlYWRsZXNzfHxudWxsPT09cjtpZihudWxsPT09bilyZXR1cm47Y29uc3QgaT1lLl9lZGl0b3JTdGF0ZSxzPWkuX3NlbGVjdGlvbixhPW4uX3NlbGVjdGlvbixsPWUuX2RpcnR5VHlwZSE9PVZtLGM9V2IsdT0kYixkPVViLGY9ZS5fdXBkYXRpbmcsaD1lLl9vYnNlcnZlcjtsZXQgcD1udWxsO2lmKGUuX3BlbmRpbmdFZGl0b3JTdGF0ZT1udWxsLGUuX2VkaXRvclN0YXRlPW4sIW8mJmwmJm51bGwhPT1oKXtVYj1lLFdiPW4sJGI9ITEsZS5fdXBkYXRpbmc9ITA7dHJ5e2NvbnN0IHQ9ZS5fZGlydHlUeXBlLHI9ZS5fZGlydHlFbGVtZW50cyxvPWUuX2RpcnR5TGVhdmVzO2guZGlzY29ubmVjdCgpLHA9ZnVuY3Rpb24oZSx0LG4scixvLGkpe1h2PVwiXCIsZXk9XCJcIixKdj1cIlwiLHR5PXI9PT1XbSxyeT1udWxsLFZ2PW4sQnY9bi5fY29uZmlnLFd2PW4uX25vZGVzLFV2PVZ2Ll9saXN0ZW5lcnMubXV0YXRpb24sJHY9byxLdj1pLEh2PWUuX25vZGVNYXAscXY9dC5fbm9kZU1hcCxueT10Ll9yZWFkT25seSxZdj1uZXcgTWFwKG4uX2tleVRvRE9NTWFwKTtjb25zdCBzPW5ldyBNYXA7cmV0dXJuIEd2PXMsZ3koXCJyb290XCIsbnVsbCksVnY9dm9pZCAwLFd2PXZvaWQgMCwkdj12b2lkIDAsS3Y9dm9pZCAwLEh2PXZvaWQgMCxxdj12b2lkIDAsQnY9dm9pZCAwLFl2PXZvaWQgMCxHdj12b2lkIDAsc30oaSxuLGUsdCxyLG8pfWNhdGNoKHQpe2lmKHQgaW5zdGFuY2VvZiBFcnJvciYmZS5fb25FcnJvcih0KSxLYil0aHJvdyB0O3JldHVybiBQeChlLG51bGwscixuKSxDZyhlKSxlLl9kaXJ0eVR5cGU9V20sS2I9ITAsb3goZSxpKSx2b2lkKEtiPSExKX1maW5hbGx5e2gub2JzZXJ2ZShyLHFiKSxlLl91cGRhdGluZz1mLFdiPWMsJGI9dSxVYj1kfX1uLl9yZWFkT25seXx8KG4uX3JlYWRPbmx5PSEwKTtjb25zdCBtPWUuX2RpcnR5TGVhdmVzLGc9ZS5fZGlydHlFbGVtZW50cyx2PWUuX25vcm1hbGl6ZWROb2Rlcyx5PWUuX3VwZGF0ZVRhZ3MsYj1lLl9kZWZlcnJlZDtsJiYoZS5fZGlydHlUeXBlPVZtLGUuX2Nsb25lTm90TmVlZGVkLmNsZWFyKCksZS5fZGlydHlMZWF2ZXM9bmV3IFNldCxlLl9kaXJ0eUVsZW1lbnRzPW5ldyBNYXAsZS5fbm9ybWFsaXplZE5vZGVzPW5ldyBTZXQsZS5fdXBkYXRlVGFncz1uZXcgU2V0KSxmdW5jdGlvbihlLHQpe2NvbnN0IG49ZS5fZGVjb3JhdG9ycztsZXQgcj1lLl9wZW5kaW5nRGVjb3JhdG9yc3x8bjtjb25zdCBvPXQuX25vZGVNYXA7bGV0IGk7Zm9yKGkgaW4gcilvLmhhcyhpKXx8KHI9PT1uJiYocj1HZyhlKSksZGVsZXRlIHJbaV0pfShlLG4pO2NvbnN0IHg9bz9udWxsOlJ2KGUuX3dpbmRvdyk7aWYoZS5fZWRpdGFibGUmJm51bGwhPT14JiYobHx8bnVsbD09PWF8fGEuZGlydHkpKXtVYj1lLFdiPW47dHJ5e2lmKG51bGwhPT1oJiZoLmRpc2Nvbm5lY3QoKSxsfHxudWxsPT09YXx8YS5kaXJ0eSl7Y29uc3QgdD1lLl9ibG9ja0N1cnNvckVsZW1lbnQ7bnVsbCE9PXQmJl9uKHQsZSxyKSxmdW5jdGlvbihlLHQsbixyLG8saSl7Y29uc3Qgcz1yLmFuY2hvck5vZGUsYT1yLmZvY3VzTm9kZSxsPXIuYW5jaG9yT2Zmc2V0LGM9ci5mb2N1c09mZnNldCx1PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7aWYoby5oYXMoXCJjb2xsYWJvcmF0aW9uXCIpJiZ1IT09aXx8bnVsbCE9PXUmJmpnKHUpKXJldHVybjtpZighd2IodCkpcmV0dXJuIHZvaWQobnVsbCE9PWUmJk1nKG4scyxhKSYmci5yZW1vdmVBbGxSYW5nZXMoKSk7Y29uc3QgZD10LmFuY2hvcixmPXQuZm9jdXMsaD1kLmtleSxwPWYua2V5LG09RXYobixoKSxnPUV2KG4scCksdj1kLm9mZnNldCx5PWYub2Zmc2V0LGI9dC5mb3JtYXQseD10LnN0eWxlLHc9dC5pc0NvbGxhcHNlZCgpO2xldCBFPW0sUz1nLF89ITE7aWYoXCJ0ZXh0XCI9PT1kLnR5cGUpe0U9QmcobSk7Y29uc3QgZT1kLmdldE5vZGUoKTtfPWUuZ2V0Rm9ybWF0KCkhPT1ifHxlLmdldFN0eWxlKCkhPT14fWVsc2Ugd2IoZSkmJlwidGV4dFwiPT09ZS5hbmNob3IudHlwZSYmKF89ITApO3ZhciBrLEMsUCxULE87aWYoXCJ0ZXh0XCI9PT1mLnR5cGUmJihTPUJnKGcpKSxudWxsIT09RSYmbnVsbCE9PVMmJih3JiYobnVsbD09PWV8fF98fHdiKGUpJiYoZS5mb3JtYXQhPT1ifHxlLnN0eWxlIT09eCkpJiYoaz1iLEM9eCxQPXYsVD1oLE89cGVyZm9ybWFuY2Uubm93KCksTnk9W2ssQyxQLFQsT10pLGwhPT12fHxjIT09eXx8cyE9PUV8fGEhPT1TfHxcIlJhbmdlXCI9PT1yLnR5cGUmJnd8fChudWxsIT09dSYmaS5jb250YWlucyh1KXx8aS5mb2N1cyh7cHJldmVudFNjcm9sbDohMH0pLFwiZWxlbWVudFwiPT09ZC50eXBlKSkpe3RyeXtyLnNldEJhc2VBbmRFeHRlbnQoRSx2LFMseSl9Y2F0Y2goZSl7fWlmKCFvLmhhcyhcInNraXAtc2Nyb2xsLWludG8tdmlld1wiKSYmdC5pc0NvbGxhcHNlZCgpJiZudWxsIT09aSYmaT09PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpe2NvbnN0IGU9dCBpbnN0YW5jZW9mIEViJiZcImVsZW1lbnRcIj09PXQuYW5jaG9yLnR5cGU/RS5jaGlsZE5vZGVzW3ZdfHxudWxsOnIucmFuZ2VDb3VudD4wP3IuZ2V0UmFuZ2VBdCgwKTpudWxsO2lmKG51bGwhPT1lKXtsZXQgdDtpZihlIGluc3RhbmNlb2YgVGV4dCl7Y29uc3Qgbj1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO24uc2VsZWN0Tm9kZShlKSx0PW4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCl9ZWxzZSB0PWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7IWZ1bmN0aW9uKGUsdCxuKXtjb25zdCByPW4ub3duZXJEb2N1bWVudCxvPXIuZGVmYXVsdFZpZXc7aWYobnVsbD09PW8pcmV0dXJuO2xldHt0b3A6aSxib3R0b206c309dCxhPTAsbD0wLGM9bjtmb3IoO251bGwhPT1jOyl7Y29uc3QgdD1jPT09ci5ib2R5O2lmKHQpYT0wLGw9a3YoZSkuaW5uZXJIZWlnaHQ7ZWxzZXtjb25zdCBlPWMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7YT1lLnRvcCxsPWUuYm90dG9tfWxldCBuPTA7aWYoaTxhP249LShhLWkpOnM+bCYmKG49cy1sKSwwIT09bilpZih0KW8uc2Nyb2xsQnkoMCxuKTtlbHNle2NvbnN0IGU9Yy5zY3JvbGxUb3A7Yy5zY3JvbGxUb3ArPW47Y29uc3QgdD1jLnNjcm9sbFRvcC1lO2ktPXQscy09dH1pZih0KWJyZWFrO2M9U3YoYyl9fShuLHQsaSl9fVB5PSEwfX0ocyxhLGUseCx5LHIpfShmdW5jdGlvbihlLHQsbil7bGV0IHI9ZS5fYmxvY2tDdXJzb3JFbGVtZW50O2lmKHdiKG4pJiZuLmlzQ29sbGFwc2VkKCkmJlwiZWxlbWVudFwiPT09bi5hbmNob3IudHlwZSYmdC5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSl7Y29uc3Qgbz1uLmFuY2hvcixpPW8uZ2V0Tm9kZSgpLHM9by5vZmZzZXQ7bGV0IGE9ITEsbD1udWxsO2lmKHM9PT1pLmdldENoaWxkcmVuU2l6ZSgpKU92KGkuZ2V0Q2hpbGRBdEluZGV4KHMtMSkpJiYoYT0hMCk7ZWxzZXtjb25zdCB0PWkuZ2V0Q2hpbGRBdEluZGV4KHMpO2lmKE92KHQpKXtjb25zdCBuPXQuZ2V0UHJldmlvdXNTaWJsaW5nKCk7KG51bGw9PT1ufHxPdihuKSkmJihhPSEwLGw9ZS5nZXRFbGVtZW50QnlLZXkodC5fX2tleSkpfX1pZihhKXtjb25zdCBuPWUuZ2V0RWxlbWVudEJ5S2V5KGkuX19rZXkpO3JldHVybiBudWxsPT09ciYmKGUuX2Jsb2NrQ3Vyc29yRWxlbWVudD1yPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS50aGVtZSxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bi5jb250ZW50RWRpdGFibGU9XCJmYWxzZVwiLG4uc2V0QXR0cmlidXRlKFwiZGF0YS1sZXhpY2FsLWN1cnNvclwiLFwidHJ1ZVwiKTtsZXQgcj10LmJsb2NrQ3Vyc29yO2lmKHZvaWQgMCE9PXIpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiByKXtjb25zdCBlPWdnKHIpO3I9dC5ibG9ja0N1cnNvcj1lfXZvaWQgMCE9PXImJm4uY2xhc3NMaXN0LmFkZCguLi5yKX1yZXR1cm4gbn0oZS5fY29uZmlnKSksdC5zdHlsZS5jYXJldENvbG9yPVwidHJhbnNwYXJlbnRcIix2b2lkKG51bGw9PT1sP24uYXBwZW5kQ2hpbGQocik6bi5pbnNlcnRCZWZvcmUocixsKSl9fW51bGwhPT1yJiZfbihyLGUsdCl9KShlLHIsYSksbnVsbCE9PWgmJmgub2JzZXJ2ZShyLHFiKX1maW5hbGx5e1ViPWQsV2I9Y319bnVsbCE9PXAmJmZ1bmN0aW9uKGUsdCxuLHIsbyl7Y29uc3QgaT1BcnJheS5mcm9tKGUuX2xpc3RlbmVycy5tdXRhdGlvbikscz1pLmxlbmd0aDtmb3IobGV0IGU9MDtlPHM7ZSsrKXtjb25zdFtzLGFdPWlbZV0sbD10LmdldChhKTt2b2lkIDAhPT1sJiZzKGwse2RpcnR5TGVhdmVzOnIscHJldkVkaXRvclN0YXRlOm8sdXBkYXRlVGFnczpufSl9fShlLHAseSxtLGkpLHdiKGEpfHxudWxsPT09YXx8bnVsbCE9PXMmJnMuaXMoYSl8fGUuZGlzcGF0Y2hDb21tYW5kKFdwLHZvaWQgMCk7Y29uc3Qgdz1lLl9wZW5kaW5nRGVjb3JhdG9ycztudWxsIT09dyYmKGUuX2RlY29yYXRvcnM9dyxlLl9wZW5kaW5nRGVjb3JhdG9ycz1udWxsLGl4KFwiZGVjb3JhdG9yXCIsZSwhMCx3KSksZnVuY3Rpb24oZSx0LG4pe2NvbnN0IHI9WGcodCksbz1YZyhuKTtyIT09byYmaXgoXCJ0ZXh0Y29udGVudFwiLGUsITAsbyl9KGUsdHx8aSxuKSxpeChcInVwZGF0ZVwiLGUsITAse2RpcnR5RWxlbWVudHM6ZyxkaXJ0eUxlYXZlczptLGVkaXRvclN0YXRlOm4sbm9ybWFsaXplZE5vZGVzOnYscHJldkVkaXRvclN0YXRlOnR8fGksdGFnczp5fSksZnVuY3Rpb24oZSx0KXtpZihlLl9kZWZlcnJlZD1bXSwwIT09dC5sZW5ndGgpe2NvbnN0IG49ZS5fdXBkYXRpbmc7ZS5fdXBkYXRpbmc9ITA7dHJ5e2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV0oKX1maW5hbGx5e2UuX3VwZGF0aW5nPW59fX0oZSxiKSxmdW5jdGlvbihlKXtjb25zdCB0PWUuX3VwZGF0ZXM7aWYoMCE9PXQubGVuZ3RoKXtjb25zdCBuPXQuc2hpZnQoKTtpZihuKXtjb25zdFt0LHJdPW47bHgoZSx0LHIpfX19KGUpfWZ1bmN0aW9uIGl4KGUsdCxuLC4uLnIpe2NvbnN0IG89dC5fdXBkYXRpbmc7dC5fdXBkYXRpbmc9bjt0cnl7Y29uc3Qgbj1BcnJheS5mcm9tKHQuX2xpc3RlbmVyc1tlXSk7Zm9yKGxldCBlPTA7ZTxuLmxlbmd0aDtlKyspbltlXS5hcHBseShudWxsLHIpfWZpbmFsbHl7dC5fdXBkYXRpbmc9b319ZnVuY3Rpb24gc3goZSx0LG4pe2lmKCExPT09ZS5fdXBkYXRpbmd8fFViIT09ZSl7bGV0IHI9ITE7cmV0dXJuIGUudXBkYXRlKCgoKT0+e3I9c3goZSx0LG4pfSkpLHJ9Y29uc3Qgcj1ydihlKTtmb3IobGV0IG89NDtvPj0wO28tLSlmb3IobGV0IGk9MDtpPHIubGVuZ3RoO2krKyl7Y29uc3Qgcz1yW2ldLl9jb21tYW5kcy5nZXQodCk7aWYodm9pZCAwIT09cyl7Y29uc3QgdD1zW29dO2lmKHZvaWQgMCE9PXQpe2NvbnN0IHI9QXJyYXkuZnJvbSh0KSxvPXIubGVuZ3RoO2ZvcihsZXQgdD0wO3Q8bzt0KyspaWYoITA9PT1yW3RdKG4sZSkpcmV0dXJuITB9fX1yZXR1cm4hMX1mdW5jdGlvbiBheChlLHQpe2NvbnN0IG49ZS5fdXBkYXRlcztsZXQgcj10fHwhMTtmb3IoOzAhPT1uLmxlbmd0aDspe2NvbnN0IHQ9bi5zaGlmdCgpO2lmKHQpe2NvbnN0W24sb109dDtsZXQgaSxzO2lmKHZvaWQgMCE9PW8pe2lmKGk9by5vblVwZGF0ZSxzPW8udGFnLG8uc2tpcFRyYW5zZm9ybXMmJihyPSEwKSxvLmRpc2NyZXRlKXtjb25zdCB0PWUuX3BlbmRpbmdFZGl0b3JTdGF0ZTtudWxsPT09dCYmbWcoMTkxKSx0Ll9mbHVzaFN5bmM9ITB9aSYmZS5fZGVmZXJyZWQucHVzaChpKSxzJiZlLl91cGRhdGVUYWdzLmFkZChzKX1uKCl9fXJldHVybiByfWZ1bmN0aW9uIGx4KGUsdCxuKXtjb25zdCByPWUuX3VwZGF0ZVRhZ3M7bGV0IG8saSxzPSExLGE9ITE7dm9pZCAwIT09biYmKG89bi5vblVwZGF0ZSxpPW4udGFnLG51bGwhPWkmJnIuYWRkKGkpLHM9bi5za2lwVHJhbnNmb3Jtc3x8ITEsYT1uLmRpc2NyZXRlfHwhMSksbyYmZS5fZGVmZXJyZWQucHVzaChvKTtjb25zdCBsPWUuX2VkaXRvclN0YXRlO2xldCBjPWUuX3BlbmRpbmdFZGl0b3JTdGF0ZSx1PSExOyhudWxsPT09Y3x8Yy5fcmVhZE9ubHkpJiYoYz1lLl9wZW5kaW5nRWRpdG9yU3RhdGU9bmV3IGJ4KG5ldyBNYXAoKGN8fGwpLl9ub2RlTWFwKSksdT0hMCksYy5fZmx1c2hTeW5jPWE7Y29uc3QgZD1XYixmPSRiLGg9VWIscD1lLl91cGRhdGluZztXYj1jLCRiPSExLGUuX3VwZGF0aW5nPSEwLFViPWU7dHJ5e3UmJihlLl9oZWFkbGVzcz9udWxsIT09bC5fc2VsZWN0aW9uJiYoYy5fc2VsZWN0aW9uPWwuX3NlbGVjdGlvbi5jbG9uZSgpKTpjLl9zZWxlY3Rpb249ZnVuY3Rpb24oZSl7Y29uc3QgdD1lLmdldEVkaXRvclN0YXRlKCkuX3NlbGVjdGlvbixuPVJ2KGUuX3dpbmRvdyk7cmV0dXJuIHdiKHQpfHxudWxsPT10P2piKHQsbixlLG51bGwpOnQuY2xvbmUoKX0oZSkpO2NvbnN0IG49ZS5fY29tcG9zaXRpb25LZXk7dCgpLHM9YXgoZSxzKSxmdW5jdGlvbihlLHQpe2NvbnN0IG49dC5nZXRFZGl0b3JTdGF0ZSgpLl9zZWxlY3Rpb24scj1lLl9zZWxlY3Rpb247aWYod2Iocikpe2NvbnN0IGU9ci5hbmNob3IsdD1yLmZvY3VzO2xldCBvO2lmKFwidGV4dFwiPT09ZS50eXBlJiYobz1lLmdldE5vZGUoKSxvLnNlbGVjdGlvblRyYW5zZm9ybShuLHIpKSxcInRleHRcIj09PXQudHlwZSl7Y29uc3QgZT10LmdldE5vZGUoKTtvIT09ZSYmZS5zZWxlY3Rpb25UcmFuc2Zvcm0obixyKX19fShjLGUpLGUuX2RpcnR5VHlwZSE9PVZtJiYocz9mdW5jdGlvbihlLHQpe2NvbnN0IG49dC5fZGlydHlMZWF2ZXMscj1lLl9ub2RlTWFwO2Zvcihjb25zdCBlIG9mIG4pe2NvbnN0IHQ9ci5nZXQoZSk7ZGIodCkmJnQuaXNBdHRhY2hlZCgpJiZ0LmlzU2ltcGxlVGV4dCgpJiYhdC5pc1VubWVyZ2VhYmxlKCkmJk9nKHQpfX0oYyxlKTpmdW5jdGlvbihlLHQpe2NvbnN0IG49dC5fZGlydHlMZWF2ZXMscj10Ll9kaXJ0eUVsZW1lbnRzLG89ZS5fbm9kZU1hcCxpPUtnKCkscz1uZXcgTWFwO2xldCBhPW4sbD1hLnNpemUsYz1yLHU9Yy5zaXplO2Zvcig7bD4wfHx1PjA7KXtpZihsPjApe3QuX2RpcnR5TGVhdmVzPW5ldyBTZXQ7Zm9yKGNvbnN0IGUgb2YgYSl7Y29uc3Qgcj1vLmdldChlKTtkYihyKSYmci5pc0F0dGFjaGVkKCkmJnIuaXNTaW1wbGVUZXh0KCkmJiFyLmlzVW5tZXJnZWFibGUoKSYmT2cociksdm9pZCAwIT09ciYmdHgocixpKSYmZXgodCxyLHMpLG4uYWRkKGUpfWlmKGE9dC5fZGlydHlMZWF2ZXMsbD1hLnNpemUsbD4wKXtIYisrO2NvbnRpbnVlfX10Ll9kaXJ0eUxlYXZlcz1uZXcgU2V0LHQuX2RpcnR5RWxlbWVudHM9bmV3IE1hcDtmb3IoY29uc3QgZSBvZiBjKXtjb25zdCBuPWVbMF0sYT1lWzFdO2lmKFwicm9vdFwiIT09biYmIWEpY29udGludWU7Y29uc3QgbD1vLmdldChuKTt2b2lkIDAhPT1sJiZ0eChsLGkpJiZleCh0LGwscyksci5zZXQobixhKX1hPXQuX2RpcnR5TGVhdmVzLGw9YS5zaXplLGM9dC5fZGlydHlFbGVtZW50cyx1PWMuc2l6ZSxIYisrfXQuX2RpcnR5TGVhdmVzPW4sdC5fZGlydHlFbGVtZW50cz1yfShjLGUpLGF4KGUpLGZ1bmN0aW9uKGUsdCxuLHIpe2NvbnN0IG89ZS5fbm9kZU1hcCxpPXQuX25vZGVNYXAscz1bXTtmb3IoY29uc3RbZV1vZiByKXtjb25zdCB0PWkuZ2V0KGUpO3ZvaWQgMCE9PXQmJih0LmlzQXR0YWNoZWQoKXx8KGR4KHQpJiZ6dih0LGUsbyxpLHMsciksby5oYXMoZSl8fHIuZGVsZXRlKGUpLHMucHVzaChlKSkpfWZvcihjb25zdCBlIG9mIHMpaS5kZWxldGUoZSk7Zm9yKGNvbnN0IGUgb2Ygbil7Y29uc3QgdD1pLmdldChlKTt2b2lkIDA9PT10fHx0LmlzQXR0YWNoZWQoKXx8KG8uaGFzKGUpfHxuLmRlbGV0ZShlKSxpLmRlbGV0ZShlKSl9fShsLGMsZS5fZGlydHlMZWF2ZXMsZS5fZGlydHlFbGVtZW50cykpLG4hPT1lLl9jb21wb3NpdGlvbktleSYmKGMuX2ZsdXNoU3luYz0hMCk7Y29uc3Qgcj1jLl9zZWxlY3Rpb247aWYod2Iocikpe2NvbnN0IGU9Yy5fbm9kZU1hcCx0PXIuYW5jaG9yLmtleSxuPXIuZm9jdXMua2V5O3ZvaWQgMCE9PWUuZ2V0KHQpJiZ2b2lkIDAhPT1lLmdldChuKXx8bWcoMTkpfWVsc2UgU2IocikmJjA9PT1yLl9ub2Rlcy5zaXplJiYoYy5fc2VsZWN0aW9uPW51bGwpfWNhdGNoKHQpe3JldHVybiB0IGluc3RhbmNlb2YgRXJyb3ImJmUuX29uRXJyb3IodCksZS5fcGVuZGluZ0VkaXRvclN0YXRlPWwsZS5fZGlydHlUeXBlPVdtLGUuX2Nsb25lTm90TmVlZGVkLmNsZWFyKCksZS5fZGlydHlMZWF2ZXM9bmV3IFNldCxlLl9kaXJ0eUVsZW1lbnRzLmNsZWFyKCksdm9pZCBveChlKX1maW5hbGx5e1diPWQsJGI9ZixVYj1oLGUuX3VwZGF0aW5nPXAsSGI9MH1jb25zdCBtPWUuX2RpcnR5VHlwZSE9PVZtfHxmdW5jdGlvbihlLHQpe2NvbnN0IG49dC5nZXRFZGl0b3JTdGF0ZSgpLl9zZWxlY3Rpb24scj1lLl9zZWxlY3Rpb247aWYobnVsbCE9PXIpe2lmKHIuZGlydHl8fCFyLmlzKG4pKXJldHVybiEwfWVsc2UgaWYobnVsbCE9PW4pcmV0dXJuITA7cmV0dXJuITF9KGMsZSk7bT9jLl9mbHVzaFN5bmM/KGMuX2ZsdXNoU3luYz0hMSxveChlKSk6dSYmQWcoKCgpPT57b3goZSl9KSk6KGMuX2ZsdXNoU3luYz0hMSx1JiYoci5jbGVhcigpLGUuX2RlZmVycmVkPVtdLGUuX3BlbmRpbmdFZGl0b3JTdGF0ZT1udWxsKSl9ZnVuY3Rpb24gY3goZSx0LG4pe2UuX3VwZGF0aW5nP2UuX3VwZGF0ZXMucHVzaChbdCxuXSk6bHgoZSx0LG4pfWNsYXNzIHV4IGV4dGVuZHMgVXl7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy5fX2ZpcnN0PW51bGwsdGhpcy5fX2xhc3Q9bnVsbCx0aGlzLl9fc2l6ZT0wLHRoaXMuX19mb3JtYXQ9MCx0aGlzLl9fc3R5bGU9XCJcIix0aGlzLl9faW5kZW50PTAsdGhpcy5fX2Rpcj1udWxsfWFmdGVyQ2xvbmVGcm9tKGUpe3N1cGVyLmFmdGVyQ2xvbmVGcm9tKGUpLHRoaXMuX19maXJzdD1lLl9fZmlyc3QsdGhpcy5fX2xhc3Q9ZS5fX2xhc3QsdGhpcy5fX3NpemU9ZS5fX3NpemUsdGhpcy5fX2luZGVudD1lLl9faW5kZW50LHRoaXMuX19mb3JtYXQ9ZS5fX2Zvcm1hdCx0aGlzLl9fc3R5bGU9ZS5fX3N0eWxlLHRoaXMuX19kaXI9ZS5fX2Rpcn1nZXRGb3JtYXQoKXtyZXR1cm4gdGhpcy5nZXRMYXRlc3QoKS5fX2Zvcm1hdH1nZXRGb3JtYXRUeXBlKCl7Y29uc3QgZT10aGlzLmdldEZvcm1hdCgpO3JldHVybiBkZ1tlXXx8XCJcIn1nZXRTdHlsZSgpe3JldHVybiB0aGlzLmdldExhdGVzdCgpLl9fc3R5bGV9Z2V0SW5kZW50KCl7cmV0dXJuIHRoaXMuZ2V0TGF0ZXN0KCkuX19pbmRlbnR9Z2V0Q2hpbGRyZW4oKXtjb25zdCBlPVtdO2xldCB0PXRoaXMuZ2V0Rmlyc3RDaGlsZCgpO2Zvcig7bnVsbCE9PXQ7KWUucHVzaCh0KSx0PXQuZ2V0TmV4dFNpYmxpbmcoKTtyZXR1cm4gZX1nZXRDaGlsZHJlbktleXMoKXtjb25zdCBlPVtdO2xldCB0PXRoaXMuZ2V0Rmlyc3RDaGlsZCgpO2Zvcig7bnVsbCE9PXQ7KWUucHVzaCh0Ll9fa2V5KSx0PXQuZ2V0TmV4dFNpYmxpbmcoKTtyZXR1cm4gZX1nZXRDaGlsZHJlblNpemUoKXtyZXR1cm4gdGhpcy5nZXRMYXRlc3QoKS5fX3NpemV9aXNFbXB0eSgpe3JldHVybiAwPT09dGhpcy5nZXRDaGlsZHJlblNpemUoKX1pc0RpcnR5KCl7Y29uc3QgZT1aYigpLl9kaXJ0eUVsZW1lbnRzO3JldHVybiBudWxsIT09ZSYmZS5oYXModGhpcy5fX2tleSl9aXNMYXN0Q2hpbGQoKXtjb25zdCBlPXRoaXMuZ2V0TGF0ZXN0KCksdD10aGlzLmdldFBhcmVudE9yVGhyb3coKS5nZXRMYXN0Q2hpbGQoKTtyZXR1cm4gbnVsbCE9PXQmJnQuaXMoZSl9Z2V0QWxsVGV4dE5vZGVzKCl7Y29uc3QgZT1bXTtsZXQgdD10aGlzLmdldEZpcnN0Q2hpbGQoKTtmb3IoO251bGwhPT10Oyl7aWYoZGIodCkmJmUucHVzaCh0KSxkeCh0KSl7Y29uc3Qgbj10LmdldEFsbFRleHROb2RlcygpO2UucHVzaCguLi5uKX10PXQuZ2V0TmV4dFNpYmxpbmcoKX1yZXR1cm4gZX1nZXRGaXJzdERlc2NlbmRhbnQoKXtsZXQgZT10aGlzLmdldEZpcnN0Q2hpbGQoKTtmb3IoO2R4KGUpOyl7Y29uc3QgdD1lLmdldEZpcnN0Q2hpbGQoKTtpZihudWxsPT09dClicmVhaztlPXR9cmV0dXJuIGV9Z2V0TGFzdERlc2NlbmRhbnQoKXtsZXQgZT10aGlzLmdldExhc3RDaGlsZCgpO2Zvcig7ZHgoZSk7KXtjb25zdCB0PWUuZ2V0TGFzdENoaWxkKCk7aWYobnVsbD09PXQpYnJlYWs7ZT10fXJldHVybiBlfWdldERlc2NlbmRhbnRCeUluZGV4KGUpe2NvbnN0IHQ9dGhpcy5nZXRDaGlsZHJlbigpLG49dC5sZW5ndGg7aWYoZT49bil7Y29uc3QgZT10W24tMV07cmV0dXJuIGR4KGUpJiZlLmdldExhc3REZXNjZW5kYW50KCl8fGV8fG51bGx9Y29uc3Qgcj10W2VdO3JldHVybiBkeChyKSYmci5nZXRGaXJzdERlc2NlbmRhbnQoKXx8cnx8bnVsbH1nZXRGaXJzdENoaWxkKCl7Y29uc3QgZT10aGlzLmdldExhdGVzdCgpLl9fZmlyc3Q7cmV0dXJuIG51bGw9PT1lP251bGw6SGcoZSl9Z2V0Rmlyc3RDaGlsZE9yVGhyb3coKXtjb25zdCBlPXRoaXMuZ2V0Rmlyc3RDaGlsZCgpO3JldHVybiBudWxsPT09ZSYmbWcoNDUsdGhpcy5fX2tleSksZX1nZXRMYXN0Q2hpbGQoKXtjb25zdCBlPXRoaXMuZ2V0TGF0ZXN0KCkuX19sYXN0O3JldHVybiBudWxsPT09ZT9udWxsOkhnKGUpfWdldExhc3RDaGlsZE9yVGhyb3coKXtjb25zdCBlPXRoaXMuZ2V0TGFzdENoaWxkKCk7cmV0dXJuIG51bGw9PT1lJiZtZyg5Nix0aGlzLl9fa2V5KSxlfWdldENoaWxkQXRJbmRleChlKXtjb25zdCB0PXRoaXMuZ2V0Q2hpbGRyZW5TaXplKCk7bGV0IG4scjtpZihlPHQvMil7Zm9yKG49dGhpcy5nZXRGaXJzdENoaWxkKCkscj0wO251bGwhPT1uJiZyPD1lOyl7aWYocj09PWUpcmV0dXJuIG47bj1uLmdldE5leHRTaWJsaW5nKCkscisrfXJldHVybiBudWxsfWZvcihuPXRoaXMuZ2V0TGFzdENoaWxkKCkscj10LTE7bnVsbCE9PW4mJnI+PWU7KXtpZihyPT09ZSlyZXR1cm4gbjtuPW4uZ2V0UHJldmlvdXNTaWJsaW5nKCksci0tfXJldHVybiBudWxsfWdldFRleHRDb250ZW50KCl7bGV0IGU9XCJcIjtjb25zdCB0PXRoaXMuZ2V0Q2hpbGRyZW4oKSxuPXQubGVuZ3RoO2ZvcihsZXQgcj0wO3I8bjtyKyspe2NvbnN0IG89dFtyXTtlKz1vLmdldFRleHRDb250ZW50KCksZHgobykmJnIhPT1uLTEmJiFvLmlzSW5saW5lKCkmJihlKz1uZyl9cmV0dXJuIGV9Z2V0VGV4dENvbnRlbnRTaXplKCl7bGV0IGU9MDtjb25zdCB0PXRoaXMuZ2V0Q2hpbGRyZW4oKSxuPXQubGVuZ3RoO2ZvcihsZXQgcj0wO3I8bjtyKyspe2NvbnN0IG89dFtyXTtlKz1vLmdldFRleHRDb250ZW50U2l6ZSgpLGR4KG8pJiZyIT09bi0xJiYhby5pc0lubGluZSgpJiYoZSs9bmcubGVuZ3RoKX1yZXR1cm4gZX1nZXREaXJlY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRMYXRlc3QoKS5fX2Rpcn1oYXNGb3JtYXQoZSl7aWYoXCJcIiE9PWUpe2NvbnN0IHQ9dWdbZV07cmV0dXJuISEodGhpcy5nZXRGb3JtYXQoKSZ0KX1yZXR1cm4hMX1zZWxlY3QoZSx0KXtHYigpO2NvbnN0IG49TWIoKTtsZXQgcj1lLG89dDtjb25zdCBpPXRoaXMuZ2V0Q2hpbGRyZW5TaXplKCk7aWYoIXRoaXMuY2FuQmVFbXB0eSgpKWlmKDA9PT1lJiYwPT09dCl7Y29uc3QgZT10aGlzLmdldEZpcnN0Q2hpbGQoKTtpZihkYihlKXx8ZHgoZSkpcmV0dXJuIGUuc2VsZWN0KDAsMCl9ZWxzZSBpZighKHZvaWQgMCE9PWUmJmUhPT1pfHx2b2lkIDAhPT10JiZ0IT09aSkpe2NvbnN0IGU9dGhpcy5nZXRMYXN0Q2hpbGQoKTtpZihkYihlKXx8ZHgoZSkpcmV0dXJuIGUuc2VsZWN0KCl9dm9pZCAwPT09ciYmKHI9aSksdm9pZCAwPT09byYmKG89aSk7Y29uc3Qgcz10aGlzLl9fa2V5O3JldHVybiB3YihuKT8obi5hbmNob3Iuc2V0KHMscixcImVsZW1lbnRcIiksbi5mb2N1cy5zZXQocyxvLFwiZWxlbWVudFwiKSxuLmRpcnR5PSEwLG4pOk5iKHMscixzLG8sXCJlbGVtZW50XCIsXCJlbGVtZW50XCIpfXNlbGVjdFN0YXJ0KCl7Y29uc3QgZT10aGlzLmdldEZpcnN0RGVzY2VuZGFudCgpO3JldHVybiBlP2Uuc2VsZWN0U3RhcnQoKTp0aGlzLnNlbGVjdCgpfXNlbGVjdEVuZCgpe2NvbnN0IGU9dGhpcy5nZXRMYXN0RGVzY2VuZGFudCgpO3JldHVybiBlP2Uuc2VsZWN0RW5kKCk6dGhpcy5zZWxlY3QoKX1jbGVhcigpe2NvbnN0IGU9dGhpcy5nZXRXcml0YWJsZSgpO3JldHVybiB0aGlzLmdldENoaWxkcmVuKCkuZm9yRWFjaCgoZT0+ZS5yZW1vdmUoKSkpLGV9YXBwZW5kKC4uLmUpe3JldHVybiB0aGlzLnNwbGljZSh0aGlzLmdldENoaWxkcmVuU2l6ZSgpLDAsZSl9c2V0RGlyZWN0aW9uKGUpe2NvbnN0IHQ9dGhpcy5nZXRXcml0YWJsZSgpO3JldHVybiB0Ll9fZGlyPWUsdH1zZXRGb3JtYXQoZSl7cmV0dXJuIHRoaXMuZ2V0V3JpdGFibGUoKS5fX2Zvcm1hdD1cIlwiIT09ZT91Z1tlXTowLHRoaXN9c2V0U3R5bGUoZSl7cmV0dXJuIHRoaXMuZ2V0V3JpdGFibGUoKS5fX3N0eWxlPWV8fFwiXCIsdGhpc31zZXRJbmRlbnQoZSl7cmV0dXJuIHRoaXMuZ2V0V3JpdGFibGUoKS5fX2luZGVudD1lLHRoaXN9c3BsaWNlKGUsdCxuKXtjb25zdCByPW4ubGVuZ3RoLG89dGhpcy5nZXRDaGlsZHJlblNpemUoKSxpPXRoaXMuZ2V0V3JpdGFibGUoKSxzPWkuX19rZXksYT1bXSxsPVtdLGM9dGhpcy5nZXRDaGlsZEF0SW5kZXgoZSt0KTtsZXQgdT1udWxsLGQ9by10K3I7aWYoMCE9PWUpaWYoZT09PW8pdT10aGlzLmdldExhc3RDaGlsZCgpO2Vsc2V7Y29uc3QgdD10aGlzLmdldENoaWxkQXRJbmRleChlKTtudWxsIT09dCYmKHU9dC5nZXRQcmV2aW91c1NpYmxpbmcoKSl9aWYodD4wKXtsZXQgZT1udWxsPT09dT90aGlzLmdldEZpcnN0Q2hpbGQoKTp1LmdldE5leHRTaWJsaW5nKCk7Zm9yKGxldCBuPTA7bjx0O24rKyl7bnVsbD09PWUmJm1nKDEwMCk7Y29uc3QgdD1lLmdldE5leHRTaWJsaW5nKCksbj1lLl9fa2V5O1dnKGUuZ2V0V3JpdGFibGUoKSksbC5wdXNoKG4pLGU9dH19bGV0IGY9dTtmb3IobGV0IGU9MDtlPHI7ZSsrKXtjb25zdCB0PW5bZV07bnVsbCE9PWYmJnQuaXMoZikmJih1PWY9Zi5nZXRQcmV2aW91c1NpYmxpbmcoKSk7Y29uc3Qgcj10LmdldFdyaXRhYmxlKCk7ci5fX3BhcmVudD09PXMmJmQtLSxXZyhyKTtjb25zdCBvPXQuX19rZXk7aWYobnVsbD09PWYpaS5fX2ZpcnN0PW8sci5fX3ByZXY9bnVsbDtlbHNle2NvbnN0IGU9Zi5nZXRXcml0YWJsZSgpO2UuX19uZXh0PW8sci5fX3ByZXY9ZS5fX2tleX10Ll9fa2V5PT09cyYmbWcoNzYpLHIuX19wYXJlbnQ9cyxhLnB1c2gobyksZj10fWlmKGUrdD09PW8pbnVsbCE9PWYmJihmLmdldFdyaXRhYmxlKCkuX19uZXh0PW51bGwsaS5fX2xhc3Q9Zi5fX2tleSk7ZWxzZSBpZihudWxsIT09Yyl7Y29uc3QgZT1jLmdldFdyaXRhYmxlKCk7aWYobnVsbCE9PWYpe2NvbnN0IHQ9Zi5nZXRXcml0YWJsZSgpO2UuX19wcmV2PWYuX19rZXksdC5fX25leHQ9Yy5fX2tleX1lbHNlIGUuX19wcmV2PW51bGx9aWYoaS5fX3NpemU9ZCxsLmxlbmd0aCl7Y29uc3QgZT1NYigpO2lmKHdiKGUpKXtjb25zdCB0PW5ldyBTZXQobCksbj1uZXcgU2V0KGEpLHthbmNob3I6cixmb2N1czpvfT1lO2Z4KHIsdCxuKSYmRmIocixyLmdldE5vZGUoKSx0aGlzLHUsYyksZngobyx0LG4pJiZGYihvLG8uZ2V0Tm9kZSgpLHRoaXMsdSxjKSwwIT09ZHx8dGhpcy5jYW5CZUVtcHR5KCl8fEN2KHRoaXMpfHx0aGlzLnJlbW92ZSgpfX1yZXR1cm4gaX1leHBvcnRKU09OKCl7cmV0dXJue2NoaWxkcmVuOltdLGRpcmVjdGlvbjp0aGlzLmdldERpcmVjdGlvbigpLGZvcm1hdDp0aGlzLmdldEZvcm1hdFR5cGUoKSxpbmRlbnQ6dGhpcy5nZXRJbmRlbnQoKSx0eXBlOlwiZWxlbWVudFwiLHZlcnNpb246MX19aW5zZXJ0TmV3QWZ0ZXIoZSx0KXtyZXR1cm4gbnVsbH1jYW5JbmRlbnQoKXtyZXR1cm4hMH1jb2xsYXBzZUF0U3RhcnQoZSl7cmV0dXJuITF9ZXhjbHVkZUZyb21Db3B5KGUpe3JldHVybiExfWNhblJlcGxhY2VXaXRoKGUpe3JldHVybiEwfWNhbkluc2VydEFmdGVyKGUpe3JldHVybiEwfWNhbkJlRW1wdHkoKXtyZXR1cm4hMH1jYW5JbnNlcnRUZXh0QmVmb3JlKCl7cmV0dXJuITB9Y2FuSW5zZXJ0VGV4dEFmdGVyKCl7cmV0dXJuITB9aXNJbmxpbmUoKXtyZXR1cm4hMX1pc1NoYWRvd1Jvb3QoKXtyZXR1cm4hMX1jYW5NZXJnZVdpdGgoZSl7cmV0dXJuITF9ZXh0cmFjdFdpdGhDaGlsZChlLHQsbil7cmV0dXJuITF9Y2FuTWVyZ2VXaGVuRW1wdHkoKXtyZXR1cm4hMX19ZnVuY3Rpb24gZHgoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiB1eH1mdW5jdGlvbiBmeChlLHQsbil7bGV0IHI9ZS5nZXROb2RlKCk7Zm9yKDtyOyl7Y29uc3QgZT1yLl9fa2V5O2lmKHQuaGFzKGUpJiYhbi5oYXMoZSkpcmV0dXJuITA7cj1yLmdldFBhcmVudCgpfXJldHVybiExfWNsYXNzIGh4IGV4dGVuZHMgVXl7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSl9ZGVjb3JhdGUoZSx0KXttZyg0Nyl9aXNJc29sYXRlZCgpe3JldHVybiExfWlzSW5saW5lKCl7cmV0dXJuITB9aXNLZXlib2FyZFNlbGVjdGFibGUoKXtyZXR1cm4hMH19ZnVuY3Rpb24gcHgoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBoeH1jbGFzcyBteCBleHRlbmRzIHV4e3N0YXRpYyBnZXRUeXBlKCl7cmV0dXJuXCJyb290XCJ9c3RhdGljIGNsb25lKCl7cmV0dXJuIG5ldyBteH1jb25zdHJ1Y3Rvcigpe3N1cGVyKFwicm9vdFwiKSx0aGlzLl9fY2FjaGVkVGV4dD1udWxsfWdldFRvcExldmVsRWxlbWVudE9yVGhyb3coKXttZyg1MSl9Z2V0VGV4dENvbnRlbnQoKXtjb25zdCBlPXRoaXMuX19jYWNoZWRUZXh0O3JldHVybiFZYigpJiZaYigpLl9kaXJ0eVR5cGUhPT1WbXx8bnVsbD09PWU/c3VwZXIuZ2V0VGV4dENvbnRlbnQoKTplfXJlbW92ZSgpe21nKDUyKX1yZXBsYWNlKGUpe21nKDUzKX1pbnNlcnRCZWZvcmUoZSl7bWcoNTQpfWluc2VydEFmdGVyKGUpe21nKDU1KX11cGRhdGVET00oZSx0KXtyZXR1cm4hMX1hcHBlbmQoLi4uZSl7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspe2NvbnN0IG49ZVt0XTtkeChuKXx8cHgobil8fG1nKDU2KX1yZXR1cm4gc3VwZXIuYXBwZW5kKC4uLmUpfXN0YXRpYyBpbXBvcnRKU09OKGUpe2NvbnN0IHQ9SmcoKTtyZXR1cm4gdC5zZXRGb3JtYXQoZS5mb3JtYXQpLHQuc2V0SW5kZW50KGUuaW5kZW50KSx0LnNldERpcmVjdGlvbihlLmRpcmVjdGlvbiksdH1leHBvcnRKU09OKCl7cmV0dXJue2NoaWxkcmVuOltdLGRpcmVjdGlvbjp0aGlzLmdldERpcmVjdGlvbigpLGZvcm1hdDp0aGlzLmdldEZvcm1hdFR5cGUoKSxpbmRlbnQ6dGhpcy5nZXRJbmRlbnQoKSx0eXBlOlwicm9vdFwiLHZlcnNpb246MX19Y29sbGFwc2VBdFN0YXJ0KCl7cmV0dXJuITB9fWZ1bmN0aW9uIGd4KGUpe3JldHVybiBlIGluc3RhbmNlb2YgbXh9ZnVuY3Rpb24gdngoKXtyZXR1cm4gbmV3IGJ4KG5ldyBNYXAoW1tcInJvb3RcIixuZXcgbXhdXSkpfWZ1bmN0aW9uIHl4KGUpe2NvbnN0IHQ9ZS5leHBvcnRKU09OKCksbj1lLmNvbnN0cnVjdG9yO2lmKHQudHlwZSE9PW4uZ2V0VHlwZSgpJiZtZygxMzAsbi5uYW1lKSxkeChlKSl7Y29uc3Qgcj10LmNoaWxkcmVuO0FycmF5LmlzQXJyYXkocil8fG1nKDU5LG4ubmFtZSk7Y29uc3Qgbz1lLmdldENoaWxkcmVuKCk7Zm9yKGxldCBlPTA7ZTxvLmxlbmd0aDtlKyspe2NvbnN0IHQ9eXgob1tlXSk7ci5wdXNoKHQpfX1yZXR1cm4gdH1jbGFzcyBieHtjb25zdHJ1Y3RvcihlLHQpe3RoaXMuX25vZGVNYXA9ZSx0aGlzLl9zZWxlY3Rpb249dHx8bnVsbCx0aGlzLl9mbHVzaFN5bmM9ITEsdGhpcy5fcmVhZE9ubHk9ITF9aXNFbXB0eSgpe3JldHVybiAxPT09dGhpcy5fbm9kZU1hcC5zaXplJiZudWxsPT09dGhpcy5fc2VsZWN0aW9ufXJlYWQoZSx0KXtyZXR1cm4gcngodCYmdC5lZGl0b3J8fG51bGwsdGhpcyxlKX1jbG9uZShlKXtjb25zdCB0PW5ldyBieCh0aGlzLl9ub2RlTWFwLHZvaWQgMD09PWU/dGhpcy5fc2VsZWN0aW9uOmUpO3JldHVybiB0Ll9yZWFkT25seT0hMCx0fXRvSlNPTigpe3JldHVybiByeChudWxsLHRoaXMsKCgpPT4oe3Jvb3Q6eXgoSmcoKSl9KSkpfX1jbGFzcyB4eCBleHRlbmRzIHV4e3N0YXRpYyBnZXRUeXBlKCl7cmV0dXJuXCJhcnRpZmljaWFsXCJ9Y3JlYXRlRE9NKGUpe3JldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpfX1jbGFzcyB3eCBleHRlbmRzIHV4e2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMuX190ZXh0Rm9ybWF0PTAsdGhpcy5fX3RleHRTdHlsZT1cIlwifXN0YXRpYyBnZXRUeXBlKCl7cmV0dXJuXCJwYXJhZ3JhcGhcIn1nZXRUZXh0Rm9ybWF0KCl7cmV0dXJuIHRoaXMuZ2V0TGF0ZXN0KCkuX190ZXh0Rm9ybWF0fXNldFRleHRGb3JtYXQoZSl7Y29uc3QgdD10aGlzLmdldFdyaXRhYmxlKCk7cmV0dXJuIHQuX190ZXh0Rm9ybWF0PWUsdH1oYXNUZXh0Rm9ybWF0KGUpe2NvbnN0IHQ9bGdbZV07cmV0dXJuISEodGhpcy5nZXRUZXh0Rm9ybWF0KCkmdCl9Z2V0VGV4dFN0eWxlKCl7cmV0dXJuIHRoaXMuZ2V0TGF0ZXN0KCkuX190ZXh0U3R5bGV9c2V0VGV4dFN0eWxlKGUpe2NvbnN0IHQ9dGhpcy5nZXRXcml0YWJsZSgpO3JldHVybiB0Ll9fdGV4dFN0eWxlPWUsdH1zdGF0aWMgY2xvbmUoZSl7cmV0dXJuIG5ldyB3eChlLl9fa2V5KX1hZnRlckNsb25lRnJvbShlKXtzdXBlci5hZnRlckNsb25lRnJvbShlKSx0aGlzLl9fdGV4dEZvcm1hdD1lLl9fdGV4dEZvcm1hdCx0aGlzLl9fdGV4dFN0eWxlPWUuX190ZXh0U3R5bGV9Y3JlYXRlRE9NKGUpe2NvbnN0IHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIiksbj1tdihlLnRoZW1lLFwicGFyYWdyYXBoXCIpO3JldHVybiB2b2lkIDAhPT1uJiZ0LmNsYXNzTGlzdC5hZGQoLi4ubiksdH11cGRhdGVET00oZSx0LG4pe3JldHVybiExfXN0YXRpYyBpbXBvcnRET00oKXtyZXR1cm57cDplPT4oe2NvbnZlcnNpb246RXgscHJpb3JpdHk6MH0pfX1leHBvcnRET00oZSl7Y29uc3R7ZWxlbWVudDp0fT1zdXBlci5leHBvcnRET00oZSk7aWYodCYmTnYodCkpe3RoaXMuaXNFbXB0eSgpJiZ0LmFwcGVuZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnJcIikpO2NvbnN0IGU9dGhpcy5nZXRGb3JtYXRUeXBlKCk7dC5zdHlsZS50ZXh0QWxpZ249ZTtjb25zdCBuPXRoaXMuZ2V0RGlyZWN0aW9uKCk7biYmKHQuZGlyPW4pO2NvbnN0IHI9dGhpcy5nZXRJbmRlbnQoKTtyPjAmJih0LnN0eWxlLnRleHRJbmRlbnQ9MjAqcitcInB4XCIpfXJldHVybntlbGVtZW50OnR9fXN0YXRpYyBpbXBvcnRKU09OKGUpe2NvbnN0IHQ9U3goKTtyZXR1cm4gdC5zZXRGb3JtYXQoZS5mb3JtYXQpLHQuc2V0SW5kZW50KGUuaW5kZW50KSx0LnNldERpcmVjdGlvbihlLmRpcmVjdGlvbiksdC5zZXRUZXh0Rm9ybWF0KGUudGV4dEZvcm1hdCksdH1leHBvcnRKU09OKCl7cmV0dXJuey4uLnN1cGVyLmV4cG9ydEpTT04oKSx0ZXh0Rm9ybWF0OnRoaXMuZ2V0VGV4dEZvcm1hdCgpLHRleHRTdHlsZTp0aGlzLmdldFRleHRTdHlsZSgpLHR5cGU6XCJwYXJhZ3JhcGhcIix2ZXJzaW9uOjF9fWluc2VydE5ld0FmdGVyKGUsdCl7Y29uc3Qgbj1TeCgpO24uc2V0VGV4dEZvcm1hdChlLmZvcm1hdCksbi5zZXRUZXh0U3R5bGUoZS5zdHlsZSk7Y29uc3Qgcj10aGlzLmdldERpcmVjdGlvbigpO3JldHVybiBuLnNldERpcmVjdGlvbihyKSxuLnNldEZvcm1hdCh0aGlzLmdldEZvcm1hdFR5cGUoKSksbi5zZXRTdHlsZSh0aGlzLmdldFRleHRTdHlsZSgpKSx0aGlzLmluc2VydEFmdGVyKG4sdCksbn1jb2xsYXBzZUF0U3RhcnQoKXtjb25zdCBlPXRoaXMuZ2V0Q2hpbGRyZW4oKTtpZigwPT09ZS5sZW5ndGh8fGRiKGVbMF0pJiZcIlwiPT09ZVswXS5nZXRUZXh0Q29udGVudCgpLnRyaW0oKSl7aWYobnVsbCE9PXRoaXMuZ2V0TmV4dFNpYmxpbmcoKSlyZXR1cm4gdGhpcy5zZWxlY3ROZXh0KCksdGhpcy5yZW1vdmUoKSwhMDtpZihudWxsIT09dGhpcy5nZXRQcmV2aW91c1NpYmxpbmcoKSlyZXR1cm4gdGhpcy5zZWxlY3RQcmV2aW91cygpLHRoaXMucmVtb3ZlKCksITB9cmV0dXJuITF9fWZ1bmN0aW9uIEV4KGUpe2NvbnN0IHQ9U3goKTtpZihlLnN0eWxlKXt0LnNldEZvcm1hdChlLnN0eWxlLnRleHRBbGlnbik7Y29uc3Qgbj1wYXJzZUludChlLnN0eWxlLnRleHRJbmRlbnQsMTApLzIwO24+MCYmdC5zZXRJbmRlbnQobil9cmV0dXJue25vZGU6dH19ZnVuY3Rpb24gU3goKXtyZXR1cm4gUHYobmV3IHd4KX1mdW5jdGlvbiBreChlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHd4fWNvbnN0IEN4PTE7ZnVuY3Rpb24gUHgoZSx0LG4scil7Y29uc3Qgbz1lLl9rZXlUb0RPTU1hcDtvLmNsZWFyKCksZS5fZWRpdG9yU3RhdGU9dngoKSxlLl9wZW5kaW5nRWRpdG9yU3RhdGU9cixlLl9jb21wb3NpdGlvbktleT1udWxsLGUuX2RpcnR5VHlwZT1WbSxlLl9jbG9uZU5vdE5lZWRlZC5jbGVhcigpLGUuX2RpcnR5TGVhdmVzPW5ldyBTZXQsZS5fZGlydHlFbGVtZW50cy5jbGVhcigpLGUuX25vcm1hbGl6ZWROb2Rlcz1uZXcgU2V0LGUuX3VwZGF0ZVRhZ3M9bmV3IFNldCxlLl91cGRhdGVzPVtdLGUuX2Jsb2NrQ3Vyc29yRWxlbWVudD1udWxsO2NvbnN0IGk9ZS5fb2JzZXJ2ZXI7bnVsbCE9PWkmJihpLmRpc2Nvbm5lY3QoKSxlLl9vYnNlcnZlcj1udWxsKSxudWxsIT09dCYmKHQudGV4dENvbnRlbnQ9XCJcIiksbnVsbCE9PW4mJihuLnRleHRDb250ZW50PVwiXCIsby5zZXQoXCJyb290XCIsbikpfWNsYXNzIFR4e2NvbnN0cnVjdG9yKGUsdCxuLHIsbyxpLHMpe3RoaXMuX3BhcmVudEVkaXRvcj10LHRoaXMuX3Jvb3RFbGVtZW50PW51bGwsdGhpcy5fZWRpdG9yU3RhdGU9ZSx0aGlzLl9wZW5kaW5nRWRpdG9yU3RhdGU9bnVsbCx0aGlzLl9jb21wb3NpdGlvbktleT1udWxsLHRoaXMuX2RlZmVycmVkPVtdLHRoaXMuX2tleVRvRE9NTWFwPW5ldyBNYXAsdGhpcy5fdXBkYXRlcz1bXSx0aGlzLl91cGRhdGluZz0hMSx0aGlzLl9saXN0ZW5lcnM9e2RlY29yYXRvcjpuZXcgU2V0LGVkaXRhYmxlOm5ldyBTZXQsbXV0YXRpb246bmV3IE1hcCxyb290Om5ldyBTZXQsdGV4dGNvbnRlbnQ6bmV3IFNldCx1cGRhdGU6bmV3IFNldH0sdGhpcy5fY29tbWFuZHM9bmV3IE1hcCx0aGlzLl9jb25maWc9cix0aGlzLl9ub2Rlcz1uLHRoaXMuX2RlY29yYXRvcnM9e30sdGhpcy5fcGVuZGluZ0RlY29yYXRvcnM9bnVsbCx0aGlzLl9kaXJ0eVR5cGU9Vm0sdGhpcy5fY2xvbmVOb3ROZWVkZWQ9bmV3IFNldCx0aGlzLl9kaXJ0eUxlYXZlcz1uZXcgU2V0LHRoaXMuX2RpcnR5RWxlbWVudHM9bmV3IE1hcCx0aGlzLl9ub3JtYWxpemVkTm9kZXM9bmV3IFNldCx0aGlzLl91cGRhdGVUYWdzPW5ldyBTZXQsdGhpcy5fb2JzZXJ2ZXI9bnVsbCx0aGlzLl9rZXk9b3YoKSx0aGlzLl9vbkVycm9yPW8sdGhpcy5faHRtbENvbnZlcnNpb25zPWksdGhpcy5fZWRpdGFibGU9cyx0aGlzLl9oZWFkbGVzcz1udWxsIT09dCYmdC5faGVhZGxlc3MsdGhpcy5fd2luZG93PW51bGwsdGhpcy5fYmxvY2tDdXJzb3JFbGVtZW50PW51bGx9aXNDb21wb3NpbmcoKXtyZXR1cm4gbnVsbCE9dGhpcy5fY29tcG9zaXRpb25LZXl9cmVnaXN0ZXJVcGRhdGVMaXN0ZW5lcihlKXtjb25zdCB0PXRoaXMuX2xpc3RlbmVycy51cGRhdGU7cmV0dXJuIHQuYWRkKGUpLCgpPT57dC5kZWxldGUoZSl9fXJlZ2lzdGVyRWRpdGFibGVMaXN0ZW5lcihlKXtjb25zdCB0PXRoaXMuX2xpc3RlbmVycy5lZGl0YWJsZTtyZXR1cm4gdC5hZGQoZSksKCk9Pnt0LmRlbGV0ZShlKX19cmVnaXN0ZXJEZWNvcmF0b3JMaXN0ZW5lcihlKXtjb25zdCB0PXRoaXMuX2xpc3RlbmVycy5kZWNvcmF0b3I7cmV0dXJuIHQuYWRkKGUpLCgpPT57dC5kZWxldGUoZSl9fXJlZ2lzdGVyVGV4dENvbnRlbnRMaXN0ZW5lcihlKXtjb25zdCB0PXRoaXMuX2xpc3RlbmVycy50ZXh0Y29udGVudDtyZXR1cm4gdC5hZGQoZSksKCk9Pnt0LmRlbGV0ZShlKX19cmVnaXN0ZXJSb290TGlzdGVuZXIoZSl7Y29uc3QgdD10aGlzLl9saXN0ZW5lcnMucm9vdDtyZXR1cm4gZSh0aGlzLl9yb290RWxlbWVudCxudWxsKSx0LmFkZChlKSwoKT0+e2UobnVsbCx0aGlzLl9yb290RWxlbWVudCksdC5kZWxldGUoZSl9fXJlZ2lzdGVyQ29tbWFuZChlLHQsbil7dm9pZCAwPT09biYmbWcoMzUpO2NvbnN0IHI9dGhpcy5fY29tbWFuZHM7ci5oYXMoZSl8fHIuc2V0KGUsW25ldyBTZXQsbmV3IFNldCxuZXcgU2V0LG5ldyBTZXQsbmV3IFNldF0pO2NvbnN0IG89ci5nZXQoZSk7dm9pZCAwPT09byYmbWcoMzYsU3RyaW5nKGUpKTtjb25zdCBpPW9bbl07cmV0dXJuIGkuYWRkKHQpLCgpPT57aS5kZWxldGUodCksby5ldmVyeSgoZT0+MD09PWUuc2l6ZSkpJiZyLmRlbGV0ZShlKX19cmVnaXN0ZXJNdXRhdGlvbkxpc3RlbmVyKGUsdCxuKXtjb25zdCByPXRoaXMucmVzb2x2ZVJlZ2lzdGVyZWROb2RlQWZ0ZXJSZXBsYWNlbWVudHModGhpcy5nZXRSZWdpc3RlcmVkTm9kZShlKSkua2xhc3Msbz10aGlzLl9saXN0ZW5lcnMubXV0YXRpb247by5zZXQodCxyKTtjb25zdCBpPW4mJm4uc2tpcEluaXRpYWxpemF0aW9uO3JldHVybiB2b2lkIDA9PT1pfHxpfHx0aGlzLmluaXRpYWxpemVNdXRhdGlvbkxpc3RlbmVyKHQsciksKCk9PntvLmRlbGV0ZSh0KX19Z2V0UmVnaXN0ZXJlZE5vZGUoZSl7Y29uc3QgdD10aGlzLl9ub2Rlcy5nZXQoZS5nZXRUeXBlKCkpO3JldHVybiB2b2lkIDA9PT10JiZtZygzNyxlLm5hbWUpLHR9cmVzb2x2ZVJlZ2lzdGVyZWROb2RlQWZ0ZXJSZXBsYWNlbWVudHMoZSl7Zm9yKDtlLnJlcGxhY2VXaXRoS2xhc3M7KWU9dGhpcy5nZXRSZWdpc3RlcmVkTm9kZShlLnJlcGxhY2VXaXRoS2xhc3MpO3JldHVybiBlfWluaXRpYWxpemVNdXRhdGlvbkxpc3RlbmVyKGUsdCl7Y29uc3Qgbj10aGlzLl9lZGl0b3JTdGF0ZSxyPWZ1bmN0aW9uKGUpe2lmKCFlLl9yZWFkT25seSYmZS5pc0VtcHR5KCkpcmV0dXJuIEx2O2UuX3JlYWRPbmx5fHxtZygxOTIpO2xldCB0PUR2LmdldChlKTtpZighdCl7dD1uZXcgTWFwLER2LnNldChlLHQpO2Zvcihjb25zdFtuLHJdb2YgZS5fbm9kZU1hcCl7Y29uc3QgZT1yLl9fdHlwZTtsZXQgbz10LmdldChlKTtvfHwobz1uZXcgTWFwLHQuc2V0KGUsbykpLG8uc2V0KG4scil9fXJldHVybiB0fShuKS5nZXQodC5nZXRUeXBlKCkpO2lmKCFyKXJldHVybjtjb25zdCBvPW5ldyBNYXA7Zm9yKGNvbnN0IGUgb2Ygci5rZXlzKCkpby5zZXQoZSxcImNyZWF0ZWRcIik7by5zaXplPjAmJmUobyx7ZGlydHlMZWF2ZXM6bmV3IFNldCxwcmV2RWRpdG9yU3RhdGU6bix1cGRhdGVUYWdzOm5ldyBTZXQoW1wicmVnaXN0ZXJNdXRhdGlvbkxpc3RlbmVyXCJdKX0pfXJlZ2lzdGVyTm9kZVRyYW5zZm9ybVRvS2xhc3MoZSx0KXtjb25zdCBuPXRoaXMuZ2V0UmVnaXN0ZXJlZE5vZGUoZSk7cmV0dXJuIG4udHJhbnNmb3Jtcy5hZGQodCksbn1yZWdpc3Rlck5vZGVUcmFuc2Zvcm0oZSx0KXtjb25zdCBuPXRoaXMucmVnaXN0ZXJOb2RlVHJhbnNmb3JtVG9LbGFzcyhlLHQpLHI9W25dLG89bi5yZXBsYWNlV2l0aEtsYXNzO2lmKG51bGwhPW8pe2NvbnN0IGU9dGhpcy5yZWdpc3Rlck5vZGVUcmFuc2Zvcm1Ub0tsYXNzKG8sdCk7ci5wdXNoKGUpfXZhciBpO3JldHVybiBpPWUuZ2V0VHlwZSgpLGN4KHRoaXMsKCgpPT57Y29uc3QgZT1KYigpO2lmKGUuaXNFbXB0eSgpKXJldHVybjtpZihcInJvb3RcIj09PWkpcmV0dXJuIHZvaWQgSmcoKS5tYXJrRGlydHkoKTtjb25zdCB0PWUuX25vZGVNYXA7Zm9yKGNvbnN0WyxlXW9mIHQpZS5tYXJrRGlydHkoKX0pLG51bGw9PT10aGlzLl9wZW5kaW5nRWRpdG9yU3RhdGU/e3RhZzpcImhpc3RvcnktbWVyZ2VcIn06dm9pZCAwKSwoKT0+e3IuZm9yRWFjaCgoZT0+ZS50cmFuc2Zvcm1zLmRlbGV0ZSh0KSkpfX1oYXNOb2RlKGUpe3JldHVybiB0aGlzLl9ub2Rlcy5oYXMoZS5nZXRUeXBlKCkpfWhhc05vZGVzKGUpe3JldHVybiBlLmV2ZXJ5KHRoaXMuaGFzTm9kZS5iaW5kKHRoaXMpKX1kaXNwYXRjaENvbW1hbmQoZSx0KXtyZXR1cm4geHYodGhpcyxlLHQpfWdldERlY29yYXRvcnMoKXtyZXR1cm4gdGhpcy5fZGVjb3JhdG9yc31nZXRSb290RWxlbWVudCgpe3JldHVybiB0aGlzLl9yb290RWxlbWVudH1nZXRLZXkoKXtyZXR1cm4gdGhpcy5fa2V5fXNldFJvb3RFbGVtZW50KGUpe2NvbnN0IHQ9dGhpcy5fcm9vdEVsZW1lbnQ7aWYoZSE9PXQpe2NvbnN0IG49bXYodGhpcy5fY29uZmlnLnRoZW1lLFwicm9vdFwiKSxyPXRoaXMuX3BlbmRpbmdFZGl0b3JTdGF0ZXx8dGhpcy5fZWRpdG9yU3RhdGU7aWYodGhpcy5fcm9vdEVsZW1lbnQ9ZSxQeCh0aGlzLHQsZSxyKSxudWxsIT09dCYmKHRoaXMuX2NvbmZpZy5kaXNhYmxlRXZlbnRzfHxmdW5jdGlvbihlKXtjb25zdCB0PWUub3duZXJEb2N1bWVudCxuPUN5LmdldCh0KTt2b2lkIDA9PT1uJiZtZygxNjIpO2NvbnN0IHI9bi0xO3I+PTB8fG1nKDE2NCksQ3kuc2V0KHQsciksMD09PXImJnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNlbGVjdGlvbmNoYW5nZVwiLHp5KTtjb25zdCBvPUxnKGUpO0lnKG8pPyhmdW5jdGlvbihlKXtpZihudWxsIT09ZS5fcGFyZW50RWRpdG9yKXtjb25zdCB0PXJ2KGUpLG49dFt0Lmxlbmd0aC0xXS5fa2V5O0Z5LmdldChuKT09PWUmJkZ5LmRlbGV0ZShuKX1lbHNlIEZ5LmRlbGV0ZShlLl9rZXkpfShvKSxlLl9fbGV4aWNhbEVkaXRvcj1udWxsKTpvJiZtZygxOTgpO2NvbnN0IGk9THkoZSk7Zm9yKGxldCBlPTA7ZTxpLmxlbmd0aDtlKyspaVtlXSgpO2UuX19sZXhpY2FsRXZlbnRIYW5kbGVzPVtdfSh0KSxudWxsIT1uJiZ0LmNsYXNzTGlzdC5yZW1vdmUoLi4ubikpLG51bGwhPT1lKXtjb25zdCB0PWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5vd25lckRvY3VtZW50O3JldHVybiB0JiZ0LmRlZmF1bHRWaWV3fHxudWxsfShlKSxyPWUuc3R5bGU7ci51c2VyU2VsZWN0PVwidGV4dFwiLHIud2hpdGVTcGFjZT1cInByZS13cmFwXCIsci53b3JkQnJlYWs9XCJicmVhay13b3JkXCIsZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWxleGljYWwtZWRpdG9yXCIsXCJ0cnVlXCIpLHRoaXMuX3dpbmRvdz10LHRoaXMuX2RpcnR5VHlwZT1XbSxDZyh0aGlzKSx0aGlzLl91cGRhdGVUYWdzLmFkZChcImhpc3RvcnktbWVyZ2VcIiksb3godGhpcyksdGhpcy5fY29uZmlnLmRpc2FibGVFdmVudHN8fGZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1lLm93bmVyRG9jdW1lbnQscj1DeS5nZXQobik7KHZvaWQgMD09PXJ8fHI8MSkmJm4uYWRkRXZlbnRMaXN0ZW5lcihcInNlbGVjdGlvbmNoYW5nZVwiLHp5KSxDeS5zZXQobiwocnx8MCkrMSksZS5fX2xleGljYWxFZGl0b3I9dDtjb25zdCBvPUx5KGUpO2ZvcihsZXQgbj0wO248d3kubGVuZ3RoO24rKyl7Y29uc3RbcixpXT13eVtuXSxzPVwiZnVuY3Rpb25cIj09dHlwZW9mIGk/ZT0+e1Z5KGUpfHwoQnkoZSksKHQuaXNFZGl0YWJsZSgpfHxcImNsaWNrXCI9PT1yKSYmaShlLHQpKX06ZT0+e2lmKFZ5KGUpKXJldHVybjtCeShlKTtjb25zdCBuPXQuaXNFZGl0YWJsZSgpO3N3aXRjaChyKXtjYXNlXCJjdXRcIjpyZXR1cm4gbiYmeHYodCxibSxlKTtjYXNlXCJjb3B5XCI6cmV0dXJuIHh2KHQseW0sZSk7Y2FzZVwicGFzdGVcIjpyZXR1cm4gbiYmeHYodCxZcCxlKTtjYXNlXCJkcmFnc3RhcnRcIjpyZXR1cm4gbiYmeHYodCxtbSxlKTtjYXNlXCJkcmFnb3ZlclwiOnJldHVybiBuJiZ4dih0LGdtLGUpO2Nhc2VcImRyYWdlbmRcIjpyZXR1cm4gbiYmeHYodCx2bSxlKTtjYXNlXCJmb2N1c1wiOnJldHVybiBuJiZ4dih0LGttLGUpO2Nhc2VcImJsdXJcIjpyZXR1cm4gbiYmeHYodCxDbSxlKTtjYXNlXCJkcm9wXCI6cmV0dXJuIG4mJnh2KHQscG0sZSl9fTtlLmFkZEV2ZW50TGlzdGVuZXIocixzKSxvLnB1c2goKCgpPT57ZS5yZW1vdmVFdmVudExpc3RlbmVyKHIscyl9KSl9fShlLHRoaXMpLG51bGwhPW4mJmUuY2xhc3NMaXN0LmFkZCguLi5uKX1lbHNlIHRoaXMuX2VkaXRvclN0YXRlPXIsdGhpcy5fcGVuZGluZ0VkaXRvclN0YXRlPW51bGwsdGhpcy5fd2luZG93PW51bGw7aXgoXCJyb290XCIsdGhpcywhMSxlLHQpfX1nZXRFbGVtZW50QnlLZXkoZSl7cmV0dXJuIHRoaXMuX2tleVRvRE9NTWFwLmdldChlKXx8bnVsbH1nZXRFZGl0b3JTdGF0ZSgpe3JldHVybiB0aGlzLl9lZGl0b3JTdGF0ZX1zZXRFZGl0b3JTdGF0ZShlLHQpe2UuaXNFbXB0eSgpJiZtZygzOCksa2codGhpcyk7Y29uc3Qgbj10aGlzLl9wZW5kaW5nRWRpdG9yU3RhdGUscj10aGlzLl91cGRhdGVUYWdzLG89dm9pZCAwIT09dD90LnRhZzpudWxsO251bGw9PT1ufHxuLmlzRW1wdHkoKXx8KG51bGwhPW8mJnIuYWRkKG8pLG94KHRoaXMpKSx0aGlzLl9wZW5kaW5nRWRpdG9yU3RhdGU9ZSx0aGlzLl9kaXJ0eVR5cGU9V20sdGhpcy5fZGlydHlFbGVtZW50cy5zZXQoXCJyb290XCIsITEpLHRoaXMuX2NvbXBvc2l0aW9uS2V5PW51bGwsbnVsbCE9byYmci5hZGQobyksb3godGhpcyl9cGFyc2VFZGl0b3JTdGF0ZShlLHQpe3JldHVybiBmdW5jdGlvbihlLHQsbil7Y29uc3Qgcj12eCgpLG89V2IsaT0kYixzPVViLGE9dC5fZGlydHlFbGVtZW50cyxsPXQuX2RpcnR5TGVhdmVzLGM9dC5fY2xvbmVOb3ROZWVkZWQsdT10Ll9kaXJ0eVR5cGU7dC5fZGlydHlFbGVtZW50cz1uZXcgTWFwLHQuX2RpcnR5TGVhdmVzPW5ldyBTZXQsdC5fY2xvbmVOb3ROZWVkZWQ9bmV3IFNldCx0Ll9kaXJ0eVR5cGU9MCxXYj1yLCRiPSExLFViPXQ7dHJ5e2NvbnN0IG89dC5fbm9kZXM7bngoZS5yb290LG8pLG4mJm4oKSxyLl9yZWFkT25seT0hMH1jYXRjaChlKXtlIGluc3RhbmNlb2YgRXJyb3ImJnQuX29uRXJyb3IoZSl9ZmluYWxseXt0Ll9kaXJ0eUVsZW1lbnRzPWEsdC5fZGlydHlMZWF2ZXM9bCx0Ll9jbG9uZU5vdE5lZWRlZD1jLHQuX2RpcnR5VHlwZT11LFdiPW8sJGI9aSxVYj1zfXJldHVybiByfShcInN0cmluZ1wiPT10eXBlb2YgZT9KU09OLnBhcnNlKGUpOmUsdGhpcyx0KX1yZWFkKGUpe3JldHVybiBveCh0aGlzKSx0aGlzLmdldEVkaXRvclN0YXRlKCkucmVhZChlLHtlZGl0b3I6dGhpc30pfXVwZGF0ZShlLHQpe2N4KHRoaXMsZSx0KX1mb2N1cyhlLHQ9e30pe2NvbnN0IG49dGhpcy5fcm9vdEVsZW1lbnQ7bnVsbCE9PW4mJihuLnNldEF0dHJpYnV0ZShcImF1dG9jYXBpdGFsaXplXCIsXCJvZmZcIiksY3godGhpcywoKCk9Pntjb25zdCBlPU1iKCksbj1KZygpO251bGwhPT1lP2UuZGlydHk9ITA6MCE9PW4uZ2V0Q2hpbGRyZW5TaXplKCkmJihcInJvb3RTdGFydFwiPT09dC5kZWZhdWx0U2VsZWN0aW9uP24uc2VsZWN0U3RhcnQoKTpuLnNlbGVjdEVuZCgpKX0pLHtvblVwZGF0ZTooKT0+e24ucmVtb3ZlQXR0cmlidXRlKFwiYXV0b2NhcGl0YWxpemVcIiksZSYmZSgpfSx0YWc6XCJmb2N1c1wifSksbnVsbD09PXRoaXMuX3BlbmRpbmdFZGl0b3JTdGF0ZSYmbi5yZW1vdmVBdHRyaWJ1dGUoXCJhdXRvY2FwaXRhbGl6ZVwiKSl9Ymx1cigpe2NvbnN0IGU9dGhpcy5fcm9vdEVsZW1lbnQ7bnVsbCE9PWUmJmUuYmx1cigpO2NvbnN0IHQ9UnYodGhpcy5fd2luZG93KTtudWxsIT09dCYmdC5yZW1vdmVBbGxSYW5nZXMoKX1pc0VkaXRhYmxlKCl7cmV0dXJuIHRoaXMuX2VkaXRhYmxlfXNldEVkaXRhYmxlKGUpe3RoaXMuX2VkaXRhYmxlIT09ZSYmKHRoaXMuX2VkaXRhYmxlPWUsaXgoXCJlZGl0YWJsZVwiLHRoaXMsITAsZSkpfXRvSlNPTigpe3JldHVybntlZGl0b3JTdGF0ZTp0aGlzLl9lZGl0b3JTdGF0ZS50b0pTT04oKX19fVR4LnZlcnNpb249XCIwLjE3LjErcHJvZC5lc21cIjtjb25zdCBPeD1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQmJnZvaWQgMCE9PXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50LFJ4PU94P28udXNlTGF5b3V0RWZmZWN0Om8udXNlRWZmZWN0LE54PXt0YWc6XCJoaXN0b3J5LW1lcmdlXCJ9O2Z1bmN0aW9uIEF4KHtpbml0aWFsQ29uZmlnOmUsY2hpbGRyZW46dH0pe2NvbnN0IG49KDAsby51c2VNZW1vKSgoKCk9Pntjb25zdHt0aGVtZTp0LG5hbWVzcGFjZTpuLG5vZGVzOnIsb25FcnJvcjpvLGVkaXRvclN0YXRlOmksaHRtbDpzfT1lLGE9ZnVuY3Rpb24oZSx0KXtsZXQgbj1udWxsO3JldHVybntnZXRUaGVtZTpmdW5jdGlvbigpe3JldHVybiBudWxsIT10P3Q6bnVsbCE9bj9uLmdldFRoZW1lKCk6bnVsbH19fSgwLHQpLGw9ZnVuY3Rpb24oZSl7Y29uc3QgdD1lfHx7fSxuPVViLHI9dC50aGVtZXx8e30sbz12b2lkIDA9PT1lP246dC5wYXJlbnRFZGl0b3J8fG51bGwsaT10LmRpc2FibGVFdmVudHN8fCExLHM9dngoKSxhPXQubmFtZXNwYWNlfHwobnVsbCE9PW8/by5fY29uZmlnLm5hbWVzcGFjZTpvdigpKSxsPXQuZWRpdG9yU3RhdGUsYz1bbXgsdGIsJHksaGIsd3gseHgsLi4udC5ub2Rlc3x8W11dLHtvbkVycm9yOnUsaHRtbDpkfT10LGY9dm9pZCAwPT09dC5lZGl0YWJsZXx8dC5lZGl0YWJsZTtsZXQgaDtpZih2b2lkIDA9PT1lJiZudWxsIT09biloPW4uX25vZGVzO2Vsc2V7aD1uZXcgTWFwO2ZvcihsZXQgZT0wO2U8Yy5sZW5ndGg7ZSsrKXtsZXQgdD1jW2VdLG49bnVsbCxyPW51bGw7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl7Y29uc3QgZT10O3Q9ZS5yZXBsYWNlLG49ZS53aXRoLHI9ZS53aXRoS2xhc3N8fG51bGx9Y29uc3Qgbz10LmdldFR5cGUoKSxpPXQudHJhbnNmb3JtKCkscz1uZXcgU2V0O251bGwhPT1pJiZzLmFkZChpKSxoLnNldChvLHtleHBvcnRET006ZCYmZC5leHBvcnQ/ZC5leHBvcnQuZ2V0KHQpOnZvaWQgMCxrbGFzczp0LHJlcGxhY2U6bixyZXBsYWNlV2l0aEtsYXNzOnIsdHJhbnNmb3JtczpzfSl9fWNvbnN0IHA9bmV3IFR4KHMsbyxoLHtkaXNhYmxlRXZlbnRzOmksbmFtZXNwYWNlOmEsdGhlbWU6cn0sdXx8Y29uc29sZS5lcnJvcixmdW5jdGlvbihlLHQpe2NvbnN0IG49bmV3IE1hcCxyPW5ldyBTZXQsbz1lPT57T2JqZWN0LmtleXMoZSkuZm9yRWFjaCgodD0+e2xldCByPW4uZ2V0KHQpO3ZvaWQgMD09PXImJihyPVtdLG4uc2V0KHQscikpLHIucHVzaChlW3RdKX0pKX07cmV0dXJuIGUuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9ZS5rbGFzcy5pbXBvcnRET007aWYobnVsbD09dHx8ci5oYXModCkpcmV0dXJuO3IuYWRkKHQpO2NvbnN0IG49dC5jYWxsKGUua2xhc3MpO251bGwhPT1uJiZvKG4pfSkpLHQmJm8odCksbn0oaCxkP2QuaW1wb3J0OnZvaWQgMCksZik7cmV0dXJuIHZvaWQgMCE9PWwmJihwLl9wZW5kaW5nRWRpdG9yU3RhdGU9bCxwLl9kaXJ0eVR5cGU9V20pLHB9KHtlZGl0YWJsZTplLmVkaXRhYmxlLGh0bWw6cyxuYW1lc3BhY2U6bixub2RlczpyLG9uRXJyb3I6ZT0+byhlLGwpLHRoZW1lOnR9KTtyZXR1cm4gZnVuY3Rpb24oZSx0KXtpZihudWxsIT09dClpZih2b2lkIDA9PT10KWUudXBkYXRlKCgoKT0+e2NvbnN0IHQ9SmcoKTtpZih0LmlzRW1wdHkoKSl7Y29uc3Qgbj1TeCgpO3QuYXBwZW5kKG4pO2NvbnN0IHI9T3g/ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDpudWxsOyhudWxsIT09TWIoKXx8bnVsbCE9PXImJnI9PT1lLmdldFJvb3RFbGVtZW50KCkpJiZuLnNlbGVjdCgpfX0pLE54KTtlbHNlIGlmKG51bGwhPT10KXN3aXRjaCh0eXBlb2YgdCl7Y2FzZVwic3RyaW5nXCI6e2NvbnN0IG49ZS5wYXJzZUVkaXRvclN0YXRlKHQpO2Uuc2V0RWRpdG9yU3RhdGUobixOeCk7YnJlYWt9Y2FzZVwib2JqZWN0XCI6ZS5zZXRFZGl0b3JTdGF0ZSh0LE54KTticmVhaztjYXNlXCJmdW5jdGlvblwiOmUudXBkYXRlKCgoKT0+e0pnKCkuaXNFbXB0eSgpJiZ0KGUpfSksTngpfX0obCxpKSxbbCxhXX0pLFtdKTtyZXR1cm4gUngoKCgpPT57Y29uc3QgdD1lLmVkaXRhYmxlLFtyXT1uO3Iuc2V0RWRpdGFibGUodm9pZCAwPT09dHx8dCl9KSxbXSksKDAsaXUuanN4KSh6cC5Qcm92aWRlcix7dmFsdWU6bixjaGlsZHJlbjp0fSl9Y29uc3Qgang9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmdm9pZCAwIT09d2luZG93LmRvY3VtZW50JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudD9vLnVzZUxheW91dEVmZmVjdDpvLnVzZUVmZmVjdDtmdW5jdGlvbiBNeChlKXtyZXR1cm57aW5pdGlhbFZhbHVlRm46KCk9PmUuaXNFZGl0YWJsZSgpLHN1YnNjcmliZTp0PT5lLnJlZ2lzdGVyRWRpdGFibGVMaXN0ZW5lcih0KX19ZnVuY3Rpb24gSXgoZSl7cmV0dXJuKCk9PmZ1bmN0aW9uKGUpe2lmKCFmdW5jdGlvbihlLHQ9ITApe2lmKGUpcmV0dXJuITE7bGV0IG49SmcoKS5nZXRUZXh0Q29udGVudCgpO3JldHVybiB0JiYobj1uLnRyaW0oKSksXCJcIj09PW59KGUsITEpKXJldHVybiExO2NvbnN0IHQ9SmcoKS5nZXRDaGlsZHJlbigpLG49dC5sZW5ndGg7aWYobj4xKXJldHVybiExO2ZvcihsZXQgZT0wO2U8bjtlKyspe2NvbnN0IG49dFtlXTtpZihweChuKSlyZXR1cm4hMTtpZihkeChuKSl7aWYoIWt4KG4pKXJldHVybiExO2lmKDAhPT1uLl9faW5kZW50KXJldHVybiExO2NvbnN0IHQ9bi5nZXRDaGlsZHJlbigpLHI9dC5sZW5ndGg7Zm9yKGxldCBuPTA7bjxyO24rKylpZighZGIodFtlXSkpcmV0dXJuITF9fXJldHVybiEwfShlKX0hZnVuY3Rpb24oZSl7ZSYmZS5fX2VzTW9kdWxlJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxcImRlZmF1bHRcIil9KChmdW5jdGlvbihlKXtjb25zdCB0PW5ldyBVUkxTZWFyY2hQYXJhbXM7dC5hcHBlbmQoXCJjb2RlXCIsZSk7Zm9yKGxldCBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0LmFwcGVuZChcInZcIixhcmd1bWVudHNbZV0pO3Rocm93IEVycm9yKGBNaW5pZmllZCBMZXhpY2FsIGVycm9yICMke2V9OyB2aXNpdCBodHRwczovL2xleGljYWwuZGV2L2RvY3MvZXJyb3I/JHt0fSBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuYCl9KSksZnVuY3Rpb24oZSl7ZSYmZS5fX2VzTW9kdWxlJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxcImRlZmF1bHRcIil9KChmdW5jdGlvbihlKXtjb25zdCB0PW5ldyBVUkxTZWFyY2hQYXJhbXM7dC5hcHBlbmQoXCJjb2RlXCIsZSk7Zm9yKGxldCBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0LmFwcGVuZChcInZcIixhcmd1bWVudHNbZV0pO3Rocm93IEVycm9yKGBNaW5pZmllZCBMZXhpY2FsIGVycm9yICMke2V9OyB2aXNpdCBodHRwczovL2xleGljYWwuZGV2L2RvY3MvZXJyb3I/JHt0fSBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuYCl9KSk7Y29uc3QgRHg9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmdm9pZCAwIT09d2luZG93LmRvY3VtZW50JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCxMeD1EeCYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50P2RvY3VtZW50LmRvY3VtZW50TW9kZTpudWxsO0R4JiYvTWFjfGlQb2R8aVBob25lfGlQYWQvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSxEeCYmL14oPyEuKlNlYW1vbmtleSkoPz0uKkZpcmVmb3gpLiovaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLCEoIUR4fHwhKFwiSW5wdXRFdmVudFwiaW4gd2luZG93KXx8THgpJiZuZXcgd2luZG93LklucHV0RXZlbnQoXCJpbnB1dFwiKSxEeCYmL1ZlcnNpb25cXC9bXFxkLl0rLipTYWZhcmkvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksRHgmJi9pUGFkfGlQaG9uZXxpUG9kLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiZ3aW5kb3cuTVNTdHJlYW0sRHgmJi9BbmRyb2lkLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLER4JiYvXig/PS4qQ2hyb21lKS4qL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtmdW5jdGlvbiBGeCguLi5lKXtyZXR1cm4oKT0+e2ZvcihsZXQgdD1lLmxlbmd0aC0xO3Q+PTA7dC0tKWVbdF0oKTtlLmxlbmd0aD0wfX1mdW5jdGlvbiB6eChlLHQpe2NvbnN0IG49eXYoZS5mb2N1cyx0KTtyZXR1cm4gcHgobikmJiFuLmlzSXNvbGF0ZWQoKXx8ZHgobikmJiFuLmlzSW5saW5lKCkmJiFuLmNhbkJlRW1wdHkoKX1mdW5jdGlvbiBCeChlLHQsbil7Y29uc3Qgcj1mdW5jdGlvbihlKXtjb25zdCB0PWUuYW5jaG9yLmdldE5vZGUoKTtyZXR1cm5cInJ0bFwiPT09KGd4KHQpP3Q6dC5nZXRQYXJlbnRPclRocm93KCkpLmdldERpcmVjdGlvbigpfShlKTshZnVuY3Rpb24oZSx0LG4pe2UubW9kaWZ5KHQ/XCJleHRlbmRcIjpcIm1vdmVcIixuLFwiY2hhcmFjdGVyXCIpfShlLHQsbj8hcjpyKX1mdW5jdGlvbiBWeChlLHQsbixyPW51bGwpe2xldCBvPW51bGw9PT1yfHx0LmlzU2VsZWN0ZWQocik7Y29uc3QgaT1keCh0KSYmdC5leGNsdWRlRnJvbUNvcHkoXCJodG1sXCIpO2xldCBzPXQ7aWYobnVsbCE9PXIpe2xldCBlPUZ2KHQpO2U9ZGIoZSkmJm51bGwhPT1yP2Z1bmN0aW9uKGUsdCl7Y29uc3Qgbj1lLmdldFN0YXJ0RW5kUG9pbnRzKCk7aWYodC5pc1NlbGVjdGVkKGUpJiYhdC5pc1NlZ21lbnRlZCgpJiYhdC5pc1Rva2VuKCkmJm51bGwhPT1uKXtjb25zdFtyLG9dPW4saT1lLmlzQmFja3dhcmQoKSxzPXIuZ2V0Tm9kZSgpLGE9by5nZXROb2RlKCksbD10LmlzKHMpLGM9dC5pcyhhKTtpZihsfHxjKXtjb25zdFtuLHJdPWtiKGUpLG89cy5pcyhhKSxsPXQuaXMoaT9hOnMpLGM9dC5pcyhpP3M6YSk7bGV0IHUsZD0wO3JldHVybiBvPyhkPW4+cj9yOm4sdT1uPnI/bjpyKTpsPyhkPWk/cjpuLHU9dm9pZCAwKTpjJiYoZD0wLHU9aT9uOnIpLHQuX190ZXh0PXQuX190ZXh0LnNsaWNlKGQsdSksdH19cmV0dXJuIHR9KHIsZSk6ZSxzPWV9Y29uc3QgYT1keChzKT9zLmdldENoaWxkcmVuKCk6W10sbD1lLl9ub2Rlcy5nZXQocy5nZXRUeXBlKCkpO2xldCBjO2M9bCYmdm9pZCAwIT09bC5leHBvcnRET00/bC5leHBvcnRET00oZSxzKTpzLmV4cG9ydERPTShlKTtjb25zdHtlbGVtZW50OnUsYWZ0ZXI6ZH09YztpZighdSlyZXR1cm4hMTtjb25zdCBmPWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtmb3IobGV0IG49MDtuPGEubGVuZ3RoO24rKyl7Y29uc3QgaT1hW25dLHM9VngoZSxpLGYscik7IW8mJmR4KHQpJiZzJiZ0LmV4dHJhY3RXaXRoQ2hpbGQoaSxyLFwiaHRtbFwiKSYmKG89ITApfWlmKG8mJiFpKXtpZihOdih1KSYmdS5hcHBlbmQoZiksbi5hcHBlbmQodSksZCl7Y29uc3QgZT1kLmNhbGwocyx1KTtlJiZ1LnJlcGxhY2VXaXRoKGUpfX1lbHNlIG4uYXBwZW5kKGYpO3JldHVybiBvfUR4JiYvQXBwbGVXZWJLaXRcXC9bXFxkLl0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLGZ1bmN0aW9uKGUpe2UmJmUuX19lc01vZHVsZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJkZWZhdWx0XCIpfSgoZnVuY3Rpb24oZSl7Y29uc3QgdD1uZXcgVVJMU2VhcmNoUGFyYW1zO3QuYXBwZW5kKFwiY29kZVwiLGUpO2ZvcihsZXQgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdC5hcHBlbmQoXCJ2XCIsYXJndW1lbnRzW2VdKTt0aHJvdyBFcnJvcihgTWluaWZpZWQgTGV4aWNhbCBlcnJvciAjJHtlfTsgdmlzaXQgaHR0cHM6Ly9sZXhpY2FsLmRldi9kb2NzL2Vycm9yPyR7dH0gZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLmApfSkpLG5ldyBNYXAsbmV3IFNldChbXCJTVFlMRVwiLFwiU0NSSVBUXCJdKTt2YXIgV3g9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZSYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJkZWZhdWx0XCIpP2UuZGVmYXVsdDplfSgoZnVuY3Rpb24oZSl7Y29uc3QgdD1uZXcgVVJMU2VhcmNoUGFyYW1zO3QuYXBwZW5kKFwiY29kZVwiLGUpO2ZvcihsZXQgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdC5hcHBlbmQoXCJ2XCIsYXJndW1lbnRzW2VdKTt0aHJvdyBFcnJvcihgTWluaWZpZWQgTGV4aWNhbCBlcnJvciAjJHtlfTsgdmlzaXQgaHR0cHM6Ly9sZXhpY2FsLmRldi9kb2NzL2Vycm9yPyR7dH0gZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLmApfSkpO2Z1bmN0aW9uIFV4KGUsdCl7Y29uc3Qgbj1lLmdldERhdGEoXCJ0ZXh0L3BsYWluXCIpfHxlLmdldERhdGEoXCJ0ZXh0L3VyaS1saXN0XCIpO251bGwhPW4mJnQuaW5zZXJ0UmF3VGV4dChuKX1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQmJndpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50O2NvbnN0ICR4PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJnZvaWQgMCE9PXdpbmRvdy5kb2N1bWVudCYmdm9pZCAwIT09d2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQsS3g9JHgmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudD9kb2N1bWVudC5kb2N1bWVudE1vZGU6bnVsbCxIeD0hKCEkeHx8IShcIklucHV0RXZlbnRcImluIHdpbmRvdyl8fEt4KSYmXCJnZXRUYXJnZXRSYW5nZXNcImluIG5ldyB3aW5kb3cuSW5wdXRFdmVudChcImlucHV0XCIpLHF4PSR4JiYvVmVyc2lvblxcL1tcXGQuXSsuKlNhZmFyaS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxZeD0keCYmL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkmJiF3aW5kb3cuTVNTdHJlYW0sR3g9JHgmJi9eKD89LipDaHJvbWUpLiovaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLFh4PSR4JiYvQXBwbGVXZWJLaXRcXC9bXFxkLl0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpJiYhR3g7ZnVuY3Rpb24gSngoZSx0KXt0LnVwZGF0ZSgoKCk9PntpZihudWxsIT09ZSl7Y29uc3Qgcj1mdW5jdGlvbihlLHQpe3JldHVybiBudWxsIT09ZSYmT2JqZWN0LmdldFByb3RvdHlwZU9mKGUpLmNvbnN0cnVjdG9yLm5hbWU9PT10Lm5hbWV9KGUsS2V5Ym9hcmRFdmVudCk/bnVsbDplLmNsaXBib2FyZERhdGEsbz1NYigpO2lmKG51bGwhPT1vJiZudWxsIT1yKXtlLnByZXZlbnREZWZhdWx0KCk7Y29uc3QgaT1mdW5jdGlvbihlLHQ9TWIoKSl7cmV0dXJuIG51bGw9PXQmJld4KDE2Niksd2IodCkmJnQuaXNDb2xsYXBzZWQoKXx8MD09PXQuZ2V0Tm9kZXMoKS5sZW5ndGg/XCJcIjpmdW5jdGlvbihlLHQpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBkb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvdyYmdm9pZCAwPT09bi5nLndpbmRvdyl0aHJvdyBuZXcgRXJyb3IoXCJUbyB1c2UgJGdlbmVyYXRlSHRtbEZyb21Ob2RlcyBpbiBoZWFkbGVzcyBtb2RlIHBsZWFzZSBpbml0aWFsaXplIGEgaGVhZGxlc3MgYnJvd3NlciBpbXBsZW1lbnRhdGlvbiBzdWNoIGFzIEpTRG9tIGJlZm9yZSBjYWxsaW5nIHRoaXMgZnVuY3Rpb24uXCIpO2NvbnN0IHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxvPUpnKCkuZ2V0Q2hpbGRyZW4oKTtmb3IobGV0IG49MDtuPG8ubGVuZ3RoO24rKylWeChlLG9bbl0scix0KTtyZXR1cm4gci5pbm5lckhUTUx9KGUsdCl9KHQpO251bGwhPT1pJiZyLnNldERhdGEoXCJ0ZXh0L2h0bWxcIixpKSxyLnNldERhdGEoXCJ0ZXh0L3BsYWluXCIsby5nZXRUZXh0Q29udGVudCgpKX19fSkpfWNvbnN0IFp4PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJnZvaWQgMCE9PXdpbmRvdy5kb2N1bWVudCYmdm9pZCAwIT09d2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ/by51c2VMYXlvdXRFZmZlY3Q6by51c2VFZmZlY3Q7ZnVuY3Rpb24gUXgoZSl7cmV0dXJuIGUuZ2V0RWRpdG9yU3RhdGUoKS5yZWFkKEl4KGUuaXNDb21wb3NpbmcoKSkpfWZ1bmN0aW9uIGV3KHtjb250ZW50RWRpdGFibGU6ZSxwbGFjZWhvbGRlcjp0PW51bGwsRXJyb3JCb3VuZGFyeTpufSl7Y29uc3Rbcl09QnAoKSxpPWZ1bmN0aW9uKGUsdCl7Y29uc3RbbixyXT0oMCxvLnVzZVN0YXRlKSgoKCk9PmUuZ2V0RGVjb3JhdG9ycygpKSk7cmV0dXJuIFp4KCgoKT0+ZS5yZWdpc3RlckRlY29yYXRvckxpc3RlbmVyKChlPT57KDAsem4uZmx1c2hTeW5jKSgoKCk9PntyKGUpfSkpfSkpKSxbZV0pLCgwLG8udXNlRWZmZWN0KSgoKCk9PntyKGUuZ2V0RGVjb3JhdG9ycygpKX0pLFtlXSksKDAsby51c2VNZW1vKSgoKCk9Pntjb25zdCByPVtdLGk9T2JqZWN0LmtleXMobik7Zm9yKGxldCBzPTA7czxpLmxlbmd0aDtzKyspe2NvbnN0IGE9aVtzXSxsPSgwLGl1LmpzeCkodCx7b25FcnJvcjp0PT5lLl9vbkVycm9yKHQpLGNoaWxkcmVuOigwLGl1LmpzeCkoby5TdXNwZW5zZSx7ZmFsbGJhY2s6bnVsbCxjaGlsZHJlbjpuW2FdfSl9KSxjPWUuZ2V0RWxlbWVudEJ5S2V5KGEpO251bGwhPT1jJiZyLnB1c2goKDAsem4uY3JlYXRlUG9ydGFsKShsLGMsYSkpfXJldHVybiByfSksW3QsbixlXSl9KHIsbik7cmV0dXJuIGZ1bmN0aW9uKGUpe1p4KCgoKT0+RngoZnVuY3Rpb24oZSl7cmV0dXJuIEZ4KGUucmVnaXN0ZXJDb21tYW5kKCRwLChlPT57Y29uc3QgdD1NYigpO3JldHVybiEhd2IodCkmJih0LmRlbGV0ZUNoYXJhY3RlcihlKSwhMCl9KSwwKSxlLnJlZ2lzdGVyQ29tbWFuZChYcCwoZT0+e2NvbnN0IHQ9TWIoKTtyZXR1cm4hIXdiKHQpJiYodC5kZWxldGVXb3JkKGUpLCEwKX0pLDApLGUucmVnaXN0ZXJDb21tYW5kKEpwLChlPT57Y29uc3QgdD1NYigpO3JldHVybiEhd2IodCkmJih0LmRlbGV0ZUxpbmUoZSksITApfSksMCksZS5yZWdpc3RlckNvbW1hbmQocXAsKGU9Pntjb25zdCB0PU1iKCk7aWYoIXdiKHQpKXJldHVybiExO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXQuaW5zZXJ0VGV4dChlKTtlbHNle2NvbnN0IG49ZS5kYXRhVHJhbnNmZXI7aWYobnVsbCE9bilVeChuLHQpO2Vsc2V7Y29uc3Qgbj1lLmRhdGE7biYmdC5pbnNlcnRUZXh0KG4pfX1yZXR1cm4hMH0pLDApLGUucmVnaXN0ZXJDb21tYW5kKEdwLCgoKT0+e2NvbnN0IGU9TWIoKTtyZXR1cm4hIXdiKGUpJiYoZS5yZW1vdmVUZXh0KCksITApfSksMCksZS5yZWdpc3RlckNvbW1hbmQoS3AsKGU9Pntjb25zdCB0PU1iKCk7cmV0dXJuISF3Yih0KSYmKHQuaW5zZXJ0TGluZUJyZWFrKGUpLCEwKX0pLDApLGUucmVnaXN0ZXJDb21tYW5kKEhwLCgoKT0+e2NvbnN0IGU9TWIoKTtyZXR1cm4hIXdiKGUpJiYoZS5pbnNlcnRMaW5lQnJlYWsoKSwhMCl9KSwwKSxlLnJlZ2lzdGVyQ29tbWFuZChvbSwoZT0+e2NvbnN0IHQ9TWIoKTtpZighd2IodCkpcmV0dXJuITE7Y29uc3Qgbj1lLHI9bi5zaGlmdEtleTtyZXR1cm4hIXp4KHQsITApJiYobi5wcmV2ZW50RGVmYXVsdCgpLEJ4KHQsciwhMCksITApfSksMCksZS5yZWdpc3RlckNvbW1hbmQobm0sKGU9Pntjb25zdCB0PU1iKCk7aWYoIXdiKHQpKXJldHVybiExO2NvbnN0IG49ZSxyPW4uc2hpZnRLZXk7cmV0dXJuISF6eCh0LCExKSYmKG4ucHJldmVudERlZmF1bHQoKSxCeCh0LHIsITEpLCEwKX0pLDApLGUucmVnaXN0ZXJDb21tYW5kKHVtLCh0PT4hIXdiKE1iKCkpJiYodC5wcmV2ZW50RGVmYXVsdCgpLGUuZGlzcGF0Y2hDb21tYW5kKCRwLCEwKSkpLDApLGUucmVnaXN0ZXJDb21tYW5kKGZtLCh0PT4hIXdiKE1iKCkpJiYodC5wcmV2ZW50RGVmYXVsdCgpLGUuZGlzcGF0Y2hDb21tYW5kKCRwLCExKSkpLDApLGUucmVnaXN0ZXJDb21tYW5kKGxtLCh0PT57aWYoIXdiKE1iKCkpKXJldHVybiExO2lmKG51bGwhPT10KXtpZigoWXh8fHF4fHxYeCkmJkh4KXJldHVybiExO3QucHJldmVudERlZmF1bHQoKX1yZXR1cm4gZS5kaXNwYXRjaENvbW1hbmQoS3AsITEpfSksMCksZS5yZWdpc3RlckNvbW1hbmQoeG0sKCgpPT4oZnVuY3Rpb24oKXtjb25zdCBlPUpnKCk7UWcoZnVuY3Rpb24oZSl7cmV0dXJuIFJnKGUuYW5jaG9yKSxSZyhlLmZvY3VzKSxlfShlLnNlbGVjdCgwLGUuZ2V0Q2hpbGRyZW5TaXplKCkpKSl9KCksITApKSwwKSxlLnJlZ2lzdGVyQ29tbWFuZCh5bSwodD0+ISF3YihNYigpKSYmKEp4KHQsZSksITApKSwwKSxlLnJlZ2lzdGVyQ29tbWFuZChibSwodD0+ISF3YihNYigpKSYmKGZ1bmN0aW9uKGUsdCl7SngoZSx0KSx0LnVwZGF0ZSgoKCk9Pntjb25zdCBlPU1iKCk7d2IoZSkmJmUucmVtb3ZlVGV4dCgpfSkpfSh0LGUpLCEwKSksMCksZS5yZWdpc3RlckNvbW1hbmQoWXAsKHQ9PiEhd2IoTWIoKSkmJihmdW5jdGlvbihlLHQpe2UucHJldmVudERlZmF1bHQoKSx0LnVwZGF0ZSgoKCk9Pntjb25zdCB0PU1iKCkse2NsaXBib2FyZERhdGE6bn09ZTtudWxsIT1uJiZ3Yih0KSYmVXgobix0KX0pLHt0YWc6XCJwYXN0ZVwifSl9KHQsZSksITApKSwwKSxlLnJlZ2lzdGVyQ29tbWFuZChwbSwoZT0+ISF3YihNYigpKSYmKGUucHJldmVudERlZmF1bHQoKSwhMCkpLDApLGUucmVnaXN0ZXJDb21tYW5kKG1tLChlPT4hIXdiKE1iKCkpJiYoZS5wcmV2ZW50RGVmYXVsdCgpLCEwKSksMCkpfShlKSxmdW5jdGlvbihlKXtjb25zdCB0PXdpbmRvdy5sb2NhdGlvbi5vcmlnaW4sbj1uPT57aWYobi5vcmlnaW4hPT10KXJldHVybjtjb25zdCByPWUuZ2V0Um9vdEVsZW1lbnQoKTtpZihkb2N1bWVudC5hY3RpdmVFbGVtZW50IT09cilyZXR1cm47Y29uc3Qgbz1uLmRhdGE7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG8pe2xldCB0O3RyeXt0PUpTT04ucGFyc2Uobyl9Y2F0Y2goZSl7cmV0dXJufWlmKHQmJlwibnVhbnJpYV9tZXNzYWdpbmdcIj09PXQucHJvdG9jb2wmJlwicmVxdWVzdFwiPT09dC50eXBlKXtjb25zdCByPXQucGF5bG9hZDtpZihyJiZcIm1ha2VDaGFuZ2VzXCI9PT1yLmZ1bmN0aW9uSWQpe2NvbnN0IHQ9ci5hcmdzO2lmKHQpe2NvbnN0W3IsbyxpLHMsYSxsXT10O2UudXBkYXRlKCgoKT0+e2NvbnN0IGU9TWIoKTtpZih3YihlKSl7Y29uc3QgdD1lLmFuY2hvcjtsZXQgbD10LmdldE5vZGUoKSxjPTAsdT0wO2lmKGRiKGwpJiZyPj0wJiZvPj0wJiYoYz1yLHU9citvLGUuc2V0VGV4dE5vZGVSYW5nZShsLGMsbCx1KSksYz09PXUmJlwiXCI9PT1pfHwoZS5pbnNlcnRSYXdUZXh0KGkpLGw9dC5nZXROb2RlKCkpLGRiKGwpKXtjPXMsdT1zK2E7Y29uc3QgdD1sLmdldFRleHRDb250ZW50U2l6ZSgpO2M9Yz50P3Q6Yyx1PXU+dD90OnUsZS5zZXRUZXh0Tm9kZVJhbmdlKGwsYyxsLHUpfW4uc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9fSkpfX19fX07cmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLG4sITApLCgpPT57d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsbiwhMCl9fShlKSkpLFtlXSl9KHIpLCgwLGl1LmpzeHMpKGl1LkZyYWdtZW50LHtjaGlsZHJlbjpbZSwoMCxpdS5qc3gpKHR3LHtjb250ZW50OnR9KSxpXX0pfWZ1bmN0aW9uIHR3KHtjb250ZW50OmV9KXtjb25zdFt0XT1CcCgpLG49ZnVuY3Rpb24oZSl7Y29uc3RbdCxuXT0oMCxvLnVzZVN0YXRlKSgoKCk9PlF4KGUpKSk7cmV0dXJuIFp4KCgoKT0+e2Z1bmN0aW9uIHQoKXtjb25zdCB0PVF4KGUpO24odCl9cmV0dXJuIHQoKSxGeChlLnJlZ2lzdGVyVXBkYXRlTGlzdGVuZXIoKCgpPT57dCgpfSkpLGUucmVnaXN0ZXJFZGl0YWJsZUxpc3RlbmVyKCgoKT0+e3QoKX0pKSl9KSxbZV0pLHR9KHQpLHI9ZnVuY3Rpb24oZSl7Y29uc3RbdF09QnAoKSxuPSgwLG8udXNlTWVtbykoKCgpPT5lKHQpKSxbdCxlXSkscj0oMCxvLnVzZVJlZikobi5pbml0aWFsVmFsdWVGbigpKSxbaSxzXT0oMCxvLnVzZVN0YXRlKShyLmN1cnJlbnQpO3JldHVybiBqeCgoKCk9Pntjb25zdHtpbml0aWFsVmFsdWVGbjplLHN1YnNjcmliZTp0fT1uLG89ZSgpO3JldHVybiByLmN1cnJlbnQhPT1vJiYoci5jdXJyZW50PW8scyhvKSksdCgoZT0+e3IuY3VycmVudD1lLHMoZSl9KSl9KSxbbixlXSksaX0oTXgpO3JldHVybiBuP1wiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZShyKTplOm51bGx9Y29uc3Qgbnc9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmdm9pZCAwIT09d2luZG93LmRvY3VtZW50JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudD9vLnVzZUxheW91dEVmZmVjdDpvLnVzZUVmZmVjdCxydz0oMCxvLmZvcndhcmRSZWYpKChmdW5jdGlvbih7ZWRpdG9yOmUsYXJpYUFjdGl2ZURlc2NlbmRhbnQ6dCxhcmlhQXV0b0NvbXBsZXRlOm4sYXJpYUNvbnRyb2xzOnIsYXJpYURlc2NyaWJlZEJ5OmksYXJpYUV4cGFuZGVkOnMsYXJpYUxhYmVsOmEsYXJpYUxhYmVsbGVkQnk6bCxhcmlhTXVsdGlsaW5lOmMsYXJpYU93bnM6dSxhcmlhUmVxdWlyZWQ6ZCxhdXRvQ2FwaXRhbGl6ZTpmLGNsYXNzTmFtZTpoLGlkOnAscm9sZTptPVwidGV4dGJveFwiLHNwZWxsQ2hlY2s6Zz0hMCxzdHlsZTp2LHRhYkluZGV4OnksXCJkYXRhLXRlc3RpZFwiOmIsLi4ueH0sdyl7Y29uc3RbRSxTXT0oMCxvLnVzZVN0YXRlKShlLmlzRWRpdGFibGUoKSksXz0oMCxvLnVzZUNhbGxiYWNrKSgodD0+e3QmJnQub3duZXJEb2N1bWVudCYmdC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3P2Uuc2V0Um9vdEVsZW1lbnQodCk6ZS5zZXRSb290RWxlbWVudChudWxsKX0pLFtlXSksaz0oMCxvLnVzZU1lbW8pKCgoKT0+ZnVuY3Rpb24oLi4uZSl7cmV0dXJuIHQ9PntlLmZvckVhY2goKGU9PntcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UodCk6bnVsbCE9ZSYmKGUuY3VycmVudD10KX0pKX19KHcsXykpLFtfLHddKTtyZXR1cm4gbncoKCgpPT4oUyhlLmlzRWRpdGFibGUoKSksZS5yZWdpc3RlckVkaXRhYmxlTGlzdGVuZXIoKGU9PntTKGUpfSkpKSksW2VdKSwoMCxpdS5qc3gpKFwiZGl2XCIsey4uLngsXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIjpFP3Q6dm9pZCAwLFwiYXJpYS1hdXRvY29tcGxldGVcIjpFP246XCJub25lXCIsXCJhcmlhLWNvbnRyb2xzXCI6RT9yOnZvaWQgMCxcImFyaWEtZGVzY3JpYmVkYnlcIjppLFwiYXJpYS1leHBhbmRlZFwiOkUmJlwiY29tYm9ib3hcIj09PW0/ISFzOnZvaWQgMCxcImFyaWEtbGFiZWxcIjphLFwiYXJpYS1sYWJlbGxlZGJ5XCI6bCxcImFyaWEtbXVsdGlsaW5lXCI6YyxcImFyaWEtb3duc1wiOkU/dTp2b2lkIDAsXCJhcmlhLXJlYWRvbmx5XCI6IUV8fHZvaWQgMCxcImFyaWEtcmVxdWlyZWRcIjpkLGF1dG9DYXBpdGFsaXplOmYsY2xhc3NOYW1lOmgsY29udGVudEVkaXRhYmxlOkUsXCJkYXRhLXRlc3RpZFwiOmIsaWQ6cCxyZWY6ayxyb2xlOkU/bTp2b2lkIDAsc3BlbGxDaGVjazpnLHN0eWxlOnYsdGFiSW5kZXg6eX0pfSkpO2Z1bmN0aW9uIG93KGUpe3JldHVybiBlLmdldEVkaXRvclN0YXRlKCkucmVhZChJeChlLmlzQ29tcG9zaW5nKCkpKX1jb25zdCBpdz0oMCxvLmZvcndhcmRSZWYpKChmdW5jdGlvbihlLHQpe2NvbnN0e3BsYWNlaG9sZGVyOm4sLi4ucn09ZSxbb109QnAoKTtyZXR1cm4oMCxpdS5qc3hzKShpdS5GcmFnbWVudCx7Y2hpbGRyZW46WygwLGl1LmpzeCkocncse2VkaXRvcjpvLC4uLnIscmVmOnR9KSxudWxsIT1uJiYoMCxpdS5qc3gpKHN3LHtlZGl0b3I6byxjb250ZW50Om59KV19KX0pKTtmdW5jdGlvbiBzdyh7Y29udGVudDplLGVkaXRvcjp0fSl7Y29uc3Qgbj1mdW5jdGlvbihlKXtjb25zdFt0LG5dPSgwLG8udXNlU3RhdGUpKCgoKT0+b3coZSkpKTtyZXR1cm4gbncoKCgpPT57ZnVuY3Rpb24gdCgpe2NvbnN0IHQ9b3coZSk7bih0KX1yZXR1cm4gdCgpLEZ4KGUucmVnaXN0ZXJVcGRhdGVMaXN0ZW5lcigoKCk9Pnt0KCl9KSksZS5yZWdpc3RlckVkaXRhYmxlTGlzdGVuZXIoKCgpPT57dCgpfSkpKX0pLFtlXSksdH0odCksW3IsaV09KDAsby51c2VTdGF0ZSkodC5pc0VkaXRhYmxlKCkpO2lmKCgwLG8udXNlTGF5b3V0RWZmZWN0KSgoKCk9PihpKHQuaXNFZGl0YWJsZSgpKSx0LnJlZ2lzdGVyRWRpdGFibGVMaXN0ZW5lcigoZT0+e2koZSl9KSkpKSxbdF0pLCFuKXJldHVybiBudWxsO2xldCBzPW51bGw7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZT9zPWUocik6bnVsbCE9PWUmJihzPWUpLG51bGw9PT1zP251bGw6KDAsaXUuanN4KShcImRpdlwiLHtcImFyaWEtaGlkZGVuXCI6ITAsY2hpbGRyZW46c30pfWNvbnN0IGF3PTAsbHc9MSxjdz0yLHV3PTAsZHc9MSxmdz0yLGh3PTMscHc9NDtmdW5jdGlvbiBtdyhlKXtlLnVuZG9TdGFjaz1bXSxlLnJlZG9TdGFjaz1bXSxlLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBndyh7ZGVsYXk6ZSxleHRlcm5hbEhpc3RvcnlTdGF0ZTp0fSl7Y29uc3Rbbl09QnAoKTtyZXR1cm4gZnVuY3Rpb24oZSx0LG49MWUzKXtjb25zdCByPSgwLG8udXNlTWVtbykoKCgpPT50fHx7Y3VycmVudDpudWxsLHJlZG9TdGFjazpbXSx1bmRvU3RhY2s6W119KSxbdF0pOygwLG8udXNlRWZmZWN0KSgoKCk9PmZ1bmN0aW9uKGUsdCxuKXtjb25zdCByPWZ1bmN0aW9uKGUsdCl7bGV0IG49RGF0ZS5ub3coKSxyPXV3O3JldHVybihvLGkscyxhLGwsYyk9Pntjb25zdCB1PURhdGUubm93KCk7aWYoYy5oYXMoXCJoaXN0b3JpY1wiKSlyZXR1cm4gcj11dyxuPXUsY3c7Y29uc3QgZD1mdW5jdGlvbihlLHQsbixyLG8pe2lmKG51bGw9PT1lfHwwPT09bi5zaXplJiYwPT09ci5zaXplJiYhbylyZXR1cm4gdXc7Y29uc3QgaT10Ll9zZWxlY3Rpb24scz1lLl9zZWxlY3Rpb247aWYobylyZXR1cm4gZHc7aWYoISh3YihpKSYmd2IocykmJnMuaXNDb2xsYXBzZWQoKSYmaS5pc0NvbGxhcHNlZCgpKSlyZXR1cm4gdXc7Y29uc3QgYT1mdW5jdGlvbihlLHQsbil7Y29uc3Qgcj1lLl9ub2RlTWFwLG89W107Zm9yKGNvbnN0IGUgb2YgdCl7Y29uc3QgdD1yLmdldChlKTt2b2lkIDAhPT10JiZvLnB1c2godCl9Zm9yKGNvbnN0W2UsdF1vZiBuKXtpZighdCljb250aW51ZTtjb25zdCBuPXIuZ2V0KGUpO3ZvaWQgMD09PW58fGd4KG4pfHxvLnB1c2gobil9cmV0dXJuIG99KHQsbixyKTtpZigwPT09YS5sZW5ndGgpcmV0dXJuIHV3O2lmKGEubGVuZ3RoPjEpe2NvbnN0IG49dC5fbm9kZU1hcCxyPW4uZ2V0KGkuYW5jaG9yLmtleSksbz1uLmdldChzLmFuY2hvci5rZXkpO3JldHVybiByJiZvJiYhZS5fbm9kZU1hcC5oYXMoci5fX2tleSkmJmRiKHIpJiYxPT09ci5fX3RleHQubGVuZ3RoJiYxPT09aS5hbmNob3Iub2Zmc2V0P2Z3OnV3fWNvbnN0IGw9YVswXSxjPWUuX25vZGVNYXAuZ2V0KGwuX19rZXkpO2lmKCFkYihjKXx8IWRiKGwpfHxjLl9fbW9kZSE9PWwuX19tb2RlKXJldHVybiB1dztjb25zdCB1PWMuX190ZXh0LGQ9bC5fX3RleHQ7aWYodT09PWQpcmV0dXJuIHV3O2NvbnN0IGY9aS5hbmNob3IsaD1zLmFuY2hvcjtpZihmLmtleSE9PWgua2V5fHxcInRleHRcIiE9PWYudHlwZSlyZXR1cm4gdXc7Y29uc3QgcD1mLm9mZnNldCxtPWgub2Zmc2V0LGc9ZC5sZW5ndGgtdS5sZW5ndGg7cmV0dXJuIDE9PT1nJiZtPT09cC0xP2Z3Oi0xPT09ZyYmbT09PXArMT9odzotMT09PWcmJm09PT1wP3B3OnV3fShvLGksYSxsLGUuaXNDb21wb3NpbmcoKSksZj0oKCk9Pntjb25zdCBmPW51bGw9PT1zfHxzLmVkaXRvcj09PWUsaD1jLmhhcyhcImhpc3RvcnktcHVzaFwiKTtpZighaCYmZiYmYy5oYXMoXCJoaXN0b3J5LW1lcmdlXCIpKXJldHVybiBhdztpZihudWxsPT09bylyZXR1cm4gbHc7Y29uc3QgcD1pLl9zZWxlY3Rpb247cmV0dXJuIGEuc2l6ZT4wfHxsLnNpemU+MD8hMT09PWgmJmQhPT11dyYmZD09PXImJnU8bit0JiZmfHwxPT09YS5zaXplJiZmdW5jdGlvbihlLHQsbil7Y29uc3Qgcj10Ll9ub2RlTWFwLmdldChlKSxvPW4uX25vZGVNYXAuZ2V0KGUpLGk9dC5fc2VsZWN0aW9uLHM9bi5fc2VsZWN0aW9uO3JldHVybiEod2IoaSkmJndiKHMpJiZcImVsZW1lbnRcIj09PWkuYW5jaG9yLnR5cGUmJlwiZWxlbWVudFwiPT09aS5mb2N1cy50eXBlJiZcInRleHRcIj09PXMuYW5jaG9yLnR5cGUmJlwidGV4dFwiPT09cy5mb2N1cy50eXBlfHwhZGIocil8fCFkYihvKXx8ci5fX3BhcmVudCE9PW8uX19wYXJlbnQpJiZKU09OLnN0cmluZ2lmeSh0LnJlYWQoKCgpPT5yLmV4cG9ydEpTT04oKSkpKT09PUpTT04uc3RyaW5naWZ5KG4ucmVhZCgoKCk9Pm8uZXhwb3J0SlNPTigpKSkpfShBcnJheS5mcm9tKGEpWzBdLG8saSk/YXc6bHc6bnVsbCE9PXA/YXc6Y3d9KSgpO3JldHVybiBuPXUscj1kLGZ9fShlLG4pLG89RngoZS5yZWdpc3RlckNvbW1hbmQoUXAsKCgpPT4oZnVuY3Rpb24oZSx0KXtjb25zdCBuPXQucmVkb1N0YWNrLHI9dC51bmRvU3RhY2s7aWYoMCE9PXIubGVuZ3RoKXtjb25zdCBvPXQuY3VycmVudCxpPXIucG9wKCk7bnVsbCE9PW8mJihuLnB1c2gobyksZS5kaXNwYXRjaENvbW1hbmQoU20sITApKSwwPT09ci5sZW5ndGgmJmUuZGlzcGF0Y2hDb21tYW5kKF9tLCExKSx0LmN1cnJlbnQ9aXx8bnVsbCxpJiZpLmVkaXRvci5zZXRFZGl0b3JTdGF0ZShpLmVkaXRvclN0YXRlLHt0YWc6XCJoaXN0b3JpY1wifSl9fShlLHQpLCEwKSksMCksZS5yZWdpc3RlckNvbW1hbmQoZW0sKCgpPT4oZnVuY3Rpb24oZSx0KXtjb25zdCBuPXQucmVkb1N0YWNrLHI9dC51bmRvU3RhY2s7aWYoMCE9PW4ubGVuZ3RoKXtjb25zdCBvPXQuY3VycmVudDtudWxsIT09byYmKHIucHVzaChvKSxlLmRpc3BhdGNoQ29tbWFuZChfbSwhMCkpO2NvbnN0IGk9bi5wb3AoKTswPT09bi5sZW5ndGgmJmUuZGlzcGF0Y2hDb21tYW5kKFNtLCExKSx0LmN1cnJlbnQ9aXx8bnVsbCxpJiZpLmVkaXRvci5zZXRFZGl0b3JTdGF0ZShpLmVkaXRvclN0YXRlLHt0YWc6XCJoaXN0b3JpY1wifSl9fShlLHQpLCEwKSksMCksZS5yZWdpc3RlckNvbW1hbmQod20sKCgpPT4obXcodCksITEpKSwwKSxlLnJlZ2lzdGVyQ29tbWFuZChFbSwoKCk9Pihtdyh0KSxlLmRpc3BhdGNoQ29tbWFuZChTbSwhMSksZS5kaXNwYXRjaENvbW1hbmQoX20sITEpLCEwKSksMCksZS5yZWdpc3RlclVwZGF0ZUxpc3RlbmVyKCgoe2VkaXRvclN0YXRlOm4scHJldkVkaXRvclN0YXRlOm8sZGlydHlMZWF2ZXM6aSxkaXJ0eUVsZW1lbnRzOnMsdGFnczphfSk9Pntjb25zdCBsPXQuY3VycmVudCxjPXQucmVkb1N0YWNrLHU9dC51bmRvU3RhY2ssZD1udWxsPT09bD9udWxsOmwuZWRpdG9yU3RhdGU7aWYobnVsbCE9PWwmJm49PT1kKXJldHVybjtjb25zdCBmPXIobyxuLGwsaSxzLGEpO2lmKGY9PT1sdykwIT09Yy5sZW5ndGgmJih0LnJlZG9TdGFjaz1bXSxlLmRpc3BhdGNoQ29tbWFuZChTbSwhMSkpLG51bGwhPT1sJiYodS5wdXNoKHsuLi5sfSksZS5kaXNwYXRjaENvbW1hbmQoX20sITApKTtlbHNlIGlmKGY9PT1jdylyZXR1cm47dC5jdXJyZW50PXtlZGl0b3I6ZSxlZGl0b3JTdGF0ZTpufX0pKSk7cmV0dXJuIG99KGUscixuKSksW24sZSxyXSl9KG4sdCxlKSxudWxsfWZ1bmN0aW9uIHZ3KGUsdCl7cmV0dXJuIHZ3PU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuX19wcm90b19fPXQsZX0sdncoZSx0KX12YXIgeXc9e2Vycm9yOm51bGx9LGJ3PWZ1bmN0aW9uKGUpe3ZhciB0LG47ZnVuY3Rpb24gcigpe2Zvcih2YXIgdCxuPWFyZ3VtZW50cy5sZW5ndGgscj1uZXcgQXJyYXkobiksbz0wO288bjtvKyspcltvXT1hcmd1bWVudHNbb107cmV0dXJuKHQ9ZS5jYWxsLmFwcGx5KGUsW3RoaXNdLmNvbmNhdChyKSl8fHRoaXMpLnN0YXRlPXl3LHQucmVzZXRFcnJvckJvdW5kYXJ5PWZ1bmN0aW9uKCl7Zm9yKHZhciBlLG49YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheShuKSxvPTA7bzxuO28rKylyW29dPWFyZ3VtZW50c1tvXTtudWxsPT10LnByb3BzLm9uUmVzZXR8fChlPXQucHJvcHMpLm9uUmVzZXQuYXBwbHkoZSxyKSx0LnJlc2V0KCl9LHR9bj1lLCh0PXIpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG4ucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LHZ3KHQsbiksci5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I9ZnVuY3Rpb24oZSl7cmV0dXJue2Vycm9yOmV9fTt2YXIgaT1yLnByb3RvdHlwZTtyZXR1cm4gaS5yZXNldD1mdW5jdGlvbigpe3RoaXMuc2V0U3RhdGUoeXcpfSxpLmNvbXBvbmVudERpZENhdGNoPWZ1bmN0aW9uKGUsdCl7dmFyIG4scjtudWxsPT0obj0ocj10aGlzLnByb3BzKS5vbkVycm9yKXx8bi5jYWxsKHIsZSx0KX0saS5jb21wb25lbnREaWRVcGRhdGU9ZnVuY3Rpb24oZSx0KXt2YXIgbixyLG8saSxzPXRoaXMuc3RhdGUuZXJyb3IsYT10aGlzLnByb3BzLnJlc2V0S2V5cztudWxsIT09cyYmbnVsbCE9PXQuZXJyb3ImJih2b2lkIDA9PT0obz1lLnJlc2V0S2V5cykmJihvPVtdKSx2b2lkIDA9PT0oaT1hKSYmKGk9W10pLG8ubGVuZ3RoIT09aS5sZW5ndGh8fG8uc29tZSgoZnVuY3Rpb24oZSx0KXtyZXR1cm4hT2JqZWN0LmlzKGUsaVt0XSl9KSkpJiYobnVsbD09KG49KHI9dGhpcy5wcm9wcykub25SZXNldEtleXNDaGFuZ2UpfHxuLmNhbGwocixlLnJlc2V0S2V5cyxhKSx0aGlzLnJlc2V0KCkpfSxpLnJlbmRlcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMuc3RhdGUuZXJyb3IsdD10aGlzLnByb3BzLG49dC5mYWxsYmFja1JlbmRlcixyPXQuRmFsbGJhY2tDb21wb25lbnQsaT10LmZhbGxiYWNrO2lmKG51bGwhPT1lKXt2YXIgcz17ZXJyb3I6ZSxyZXNldEVycm9yQm91bmRhcnk6dGhpcy5yZXNldEVycm9yQm91bmRhcnl9O2lmKG8uaXNWYWxpZEVsZW1lbnQoaSkpcmV0dXJuIGk7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgbilyZXR1cm4gbihzKTtpZihyKXJldHVybiBvLmNyZWF0ZUVsZW1lbnQocixzKTt0aHJvdyBuZXcgRXJyb3IoXCJyZWFjdC1lcnJvci1ib3VuZGFyeSByZXF1aXJlcyBlaXRoZXIgYSBmYWxsYmFjaywgZmFsbGJhY2tSZW5kZXIsIG9yIEZhbGxiYWNrQ29tcG9uZW50IHByb3BcIil9cmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW59LHJ9KG8uQ29tcG9uZW50KTtmdW5jdGlvbiB4dyh7Y2hpbGRyZW46ZSxvbkVycm9yOnR9KXtyZXR1cm4oMCxpdS5qc3gpKGJ3LHtmYWxsYmFjazooMCxpdS5qc3gpKFwiZGl2XCIse3N0eWxlOntib3JkZXI6XCIxcHggc29saWQgI2YwMFwiLGNvbG9yOlwiI2YwMFwiLHBhZGRpbmc6XCI4cHhcIn0sY2hpbGRyZW46XCJBbiBlcnJvciB3YXMgdGhyb3duLlwifSksb25FcnJvcjp0LGNoaWxkcmVuOmV9KX1jb25zdCB3dz1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cuZG9jdW1lbnQmJnZvaWQgMCE9PXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50P28udXNlTGF5b3V0RWZmZWN0Om8udXNlRWZmZWN0O2Z1bmN0aW9uIEV3KHtpZ25vcmVIaXN0b3J5TWVyZ2VUYWdDaGFuZ2U6ZT0hMCxpZ25vcmVTZWxlY3Rpb25DaGFuZ2U6dD0hMSxvbkNoYW5nZTpufSl7Y29uc3Rbcl09QnAoKTtyZXR1cm4gd3coKCgpPT57aWYobilyZXR1cm4gci5yZWdpc3RlclVwZGF0ZUxpc3RlbmVyKCgoe2VkaXRvclN0YXRlOm8sZGlydHlFbGVtZW50czppLGRpcnR5TGVhdmVzOnMscHJldkVkaXRvclN0YXRlOmEsdGFnczpsfSk9Pnt0JiYwPT09aS5zaXplJiYwPT09cy5zaXplfHxlJiZsLmhhcyhcImhpc3RvcnktbWVyZ2VcIil8fGEuaXNFbXB0eSgpfHxuKG8scixsKX0pKX0pLFtyLGUsdCxuXSksbnVsbH1mdW5jdGlvbiBTdyh7ZWRpdG9yUmVmOmV9KXtjb25zdFt0XT1CcCgpO3JldHVybiBvLnVzZUVmZmVjdCgoKCk9PntcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UodCk6XCJvYmplY3RcIj09dHlwZW9mIGUmJihlLmN1cnJlbnQ9dCl9KSxbdF0pLG51bGx9dmFyIF93PXtzbTpcInB5LTEuNSBweC0yIHJvdW5kZWQgWyZfLmVkaXRvci1jb250ZW50PnBdOnRleHQtc20gWyZfLmVkaXRvci1jb250ZW50PnBdOmZvbnQtbWVkaXVtIFsmXy5lZGl0b3ItY29udGVudD5wXTpsZWFkaW5nLVsxLjYyNXJlbV1cIixtZDpcInB5LTIgcHgtMi41IHJvdW5kZWQtbWQgWyZfLmVkaXRvci1jb250ZW50PnBdOnRleHQtc20gWyZfLmVkaXRvci1jb250ZW50PnBdOmZvbnQtbWVkaXVtIFsmXy5lZGl0b3ItY29udGVudD5wXTpsZWFkaW5nLVsxLjYyNXJlbV1cIixsZzpcInB5LTIuNSBweC0zIHJvdW5kZWQtbWQgWyZfLmVkaXRvci1jb250ZW50PnBdOnRleHQtc20gWyZfLmVkaXRvci1jb250ZW50PnBdOmZvbnQtbWVkaXVtIFsmXy5lZGl0b3ItY29udGVudD5wXTpsZWFkaW5nLVsxLjY4NzVyZW1dXCJ9LGt3PXtzbTpcInAtMS41IHJvdW5kZWQtbWQgbWF4LWgtWzEwLjc1cmVtXVwiLG1kOlwicC0yIHJvdW5kZWQtbGcgbWF4LWgtWzEzLjVyZW1dXCIsbGc6XCJwLTIgcm91bmRlZC1sZyBtYXgtaC1bMTMuNXJlbV1cIn0sQ3c9e3NtOlwicC0xLjUgcm91bmRlZCB0ZXh0LXNtIGxlYWRpbmctNSBmb250LW5vcm1hbFwiLG1kOlwicC0yIHJvdW5kZWQtbWQgdGV4dC1iYXNlIGxlYWRpbmctNiBmb250LW5vcm1hbFwiLGxnOlwicC0yIHJvdW5kZWQtbWQgdGV4dC1iYXNlIGxlYWRpbmctNiBmb250LW5vcm1hbFwifTtjb25zdCBQdz1cInN0YXJ0VHJhbnNpdGlvblwiLFR3PVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJnZvaWQgMCE9PXdpbmRvdy5kb2N1bWVudCYmdm9pZCAwIT09d2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ/by51c2VMYXlvdXRFZmZlY3Q6by51c2VFZmZlY3QsT3c9ZT0+e2NvbnN0IHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0eXBlYWhlYWQtbWVudVwiKTtpZighdClyZXR1cm47Y29uc3Qgbj10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO24udG9wK24uaGVpZ2h0PndpbmRvdy5pbm5lckhlaWdodCYmdC5zY3JvbGxJbnRvVmlldyh7YmxvY2s6XCJjZW50ZXJcIn0pLG4udG9wPDAmJnQuc2Nyb2xsSW50b1ZpZXcoe2Jsb2NrOlwiY2VudGVyXCJ9KSxlLnNjcm9sbEludG9WaWV3KHtibG9jazpcIm5lYXJlc3RcIn0pfTtmdW5jdGlvbiBSdyhlLHQpe2NvbnN0IG49ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxyPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJuIG4udG9wPnIudG9wJiZuLnRvcDxyLmJvdHRvbX1jb25zdCBOdz17fTtmdW5jdGlvbiBBdyh7Y2xvc2U6ZSxlZGl0b3I6dCxhbmNob3JFbGVtZW50UmVmOm4scmVzb2x1dGlvbjpyLG9wdGlvbnM6aSxtZW51UmVuZGVyRm46cyxvblNlbGVjdE9wdGlvbjphLHNob3VsZFNwbGl0Tm9kZVdpdGhRdWVyeTpsPSExLGNvbW1hbmRQcmlvcml0eTpjPUN4fSl7Y29uc3RbdSxkXT0oMCxvLnVzZVN0YXRlKShudWxsKSxmPXIubWF0Y2gmJnIubWF0Y2gubWF0Y2hpbmdTdHJpbmc7KDAsby51c2VFZmZlY3QpKCgoKT0+e2QoMCl9KSxbZl0pO2NvbnN0IGg9KDAsby51c2VDYWxsYmFjaykoKG49Pnt0LnVwZGF0ZSgoKCk9Pntjb25zdCB0PW51bGwhPXIubWF0Y2gmJmw/ZnVuY3Rpb24oZSl7Y29uc3QgdD1NYigpO2lmKCF3Yih0KXx8IXQuaXNDb2xsYXBzZWQoKSlyZXR1cm4gbnVsbDtjb25zdCBuPXQuYW5jaG9yO2lmKFwidGV4dFwiIT09bi50eXBlKXJldHVybiBudWxsO2NvbnN0IHI9bi5nZXROb2RlKCk7aWYoIXIuaXNTaW1wbGVUZXh0KCkpcmV0dXJuIG51bGw7Y29uc3Qgbz1uLm9mZnNldCxpPXIuZ2V0VGV4dENvbnRlbnQoKS5zbGljZSgwLG8pLHM9ZS5yZXBsYWNlYWJsZVN0cmluZy5sZW5ndGgsYT1vLWZ1bmN0aW9uKGUsdCxuKXtsZXQgcj1uO2ZvcihsZXQgbj1yO248PXQubGVuZ3RoO24rKyllLnN1YnN0cigtbik9PT10LnN1YnN0cigwLG4pJiYocj1uKTtyZXR1cm4gcn0oaSxlLm1hdGNoaW5nU3RyaW5nLHMpO2lmKGE8MClyZXR1cm4gbnVsbDtsZXQgbDtyZXR1cm4gMD09PWE/W2xdPXIuc3BsaXRUZXh0KG8pOlssbF09ci5zcGxpdFRleHQoYSxvKSxsfShyLm1hdGNoKTpudWxsO2Eobix0LGUsci5tYXRjaD9yLm1hdGNoLm1hdGNoaW5nU3RyaW5nOlwiXCIpfSkpfSksW3QsbCxyLm1hdGNoLGEsZV0pLHA9KDAsby51c2VDYWxsYmFjaykoKGU9Pntjb25zdCBuPXQuZ2V0Um9vdEVsZW1lbnQoKTtudWxsIT09biYmKG4uc2V0QXR0cmlidXRlKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIsXCJ0eXBlYWhlYWQtaXRlbS1cIitlKSxkKGUpKX0pLFt0XSk7cmV0dXJuKDAsby51c2VFZmZlY3QpKCgoKT0+KCk9Pntjb25zdCBlPXQuZ2V0Um9vdEVsZW1lbnQoKTtudWxsIT09ZSYmZS5yZW1vdmVBdHRyaWJ1dGUoXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIil9KSxbdF0pLFR3KCgoKT0+e251bGw9PT1pP2QobnVsbCk6bnVsbD09PXUmJnAoMCl9KSxbaSx1LHBdKSwoMCxvLnVzZUVmZmVjdCkoKCgpPT5GeCh0LnJlZ2lzdGVyQ29tbWFuZChOdywoKHtvcHRpb246ZX0pPT4hKCFlLnJlZnx8bnVsbD09ZS5yZWYuY3VycmVudHx8KE93KGUucmVmLmN1cnJlbnQpLDApKSksYykpKSxbdCxwLGNdKSwoMCxvLnVzZUVmZmVjdCkoKCgpPT5GeCh0LnJlZ2lzdGVyQ29tbWFuZChhbSwoZT0+e2NvbnN0IG49ZTtpZihudWxsIT09aSYmaS5sZW5ndGgmJm51bGwhPT11KXtjb25zdCBlPXUhPT1pLmxlbmd0aC0xP3UrMTowO3AoZSk7Y29uc3Qgcj1pW2VdO251bGwhPXIucmVmJiZyLnJlZi5jdXJyZW50JiZ0LmRpc3BhdGNoQ29tbWFuZChOdyx7aW5kZXg6ZSxvcHRpb246cn0pLG4ucHJldmVudERlZmF1bHQoKSxuLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfXJldHVybiEwfSksYyksdC5yZWdpc3RlckNvbW1hbmQoc20sKGU9Pntjb25zdCB0PWU7aWYobnVsbCE9PWkmJmkubGVuZ3RoJiZudWxsIT09dSl7Y29uc3QgZT0wIT09dT91LTE6aS5sZW5ndGgtMTtwKGUpO2NvbnN0IG49aVtlXTtudWxsIT1uLnJlZiYmbi5yZWYuY3VycmVudCYmT3cobi5yZWYuY3VycmVudCksdC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9cmV0dXJuITB9KSxjKSx0LnJlZ2lzdGVyQ29tbWFuZChkbSwodD0+e2NvbnN0IG49dDtyZXR1cm4gbi5wcmV2ZW50RGVmYXVsdCgpLG4uc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksZSgpLCEwfSksYyksdC5yZWdpc3RlckNvbW1hbmQoaG0sKGU9Pntjb25zdCB0PWU7cmV0dXJuIG51bGwhPT1pJiZudWxsIT09dSYmbnVsbCE9aVt1XSYmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGgoaVt1XSksITApfSksYyksdC5yZWdpc3RlckNvbW1hbmQobG0sKGU9Pm51bGwhPT1pJiZudWxsIT09dSYmbnVsbCE9aVt1XSYmKG51bGwhPT1lJiYoZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkpLGgoaVt1XSksITApKSxjKSkpLFtoLGUsdCxpLHUscCxjXSkscyhuLCgwLG8udXNlTWVtbykoKCgpPT4oe29wdGlvbnM6aSxzZWxlY3RPcHRpb25BbmRDbGVhblVwOmgsc2VsZWN0ZWRJbmRleDp1LHNldEhpZ2hsaWdodGVkSW5kZXg6ZH0pKSxbaCx1LGldKSxyLm1hdGNoP3IubWF0Y2gubWF0Y2hpbmdTdHJpbmc6XCJcIil9ZnVuY3Rpb24gancoe29wdGlvbnM6ZSxvblF1ZXJ5Q2hhbmdlOnQsb25TZWxlY3RPcHRpb246bixvbk9wZW46cixvbkNsb3NlOnMsbWVudVJlbmRlckZuOmEsdHJpZ2dlckZuOmwsYW5jaG9yQ2xhc3NOYW1lOmMsY29tbWFuZFByaW9yaXR5OnU9Q3gscGFyZW50OmR9KXtjb25zdFtmXT1CcCgpLFtoLHBdPSgwLG8udXNlU3RhdGUpKG51bGwpLG09ZnVuY3Rpb24oZSx0LG4scj1kb2N1bWVudC5ib2R5KXtjb25zdFtpXT1CcCgpLHM9KDAsby51c2VSZWYpKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLGE9KDAsby51c2VDYWxsYmFjaykoKCgpPT57cy5jdXJyZW50LnN0eWxlLnRvcD1zLmN1cnJlbnQuc3R5bGUuYm90dG9tO2NvbnN0IHQ9aS5nZXRSb290RWxlbWVudCgpLG89cy5jdXJyZW50LGE9by5maXJzdENoaWxkO2lmKG51bGwhPT10JiZudWxsIT09ZSl7Y29uc3R7bGVmdDppLHRvcDpsLHdpZHRoOmMsaGVpZ2h0OnV9PWUuZ2V0UmVjdCgpLGQ9cy5jdXJyZW50Lm9mZnNldEhlaWdodDtpZihvLnN0eWxlLnRvcD1gJHtsK3dpbmRvdy5wYWdlWU9mZnNldCtkKzN9cHhgLG8uc3R5bGUubGVmdD1gJHtpK3dpbmRvdy5wYWdlWE9mZnNldH1weGAsby5zdHlsZS5oZWlnaHQ9YCR7dX1weGAsby5zdHlsZS53aWR0aD1gJHtjfXB4YCxudWxsIT09YSl7YS5zdHlsZS50b3A9YCR7bH1gO2NvbnN0IGU9YS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxuPWUuaGVpZ2h0LHI9ZS53aWR0aCxzPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7aStyPnMucmlnaHQmJihvLnN0eWxlLmxlZnQ9YCR7cy5yaWdodC1yK3dpbmRvdy5wYWdlWE9mZnNldH1weGApLChsK24+d2luZG93LmlubmVySGVpZ2h0fHxsK24+cy5ib3R0b20pJiZsLXMudG9wPm4rdSYmKG8uc3R5bGUudG9wPWwtbit3aW5kb3cucGFnZVlPZmZzZXQtdStcInB4XCIpfW8uaXNDb25uZWN0ZWR8fChudWxsIT1uJiYoby5jbGFzc05hbWU9biksby5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIsXCJUeXBlYWhlYWQgbWVudVwiKSxvLnNldEF0dHJpYnV0ZShcImlkXCIsXCJ0eXBlYWhlYWQtbWVudVwiKSxvLnNldEF0dHJpYnV0ZShcInJvbGVcIixcImxpc3Rib3hcIiksby5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIixvLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIixyLmFwcGVuZChvKSkscy5jdXJyZW50PW8sdC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWNvbnRyb2xzXCIsXCJ0eXBlYWhlYWQtbWVudVwiKX19KSxbaSxlLG4scl0pOygwLG8udXNlRWZmZWN0KSgoKCk9Pntjb25zdCB0PWkuZ2V0Um9vdEVsZW1lbnQoKTtpZihudWxsIT09ZSlyZXR1cm4gYSgpLCgpPT57bnVsbCE9PXQmJnQucmVtb3ZlQXR0cmlidXRlKFwiYXJpYS1jb250cm9sc1wiKTtjb25zdCBlPXMuY3VycmVudDtudWxsIT09ZSYmZS5pc0Nvbm5lY3RlZCYmZS5yZW1vdmUoKX19KSxbaSxhLGVdKTtjb25zdCBsPSgwLG8udXNlQ2FsbGJhY2spKChuPT57bnVsbCE9PWUmJihufHx0KG51bGwpKX0pLFtlLHRdKTtyZXR1cm4gZnVuY3Rpb24oZSx0LG4scil7Y29uc3RbaV09QnAoKTsoMCxvLnVzZUVmZmVjdCkoKCgpPT57aWYobnVsbCE9dCYmbnVsbCE9ZSl7Y29uc3QgZT1pLmdldFJvb3RFbGVtZW50KCksbz1udWxsIT1lP2Z1bmN0aW9uKGUpe2xldCB0PWdldENvbXB1dGVkU3R5bGUoZSk7Y29uc3Qgbj1cImFic29sdXRlXCI9PT10LnBvc2l0aW9uLHI9LyhhdXRvfHNjcm9sbCkvO2lmKFwiZml4ZWRcIj09PXQucG9zaXRpb24pcmV0dXJuIGRvY3VtZW50LmJvZHk7Zm9yKGxldCBvPWU7bz1vLnBhcmVudEVsZW1lbnQ7KWlmKHQ9Z2V0Q29tcHV0ZWRTdHlsZShvKSwoIW58fFwic3RhdGljXCIhPT10LnBvc2l0aW9uKSYmci50ZXN0KHQub3ZlcmZsb3crdC5vdmVyZmxvd1krdC5vdmVyZmxvd1gpKXJldHVybiBvO3JldHVybiBkb2N1bWVudC5ib2R5fShlKTpkb2N1bWVudC5ib2R5O2xldCBzPSExLGE9UncodCxvKTtjb25zdCBsPWZ1bmN0aW9uKCl7c3x8KHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKGZ1bmN0aW9uKCl7bigpLHM9ITF9KSkscz0hMCk7Y29uc3QgZT1Sdyh0LG8pO2UhPT1hJiYoYT1lLG51bGwhPXImJnIoZSkpfSxjPW5ldyBSZXNpemVPYnNlcnZlcihuKTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixuKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsbCx7Y2FwdHVyZTohMCxwYXNzaXZlOiEwfSksYy5vYnNlcnZlKHQpLCgpPT57Yy51bm9ic2VydmUodCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixuKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsbCwhMCl9fX0pLFt0LGkscixuLGVdKX0oZSxzLmN1cnJlbnQsYSxsKSxzfShoLHAsYyxkKSxnPSgwLG8udXNlQ2FsbGJhY2spKCgoKT0+e3AobnVsbCksbnVsbCE9cyYmbnVsbCE9PWgmJnMoKX0pLFtzLGhdKSx2PSgwLG8udXNlQ2FsbGJhY2spKChlPT57cChlKSxudWxsIT1yJiZudWxsPT09aCYmcihlKX0pLFtyLGhdKTtyZXR1cm4oMCxvLnVzZUVmZmVjdCkoKCgpPT57Y29uc3QgZT1mLnJlZ2lzdGVyVXBkYXRlTGlzdGVuZXIoKCgpPT57Zi5nZXRFZGl0b3JTdGF0ZSgpLnJlYWQoKCgpPT57Y29uc3QgZT1mLl93aW5kb3d8fHdpbmRvdyxuPWUuZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKSxyPU1iKCksbz1mdW5jdGlvbihlKXtsZXQgdD1udWxsO3JldHVybiBlLmdldEVkaXRvclN0YXRlKCkucmVhZCgoKCk9Pntjb25zdCBlPU1iKCk7d2IoZSkmJih0PWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5hbmNob3I7aWYoXCJ0ZXh0XCIhPT10LnR5cGUpcmV0dXJuIG51bGw7Y29uc3Qgbj10LmdldE5vZGUoKTtpZighbi5pc1NpbXBsZVRleHQoKSlyZXR1cm4gbnVsbDtjb25zdCByPXQub2Zmc2V0O3JldHVybiBuLmdldFRleHRDb250ZW50KCkuc2xpY2UoMCxyKX0oZSkpfSkpLHR9KGYpO2lmKCF3YihyKXx8IXIuaXNDb2xsYXBzZWQoKXx8bnVsbD09PW98fG51bGw9PT1uKXJldHVybiB2b2lkIGcoKTtjb25zdCBzPWwobyxmKTtpZih0KHM/cy5tYXRjaGluZ1N0cmluZzpudWxsKSxudWxsIT09cyYmIWZ1bmN0aW9uKGUsdCl7cmV0dXJuIDA9PT10JiZlLmdldEVkaXRvclN0YXRlKCkucmVhZCgoKCk9Pntjb25zdCBlPU1iKCk7aWYod2IoZSkpe2NvbnN0IHQ9ZS5hbmNob3IuZ2V0Tm9kZSgpLmdldFByZXZpb3VzU2libGluZygpO3JldHVybiBkYih0KSYmdC5pc1RleHRFbnRpdHkoKX1yZXR1cm4hMX0pKX0oZixzLmxlYWRPZmZzZXQpKXtjb25zdCB0PWZ1bmN0aW9uKGUsdCxuKXtjb25zdCByPW4uZ2V0U2VsZWN0aW9uKCk7aWYobnVsbD09PXJ8fCFyLmlzQ29sbGFwc2VkKXJldHVybiExO2NvbnN0IG89ci5hbmNob3JOb2RlLGk9ZSxzPXIuYW5jaG9yT2Zmc2V0O2lmKG51bGw9PW98fG51bGw9PXMpcmV0dXJuITE7dHJ5e3Quc2V0U3RhcnQobyxpKSx0LnNldEVuZChvLHMpfWNhdGNoKGUpe3JldHVybiExfXJldHVybiEwfShzLmxlYWRPZmZzZXQsbixlKTtpZihudWxsIT09dClyZXR1cm4gYT0oKT0+dih7Z2V0UmVjdDooKT0+bi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxtYXRjaDpzfSksdm9pZChQdyBpbiBpKCk/aSgpW1B3XShhKTphKCkpfXZhciBhO2coKX0pKX0pKTtyZXR1cm4oKT0+e2UoKX19KSxbZixsLHQsaCxnLHZdKSxudWxsPT09aHx8bnVsbD09PWY/bnVsbDooMCxpdS5qc3gpKEF3LHtjbG9zZTpnLHJlc29sdXRpb246aCxlZGl0b3I6ZixhbmNob3JFbGVtZW50UmVmOm0sb3B0aW9uczplLG1lbnVSZW5kZXJGbjphLHNob3VsZFNwbGl0Tm9kZVdpdGhRdWVyeTohMCxvblNlbGVjdE9wdGlvbjpuLGNvbW1hbmRQcmlvcml0eTp1fSl9ZnVuY3Rpb24gTXcoZSl7cmV0dXJuIE13PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LE13KGUpfWZ1bmN0aW9uIEl3KGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn12YXIgRHc9ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2VcInNtXCI6cmV0dXJuXCJ4c1wiO2Nhc2VcIm1kXCI6ZGVmYXVsdDpyZXR1cm5cInNtXCI7Y2FzZVwibGdcIjpyZXR1cm5cIm1kXCJ9fSxMdz1mdW5jdGlvbihlKXt2YXIgdD1lLmRhdGEsbj1lLmJ5LHI9ZS5zaXplLG89ZS5ub2RlS2V5LGk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIEl3KGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/SXcoZSx0KTp2b2lkIDB9fShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9KEJwKCksMSlbMF0scz0haS5pc0VkaXRhYmxlKCksYT10O3JldHVyblwib2JqZWN0XCI9PT1Ndyh0KSYmKGE9dFtuXSksUmVhY3QuY3JlYXRlRWxlbWVudChHZSx7Y2xhc3NOYW1lOlwiaW5saW5lLWZsZXhcIix0eXBlOlwicm91bmRlZFwiLHNpemU6RHcociksbGFiZWw6YSxpY29uOm51bGwsY2xvc2FibGU6ITAsb25DbG9zZTpmdW5jdGlvbihlKXtlLnN0b3BQcm9wYWdhdGlvbigpLGUucHJldmVudERlZmF1bHQoKSxzfHxpLnVwZGF0ZSgoZnVuY3Rpb24oKXt2YXIgZT1IZyhvKTtlJiZlLnJlbW92ZSgpfSkpfSxkaXNhYmxlZDpzfSl9O2Z1bmN0aW9uIEZ3KGUpe3JldHVybiBGdz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZlLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZlIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBlfSxGdyhlKX1mdW5jdGlvbiB6dyhlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcj10W25dO3IuZW51bWVyYWJsZT1yLmVudW1lcmFibGV8fCExLHIuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIHImJihyLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxLdyhyLmtleSkscil9fWZ1bmN0aW9uIEJ3KGUsdCxuKXtyZXR1cm4gdD1Xdyh0KSxmdW5jdGlvbihlLHQpe2lmKHQmJihcIm9iamVjdFwiPT1Gdyh0KXx8XCJmdW5jdGlvblwiPT10eXBlb2YgdCkpcmV0dXJuIHQ7aWYodm9pZCAwIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09PWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiBlfShlKX0oZSxWdygpP1JlZmxlY3QuY29uc3RydWN0KHQsbnx8W10sV3coZSkuY29uc3RydWN0b3IpOnQuYXBwbHkoZSxuKSl9ZnVuY3Rpb24gVncoKXt0cnl7dmFyIGU9IUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLFtdLChmdW5jdGlvbigpe30pKSl9Y2F0Y2goZSl7fXJldHVybihWdz1mdW5jdGlvbigpe3JldHVybiEhZX0pKCl9ZnVuY3Rpb24gV3coZSl7cmV0dXJuIFd3PU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKGUpe3JldHVybiBlLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpfSxXdyhlKX1mdW5jdGlvbiBVdyhlLHQpe3JldHVybiBVdz1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbihlLHQpe3JldHVybiBlLl9fcHJvdG9fXz10LGV9LFV3KGUsdCl9ZnVuY3Rpb24gJHcoZSx0LG4pe3JldHVybih0PUt3KHQpKWluIGU/T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmVbdF09bixlfWZ1bmN0aW9uIEt3KGUpe3ZhciB0PWZ1bmN0aW9uKGUpe2lmKFwib2JqZWN0XCIhPUZ3KGUpfHwhZSlyZXR1cm4gZTt2YXIgdD1lW1N5bWJvbC50b1ByaW1pdGl2ZV07aWYodm9pZCAwIT09dCl7dmFyIG49dC5jYWxsKGUsXCJzdHJpbmdcIik7aWYoXCJvYmplY3RcIiE9RncobikpcmV0dXJuIG47dGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpfXJldHVybiBTdHJpbmcoZSl9KGUpO3JldHVyblwic3ltYm9sXCI9PUZ3KHQpP3Q6dCtcIlwifXZhciBIdz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUsbixyLG8pe3ZhciBpO3JldHVybiBmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksJHcoaT1Cdyh0aGlzLHQsW29dKSxcIl9fZGF0YVwiLHZvaWQgMCksJHcoaSxcIl9fYnlcIix2b2lkIDApLCR3KGksXCJfX3NpemVcIix2b2lkIDApLGkuX19kYXRhPWUsaS5fX2J5PW4saS5fX3NpemU9cixpfXJldHVybiBmdW5jdGlvbihlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0JiZVdyhlLHQpfSh0LGUpLGZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gdCYmencoZS5wcm90b3R5cGUsdCksbiYmencoZSxuKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLGV9KHQsW3trZXk6XCJjcmVhdGVET01cIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKX19LHtrZXk6XCJ1cGRhdGVET01cIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiExfX0se2tleTpcImV4cG9ydERPTVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJue2VsZW1lbnQ6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIil9fX0se2tleTpcImV4cG9ydEpTT05cIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybnt0eXBlOnQuZ2V0VHlwZSgpLGRhdGE6dGhpcy5fX2RhdGEsYnk6dGhpcy5fX2J5LHNpemU6dGhpcy5fX3NpemUsdmVyc2lvbjoxfX19LHtrZXk6XCJkZWNvcmF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTHcse2RhdGE6dGhpcy5fX2RhdGEsYnk6dGhpcy5fX2J5LHNpemU6dGhpcy5fX3NpemUsbm9kZUtleTp0aGlzLl9fa2V5fSl9fV0sW3trZXk6XCJnZXRUeXBlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cIm1lbnRpb25cIn19LHtrZXk6XCJjbG9uZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgdChlLl9fZGF0YSxlLl9fYnksZS5fX3NpemUsZS5fX2tleSl9fSx7a2V5OlwiaW1wb3J0SlNPTlwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBxdyhlLmRhdGEsZS5ieSxlLnNpemUpfX1dKX0oaHgpLHF3PWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbmV3IEh3KGUsdCxuKX0sWXc9SHc7ZnVuY3Rpb24gR3coZSl7cmV0dXJuIEd3PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LEd3KGUpfWZ1bmN0aW9uIFh3KGUsdCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFF3KHIua2V5KSxyKX19ZnVuY3Rpb24gSncoZSx0LG4pe3JldHVybiB0JiZYdyhlLnByb3RvdHlwZSx0KSxuJiZYdyhlLG4pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksZX1mdW5jdGlvbiBadyhlLHQsbil7cmV0dXJuKHQ9UXcodCkpaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpuLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1uLGV9ZnVuY3Rpb24gUXcoZSl7dmFyIHQ9ZnVuY3Rpb24oZSl7aWYoXCJvYmplY3RcIiE9R3coZSl8fCFlKXJldHVybiBlO3ZhciB0PWVbU3ltYm9sLnRvUHJpbWl0aXZlXTtpZih2b2lkIDAhPT10KXt2YXIgbj10LmNhbGwoZSxcInN0cmluZ1wiKTtpZihcIm9iamVjdFwiIT1HdyhuKSlyZXR1cm4gbjt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIil9cmV0dXJuIFN0cmluZyhlKX0oZSk7cmV0dXJuXCJzeW1ib2xcIj09R3codCk/dDp0K1wiXCJ9dmFyIGVFPUp3KChmdW5jdGlvbiBlKHQpeyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsZSksWncodGhpcyxcImRhdGFcIix2b2lkIDApLFp3KHRoaXMsXCJyZWZcIix7Y3VycmVudDpudWxsfSksdGhpcy5kYXRhPXR9KSk7ZnVuY3Rpb24gdEUoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfXZhciBuRT1uZXcgTWFwLHJFPWZ1bmN0aW9uKGUsdCxuLHIpe3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dmFyIG89ZS5maWx0ZXIoKGZ1bmN0aW9uKGUpe3ZhciBuO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModC50b0xvd2VyQ2FzZSgpKTt2YXIgbz1udWxsPT1lfHxudWxsPT09KG49ZVtyXSl8fHZvaWQgMD09PW4/dm9pZCAwOm4udG9TdHJpbmcoKTtyZXR1cm4hIW8mJm8udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh0LnRvTG93ZXJDYXNlKCkpfSkpO24obyl9KSw1MDApfSxvRT1mdW5jdGlvbihlLHQpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpcIm5hbWVcIixyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe3ZhciBuPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saSxzLGE9W10sbD0hMCxjPSExO3RyeXtpZihpPShuPW4uY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KG4pIT09bilyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShyPWkuY2FsbChuKSkuZG9uZSkmJihhLnB1c2goci52YWx1ZSksYS5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxvPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPW4ucmV0dXJuJiYocz1uLnJldHVybigpLE9iamVjdChzKSE9PXMpKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgb319cmV0dXJuIGF9fShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB0RShlLHQpO3ZhciBuPXt9LnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP3RFKGUsdCk6dm9pZCAwfX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfSgoMCxvLnVzZVN0YXRlKShbXSksMiksaT1yWzBdLHM9clsxXTtyZXR1cm4oMCxvLnVzZUVmZmVjdCkoKGZ1bmN0aW9uKCl7aWYobnVsbCE9PXQpe3ZhciByPW5FLmdldCh0KTtudWxsIT09ciYmKHZvaWQgMD09PXI/KG5FLnNldCh0LG51bGwpLHJFKGUsdCwoZnVuY3Rpb24oZSl7bkUuc2V0KHQsZSkscyhlKX0pLG4pKTpzKHIpKX1lbHNlIHMoW10pfSksW3RdKSxpfSxpRT1bXCJzaXplXCIsXCJjaGlsZHJlblwiLFwic2VsZWN0ZWRcIixcImNsYXNzTmFtZVwiXTtmdW5jdGlvbiBzRSgpe3JldHVybiBzRT1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LHNFLmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgYUU9KDAsby5mb3J3YXJkUmVmKSgoZnVuY3Rpb24oZSx0KXt2YXIgbj1lLnNpemUscj1lLmNoaWxkcmVuLG89ZS5zZWxlY3RlZCxpPXZvaWQgMCE9PW8mJm8scz1lLmNsYXNzTmFtZSxhPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfShlLGlFKTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsc0Uoe3JvbGU6XCJvcHRpb25cIixyZWY6dCxjbGFzc05hbWU6dGUoXCJtLTAgdGV4dC10ZXh0LXByaW1hcnkgY3Vyc29yLXBvaW50ZXJcIixDd1tuXSxpJiZcImJnLWJ1dHRvbi10ZXJ0aWFyeS1ob3ZlclwiLHMpfSxhKSxyKX0pKTthRS5kaXNwbGF5TmFtZT1cIkl0ZW1cIjt2YXIgbEU9T2JqZWN0LmFzc2lnbigoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zaXplLG49ZS5jbGFzc05hbWUscj1lLmNoaWxkcmVuO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIix7cm9sZTpcIm1lbnVcIixjbGFzc05hbWU6dGUoXCJhYnNvbHV0ZSBpbnNldC14LTAgdG9wLWZ1bGwgbXQtMiBteC0wIG1iLTAgdy1mdWxsIGgtYXV0byBvdmVyZmxvdy15LWF1dG8gb3ZlcmZsb3cteC1oaWRkZW4gei0xMCBiZy1iYWNrZ3JvdW5kLXByaW1hcnkgYm9yZGVyIGJvcmRlci1zb2xpZCBib3JkZXItYm9yZGVyLXN1YnRsZSBzaGFkb3ctbGdcIixrd1t0XSxuKX0scil9KSx7SXRlbTphRX0pO2Z1bmN0aW9uIGNFKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe3ZhciBuPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saSxzLGE9W10sbD0hMCxjPSExO3RyeXtpZihpPShuPW4uY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KG4pIT09bilyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShyPWkuY2FsbChuKSkuZG9uZSkmJihhLnB1c2goci52YWx1ZSksYS5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxvPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPW4ucmV0dXJuJiYocz1uLnJldHVybigpLE9iamVjdChzKSE9PXMpKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgb319cmV0dXJuIGF9fShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiB1RShlLHQpO3ZhciBuPXt9LnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP3VFKGUsdCk6dm9pZCAwfX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIHVFKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn12YXIgZEU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5vcHRpb25zQXJyYXksbj1lLmJ5LHI9dm9pZCAwPT09bj9cIm5hbWVcIjpuLGk9ZS5zaXplLHM9dm9pZCAwPT09aT9cIm1kXCI6aSxhPWUudHJpZ2dlcixsPXZvaWQgMD09PWE/XCJAXCI6YSxjPWUubWVudUNvbXBvbmVudCx1PXZvaWQgMD09PWM/bEU6YyxkPWUubWVudUl0ZW1Db21wb25lbnQsZj12b2lkIDA9PT1kP2xFLkl0ZW06ZCxoPVwiXFxcXC4sXFxcXCtcXFxcKlxcXFw/XFxcXCRcXFxcQFxcXFx8I3t9XFxcXChcXFxcKVxcXFxeXFxcXC1cXFxcW1xcXFxdXFxcXFxcXFwvISUnXFxcIn49PD5fOjtcIixwPVtsXS5qb2luKFwiXCIpLG09XCJbXlwiK3AraCtcIlxcXFxzXVwiLGc9XCIoPzpcXFxcLlsgfCRdfCB8W1wiK2grXCJdfClcIix2PW5ldyBSZWdFeHAoXCIoXnxcXFxcc3xcXFxcKCkoW1wiLmNvbmNhdChwLFwiXSgoPzpcIikuY29uY2F0KG0pLmNvbmNhdChnLFwiKXswLFwiKS5jb25jYXQoNzUsXCJ9KSkkXCIpKSx5PW5ldyBSZWdFeHAoXCIoXnxcXFxcc3xcXFxcKCkoW1wiLmNvbmNhdChwLFwiXSgoPzpcIikuY29uY2F0KG0sXCIpezAsXCIpLmNvbmNhdCg1MCxcIn0pKSRcIikpLGI9Y0UoQnAoKSwxKVswXSx4PWNFKCgwLG8udXNlU3RhdGUpKG51bGwpLDIpLHc9eFswXSxFPXhbMV0sUz1vRSh0LHcsciksXz0oMCxvLnVzZUNhbGxiYWNrKSgoZnVuY3Rpb24oZSx0LG4pe2IudXBkYXRlKChmdW5jdGlvbigpe3ZhciBvPXF3KGUuZGF0YSxyLHMpO3QmJnQucmVwbGFjZShvKSxuKCl9KSl9KSxbYl0pLGs9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gUy5tYXAoKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgZUUoZSl9KSl9KSxbYixTXSk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoancse29uUXVlcnlDaGFuZ2U6RSxvblNlbGVjdE9wdGlvbjpfLHRyaWdnZXJGbjpmdW5jdGlvbihlKXt2YXIgdD12LmV4ZWMoZSk7aWYobnVsbD09PXQmJih0PXkuZXhlYyhlKSksbnVsbCE9PXQpe3ZhciBuPXRbMV0scj10WzNdO2lmKHIubGVuZ3RoPj0wKXJldHVybntsZWFkT2Zmc2V0OnQuaW5kZXgrbi5sZW5ndGgsbWF0Y2hpbmdTdHJpbmc6cixyZXBsYWNlYWJsZVN0cmluZzp0WzJdfX1yZXR1cm4gbnVsbH0sb3B0aW9uczprLG1lbnVSZW5kZXJGbjpmdW5jdGlvbihlLHQpe3ZhciBuPXQuc2VsZWN0ZWRJbmRleCxvPXQuc2VsZWN0T3B0aW9uQW5kQ2xlYW5VcCxpPXQuc2V0SGlnaGxpZ2h0ZWRJbmRleDtyZXR1cm4gZS5jdXJyZW50JiYhKG51bGw9PWt8fCFrLmxlbmd0aCkmJlJlYWN0LmNyZWF0ZUVsZW1lbnQodSx7c2l6ZTpzfSxrLm1hcCgoZnVuY3Rpb24oZSx0KXt2YXIgYTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChmLHtrZXk6dCxyZWY6ZS5yZWYsc2l6ZTpzLHNlbGVjdGVkOnQ9PT1uLG9uTW91c2VFbnRlcjpmdW5jdGlvbigpe2kodCl9LG9uQ2xpY2s6ZnVuY3Rpb24oKXtyZXR1cm4gbyhlKX19LFwic3RyaW5nXCI9PXR5cGVvZiBlLmRhdGE/ZS5kYXRhOm51bGw9PT0oYT1lLmRhdGEpfHx2b2lkIDA9PT1hP3ZvaWQgMDphW3JdKX0pKSl9fSl9LGZFPXtsdHI6XCJsdHJcIixydGw6XCJydGxcIixwYXJhZ3JhcGg6XCJlZGl0b3ItcGFyYWdyYXBoXCIscXVvdGU6XCJlZGl0b3ItcXVvdGVcIixoZWFkaW5nOntoMTpcImVkaXRvci1oZWFkaW5nLWgxXCIsaDI6XCJlZGl0b3ItaGVhZGluZy1oMlwiLGgzOlwiZWRpdG9yLWhlYWRpbmctaDNcIixoNDpcImVkaXRvci1oZWFkaW5nLWg0XCIsaDU6XCJlZGl0b3ItaGVhZGluZy1oNVwiLGg2OlwiZWRpdG9yLWhlYWRpbmctaDZcIn0sbGlzdDp7bmVzdGVkOntsaXN0aXRlbTpcImVkaXRvci1uZXN0ZWQtbGlzdGl0ZW1cIn0sb2w6XCJlZGl0b3ItbGlzdC1vbFwiLHVsOlwiZWRpdG9yLWxpc3QtdWxcIixsaXN0aXRlbTpcImVkaXRvci1saXN0SXRlbVwiLGxpc3RpdGVtQ2hlY2tlZDpcImVkaXRvci1saXN0SXRlbUNoZWNrZWRcIixsaXN0aXRlbVVuY2hlY2tlZDpcImVkaXRvci1saXN0SXRlbVVuY2hlY2tlZFwifSxoYXNodGFnOlwiZWRpdG9yLWhhc2h0YWdcIixpbWFnZTpcImVkaXRvci1pbWFnZVwiLGxpbms6XCJlZGl0b3ItbGlua1wiLHRleHQ6e2JvbGQ6XCJlZGl0b3ItdGV4dEJvbGRcIixjb2RlOlwiZWRpdG9yLXRleHRDb2RlXCIsaXRhbGljOlwiZWRpdG9yLXRleHRJdGFsaWNcIixzdHJpa2V0aHJvdWdoOlwiZWRpdG9yLXRleHRTdHJpa2V0aHJvdWdoXCIsc3Vic2NyaXB0OlwiZWRpdG9yLXRleHRTdWJzY3JpcHRcIixzdXBlcnNjcmlwdDpcImVkaXRvci10ZXh0U3VwZXJzY3JpcHRcIix1bmRlcmxpbmU6XCJlZGl0b3ItdGV4dFVuZGVybGluZVwiLHVuZGVybGluZVN0cmlrZXRocm91Z2g6XCJlZGl0b3ItdGV4dFVuZGVybGluZVN0cmlrZXRocm91Z2hcIn0sY29kZTpcImVkaXRvci1jb2RlXCIsY29kZUhpZ2hsaWdodDp7YXRydWxlOlwiZWRpdG9yLXRva2VuQXR0clwiLGF0dHI6XCJlZGl0b3ItdG9rZW5BdHRyXCIsYm9vbGVhbjpcImVkaXRvci10b2tlblByb3BlcnR5XCIsYnVpbHRpbjpcImVkaXRvci10b2tlblNlbGVjdG9yXCIsY2RhdGE6XCJlZGl0b3ItdG9rZW5Db21tZW50XCIsY2hhcjpcImVkaXRvci10b2tlblNlbGVjdG9yXCIsY2xhc3M6XCJlZGl0b3ItdG9rZW5GdW5jdGlvblwiLFwiY2xhc3MtbmFtZVwiOlwiZWRpdG9yLXRva2VuRnVuY3Rpb25cIixjb21tZW50OlwiZWRpdG9yLXRva2VuQ29tbWVudFwiLGNvbnN0YW50OlwiZWRpdG9yLXRva2VuUHJvcGVydHlcIixkZWxldGVkOlwiZWRpdG9yLXRva2VuUHJvcGVydHlcIixkb2N0eXBlOlwiZWRpdG9yLXRva2VuQ29tbWVudFwiLGVudGl0eTpcImVkaXRvci10b2tlbk9wZXJhdG9yXCIsZnVuY3Rpb246XCJlZGl0b3ItdG9rZW5GdW5jdGlvblwiLGltcG9ydGFudDpcImVkaXRvci10b2tlblZhcmlhYmxlXCIsaW5zZXJ0ZWQ6XCJlZGl0b3ItdG9rZW5TZWxlY3RvclwiLGtleXdvcmQ6XCJlZGl0b3ItdG9rZW5BdHRyXCIsbmFtZXNwYWNlOlwiZWRpdG9yLXRva2VuVmFyaWFibGVcIixudW1iZXI6XCJlZGl0b3ItdG9rZW5Qcm9wZXJ0eVwiLG9wZXJhdG9yOlwiZWRpdG9yLXRva2VuT3BlcmF0b3JcIixwcm9sb2c6XCJlZGl0b3ItdG9rZW5Db21tZW50XCIscHJvcGVydHk6XCJlZGl0b3ItdG9rZW5Qcm9wZXJ0eVwiLHB1bmN0dWF0aW9uOlwiZWRpdG9yLXRva2VuUHVuY3R1YXRpb25cIixyZWdleDpcImVkaXRvci10b2tlblZhcmlhYmxlXCIsc2VsZWN0b3I6XCJlZGl0b3ItdG9rZW5TZWxlY3RvclwiLHN0cmluZzpcImVkaXRvci10b2tlblNlbGVjdG9yXCIsc3ltYm9sOlwiZWRpdG9yLXRva2VuUHJvcGVydHlcIix0YWc6XCJlZGl0b3ItdG9rZW5Qcm9wZXJ0eVwiLHVybDpcImVkaXRvci10b2tlbk9wZXJhdG9yXCIsdmFyaWFibGU6XCJlZGl0b3ItdG9rZW5WYXJpYWJsZVwifX0saEU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jb250ZW50O3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInBvaW50ZXItZXZlbnRzLW5vbmUgYWJzb2x1dGUgaW5zZXQtMCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LXN0YXJ0IHRleHQtZmllbGQtcGxhY2Vob2xkZXJcIn0sdCl9O2Z1bmN0aW9uIHBFKGUpe2NvbnNvbGUuZXJyb3IoZSl9dmFyIG1FPWZ1bmN0aW9uKGUsdCl7dmFyIG4scixpPWUuZGVmYXVsdFZhbHVlLHM9dm9pZCAwPT09aT9cIlwiOmksYT1lLnBsYWNlaG9sZGVyLGw9dm9pZCAwPT09YT9cIlByZXNzIEAgdG8gdmlldyB2YXJpYWJsZSBzdWdnZXN0aW9uc1wiOmEsYz1lLm9uQ2hhbmdlLHU9ZS5zaXplLGQ9dm9pZCAwPT09dT9cIm1kXCI6dSxmPWUuYXV0b0ZvY3VzLGg9dm9pZCAwIT09ZiYmZixwPWUub3B0aW9ucyxtPXZvaWQgMD09PXA/W106cCxnPWUuYnksdj12b2lkIDA9PT1nP1wibmFtZVwiOmcseT1lLnRyaWdnZXIsYj12b2lkIDA9PT15P1wiQFwiOnkseD1lLm1lbnVDb21wb25lbnQsdz1lLm1lbnVJdGVtQ29tcG9uZW50LEU9ZS5jbGFzc05hbWUsUz1lLmRpc2FibGVkLF89dm9pZCAwIT09UyYmUyxrPXtuYW1lc3BhY2U6XCJFZGl0b3JcIixlZGl0b3JUaGVtZTpmRSxvbkVycm9yOnBFLG5vZGVzOltZd10sZWRpdG9yU3RhdGU6c3x8J3tcXG4gICAgXCJyb290XCI6IHtcXG4gICAgICAgIFwiY2hpbGRyZW5cIjogW1xcbiAgICAgICAgICAgIHtcXG4gICAgICAgICAgICAgICAgXCJjaGlsZHJlblwiOiBbXSxcXG4gICAgICAgICAgICAgICAgXCJkaXJlY3Rpb25cIjogbnVsbCxcXG4gICAgICAgICAgICAgICAgXCJmb3JtYXRcIjogXCJcIixcXG4gICAgICAgICAgICAgICAgXCJpbmRlbnRcIjogMCxcXG4gICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwicGFyYWdyYXBoXCIsXFxuICAgICAgICAgICAgICAgIFwidmVyc2lvblwiOiAxLFxcbiAgICAgICAgICAgICAgICBcInRleHRGb3JtYXRcIjogMCxcXG4gICAgICAgICAgICAgICAgXCJ0ZXh0U3R5bGVcIjogXCJcIlxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIF0sXFxuICAgICAgICBcImRpcmVjdGlvblwiOiBudWxsLFxcbiAgICAgICAgXCJmb3JtYXRcIjogXCJcIixcXG4gICAgICAgIFwiaW5kZW50XCI6IDAsXFxuICAgICAgICBcInR5cGVcIjogXCJyb290XCIsXFxuICAgICAgICBcInZlcnNpb25cIjogMVxcbiAgICB9XFxufScsZWRpdGFibGU6IV99O3JldHVybigwLG8uaXNWYWxpZEVsZW1lbnQpKHgpJiYobj14KSwoMCxvLmlzVmFsaWRFbGVtZW50KSh3KSYmKHI9dyksUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJyZWxhdGl2ZSB3LWZ1bGxcIixcImJvcmRlciBib3JkZXItc29saWQgZm9jdXMtd2l0aGluOnJpbmctMiBmb2N1cy13aXRoaW46cmluZy1vZmZzZXQtMiBib3JkZXItZmllbGQtYm9yZGVyIGhvdmVyOmJvcmRlci1ib3JkZXItc3Ryb25nIGZvY3VzLXdpdGhpbjohYm9yZGVyLWZvY3VzLWJvcmRlciBmb2N1cy13aXRoaW46cmluZy1mb2N1cyB0cmFuc2l0aW9uIGR1cmF0aW9uLTE1MCBlYXNlLWluLW91dFwiLF93W2RdLF8mJlwiYmctZmllbGQtc2Vjb25kYXJ5LWJhY2tncm91bmQgYm9yZGVyLWZpZWxkLWJvcmRlci1kaXNhYmxlZCBob3Zlcjpib3JkZXItZmllbGQtYm9yZGVyLWRpc2FibGVkIFsmX3BdOnRleHQtYmFkZ2UtY29sb3ItZGlzYWJsZWQgY3Vyc29yLW5vdC1hbGxvd2VkXCIpfSxSZWFjdC5jcmVhdGVFbGVtZW50KEF4LHtpbml0aWFsQ29uZmlnOmt9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwicmVsYXRpdmUgdy1mdWxsIFsmX3BdOm0tMFwifSxSZWFjdC5jcmVhdGVFbGVtZW50KGV3LHtjb250ZW50RWRpdGFibGU6UmVhY3QuY3JlYXRlRWxlbWVudChpdyx7Y2xhc3NOYW1lOnRlKFwiZWRpdG9yLWNvbnRlbnQgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgb3V0bGluZS1ub25lXCIsXCJ3LWZ1bGwgbWluLWgtWzEuNjI1cmVtXSBbJj5wXTp3LWZ1bGwgWyY+cF06bS0wXCIsRSl9KSxwbGFjZWhvbGRlcjpSZWFjdC5jcmVhdGVFbGVtZW50KGhFLHtjb250ZW50Omx9KSxFcnJvckJvdW5kYXJ5Onh3fSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoZ3csbnVsbCksUmVhY3QuY3JlYXRlRWxlbWVudChkRSx7bWVudUNvbXBvbmVudDpuLG1lbnVJdGVtQ29tcG9uZW50OnIsc2l6ZTpkLGJ5OnYsb3B0aW9uc0FycmF5Om0sdHJpZ2dlcjpifSksUmVhY3QuY3JlYXRlRWxlbWVudChFdyx7b25DaGFuZ2U6ZnVuY3Rpb24oZSx0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBjJiZjKGUsdCl9LGlnbm9yZVNlbGVjdGlvbkNoYW5nZTohMH0pLHQmJlJlYWN0LmNyZWF0ZUVsZW1lbnQoU3cse2VkaXRvclJlZjp0fSksaCYmUmVhY3QuY3JlYXRlRWxlbWVudChWcCxudWxsKSkpfSxnRT0oMCxvLmZvcndhcmRSZWYpKG1FKTtnRS5kaXNwbGF5TmFtZT1cIkVkaXRvcklucHV0XCI7dmFyIHZFPWdFO2NvbnN0IHlFPXhlKFwiUGx1c1wiLFtbXCJwYXRoXCIse2Q6XCJNNSAxMmgxNFwiLGtleTpcIjFheXMwaFwifV0sW1wicGF0aFwiLHtkOlwiTTEyIDV2MTRcIixrZXk6XCJzNjk5bGVcIn1dXSk7dmFyIGJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRlKFwicm91bmRlZC1mdWxsIHRleHQtYnJhbmQtcHJpbWFyeS02MDAgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMzAwXCIsZVt0XS5kb3QsZVt0XS5yaW5nKX0seEU9W1widmFyaWFudFwiLFwic2l6ZVwiLFwidHlwZVwiLFwiY3VycmVudFN0ZXBcIixcImNoaWxkcmVuXCIsXCJjbGFzc05hbWVcIl0sd0U9W1wibGFiZWxUZXh0XCIsXCJpY29uXCIsXCJzdGVwQ2xhc3Nlc1wiLFwiaXNDdXJyZW50XCIsXCJpc0NvbXBsZXRlZFwiLFwiY2xhc3NOYW1lXCIsXCJ0eXBlXCIsXCJ2YXJpYW50XCIsXCJzaXplQ2xhc3Nlc1wiLFwic2l6ZVwiLFwiaXNMYXN0XCIsXCJpbmRleFwiXTtmdW5jdGlvbiBFRSgpe3JldHVybiBFRT1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LEVFLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBTRShlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb312YXIgX0U9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS52YXJpYW50LG49dm9pZCAwPT09dD9cImRvdFwiOnQscj1lLnNpemUsbz12b2lkIDA9PT1yP1wic21cIjpyLHM9ZS50eXBlLGE9dm9pZCAwPT09cz9cImlubGluZVwiOnMsbD1lLmN1cnJlbnRTdGVwLGM9dm9pZCAwPT09bD8xOmwsdT1lLmNoaWxkcmVuLGQ9ZS5jbGFzc05hbWUsZj1TRShlLHhFKSxoPWkoKS5DaGlsZHJlbi5jb3VudCh1KSxwPXtzbTp7ZG90Olwic2l6ZS0yLjVcIixyaW5nOlwic2l6ZS01XCIsbnVtYmVySWNvbjpcInNpemUtNSB0ZXh0LXRpbnlcIixpY29uOlwic2l6ZS01XCIsbGFiZWw6XCJ0ZXh0LXhzXCJ9LG1kOntkb3Q6XCJzaXplLTNcIixyaW5nOlwic2l6ZS02XCIsbnVtYmVySWNvbjpcInNpemUtNiB0ZXh0LXNtXCIsaWNvbjpcInNpemUtNlwiLGxhYmVsOlwidGV4dC1zbVwifSxsZzp7ZG90Olwic2l6ZS0zLjVcIixyaW5nOlwic2l6ZS03XCIsbnVtYmVySWNvbjpcInNpemUtNyB0ZXh0LW1kXCIsaWNvbjpcInNpemUtN1wiLGxhYmVsOlwidGV4dC1zbVwifX0sbT1pKCkuQ2hpbGRyZW4ubWFwKHUsKGZ1bmN0aW9uKGUsdCl7dmFyIHI9e2lzQ29tcGxldGVkOnQrMTxjLGlzQ3VycmVudDp0KzE9PT1jLHNpemVDbGFzc2VzOnAsc2l6ZTpvLHZhcmlhbnQ6bix0eXBlOmEsaXNMYXN0OnQrMT09PWgsaW5kZXg6dH07cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KGkoKS5GcmFnbWVudCx7a2V5OnR9LGkoKS5jbG9uZUVsZW1lbnQoZSxyKSl9KSk7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsRUUoe2NsYXNzTmFtZTp0ZShcImZsZXggdy1mdWxsXCIsZCxcImlubGluZVwiPT09YT9cIml0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW5cIjpcIlwiKX0sZiksbSl9O19FLlN0ZXA9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5sYWJlbFRleHQsbj1lLmljb24scj12b2lkIDA9PT1uP2koKS5jcmVhdGVFbGVtZW50KHlFLG51bGwpOm4sbz0oZS5zdGVwQ2xhc3NlcyxlLmlzQ3VycmVudCkscz1lLmlzQ29tcGxldGVkLGE9ZS5jbGFzc05hbWUsbD1lLnR5cGUsYz1lLnZhcmlhbnQsdT1lLnNpemVDbGFzc2VzLGQ9ZS5zaXplLGY9ZS5pc0xhc3QsaD1lLmluZGV4LHA9U0UoZSx3RSksbT1mdW5jdGlvbihlLHQsbixyLG8scyxhKXtpZih0KXJldHVybiBpKCkuY3JlYXRlRWxlbWVudChFZSx7Y2xhc3NOYW1lOmJFKHIsbyl9KTt2YXIgbD1mdW5jdGlvbihlLHQsbil7cmV0dXJuIHRlKFwicmVsYXRpdmUgZmxleCBpdGVtcy1jZW50ZXIgcm91bmRlZC1mdWxsIGp1c3RpZnktY2VudGVyIHRyYW5zaXRpb24tY29sb3JzIHotMTAgZHVyYXRpb24tNTAwIHJpbmctMVwiLGU/XCJyaW5nLWJyYW5kLXByaW1hcnktNjAwXCI6XCJyaW5nLWJvcmRlci1zdWJ0bGVcIix0W25dLnJpbmcpfShuLHIsbyksYz1mdW5jdGlvbihlLHQsbixyKXt2YXIgbz1cImFic29sdXRlIHJvdW5kZWQtZnVsbCB0cmFuc2l0aW9uLWNvbG9ycyBkdXJhdGlvbi01MDAgXCIuY29uY2F0KG5bcl0uZG90KTtyZXR1cm5cImRvdFwiPT09ZT90ZShvLG5bcl0uZG90LHQ/XCJiZy1icmFuZC1wcmltYXJ5LTYwMFwiOlwiYmctdGV4dC10ZXJ0aWFyeVwiKTpcIm51bWJlclwiPT09ZT90ZShvLG5bcl0uZG90LHQ/XCJ0ZXh0LWJyYW5kLXByaW1hcnktNjAwXCI6XCJ0ZXh0LXRleHQtdGVydGlhcnlcIixcImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCIpOlwiaWNvblwiPT09ZT90ZShvLHQ/XCJ0ZXh0LWJyYW5kLXByaW1hcnktNjAwXCI6XCJ0ZXh0LXRleHQtdGVydGlhcnlcIixcImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCIpOlwiXCJ9KGUsbixyLG8pLHU9bnVsbDtyZXR1cm5cIm51bWJlclwiPT09ZT91PWErMTpcImljb25cIj09PWUmJnMmJih1PXMpLGkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6bH0saSgpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTpjfSx1KSl9KGMscyxvLHUsZCxyLGgpLGc9e2xnOlwibGVmdC1bY2FsYyg1MCUrMTRweCldIHJpZ2h0LVtjYWxjKC01MCUrMTRweCldXCIsbWQ6XCJsZWZ0LVtjYWxjKDUwJSsxMnB4KV0gcmlnaHQtW2NhbGMoLTUwJSsxMnB4KV1cIixzbTpcImxlZnQtW2NhbGMoNTAlKzEwcHgpXSByaWdodC1bY2FsYygtNTAlKzEwcHgpXVwifSx2PXtsZzpcInRvcC0zLjVcIixtZDpcInRvcC0zXCIsc206XCJ0b3AtMi41XCJ9LHk9ZnVuY3Rpb24oKXtpZih0KXt2YXIgZT10ZSh1W2RdLmxhYmVsLFwidGV4dC10ZXh0LXRlcnRpYXJ5XCIsbz9cInRleHQtYnJhbmQtcHJpbWFyeS02MDBcIjpcIlwiLFwiYnJlYWstd29yZFwiLFwic3RhY2tcIj09PWw/XCJtdC0yIHRyYW5zZm9ybSBtYXgtdy14c1wiOlwibXgtMiBtYXgtdy0zMlwiKTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTplfSx0KX1yZXR1cm4gbnVsbH0sYj1mdW5jdGlvbigpe2lmKCFmKXt2YXIgZT10ZShcImJsb2NrXCIscz9cImJvcmRlci1icmFuZC1wcmltYXJ5LTYwMFwiOlwiYm9yZGVyLWJvcmRlci1zdWJ0bGVcIik7cmV0dXJuXCJzdGFja1wiPT09bD9pKCkuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJyZWxhdGl2ZVwiLFwiZmxleFwiLFwiYm9yZGVyLXNvbGlkXCIsXCJib3JkZXIteVwiLFwiYWJzb2x1dGVcIixzP1wiYm9yZGVyLWJyYW5kLXByaW1hcnktNjAwXCI6XCJib3JkZXItYm9yZGVyLXN1YnRsZVwiLHZbZF0sZ1tkXSl9LGkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJibG9ja1wifSkpOmkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImZsZXgtMVwifSxpKCkuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOnRlKGUsXCJtci0yXCIsXCJib3JkZXIteSBib3JkZXItc29saWRcIil9KSl9cmV0dXJuIG51bGx9O3JldHVyblwic3RhY2tcIj09PWw/aSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwicmVsYXRpdmUgZmxleC0xIGp1c3RpZnktY2VudGVyXCJ9LGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsRUUoe2NsYXNzTmFtZTp0ZShcImZsZXggaXRlbXMtY2VudGVyIGZsZXgtY29sXCIsYSl9LHApLG0seSgpKSxiKCkpOmkoKS5jcmVhdGVFbGVtZW50KGkoKS5GcmFnbWVudCxudWxsLGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsRUUoe2NsYXNzTmFtZTp0ZShcImZsZXggaXRlbXMtY2VudGVyXCIsYSl9LHApLG0seSgpKSxiKCkpfTt2YXIga0U9X0UsQ0U9W1widmFyaWFudFwiLFwiY2xhc3NOYW1lXCJdO2Z1bmN0aW9uIFBFKCl7cmV0dXJuIFBFPU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKSh7fSkuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sUEUuYXBwbHkobnVsbCxhcmd1bWVudHMpfXZhciBURT1mdW5jdGlvbihlKXt2YXIgdCxuLHI9ZS52YXJpYW50LG89dm9pZCAwPT09cj9cInJlY3Rhbmd1bGFyXCI6cixzPWUuY2xhc3NOYW1lLGE9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99KGUsQ0UpLGw9bnVsbD09PSh0PXtjaXJjdWxhcjpcInJvdW5kZWQtZnVsbCBiZy1ncmF5LTIwMCBcIixyZWN0YW5ndWxhcjpcInJvdW5kZWQtbWQgYmctZ3JheS0yMDBcIn0pfHx2b2lkIDA9PT10P3ZvaWQgMDp0W29dLGM9bnVsbD09PShuPXtjaXJjdWxhcjpcInNpemUtMTBcIixyZWN0YW5ndWxhcjpcInctOTYgaC0zXCJ9KXx8dm9pZCAwPT09bj92b2lkIDA6bltvXTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixQRSh7Y2xhc3NOYW1lOnRlKGwsXCJhbmltYXRlLXB1bHNlXCIsYyxzKX0sYSkpfTtmdW5jdGlvbiBPRShlLHQpeyhudWxsPT10fHx0PmUubGVuZ3RoKSYmKHQ9ZS5sZW5ndGgpO2Zvcih2YXIgbj0wLHI9QXJyYXkodCk7bjx0O24rKylyW25dPWVbbl07cmV0dXJuIHJ9dmFyIFJFPSgwLG8uY3JlYXRlQ29udGV4dCkoKSxORT1mdW5jdGlvbigpe3JldHVybigwLG8udXNlQ29udGV4dCkoUkUpfSxBRT1mdW5jdGlvbihlKXt2YXIgdD1lLnNpemUsbj12b2lkIDA9PT10P1wibWRcIjp0LHI9ZS5jaGlsZHJlbixvPWUuY2xhc3NOYW1lO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChSRS5Qcm92aWRlcix7dmFsdWU6e3NpemU6bn19LGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcInctNjQgZmxleCBmbGV4LWNvbCBiZy1iYWNrZ3JvdW5kLXByaW1hcnkgcC0yXCIsbyl9LHIpKX07QUUuTGlzdD1mdW5jdGlvbihlKXt2YXIgdCxuLHI9ZS5oZWFkaW5nLHM9ZS5hcnJvdyxhPXZvaWQgMCE9PXMmJnMsbD1lLm9wZW4sYz12b2lkIDAhPT1sJiZsLHU9ZS5vbkNsaWNrLGQ9ZS5jaGlsZHJlbixmPWUuY2xhc3NOYW1lLGg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIE9FKGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/T0UoZSx0KTp2b2lkIDB9fShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9KCgwLG8udXNlU3RhdGUpKGMpLDIpLHA9aFswXSxtPWhbMV0sZz1ORSgpLnNpemUsdj1udWxsPT09KHQ9e3NtOlwidGV4dC14c1wiLG1kOlwidGV4dC1zbVwifSl8fHZvaWQgMD09PXQ/dm9pZCAwOnRbZ10seT1udWxsPT09KG49e3NtOlwiWyY+c3ZnXTpzaXplLTRcIixtZDpcIlsmPnN2Z106c2l6ZS01XCJ9KXx8dm9pZCAwPT09bj92b2lkIDA6bltnXSxiPWZ1bmN0aW9uKCl7bSghcCksdSYmdSghcCl9O3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImRpdlwiLG51bGwsaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7cm9sZTpcImJ1dHRvblwiLHRhYkluZGV4OlwiMFwiLG9uQ2xpY2s6YixvbktleVByZXNzOmZ1bmN0aW9uKGUpe1wiRW50ZXJcIiE9PWUua2V5JiZcIiBcIiE9PWUua2V5fHxiKCl9LGNsYXNzTmFtZTp0ZShcInRleHQtdGV4dC1wcmltYXJ5IGJnLXRyYW5zcGFyZW50IGN1cnNvci1wb2ludGVyIGZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBwLTEgZ2FwLTFcIix2LGYpLFwiYXJpYS1leHBhbmRlZFwiOnB9LGkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJ0ZXh0LXRleHQtdGVydGlhcnlcIn0sciksYSYmaSgpLmNyZWF0ZUVsZW1lbnQoSGYuc3Bhbix7dmFyaWFudHM6e29wZW46e3JvdGF0ZToxODB9LGNsb3NlZDp7cm90YXRlOjB9fSxhbmltYXRlOnA/XCJvcGVuXCI6XCJjbG9zZWRcIix0cmFuc2l0aW9uOntkdXJhdGlvbjouMTV9LGNsYXNzTmFtZTp0ZShcImZsZXggaXRlbXMtY2VudGVyIHRleHQtYm9yZGVyLXN0cm9uZ1wiLHkpfSxpKCkuY3JlYXRlRWxlbWVudChlaCxudWxsKSkpLGkoKS5jcmVhdGVFbGVtZW50KEhoLHtpbml0aWFsOiExfSxwJiZpKCkuY3JlYXRlRWxlbWVudChIZi51bCx7dmFyaWFudHM6e29wZW46e2hlaWdodDpcImF1dG9cIixvcGFjaXR5OjF9LGNsb3NlZDp7aGVpZ2h0OjAsb3BhY2l0eTowfX0saW5pdGlhbDpcImNsb3NlZFwiLGFuaW1hdGU6XCJvcGVuXCIsZXhpdDpcImNsb3NlZFwiLHRyYW5zaXRpb246e2R1cmF0aW9uOi4zLGVhc2U6XCJlYXNlSW5PdXRcIn0sY2xhc3NOYW1lOlwib3ZlcmZsb3ctaGlkZGVuIGZsZXggZ2FwLTAuNSBmbGV4LWNvbCBtLTAgYmctd2hpdGUgcm91bmRlZC1tZCBwLTBcIn0sZCkpKX0sQUUuSXRlbT1mdW5jdGlvbihlKXt2YXIgdCxuPWUuZGlzYWJsZWQscj12b2lkIDAhPT1uJiZuLG89ZS5hY3RpdmUscz1lLm9uQ2xpY2ssYT1lLmNoaWxkcmVuLGw9ZS5jbGFzc05hbWUsYz1ORSgpLnNpemUsdT1udWxsPT09KHQ9e3NtOlwiWyY+c3ZnXTpzaXplLTQgWyY+c3ZnXTptLTEgWyY+Kjpub3Qoc3ZnKV06bXgtMSBbJj4qOm5vdChzdmcpXTpteS0wLjUgdGV4dC1zbVwiLG1kOlwiWyY+c3ZnXTpzaXplLTUgWyY+c3ZnXTptLTEuNSBbJj4qOm5vdChzdmcpXTptLTEgdGV4dC1iYXNlXCJ9KXx8dm9pZCAwPT09dD92b2lkIDA6dFtjXSxkPXI/XCJ0ZXh0LXRleHQtZGlzYWJsZWQgaG92ZXI6dGV4dC10ZXh0LWRpc2FibGVkIGN1cnNvci1ub3QtYWxsb3dlZCBob3ZlcjpiZy10cmFuc3BhcmVudFwiOlwiXCIsZj1vP1widGV4dC1pY29uLXByaW1hcnkgWyY+c3ZnXTp0ZXh0LWljb24taW50ZXJhY3RpdmUgYmctYmFja2dyb3VuZC1zZWNvbmRhcnlcIjpcIlwiO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImxpXCIse3JvbGU6XCJtZW51aXRlbVwiLHRhYkluZGV4OlwiMFwiLG9uQ2xpY2s6cyxvbktleVByZXNzOmZ1bmN0aW9uKGUpe1wiRW50ZXJcIiE9PWUua2V5JiZcIiBcIiE9PWUua2V5fHxzKCl9LGNsYXNzTmFtZTp0ZShcImZsZXggcC0xIGdhcC0xIGl0ZW1zLWNlbnRlciBiZy10cmFuc3BhcmVudCB3LWZ1bGwgYm9yZGVyLW5vbmUgcm91bmRlZCB0ZXh0LXRleHQtc2Vjb25kYXJ5IGN1cnNvci1wb2ludGVyIG0tMFwiLHUsXCJob3ZlcjpiZy1iYWNrZ3JvdW5kLXNlY29uZGFyeSBob3Zlcjp0ZXh0LXRleHQtcHJpbWFyeVwiLGQsZixcInRyYW5zaXRpb24tY29sb3JzIGR1cmF0aW9uLTMwMCBlYXNlLWluLW91dFwiLGwpfSxhKX0sQUUuU2VwYXJhdG9yPWZ1bmN0aW9uKGUpe3ZhciB0LG49ZS52YXJpYW50LHI9dm9pZCAwPT09bj9cInNvbGlkXCI6bixvPWUuY2xhc3NOYW1lLHM9bnVsbD09PSh0PXtzb2xpZDpcImJvcmRlci1zb2xpZFwiLGRhc2hlZDpcImJvcmRlci1kYXNoZWRcIixkb3R0ZWQ6XCJib3JkZXItZG90dGVkXCIsZG91YmxlOlwiYm9yZGVyLWRvdWJsZVwiLGhpZGRlbjpcImJvcmRlci1oaWRkZW5cIixub25lOlwiYm9yZGVyLW5vbmVcIn0pfHx2b2lkIDA9PT10P3ZvaWQgMDp0W3JdO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChpKCkuRnJhZ21lbnQsbnVsbCxpKCkuY3JlYXRlRWxlbWVudChcImhyXCIse2NsYXNzTmFtZTp0ZShcInctZnVsbCBib3JkZXItMCBib3JkZXItdCBib3JkZXItYm9yZGVyLXN1YnRsZVwiLHMsbyl9KSl9O3ZhciBqRT1BRTtjb25zdCBNRT14ZShcIlBhbmVsTGVmdE9wZW5cIixbW1wicmVjdFwiLHt3aWR0aDpcIjE4XCIsaGVpZ2h0OlwiMThcIix4OlwiM1wiLHk6XCIzXCIscng6XCIyXCIsa2V5OlwiYWZpdHY3XCJ9XSxbXCJwYXRoXCIse2Q6XCJNOSAzdjE4XCIsa2V5OlwiZmgzaHFhXCJ9XSxbXCJwYXRoXCIse2Q6XCJtMTQgOSAzIDMtMyAzXCIsa2V5OlwiODAxMGVlXCJ9XV0pLElFPXhlKFwiUGFuZWxMZWZ0Q2xvc2VcIixbW1wicmVjdFwiLHt3aWR0aDpcIjE4XCIsaGVpZ2h0OlwiMThcIix4OlwiM1wiLHk6XCIzXCIscng6XCIyXCIsa2V5OlwiYWZpdHY3XCJ9XSxbXCJwYXRoXCIse2Q6XCJNOSAzdjE4XCIsa2V5OlwiZmgzaHFhXCJ9XSxbXCJwYXRoXCIse2Q6XCJtMTYgMTUtMy0zIDMtM1wiLGtleTpcIjE0eTk5elwifV1dKTt2YXIgREU9W1wiY2hpbGRyZW5cIixcImNsYXNzTmFtZVwiLFwib25Db2xsYXBzZUNoYW5nZVwiLFwiY29sbGFwc2libGVcIixcInNjcmVlbkhlaWdodFwiLFwiYm9yZGVyT25cIl07ZnVuY3Rpb24gTEUoKXtyZXR1cm4gTEU9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxMRS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gRkUoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxyPUFycmF5KHQpO248dDtuKyspcltuXT1lW25dO3JldHVybiByfXZhciB6RT0oMCxvLmNyZWF0ZUNvbnRleHQpKCksQkU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuY2xhc3NOYW1lLHI9ZS5vbkNvbGxhcHNlQ2hhbmdlLHM9ZS5jb2xsYXBzaWJsZSxhPXZvaWQgMD09PXN8fHMsbD1lLnNjcmVlbkhlaWdodCxjPXZvaWQgMD09PWx8fGwsdT1lLmJvcmRlck9uLGQ9dm9pZCAwPT09dXx8dSxmPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfShlLERFKSxoPSgwLG8udXNlUmVmKShudWxsKSxwPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe3ZhciBuPW51bGw9PWU/bnVsbDpcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZlW1N5bWJvbC5pdGVyYXRvcl18fGVbXCJAQGl0ZXJhdG9yXCJdO2lmKG51bGwhPW4pe3ZhciByLG8saSxzLGE9W10sbD0hMCxjPSExO3RyeXtpZihpPShuPW4uY2FsbChlKSkubmV4dCwwPT09dCl7aWYoT2JqZWN0KG4pIT09bilyZXR1cm47bD0hMX1lbHNlIGZvcig7IShsPShyPWkuY2FsbChuKSkuZG9uZSkmJihhLnB1c2goci52YWx1ZSksYS5sZW5ndGghPT10KTtsPSEwKTt9Y2F0Y2goZSl7Yz0hMCxvPWV9ZmluYWxseXt0cnl7aWYoIWwmJm51bGwhPW4ucmV0dXJuJiYocz1uLnJldHVybigpLE9iamVjdChzKSE9PXMpKXJldHVybn1maW5hbGx5e2lmKGMpdGhyb3cgb319cmV0dXJuIGF9fShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBGRShlLHQpO3ZhciBuPXt9LnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20oZSk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP0ZFKGUsdCk6dm9pZCAwfX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfSgoMCxvLnVzZVN0YXRlKSgoZnVuY3Rpb24oKXt2YXIgZT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInNpZGViYXItY29sbGFwc2VkXCIpLHQ9d2luZG93LmlubmVyV2lkdGg8MTI4MDtyZXR1cm4gZT9KU09OLnBhcnNlKGUpOnR9KSksMiksbT1wWzBdLGc9cFsxXTtyZXR1cm4oMCxvLnVzZUVmZmVjdCkoKGZ1bmN0aW9uKCl7ciYmcihtKX0pLFttLHJdKSwoMCxvLnVzZUVmZmVjdCkoKGZ1bmN0aW9uKCl7dmFyIGU9ZnVuY3Rpb24oKXt2YXIgZT13aW5kb3cuaW5uZXJXaWR0aDwxMjgwO2lmKGEpaWYoZSlnKCEwKSxsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInNpZGViYXItY29sbGFwc2VkXCIsSlNPTi5zdHJpbmdpZnkoITApKTtlbHNle3ZhciB0PWxvY2FsU3RvcmFnZS5nZXRJdGVtKFwic2lkZWJhci1jb2xsYXBzZWRcIik7ZyghIXQmJkpTT04ucGFyc2UodCkpfWVsc2UgZyghMSksbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oXCJzaWRlYmFyLWNvbGxhcHNlZFwiKTtoLmN1cnJlbnQmJihoLmN1cnJlbnQuc3R5bGUuaGVpZ2h0PWM/XCJcIi5jb25jYXQod2luZG93LmlubmVySGVpZ2h0LFwicHhcIik6XCJhdXRvXCIpfTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixlKSxlKCksZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLGUpfX0pLFtjLGFdKSxpKCkuY3JlYXRlRWxlbWVudCh6RS5Qcm92aWRlcix7dmFsdWU6e2lzQ29sbGFwc2VkOm0sc2V0SXNDb2xsYXBzZWQ6Zyxjb2xsYXBzaWJsZTphfX0saSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixMRSh7cmVmOmgsY2xhc3NOYW1lOnRlKFwib3ZlcmZsb3ctYXV0byB3LTcyIHB4LTQgcHktNCBnYXAtNCBmbGV4IGZsZXgtY29sIGJnLWJhY2tncm91bmQtcHJpbWFyeVwiLGQmJlwiYm9yZGVyLTAgYm9yZGVyLXIgYm9yZGVyLXNvbGlkIGJvcmRlci1ib3JkZXItc3VidGxlXCIsISFjJiZcImgtc2NyZWVuXCIsXCJ0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0yMDBcIixtJiZcInctMTYgcHgtMlwiLG4pfSxmKSx0KSl9O0JFLmRpc3BsYXlOYW1lPVwiU2lkZWJhclwiO3ZhciBWRT1mdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJzcGFjZS15LTJcIn0sdCl9O1ZFLmRpc3BsYXlOYW1lPVwiU2lkZWJhci5IZWFkZXJcIjt2YXIgV0U9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbjtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwic3BhY2UteS00IGdyb3cgaXRlbXMtc3RhcnRcIil9LHQpfTtXRS5kaXNwbGF5TmFtZT1cIlNpZGViYXIuQm9keVwiO3ZhciBVRT1mdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuLG49KDAsby51c2VDb250ZXh0KSh6RSkscj1uLmlzQ29sbGFwc2VkLHM9bi5zZXRJc0NvbGxhcHNlZCxhPW4uY29sbGFwc2libGU7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcInNwYWNlLXktNFwifSx0LGEmJmkoKS5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIse2NsYXNzTmFtZTp0ZShcImJnLXRyYW5zcGFyZW50IHctZnVsbCBib3JkZXItMCBwLTAgbS0wIGZsZXggaXRlbXMtY2VudGVyIGdhcC0yIHRleHQtYmFzZSBjdXJzb3ItcG9pbnRlclwiLHImJlwianVzdGlmeS1jZW50ZXJcIiksb25DbGljazpmdW5jdGlvbigpe3MoIXIpLGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwic2lkZWJhci1jb2xsYXBzZWRcIixKU09OLnN0cmluZ2lmeSghcikpfSxcImFyaWEtbGFiZWxcIjpyP1wiRXhwYW5kIHNpZGViYXJcIjpcIkNvbGxhcHNlIHNpZGViYXJcIn0scj9pKCkuY3JlYXRlRWxlbWVudChpKCkuRnJhZ21lbnQsbnVsbCxpKCkuY3JlYXRlRWxlbWVudChmaSx7dGl0bGU6XCJFeHBhbmRcIixwbGFjZW1lbnQ6XCJyaWdodFwifSxpKCkuY3JlYXRlRWxlbWVudChNRSx7Y2xhc3NOYW1lOlwic2l6ZS01XCJ9KSkpOmkoKS5jcmVhdGVFbGVtZW50KGkoKS5GcmFnbWVudCxudWxsLGkoKS5jcmVhdGVFbGVtZW50KElFLHtjbGFzc05hbWU6XCJzaXplLTVcIn0pLFwiIENvbGxhcHNlXCIpKSl9O1VFLmRpc3BsYXlOYW1lPVwiU2lkZWJhci5Gb290ZXJcIjt2YXIgJEU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuY2xhc3NOYW1lO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJ3LWZ1bGxcIixuKX0sdCl9OyRFLmRpc3BsYXlOYW1lPVwiU2lkZWJhci5JdGVtXCI7dmFyIEtFPU9iamVjdC5hc3NpZ24oQkUse0hlYWRlcjpWRSxCb2R5OldFLEZvb3RlcjpVRSxJdGVtOiRFfSk7Y29uc3QgSEU9eGUoXCJDaGV2cm9uUmlnaHRcIixbW1wicGF0aFwiLHtkOlwibTkgMTggNi02LTYtNlwiLGtleTpcIm10aGh3cVwifV1dKSxxRT14ZShcIkVsbGlwc2lzXCIsW1tcImNpcmNsZVwiLHtjeDpcIjEyXCIsY3k6XCIxMlwiLHI6XCIxXCIsa2V5OlwiNDFoaWxmXCJ9XSxbXCJjaXJjbGVcIix7Y3g6XCIxOVwiLGN5OlwiMTJcIixyOlwiMVwiLGtleTpcIjF3amw4aVwifV0sW1wiY2lyY2xlXCIse2N4OlwiNVwiLGN5OlwiMTJcIixyOlwiMVwiLGtleTpcIjFwY3o4Y1wifV1dKTt2YXIgWUU9W1wiaHJlZlwiLFwiY2hpbGRyZW5cIixcImNsYXNzTmFtZVwiLFwiYXNcIl07ZnVuY3Rpb24gR0UoKXtyZXR1cm4gR0U9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxHRS5hcHBseShudWxsLGFyZ3VtZW50cyl9dmFyIFhFPSgwLG8uY3JlYXRlQ29udGV4dCkoKSxKRT17c206e3RleHQ6XCJ0ZXh0LXNtXCIsc2VwYXJhdG9yOlwidGV4dC1zbVwiLHNlcGFyYXRvckljb25TaXplOjE2fSxtZDp7dGV4dDpcInRleHQtYmFzZVwiLHNlcGFyYXRvcjpcInRleHQtYmFzZVwiLHNlcGFyYXRvckljb25TaXplOjE4fX0sWkU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuc2l6ZSxyPUpFW3ZvaWQgMD09PW4/XCJzbVwiOm5dfHxKRS5zbTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoWEUuUHJvdmlkZXIse3ZhbHVlOntzaXplczpyfX0saSgpLmNyZWF0ZUVsZW1lbnQoXCJuYXZcIix7Y2xhc3NOYW1lOlwiZmxleCBtLTBcIixcImFyaWEtbGFiZWxcIjpcIkJyZWFkY3J1bWJcIn0saSgpLmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLHtjbGFzc05hbWU6XCJtLTAgaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMSBtZDpzcGFjZS14LTFcIn0sdCkpKX07WkUuZGlzcGxheU5hbWU9XCJCcmVhZGNydW1iXCI7dmFyIFFFPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW47cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KGkoKS5GcmFnbWVudCxudWxsLHQpfTtRRS5kaXNwbGF5TmFtZT1cIkJyZWFkY3J1bWIuTGlzdFwiO3ZhciBlUz1mdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChcImxpXCIse2NsYXNzTmFtZTpcIm0tMCBpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIn0sdCl9O2VTLmRpc3BsYXlOYW1lPVwiQnJlYWRjcnVtYi5JdGVtXCI7dmFyIHRTPWZ1bmN0aW9uKGUpe3ZhciB0PWUuaHJlZixuPWUuY2hpbGRyZW4scj1lLmNsYXNzTmFtZSxzPWUuYXMsYT12b2lkIDA9PT1zP1wiYVwiOnMsbD1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxZRSksYz0oMCxvLnVzZUNvbnRleHQpKFhFKS5zaXplcztyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoYSxHRSh7aHJlZjp0LGNsYXNzTmFtZTp0ZShjLnRleHQsXCJweC0xIGZvbnQtbWVkaXVtIG5vLXVuZGVybGluZSB0ZXh0LXRleHQtdGVydGlhcnkgaG92ZXI6dGV4dC10ZXh0LXByaW1hcnkgaG92ZXI6dW5kZXJsaW5lXCIsXCJmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0xIGZvY3VzOnJpbmctYm9yZGVyLWludGVyYWN0aXZlIGZvY3VzOmJvcmRlci1ib3JkZXItaW50ZXJhY3RpdmUgZm9jdXM6cm91bmRlZC1zbVwiLFwidHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwXCIscil9LGwpLG4pfTt0Uy5kaXNwbGF5TmFtZT1cIkJyZWFkY3J1bWIuTGlua1wiO3ZhciBuUz1mdW5jdGlvbihlKXt2YXIgdD1lLnR5cGUsbj0oMCxvLnVzZUNvbnRleHQpKFhFKS5zaXplcyxyPXtzbGFzaDppKCkuY3JlYXRlRWxlbWVudChcInNwYW5cIix7Y2xhc3NOYW1lOnRlKFwibXgtMVwiLG4uc2VwYXJhdG9yKX0sXCIvXCIpLGFycm93OmkoKS5jcmVhdGVFbGVtZW50KEhFLHtzaXplOm4uc2VwYXJhdG9ySWNvblNpemV9KX07cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwic3BhblwiLHtjbGFzc05hbWU6XCJmbGV4IGl0ZW1zLWNlbnRlciB0ZXh0LXRleHQtdGVydGlhcnkgbXgtMlwifSxyW3RdfHxyLmFycm93KX07blMuZGlzcGxheU5hbWU9XCJCcmVhZGNydW1iLlNlcGFyYXRvclwiO3ZhciByUz1mdW5jdGlvbigpe3ZhciBlPSgwLG8udXNlQ29udGV4dCkoWEUpLnNpemVzO3JldHVybiBpKCkuY3JlYXRlRWxlbWVudChxRSx7Y2xhc3NOYW1lOlwibXQtWzJweF0gY3Vyc29yLXBvaW50ZXIgdGV4dC10ZXh0LXRlcnRpYXJ5IGhvdmVyOnRleHQtdGV4dC1wcmltYXJ5XCIsc2l6ZTplLnNlcGFyYXRvckljb25TaXplKzR9KX07clMuZGlzcGxheU5hbWU9XCJCcmVhZGNydW1iLkVsbGlwc2lzXCI7dmFyIG9TPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj0oMCxvLnVzZUNvbnRleHQpKFhFKS5zaXplcztyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse2NsYXNzTmFtZTp0ZShuLnRleHQsXCJmb250LW1lZGl1bSB0ZXh0LXRleHQtcHJpbWFyeVwiKX0sdCl9O29TLmRpc3BsYXlOYW1lPVwiQnJlYWRjcnVtYi5QYWdlXCI7dmFyIGlTPU9iamVjdC5hc3NpZ24oWkUse0xpc3Q6UUUsSXRlbTplUyxMaW5rOnRTLFNlcGFyYXRvcjpuUyxFbGxpcHNpczpyUyxQYWdlOm9TfSksc1M9W1wiY2xhc3NOYW1lXCJdLGFTPVtcImNoaWxkcmVuXCIsXCJjbGFzc05hbWVcIl0sbFM9W1wiY2hpbGRyZW5cIixcImFzXCIsXCJjbGFzc05hbWVcIl0sY1M9W1wiY2hpbGRyZW5cIixcImFzXCIsXCJjbGFzc05hbWVcIl0sdVM9W1wiY2xhc3NOYW1lXCJdLGRTPVtcImNoaWxkcmVuXCIsXCJhc1wiXSxmUz1bXCJjaGlsZHJlblwiLFwiY2xhc3NOYW1lXCJdO2Z1bmN0aW9uIGhTKCl7cmV0dXJuIGhTPU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKSh7fSkuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0saFMuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIHBTKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfWZ1bmN0aW9uIG1TKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAscj1BcnJheSh0KTtuPHQ7bisrKXJbbl09ZVtuXTtyZXR1cm4gcn12YXIgZ1M9KDAsby5jcmVhdGVDb250ZXh0KSgpLHZTPWZ1bmN0aW9uKCl7cmV0dXJuKDAsby51c2VDb250ZXh0KShnUyl9LHlTPXtvcGVuOntvcGFjaXR5OjF9LGV4aXQ6e29wYWNpdHk6MH19LGJTPXtkdXJhdGlvbjouMn0seFM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5vcGVuLG49ZS5zZXRPcGVuLHI9ZS5jaGlsZHJlbixpPWUudHJpZ2dlcixzPWUuY2xhc3NOYW1lLGE9ZS5leGl0T25DbGlja091dHNpZGUsbD12b2lkIDAhPT1hJiZhLGM9ZS5leGl0T25Fc2MsdT12b2lkIDA9PT1jfHxjLGQ9ZS5kZXNpZ24sZj12b2lkIDA9PT1kP1wic2ltcGxlXCI6ZCxoPWUuc2Nyb2xsTG9jayxwPXZvaWQgMD09PWh8fGgsbT12b2lkIDAhPT10JiZ2b2lkIDAhPT1uLGc9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIG1TKGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/bVMoZSx0KTp2b2lkIDB9fShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9KCgwLG8udXNlU3RhdGUpKCExKSwyKSx2PWdbMF0seT1nWzFdLGI9KDAsby51c2VSZWYpKG51bGwpLHg9KDAsby51c2VSZWYpKG51bGwpLHc9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gbT90OnZ9KSxbdCx2XSksRT0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiBtP246eX0pLFt5LHldKSxTPWZ1bmN0aW9uKCl7d3x8RSghMCl9LF89ZnVuY3Rpb24oKXt3JiZFKCExKX0saz0oMCxvLnVzZUNhbGxiYWNrKSgoZnVuY3Rpb24oKXtyZXR1cm4oMCxvLmlzVmFsaWRFbGVtZW50KShpKT8oMCxvLmNsb25lRWxlbWVudCkoaSx7b25DbGljazpuZShTLGkucHJvcHMub25DbGljayl9KTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2koe29uQ2xpY2s6U30pOm51bGx9KSxbaSxTLF9dKSxDPWZ1bmN0aW9uKGUpe1wiRXNjYXBlXCI9PT1lLmtleSYmdSYmXygpfSxQPWZ1bmN0aW9uKGUpe2wmJmIuY3VycmVudCYmIWIuY3VycmVudC5jb250YWlucyhlLnRhcmdldCkmJl8oKX07cmV0dXJuKDAsby51c2VFZmZlY3QpKChmdW5jdGlvbigpe3JldHVybiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixDKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsUCksZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixDKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsUCl9fSksW3ddKSwoMCxvLnVzZUVmZmVjdCkoKGZ1bmN0aW9uKCl7aWYocClyZXR1cm4gdyYmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJodG1sXCIpLnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIpLGZ1bmN0aW9uKCl7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImh0bWxcIikuc3R5bGUub3ZlcmZsb3c9XCJcIn19KSxbd10pLFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCxrKCksUmVhY3QuY3JlYXRlRWxlbWVudChnUy5Qcm92aWRlcix7dmFsdWU6e29wZW46dyxzZXRPcGVuOkUsaGFuZGxlQ2xvc2U6XyxkZXNpZ246ZixkaWFsb2dDb250YWluZXJSZWY6eCxkaWFsb2dSZWY6Yn19LFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7cmVmOngsY2xhc3NOYW1lOnRlKFwiZml4ZWQgei05OTk5OTkgdy0wIGgtMCBvdmVyZmxvdy12aXNpYmxlXCIscyl9LHIpKSl9O3hTLmRpc3BsYXlOYW1lPVwiRGlhbG9nXCI7dmFyIHdTPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmNsYXNzTmFtZSxyPXZTKCksbz1yLm9wZW4saT1yLmhhbmRsZUNsb3NlLHM9ci5kaWFsb2dSZWY7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGgsbnVsbCxvJiZSZWFjdC5jcmVhdGVFbGVtZW50KEhmLmRpdix7Y2xhc3NOYW1lOlwiZml4ZWQgaW5zZXQtMCBvdmVyZmxvdy15LWF1dG9cIixpbml0aWFsOlwiZXhpdFwiLGFuaW1hdGU6XCJvcGVuXCIsZXhpdDpcImV4aXRcIix2YXJpYW50czp5Uyxyb2xlOlwiZGlhbG9nXCIsdHJhbnNpdGlvbjpiU30sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBtaW4taC1mdWxsXCJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7cmVmOnMsY2xhc3NOYW1lOnRlKFwiZmxleCBmbGV4LWNvbCBnYXAtNSB3LTEyMCBoLWZpdCBiZy1iYWNrZ3JvdW5kLXByaW1hcnkgYm9yZGVyIGJvcmRlci1zb2xpZCBib3JkZXItYm9yZGVyLXN1YnRsZSByb3VuZGVkLXhsIHNoYWRvdy1zb2Z0LXNoYWRvdy0yeGwgbXktNSBvdmVyZmxvdy1oaWRkZW5cIixuKX0sXCJmdW5jdGlvblwiPT10eXBlb2YgdD90KHtjbG9zZTppfSk6dCkpKSl9O3dTLmRpc3BsYXlOYW1lPVwiRGlhbG9nLlBhbmVsXCI7dmFyIEVTPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2xhc3NOYW1lLG49cFMoZSxzUykscj12UygpLG89ci5vcGVuLGk9ci5kaWFsb2dDb250YWluZXJSZWY7cmV0dXJuIGkuY3VycmVudCYmKDAsem4uY3JlYXRlUG9ydGFsKShSZWFjdC5jcmVhdGVFbGVtZW50KEhoLG51bGwsbyYmUmVhY3QuY3JlYXRlRWxlbWVudChIZi5kaXYsaFMoe2NsYXNzTmFtZTp0ZShcImZpeGVkIGluc2V0LTAgLXotMTAgYmctYmFja2dyb3VuZC1pbnZlcnNlLzkwIGJhY2tkcm9wLWJsdXItc21cIix0KX0sbix7aW5pdGlhbDpcImV4aXRcIixhbmltYXRlOlwib3BlblwiLGV4aXQ6XCJleGl0XCIsdmFyaWFudHM6eVMsdHJhbnNpdGlvbjpiU30pKSksaS5jdXJyZW50KX07RVMuZGlzcGxheU5hbWU9XCJEaWFsb2cuQmFja2Ryb3BcIjt2YXIgU1M9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuY2xhc3NOYW1lLHI9cFMoZSxhUyk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixoUyh7Y2xhc3NOYW1lOnRlKFwic3BhY2UteS0yIHB4LTUgcHQtNSBwYi0xXCIsbil9LHIpLHQpfTtTUy5kaXNwbGF5TmFtZT1cIkRpYWxvZy5IZWFkZXJcIjt2YXIgX1M9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuYXMscj12b2lkIDA9PT1uP1wiaDNcIjpuLG89ZS5jbGFzc05hbWUsaT1wUyhlLGxTKTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChyLGhTKHtjbGFzc05hbWU6dGUoXCJ0ZXh0LWJhc2UgZm9udC1zZW1pYm9sZCB0ZXh0LXRleHQtcHJpbWFyeSBtLTAgcC0wXCIsbyl9LGkpLHQpfTtfUy5kaXNwbGF5TmFtZT1cIkRpYWxvZy5UaXRsZVwiO3ZhciBrUz1mdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuLG49ZS5hcyxyPXZvaWQgMD09PW4/XCJwXCI6bixvPWUuY2xhc3NOYW1lLGk9cFMoZSxjUyk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQocixoUyh7Y2xhc3NOYW1lOnRlKFwidGV4dC1zbSBmb250LW5vcm1hbCB0ZXh0LXRleHQtc2Vjb25kYXJ5IG15LTAgbWwtMCBtci0xIHAtMFwiLG8pfSxpKSx0KX07a1MuZGlzcGxheU5hbWU9XCJEaWFsb2cuRGVzY3JpcHRpb25cIjt2YXIgQ1M9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jbGFzc05hbWUsbj1wUyhlLHVTKTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLGhTKHtjbGFzc05hbWU6dGUoXCJiZy10cmFuc3BhcmVudCBpbmxpbmUtZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgYm9yZGVyLTAgcC0xIG0tMCBjdXJzb3ItcG9pbnRlciBmb2N1czpvdXRsaW5lLW5vbmUgb3V0bGluZS1ub25lIHNoYWRvdy1ub25lXCIsdCksXCJhcmlhLWxhYmVsXCI6XCJDbG9zZSBkaWFsb2dcIn0sbiksUmVhY3QuY3JlYXRlRWxlbWVudChIZSx7Y2xhc3NOYW1lOlwic2l6ZS00IHRleHQtdGV4dC1wcmltYXJ5IHNocmluay0wXCJ9KSl9LFBTPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmFzLHI9dm9pZCAwPT09bj9vLkZyYWdtZW50Om4saT1wUyhlLGRTKSxzPXZTKCkuaGFuZGxlQ2xvc2U7cmV0dXJuKDAsby5pc1ZhbGlkRWxlbWVudCkodCkmJnQ/cj09PW8uRnJhZ21lbnQ/XCJmdW5jdGlvblwiPT10eXBlb2YgdD90KHtjbG9zZTpzfSk6KDAsby5jbG9uZUVsZW1lbnQpKHQse29uQ2xpY2s6c30pOlJlYWN0LmNyZWF0ZUVsZW1lbnQocixoUyh7fSxpLHtvbkNsaWNrOnN9KSx0KTpSZWFjdC5jcmVhdGVFbGVtZW50KENTLGhTKHtvbkNsaWNrOnN9LGkpKX07UFMuZGlzcGxheU5hbWU9XCJEaWFsb2cuQ2xvc2VCdXR0b25cIjt2YXIgVFM9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuY2xhc3NOYW1lLHI9cFMoZSxmUyk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixoUyh7Y2xhc3NOYW1lOnRlKFwicHgtNVwiLG4pfSxyKSx0KX07VFMuZGlzcGxheU5hbWU9XCJEaWFsb2cuQm9keVwiO3ZhciBPUz1mdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuLG49ZS5jbGFzc05hbWUscj12UygpLG89ci5kZXNpZ24saT1yLmhhbmRsZUNsb3NlO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcInAtNCBmbGV4IGp1c3RpZnktZW5kIGdhcC0zXCIse1wiYmctYmFja2dyb3VuZC1zZWNvbmRhcnlcIjpcImZvb3Rlci1kaXZpZGVkXCI9PT1vfSxuKX0sdD9cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Qoe2Nsb3NlOml9KTp0Om51bGwpfTtPUy5kaXNwbGF5TmFtZT1cIkRpYWxvZy5Gb290ZXJcIjt2YXIgUlM9T2JqZWN0LmFzc2lnbih4Uyx7UGFuZWw6d1MsQmFja2Ryb3A6RVMsVGl0bGU6X1MsRGVzY3JpcHRpb246a1MsQ2xvc2VCdXR0b246UFMsSGVhZGVyOlNTLEJvZHk6VFMsRm9vdGVyOk9TfSksTlM9W1wiY2hpbGRyZW5cIixcImdhcFwiLFwiY2xhc3NOYW1lXCJdO2Z1bmN0aW9uIEFTKCl7cmV0dXJuIEFTPU9iamVjdC5hc3NpZ24/T2JqZWN0LmFzc2lnbi5iaW5kKCk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKSh7fSkuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0sQVMuYXBwbHkobnVsbCxhcmd1bWVudHMpfXZhciBqUz1mdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuLG49ZS5nYXAscj12b2lkIDA9PT1uP1wibGdcIjpuLG89ZS5jbGFzc05hbWUscz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxOUyk7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsQVMoe2NsYXNzTmFtZTp0ZShcInctZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gYmctYmFja2dyb3VuZC1wcmltYXJ5IHAtNSBtaW4taC0xNlwiLHJlKHIpLG8pfSxzKSx0KX07alMuTGVmdD1mdW5jdGlvbihlKXt2YXIgdD1lLmdhcCxuPXZvaWQgMD09PXQ/XCJzbVwiOnQscj1lLmNoaWxkcmVuLG89ZS5jbGFzc05hbWU7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcImZsZXggaXRlbXMtY2VudGVyXCIscmUobiksbyl9LHIpfSxqUy5NaWRkbGU9ZnVuY3Rpb24oZSl7dmFyIHQsbj1lLmdhcCxyPXZvaWQgMD09PW4/XCJtZFwiOm4sbz1lLmNoaWxkcmVuLHM9ZS5hbGlnbixhPXZvaWQgMD09PXM/XCJjZW50ZXJcIjpzLGw9ZS5jbGFzc05hbWUsYz1udWxsPT09KHQ9e2xlZnQ6XCJqdXN0aWZ5LXN0YXJ0XCIsY2VudGVyOlwianVzdGlmeS1jZW50ZXJcIixyaWdodDpcImp1c3RpZnktZW5kXCJ9KXx8dm9pZCAwPT09dD92b2lkIDA6dFthXTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiZmxleCBpdGVtcy1jZW50ZXIgZ3Jvd1wiLHJlKHIpLGMsbCl9LG8pfSxqUy5SaWdodD1mdW5jdGlvbihlKXt2YXIgdD1lLmdhcCxuPXZvaWQgMD09PXQ/XCJzbVwiOnQscj1lLmNoaWxkcmVuLG89ZS5jbGFzc05hbWU7cmV0dXJuIGkoKS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcImZsZXggaXRlbXMtY2VudGVyXCIscmUobiksbyl9LHIpfSxqUy5JdGVtPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmNsYXNzTmFtZTtyZXR1cm4gaSgpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwiZmxleCBpdGVtcy1jZW50ZXIgWyY+c3ZnXTpibG9jayBoLWZ1bGxcIixuKX0sdCl9O3ZhciBNUz1qUztmdW5jdGlvbiBJUyhlLHQpeyhudWxsPT10fHx0PmUubGVuZ3RoKSYmKHQ9ZS5sZW5ndGgpO2Zvcih2YXIgbj0wLHI9QXJyYXkodCk7bjx0O24rKylyW25dPWVbbl07cmV0dXJuIHJ9dmFyIERTPSgwLG8uY3JlYXRlQ29udGV4dCkoKSxMUz1mdW5jdGlvbigpe3JldHVybigwLG8udXNlQ29udGV4dCkoRFMpfSxGUz1PYmplY3QuYXNzaWduKChmdW5jdGlvbihlKXt2YXIgdD1lLm9wZW4sbj1lLnNldE9wZW4scj1lLmNoaWxkcmVuLGk9ZS50cmlnZ2VyLHM9ZS5jbGFzc05hbWUsYT1lLmV4aXRPbkNsaWNrT3V0c2lkZSxsPXZvaWQgMCE9PWEmJmEsYz1lLmV4aXRPbkVzYyx1PXZvaWQgMD09PWN8fGMsZD1lLmRlc2lnbixmPXZvaWQgMD09PWQ/XCJzaW1wbGVcIjpkLGg9ZS5wb3NpdGlvbixwPXZvaWQgMD09PWg/XCJyaWdodFwiOmgsbT1lLnRyYW5zaXRpb25EdXJhdGlvbixnPXZvaWQgMD09PW0/LjI6bSx2PWUuc2Nyb2xsTG9jayx5PXZvaWQgMD09PXZ8fHYsYj12b2lkIDAhPT10JiZ2b2lkIDAhPT1uLHg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7dmFyIG49bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9bil7dmFyIHIsbyxpLHMsYT1bXSxsPSEwLGM9ITE7dHJ5e2lmKGk9KG49bi5jYWxsKGUpKS5uZXh0LDA9PT10KXtpZihPYmplY3QobikhPT1uKXJldHVybjtsPSExfWVsc2UgZm9yKDshKGw9KHI9aS5jYWxsKG4pKS5kb25lKSYmKGEucHVzaChyLnZhbHVlKSxhLmxlbmd0aCE9PXQpO2w9ITApO31jYXRjaChlKXtjPSEwLG89ZX1maW5hbGx5e3RyeXtpZighbCYmbnVsbCE9bi5yZXR1cm4mJihzPW4ucmV0dXJuKCksT2JqZWN0KHMpIT09cykpcmV0dXJufWZpbmFsbHl7aWYoYyl0aHJvdyBvfX1yZXR1cm4gYX19KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIElTKGUsdCk7dmFyIG49e30udG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShlKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/SVMoZSx0KTp2b2lkIDB9fShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9KCgwLG8udXNlU3RhdGUpKCExKSwyKSx3PXhbMF0sRT14WzFdLFM9KDAsby51c2VSZWYpKG51bGwpLF89KDAsby51c2VSZWYpKG51bGwpLGs9KDAsby51c2VNZW1vKSgoZnVuY3Rpb24oKXtyZXR1cm4gYj90Ond9KSxbdCx3XSksQz0oMCxvLnVzZU1lbW8pKChmdW5jdGlvbigpe3JldHVybiBiP246RX0pLFtFLEVdKSxQPWZ1bmN0aW9uKCl7a3x8QyghMCl9LFQ9ZnVuY3Rpb24oKXtrJiZDKCExKX0sTz0oMCxvLnVzZUNhbGxiYWNrKSgoZnVuY3Rpb24oKXtyZXR1cm4oMCxvLmlzVmFsaWRFbGVtZW50KShpKT8oMCxvLmNsb25lRWxlbWVudCkoaSx7b25DbGljazpuZShQLGkucHJvcHMub25DbGljayl9KTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2koe29uQ2xpY2s6UH0pOm51bGx9KSxbaSxQLFRdKSxSPWZ1bmN0aW9uKGUpe1wiRXNjYXBlXCI9PT1lLmtleSYmdSYmVCgpfSxOPWZ1bmN0aW9uKGUpe2wmJlMuY3VycmVudCYmIVMuY3VycmVudC5jb250YWlucyhlLnRhcmdldCkmJlQoKX07cmV0dXJuKDAsby51c2VFZmZlY3QpKChmdW5jdGlvbigpe3JldHVybiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixSKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsTiksZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixSKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsTil9fSksW2tdKSwoMCxvLnVzZUVmZmVjdCkoKGZ1bmN0aW9uKCl7aWYoeSlyZXR1cm4gayYmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJodG1sXCIpLnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIpLGZ1bmN0aW9uKCl7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImh0bWxcIikuc3R5bGUub3ZlcmZsb3c9XCJcIn19KSxba10pLFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCxPKCksUmVhY3QuY3JlYXRlRWxlbWVudChEUy5Qcm92aWRlcix7dmFsdWU6e29wZW46ayxzZXRPcGVuOkMsaGFuZGxlQ2xvc2U6VCxkZXNpZ246Zixwb3NpdGlvbjpwLGRyYXdlckNvbnRhaW5lclJlZjpfLGRyYXdlclJlZjpTLHRyYW5zaXRpb25EdXJhdGlvbjp7ZHVyYXRpb246Z319fSxSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTp0ZShcImZpeGVkIHotOTk5OTk5IHctMCBoLTAgb3ZlcmZsb3ctdmlzaWJsZVwiLHMpLHJvbGU6XCJkaWFsb2dcIixyZWY6X30scikpKX0pLHtkaXNwbGF5TmFtZTpcIkRyYXdlclwifSkselM9e2xlZnQ6e29wZW46e3g6MH0sZXhpdDp7eDpcIi0xMDAlXCJ9fSxyaWdodDp7b3Blbjp7eDowfSxleGl0Ont4OlwiMTAwJVwifX19LEJTPU9iamVjdC5hc3NpZ24oKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmNsYXNzTmFtZSxyPUxTKCksbz1yLm9wZW4saT1yLnBvc2l0aW9uLHM9ci5oYW5kbGVDbG9zZSxhPXIuZHJhd2VyUmVmLGw9ci50cmFuc2l0aW9uRHVyYXRpb247cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGgsbnVsbCxvJiZSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpcImZpeGVkIGluc2V0LTBcIn0sUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6dGUoXCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLWZ1bGxcIix7XCJqdXN0aWZ5LXN0YXJ0XCI6XCJsZWZ0XCI9PT1pLFwianVzdGlmeS1lbmRcIjpcInJpZ2h0XCI9PT1pfSl9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGYuZGl2LHtyZWY6YSxjbGFzc05hbWU6dGUoXCJmbGV4IGZsZXgtY29sIGdhcC01IHctMTIwIGgtZnVsbCBiZy1iYWNrZ3JvdW5kLXByaW1hcnkgc2hhZG93LTJ4bCBteS01IG92ZXJmbG93LWhpZGRlblwiLG4pLGluaXRpYWw6XCJleGl0XCIsYW5pbWF0ZTpcIm9wZW5cIixleGl0OlwiZXhpdFwiLHZhcmlhbnRzOnpTW2ldLHRyYW5zaXRpb246bH0sXCJmdW5jdGlvblwiPT10eXBlb2YgdD90KHtjbG9zZTpzfSk6dCkpKSl9KSx7ZGlzcGxheU5hbWU6XCJEcmF3ZXIuUGFuZWxcIn0pLFZTPVtcImNoaWxkcmVuXCIsXCJjbGFzc05hbWVcIl07ZnVuY3Rpb24gV1MoKXtyZXR1cm4gV1M9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxXUy5hcHBseShudWxsLGFyZ3VtZW50cyl9dmFyIFVTPU9iamVjdC5hc3NpZ24oKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmNsYXNzTmFtZSxyPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuPXt9O2Zvcih2YXIgciBpbiBlKWlmKHt9Lmhhc093blByb3BlcnR5LmNhbGwoZSxyKSl7aWYodC5pbmNsdWRlcyhyKSljb250aW51ZTtuW3JdPWVbcl19cmV0dXJuIG59KGUsdCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtmb3Iocj0wO3I8aS5sZW5ndGg7cisrKW49aVtyXSx0LmluY2x1ZGVzKG4pfHx7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGUsbikmJihvW25dPWVbbl0pfXJldHVybiBvfShlLFZTKTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLFdTKHtjbGFzc05hbWU6dGUoXCJzcGFjZS15LTIgcHgtNSBwdC01IHBiLTFcIixuKX0sciksdCl9KSx7ZGlzcGxheU5hbWU6XCJEcmF3ZXIuSGVhZGVyXCJ9KSwkUz1bXCJjaGlsZHJlblwiLFwiYXNcIixcImNsYXNzTmFtZVwiXTtmdW5jdGlvbiBLUygpe3JldHVybiBLUz1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LEtTLmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgSFM9T2JqZWN0LmFzc2lnbigoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuYXMscj12b2lkIDA9PT1uP1wiaDNcIjpuLG89ZS5jbGFzc05hbWUsaT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSwkUyk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQocixLUyh7Y2xhc3NOYW1lOnRlKFwidGV4dC1iYXNlIGZvbnQtc2VtaWJvbGQgdGV4dC10ZXh0LXByaW1hcnkgbS0wIHAtMFwiLG8pfSxpKSx0KX0pLHtkaXNwbGF5TmFtZTpcIkRyYXdlci5UaXRsZVwifSkscVM9W1wiY2hpbGRyZW5cIixcImFzXCIsXCJjbGFzc05hbWVcIl07ZnVuY3Rpb24gWVMoKXtyZXR1cm4gWVM9T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxZUy5hcHBseShudWxsLGFyZ3VtZW50cyl9dmFyIEdTPU9iamVjdC5hc3NpZ24oKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmFzLHI9dm9pZCAwPT09bj9cInBcIjpuLG89ZS5jbGFzc05hbWUsaT1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxxUyk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQocixZUyh7Y2xhc3NOYW1lOnRlKFwidGV4dC1zbSBmb250LW5vcm1hbCB0ZXh0LXRleHQtc2Vjb25kYXJ5IG15LTAgbWwtMCBtci0xIHAtMFwiLG8pfSxpKSx0KX0pLHtkaXNwbGF5TmFtZTpcIkRyYXdlci5EZXNjcmlwdGlvblwifSksWFM9W1wiY2hpbGRyZW5cIixcImNsYXNzTmFtZVwiXTtmdW5jdGlvbiBKUygpe3JldHVybiBKUz1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LEpTLmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgWlM9T2JqZWN0LmFzc2lnbigoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGlsZHJlbixuPWUuY2xhc3NOYW1lLHI9ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99KGUsWFMpO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsSlMoe2NsYXNzTmFtZTp0ZShcInB4LTUgZmxleCBmbGV4LWNvbCBmbGV4LTEgb3ZlcmZsb3cteS1hdXRvIG92ZXJmbG93LXgtaGlkZGVuXCIsbil9LHIpLHQpfSkse2Rpc3BsYXlOYW1lOlwiRHJhd2VyLkJvZHlcIn0pLFFTPU9iamVjdC5hc3NpZ24oKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hpbGRyZW4sbj1lLmNsYXNzTmFtZSxyPUxTKCksbz1yLmRlc2lnbixpPXIuaGFuZGxlQ2xvc2U7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOnRlKFwicC01IGZsZXgganVzdGlmeS1lbmQgZ2FwLTMgbXQtYXV0b1wiLHtcImJnLWJhY2tncm91bmQtc2Vjb25kYXJ5XCI6XCJmb290ZXItZGl2aWRlZFwiPT09b30sbil9LHQ/XCJmdW5jdGlvblwiPT10eXBlb2YgdD90KHtjbG9zZTppfSk6dDpudWxsKX0pLHtkaXNwbGF5TmFtZTpcIkRyYXdlci5Gb290ZXJcIn0pLGVfPVtcImNsYXNzTmFtZVwiXSx0Xz1bXCJjaGlsZHJlblwiLFwiYXNcIl07ZnVuY3Rpb24gbl8oKXtyZXR1cm4gbl89T2JqZWN0LmFzc2lnbj9PYmplY3QuYXNzaWduLmJpbmQoKTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSxuXy5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gcl8oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG49e307Zm9yKHZhciByIGluIGUpaWYoe30uaGFzT3duUHJvcGVydHkuY2FsbChlLHIpKXtpZih0LmluY2x1ZGVzKHIpKWNvbnRpbnVlO25bcl09ZVtyXX1yZXR1cm4gbn0oZSx0KTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5jbHVkZXMobil8fHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSxuKSYmKG9bbl09ZVtuXSl9cmV0dXJuIG99dmFyIG9fPWZ1bmN0aW9uKGUpe3ZhciB0PWUuY2xhc3NOYW1lLG49cl8oZSxlXyk7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIixuXyh7Y2xhc3NOYW1lOnRlKFwiYmctdHJhbnNwYXJlbnQgaW5saW5lLWZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIGJvcmRlci0wIHAtMSBtLTAgY3Vyc29yLXBvaW50ZXIgZm9jdXM6b3V0bGluZS1ub25lIG91dGxpbmUtbm9uZSBzaGFkb3ctbm9uZVwiLHQpLFwiYXJpYS1sYWJlbFwiOlwiQ2xvc2UgZHJhd2VyXCJ9LG4pLFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGUse2NsYXNzTmFtZTpcInNpemUtNCB0ZXh0LXRleHQtcHJpbWFyeSBzaHJpbmstMFwifSkpfSxpXz1PYmplY3QuYXNzaWduKChmdW5jdGlvbihlKXt2YXIgdD1lLmNoaWxkcmVuLG49ZS5hcyxyPXZvaWQgMD09PW4/by5GcmFnbWVudDpuLGk9cl8oZSx0Xykscz1MUygpLmhhbmRsZUNsb3NlO3JldHVybigwLG8uaXNWYWxpZEVsZW1lbnQpKHQpJiZ0P3I9PT1vLkZyYWdtZW50P1wiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dCh7Y2xvc2U6c30pOigwLG8uY2xvbmVFbGVtZW50KSh0LHtvbkNsaWNrOnN9KTpSZWFjdC5jcmVhdGVFbGVtZW50KHIsbl8oe30saSx7b25DbGljazpzfSksdCk6UmVhY3QuY3JlYXRlRWxlbWVudChvXyxuXyh7b25DbGljazpzfSxpKSl9KSx7ZGlzcGxheU5hbWU6XCJEcmF3ZXIuQ2xvc2VCdXR0b25cIn0pLHNfPVtcImNsYXNzTmFtZVwiXTtmdW5jdGlvbiBhXygpe3JldHVybiBhXz1PYmplY3QuYXNzaWduP09iamVjdC5hc3NpZ24uYmluZCgpOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPWFyZ3VtZW50c1t0XTtmb3IodmFyIHIgaW4gbikoe30pLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKGVbcl09bltyXSl9cmV0dXJuIGV9LGFfLmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgbF89e29wZW46e29wYWNpdHk6MX0sZXhpdDp7b3BhY2l0eTowfX0sY189T2JqZWN0LmFzc2lnbigoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jbGFzc05hbWUsbj1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSlpZih7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikpe2lmKHQuaW5jbHVkZXMocikpY29udGludWU7bltyXT1lW3JdfXJldHVybiBufShlLHQpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyluPWlbcl0sdC5pbmNsdWRlcyhuKXx8e30ucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlLG4pJiYob1tuXT1lW25dKX1yZXR1cm4gb30oZSxzXykscj1MUygpLG89ci5vcGVuLGk9ci5kcmF3ZXJDb250YWluZXJSZWYscz1yLnRyYW5zaXRpb25EdXJhdGlvbjtyZXR1cm4gaS5jdXJyZW50JiYoMCx6bi5jcmVhdGVQb3J0YWwpKFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGgsbnVsbCxvJiZSZWFjdC5jcmVhdGVFbGVtZW50KEhmLmRpdixhXyh7Y2xhc3NOYW1lOnRlKFwiZml4ZWQgaW5zZXQtMCAtei0xMCBiZy1iYWNrZ3JvdW5kLWludmVyc2UvOTAgYmFja2Ryb3AtYmx1ci1zbVwiLHQpfSxuLHtpbml0aWFsOlwiZXhpdFwiLGFuaW1hdGU6XCJvcGVuXCIsZXhpdDpcImV4aXRcIix2YXJpYW50czpsXyx0cmFuc2l0aW9uOnN9KSkpLGkuY3VycmVudCl9KSx7ZGlzcGxheU5hbWU6XCJEcmF3ZXIuQmFja2Ryb3BcIn0pLHVfPU9iamVjdC5hc3NpZ24oRlMse1BhbmVsOkJTLEhlYWRlcjpVUyxUaXRsZTpIUyxEZXNjcmlwdGlvbjpHUyxCb2R5OlpTLENsb3NlQnV0dG9uOmlfLEZvb3RlcjpRUyxCYWNrZHJvcDpjX30pO3JldHVybiByfSgpfSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bsf/force-ui/dist/force-ui.js\n");

/***/ }),

/***/ "./node_modules/@remix-run/router/dist/router.js":
/*!*******************************************************!*\
  !*** ./node_modules/@remix-run/router/dist/router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortedDeferredError: () => (/* binding */ AbortedDeferredError),\n/* harmony export */   Action: () => (/* binding */ Action),\n/* harmony export */   IDLE_BLOCKER: () => (/* binding */ IDLE_BLOCKER),\n/* harmony export */   IDLE_FETCHER: () => (/* binding */ IDLE_FETCHER),\n/* harmony export */   IDLE_NAVIGATION: () => (/* binding */ IDLE_NAVIGATION),\n/* harmony export */   UNSAFE_DEFERRED_SYMBOL: () => (/* binding */ UNSAFE_DEFERRED_SYMBOL),\n/* harmony export */   UNSAFE_DeferredData: () => (/* binding */ DeferredData),\n/* harmony export */   UNSAFE_ErrorResponseImpl: () => (/* binding */ ErrorResponseImpl),\n/* harmony export */   UNSAFE_convertRouteMatchToUiMatch: () => (/* binding */ convertRouteMatchToUiMatch),\n/* harmony export */   UNSAFE_convertRoutesToDataRoutes: () => (/* binding */ convertRoutesToDataRoutes),\n/* harmony export */   UNSAFE_decodePath: () => (/* binding */ decodePath),\n/* harmony export */   UNSAFE_getResolveToMatches: () => (/* binding */ getResolveToMatches),\n/* harmony export */   UNSAFE_invariant: () => (/* binding */ invariant),\n/* harmony export */   UNSAFE_warning: () => (/* binding */ warning),\n/* harmony export */   createBrowserHistory: () => (/* binding */ createBrowserHistory),\n/* harmony export */   createHashHistory: () => (/* binding */ createHashHistory),\n/* harmony export */   createMemoryHistory: () => (/* binding */ createMemoryHistory),\n/* harmony export */   createPath: () => (/* binding */ createPath),\n/* harmony export */   createRouter: () => (/* binding */ createRouter),\n/* harmony export */   createStaticHandler: () => (/* binding */ createStaticHandler),\n/* harmony export */   data: () => (/* binding */ data),\n/* harmony export */   defer: () => (/* binding */ defer),\n/* harmony export */   generatePath: () => (/* binding */ generatePath),\n/* harmony export */   getStaticContextFromError: () => (/* binding */ getStaticContextFromError),\n/* harmony export */   getToPathname: () => (/* binding */ getToPathname),\n/* harmony export */   isDataWithResponseInit: () => (/* binding */ isDataWithResponseInit),\n/* harmony export */   isDeferredData: () => (/* binding */ isDeferredData),\n/* harmony export */   isRouteErrorResponse: () => (/* binding */ isRouteErrorResponse),\n/* harmony export */   joinPaths: () => (/* binding */ joinPaths),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   matchPath: () => (/* binding */ matchPath),\n/* harmony export */   matchRoutes: () => (/* binding */ matchRoutes),\n/* harmony export */   normalizePathname: () => (/* binding */ normalizePathname),\n/* harmony export */   parsePath: () => (/* binding */ parsePath),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   redirectDocument: () => (/* binding */ redirectDocument),\n/* harmony export */   replace: () => (/* binding */ replace),\n/* harmony export */   resolvePath: () => (/* binding */ resolvePath),\n/* harmony export */   resolveTo: () => (/* binding */ resolveTo),\n/* harmony export */   stripBasename: () => (/* binding */ stripBasename)\n/* harmony export */ });\n/**\n * @remix-run/router v1.20.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init2;\n      if (result.data instanceof Error) {\n        var _result$init;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, undefined, result.data);\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init3, _result$init4;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,\n      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\n\n//# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@remix-run/router/dist/router.js\n");

/***/ }),

/***/ "./src/App.js":
/*!********************!*\
  !*** ./src/App.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ \"@wordpress/element\");\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n/* harmony import */ var _Screens_Test_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Screens/Test.js */ \"./src/Screens/Test.js\");\n/* harmony import */ var _Components_Dashboard_Dashboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Components/Dashboard/Dashboard */ \"./src/Components/Dashboard/Dashboard.jsx\");\n/* harmony import */ var _Components_Widgets_Features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Components/Widgets/Features */ \"./src/Components/Widgets/Features.jsx\");\n/* harmony import */ var _Components_Templates_Templates__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Components/Templates/Templates */ \"./src/Components/Templates/Templates.jsx\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/dist/index.js\");\n\n // Ensure you have your Tailwind CSS styles imported\n\n\n\n\n\nvar App = function App() {\n  return /*#__PURE__*/React.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_6__.BrowserRouter, null, /*#__PURE__*/React.createElement(_Components_Widgets_Features__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4QztBQUN4QixDQUFDO0FBQ1o7QUFDSztBQUNEO0FBQ0M7QUFDMkM7QUFFM0QsSUFBTU8sR0FBRyxHQUFHLFNBQU5BLEdBQUdBLENBQUEsRUFBUztFQUNqQixvQkFDQ0MsS0FBQSxDQUFBQyxhQUFBLENBQUNILDJEQUFNLHFCQUVORSxLQUFBLENBQUFDLGFBQUEsQ0FBQ04sb0VBQVEsTUFBQyxDQUVILENBQUM7QUFFWCxDQUFDO0FBRUQsaUVBQWVJLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9BcHAuanM/YmU5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ0B3b3JkcHJlc3MvZWxlbWVudCc7XG5pbXBvcnQgJy4vc3R5bGVzLmNzcyc7IC8vIEVuc3VyZSB5b3UgaGF2ZSB5b3VyIFRhaWx3aW5kIENTUyBzdHlsZXMgaW1wb3J0ZWRcbmltcG9ydCBUZXN0IGZyb20gJ0BzY3JlZW5zL1Rlc3QuanMnO1xuaW1wb3J0IERhc2hib2FyZCBmcm9tICdAY29tcG9uZW50cy9EYXNoYm9hcmQvRGFzaGJvYXJkJztcbmltcG9ydCBGZWF0dXJlcyBmcm9tICdAY29tcG9uZW50cy9XaWRnZXRzL0ZlYXR1cmVzJztcbmltcG9ydCBUZW1wbGF0ZXMgZnJvbSAnQGNvbXBvbmVudHMvVGVtcGxhdGVzL1RlbXBsYXRlcyc7XG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nOyBcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRyZXR1cm4gKFxuXHRcdDxSb3V0ZXI+XG5cdFx0XHR7LyogPERhc2hib2FyZC8+ICovfVxuXHRcdFx0PEZlYXR1cmVzLz5cblx0XHRcdHsvKiA8VGVtcGxhdGVzLz4gKi99XG5cdFx0PC9Sb3V0ZXI+XG5cdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJUZXN0IiwiRGFzaGJvYXJkIiwiRmVhdHVyZXMiLCJUZW1wbGF0ZXMiLCJCcm93c2VyUm91dGVyIiwiUm91dGVyIiwiQXBwIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/App.js\n");

/***/ }),

/***/ "./src/Components/Dashboard/Dashboard.jsx":
/*!************************************************!*\
  !*** ./src/Components/Dashboard/Dashboard.jsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _HeaderLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../HeaderLine */ \"./src/Components/HeaderLine.js\");\n/* harmony import */ var _NavMenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../NavMenu */ \"./src/Components/NavMenu.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Widgets__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Widgets */ \"./src/Components/Dashboard/Widgets.jsx\");\n/* harmony import */ var _TemplateSection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TemplateSection */ \"./src/Components/Dashboard/TemplateSection.js\");\n/* harmony import */ var _QuickAccess__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./QuickAccess */ \"./src/Components/Dashboard/QuickAccess.js\");\n/* harmony import */ var _WelcomeContainer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WelcomeContainer */ \"./src/Components/Dashboard/WelcomeContainer.js\");\n/* harmony import */ var _UltimateFeatures__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./UltimateFeatures */ \"./src/Components/Dashboard/UltimateFeatures.js\");\n/* harmony import */ var _ExtendWebsite__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ExtendWebsite */ \"./src/Components/Dashboard/ExtendWebsite.jsx\");\n\n\n\n\n\n\n\n\n\n\nvar Dashboard = function Dashboard() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement((react__WEBPACK_IMPORTED_MODULE_3___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_NavMenu__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(\"div\", {\n    className: \"\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_HeaderLine__WEBPACK_IMPORTED_MODULE_1__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_0__.Container, {\n    align: \"stretch\",\n    className: \"p-2\",\n    containerType: \"flex\",\n    direction: \"row\",\n    gap: \"sm\",\n    justify: \"start\",\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_0__.Container.Item, {\n    className: \"p-2\",\n    alignSelf: \"auto\",\n    order: \"none\",\n    shrink: 1,\n    style: {\n      width: \"65%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_WelcomeContainer__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_Widgets__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_UltimateFeatures__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_0__.Container.Item, {\n    className: \"p-2\",\n    style: {\n      width: \"34%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_ExtendWebsite__WEBPACK_IMPORTED_MODULE_9__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_TemplateSection__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_QuickAccess__WEBPACK_IMPORTED_MODULE_6__[\"default\"], null)))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dashboard);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvRGFzaGJvYXJkLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ3pCO0FBQ0g7QUFDVztBQUNYO0FBQ1E7QUFDSjtBQUNLO0FBQ0E7QUFDSDtBQUVwQixJQUFNVSxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBQSxFQUFTO0VBQ3BCLG9CQUNJUCwwREFBQSxDQUFBQSx1REFBQSxxQkFDSUEsMERBQUEsQ0FBQ0QsZ0RBQU8sTUFBRSxDQUFDLGVBQ1hDLDBEQUFBO0lBQUtVLFNBQVMsRUFBQztFQUFFLGdCQUNiViwwREFBQSxDQUFDRixtREFBVSxNQUFFLENBQUMsZUFDZEUsMERBQUEsQ0FBQ0gsb0RBQVM7SUFDTmMsS0FBSyxFQUFDLFNBQVM7SUFDZkQsU0FBUyxFQUFDLEtBQUs7SUFDZkUsYUFBYSxFQUFDLE1BQU07SUFDcEJDLFNBQVMsRUFBQyxLQUFLO0lBQ2ZDLEdBQUcsRUFBQyxJQUFJO0lBQ1JDLE9BQU8sRUFBQyxPQUFPO0lBQ2ZDLEtBQUssRUFBRTtNQUNIQyxLQUFLLEVBQUU7SUFDWDtFQUFFLGdCQUVGakIsMERBQUEsQ0FBQ0gsb0RBQVMsQ0FBQ3FCLElBQUk7SUFDWFIsU0FBUyxFQUFDLEtBQUs7SUFDZlMsU0FBUyxFQUFDLE1BQU07SUFDaEJDLEtBQUssRUFBQyxNQUFNO0lBQ1pDLE1BQU0sRUFBRSxDQUFFO0lBQ1ZMLEtBQUssRUFBRTtNQUNIQyxLQUFLLEVBQUU7SUFDWDtFQUFFLGdCQUVGakIsMERBQUEsQ0FBQ0kseURBQWdCLE1BQUUsQ0FBQyxlQUNwQkosMERBQUEsQ0FBQ0MsZ0RBQU8sTUFBRSxDQUFDLGVBQ1hELDBEQUFBLENBQUNLLHlEQUFnQixNQUFFLENBQ1AsQ0FBQyxlQUNqQkwsMERBQUEsQ0FBQ0gsb0RBQVMsQ0FBQ3FCLElBQUk7SUFDWFIsU0FBUyxFQUFDLEtBQUs7SUFDZk0sS0FBSyxFQUFFO01BQ0hDLEtBQUssRUFBRTtJQUNYO0VBQUUsZ0JBRUZqQiwwREFBQSxDQUFDTSxzREFBYSxNQUFFLENBQUMsZUFDakJOLDBEQUFBLENBQUNFLHdEQUFlLE1BQUUsQ0FBQyxlQUNuQkYsMERBQUEsQ0FBQ0csb0RBQVcsTUFBRSxDQUNGLENBQ1QsQ0FDVixDQUNQLENBQUM7QUFFWCxDQUFDO0FBRUQsaUVBQWVJLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9Db21wb25lbnRzL0Rhc2hib2FyZC9EYXNoYm9hcmQuanN4P2U5NzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSBcIkBic2YvZm9yY2UtdWlcIjtcbmltcG9ydCBIZWFkZXJMaW5lIGZyb20gJ0Bjb21wb25lbnRzL0hlYWRlckxpbmUnXG5pbXBvcnQgTmF2TWVudSBmcm9tICdAY29tcG9uZW50cy9OYXZNZW51J1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFdpZGdldHMgZnJvbSAnLi9XaWRnZXRzJ1xuaW1wb3J0IFRlbXBsYXRlU2VjdGlvbiBmcm9tICcuL1RlbXBsYXRlU2VjdGlvbidcbmltcG9ydCBRdWlja0FjY2VzcyBmcm9tICcuL1F1aWNrQWNjZXNzJ1xuaW1wb3J0IFdlbGNvbWVDb250YWluZXIgZnJvbSAnLi9XZWxjb21lQ29udGFpbmVyJ1xuaW1wb3J0IFVsdGltYXRlRmVhdHVyZXMgZnJvbSAnLi9VbHRpbWF0ZUZlYXR1cmVzJ1xuaW1wb3J0IEV4dGVuZFdlYnNpdGUgZnJvbSAnLi9FeHRlbmRXZWJzaXRlJ1xuXG5jb25zdCBEYXNoYm9hcmQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxOYXZNZW51IC8+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgIDxIZWFkZXJMaW5lIC8+XG4gICAgICAgICAgICAgICAgPENvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICBhbGlnbj1cInN0cmV0Y2hcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwLTJcIlxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXJUeXBlPVwiZmxleFwiXG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbj1cInJvd1wiXG4gICAgICAgICAgICAgICAgICAgIGdhcD1cInNtXCJcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeT1cInN0YXJ0XCJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxDb250YWluZXIuSXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicC0yXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduU2VsZj1cImF1dG9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI9XCJub25lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNocmluaz17MX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiNjUlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8V2VsY29tZUNvbnRhaW5lciAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFdpZGdldHMgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxVbHRpbWF0ZUZlYXR1cmVzIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvQ29udGFpbmVyLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgIDxDb250YWluZXIuSXRlbSBcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInAtMlwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjM0JVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEV4dGVuZFdlYnNpdGUgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUZW1wbGF0ZVNlY3Rpb24gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxRdWlja0FjY2VzcyAvPlxuICAgICAgICAgICAgICAgICAgICA8L0NvbnRhaW5lci5JdGVtPlxuICAgICAgICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGFzaGJvYXJkXG4iXSwibmFtZXMiOlsiQ29udGFpbmVyIiwiSGVhZGVyTGluZSIsIk5hdk1lbnUiLCJSZWFjdCIsIldpZGdldHMiLCJUZW1wbGF0ZVNlY3Rpb24iLCJRdWlja0FjY2VzcyIsIldlbGNvbWVDb250YWluZXIiLCJVbHRpbWF0ZUZlYXR1cmVzIiwiRXh0ZW5kV2Vic2l0ZSIsIkRhc2hib2FyZCIsImNyZWF0ZUVsZW1lbnQiLCJGcmFnbWVudCIsImNsYXNzTmFtZSIsImFsaWduIiwiY29udGFpbmVyVHlwZSIsImRpcmVjdGlvbiIsImdhcCIsImp1c3RpZnkiLCJzdHlsZSIsIndpZHRoIiwiSXRlbSIsImFsaWduU2VsZiIsIm9yZGVyIiwic2hyaW5rIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/Dashboard.jsx\n");

/***/ }),

/***/ "./src/Components/Dashboard/ExtendWebsite.jsx":
/*!****************************************************!*\
  !*** ./src/Components/Dashboard/ExtendWebsite.jsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ExtendWebsiteWidget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExtendWebsiteWidget */ \"./src/Components/Dashboard/ExtendWebsiteWidget.jsx\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/plus.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/arrow-up-right.js\");\n\n\n\n\nvar ExtendWebsiteData = [{\n  id: '1',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  activated: true,\n  title: 'Astra Theme',\n  demoLink: 'https://www.youtube.com/embed/JGwWNGJdvx8',\n  infoText: 'Free WordPress Page Builder Plugin.',\n  isInstalled: true,\n  isFree: true\n}, {\n  id: '2',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  activated: true,\n  title: 'Starter Templates',\n  demoLink: 'https://www.youtube.com/embed/JGwWNGJdvx8',\n  infoText: 'Build your dream website in minutes with AI.',\n  isInstall: true,\n  isFree: true\n}, {\n  id: '3',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  activated: true,\n  title: 'SureCart',\n  demoLink: 'https://www.youtube.com/embed/JGwWNGJdvx8',\n  infoText: 'The new way to sell on WordPress.',\n  isInstall: true,\n  isFree: true\n}, {\n  id: '4',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  activated: true,\n  title: 'Presto Player',\n  demoLink: 'https://www.youtube.com/embed/JGwWNGJdvx8',\n  infoText: 'Automate your WordPress setup.',\n  isInstall: true,\n  isFree: true\n}];\nvar ExtendWebsite = function ExtendWebsite() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"rounded-lg bg-white w-full mb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between\",\n    style: {\n      paddingTop: '12px',\n      paddingInline: '16px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"m-0 text-sm font-semibold text-text-primary\"\n  }, \"Extend Your Website\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center gap-x-2 mr-7\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex bg-black flex-col rounded-lg p-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Container, {\n    align: \"stretch\",\n    className: \"bg-background-gray gap-1 p-1\",\n    cols: 2,\n    containerType: \"grid\",\n    gap: \"\",\n    justify: \"start\"\n  }, ExtendWebsiteData.map(function (widget) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Container.Item, {\n      key: widget.id,\n      alignSelf: \"auto\",\n      className: \"text-wrap rounded-md shadow-container-item bg-background-primary p-4\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ExtendWebsiteWidget__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      widget: widget,\n      key: widget.id\n    }));\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExtendWebsite);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvRXh0ZW5kV2Vic2l0ZS5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBeUI7QUFDQztBQUNnQjtBQUNRO0FBRWxELElBQU1LLGlCQUFpQixHQUFHLENBQ3RCO0VBQ0lDLEVBQUUsRUFBRSxHQUFHO0VBQ1BDLElBQUksZUFBRVAsMERBQUEsQ0FBQ0csb0RBQUk7SUFBQ00sU0FBUyxFQUFDO0VBQVMsQ0FBRSxDQUFDO0VBQ2xDQyxTQUFTLEVBQUUsSUFBSTtFQUNmQyxLQUFLLEVBQUUsYUFBYTtFQUNwQkMsUUFBUSxFQUFFLDJDQUEyQztFQUNyREMsUUFBUSxFQUFFLHFDQUFxQztFQUMvQ0MsV0FBVyxFQUFFLElBQUk7RUFDakJDLE1BQU0sRUFBRTtBQUNaLENBQUMsRUFDRDtFQUNJVCxFQUFFLEVBQUUsR0FBRztFQUNQQyxJQUFJLGVBQUVQLDBEQUFBLENBQUNHLG9EQUFJO0lBQUNNLFNBQVMsRUFBQztFQUFTLENBQUUsQ0FBQztFQUNsQ0MsU0FBUyxFQUFFLElBQUk7RUFDZkMsS0FBSyxFQUFFLG1CQUFtQjtFQUMxQkMsUUFBUSxFQUFFLDJDQUEyQztFQUNyREMsUUFBUSxFQUFFLDhDQUE4QztFQUN4REcsU0FBUyxFQUFFLElBQUk7RUFDZkQsTUFBTSxFQUFFO0FBQ1osQ0FBQyxFQUNEO0VBQ0lULEVBQUUsRUFBRSxHQUFHO0VBQ1BDLElBQUksZUFBRVAsMERBQUEsQ0FBQ0csb0RBQUk7SUFBQ00sU0FBUyxFQUFDO0VBQVMsQ0FBRSxDQUFDO0VBQ2xDQyxTQUFTLEVBQUUsSUFBSTtFQUNmQyxLQUFLLEVBQUUsVUFBVTtFQUNqQkMsUUFBUSxFQUFFLDJDQUEyQztFQUNyREMsUUFBUSxFQUFFLG1DQUFtQztFQUM3Q0csU0FBUyxFQUFFLElBQUk7RUFDZkQsTUFBTSxFQUFFO0FBQ1osQ0FBQyxFQUNEO0VBQ0lULEVBQUUsRUFBRSxHQUFHO0VBQ1BDLElBQUksZUFBRVAsMERBQUEsQ0FBQ0csb0RBQUk7SUFBQ00sU0FBUyxFQUFDO0VBQVMsQ0FBRSxDQUFDO0VBQ2xDQyxTQUFTLEVBQUUsSUFBSTtFQUNmQyxLQUFLLEVBQUUsZUFBZTtFQUN0QkMsUUFBUSxFQUFFLDJDQUEyQztFQUNyREMsUUFBUSxFQUFFLGdDQUFnQztFQUMxQ0csU0FBUyxFQUFFLElBQUk7RUFDZkQsTUFBTSxFQUFFO0FBQ1osQ0FBQyxDQUNKO0FBRUQsSUFBTUUsYUFBYSxHQUFHLFNBQWhCQSxhQUFhQSxDQUFBLEVBQVM7RUFDeEIsb0JBR0lqQiwwREFBQTtJQUFLUyxTQUFTLEVBQUM7RUFBaUMsZ0JBQzVDVCwwREFBQTtJQUFLUyxTQUFTLEVBQUMsbUNBQW1DO0lBQUNTLEtBQUssRUFBRTtNQUN0REMsVUFBVSxFQUFFLE1BQU07TUFDbEJDLGFBQWEsRUFBRTtJQUNuQjtFQUFFLGdCQUNFcEIsMERBQUE7SUFBR1MsU0FBUyxFQUFDO0VBQTZDLEdBQUMscUJBQXNCLENBQUMsZUFDbEZULDBEQUFBO0lBQUtTLFNBQVMsRUFBQztFQUFnQyxnQkFFM0NULDBEQUFBLENBQUNJLG9EQUFZLE1BQUUsQ0FDZCxDQUNKLENBQUMsZUFDTkosMERBQUE7SUFBS1MsU0FBUyxFQUFDO0VBQXVDLGdCQUVsRFQsMERBQUEsQ0FBQ0Usb0RBQVM7SUFDTm1CLEtBQUssRUFBQyxTQUFTO0lBQ2ZaLFNBQVMsRUFBQyw4QkFBOEI7SUFDeENhLElBQUksRUFBRSxDQUFFO0lBQ1JDLGFBQWEsRUFBQyxNQUFNO0lBQ3BCQyxHQUFHLEVBQUMsRUFBRTtJQUNOQyxPQUFPLEVBQUM7RUFBTyxHQUVkcEIsaUJBQWlCLENBQUNxQixHQUFHLENBQUMsVUFBQ0MsTUFBTTtJQUFBLG9CQUMxQjNCLDBEQUFBLENBQUNFLG9EQUFTLENBQUMwQixJQUFJO01BQ2ZDLEdBQUcsRUFBRUYsTUFBTSxDQUFDckIsRUFBRztNQUNYd0IsU0FBUyxFQUFDLE1BQU07TUFDaEJyQixTQUFTLEVBQUM7SUFBc0UsZ0JBRWhGVCwwREFBQSxDQUFDQyw0REFBbUI7TUFBQzBCLE1BQU0sRUFBRUEsTUFBTztNQUFDRSxHQUFHLEVBQUVGLE1BQU0sQ0FBQ3JCO0lBQUcsQ0FBRSxDQUMxQyxDQUFDO0VBQUEsQ0FDcEIsQ0FDTSxDQUNWLENBQ0osQ0FBQztBQUVkLENBQUM7QUFFRCxpRUFBZVcsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vc3JjL0NvbXBvbmVudHMvRGFzaGJvYXJkL0V4dGVuZFdlYnNpdGUuanN4PzVkMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IEV4dGVuZFdlYnNpdGVXaWRnZXQgZnJvbSAnLi9FeHRlbmRXZWJzaXRlV2lkZ2V0JztcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gXCJAYnNmL2ZvcmNlLXVpXCI7XG5pbXBvcnQgeyBQbHVzLCBBcnJvd1VwUmlnaHQgfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG5jb25zdCBFeHRlbmRXZWJzaXRlRGF0YSA9IFtcbiAgICB7XG4gICAgICAgIGlkOiAnMScsXG4gICAgICAgIGljb246IDxQbHVzIGNsYXNzTmFtZT0naC01IHctNScgLz4sXG4gICAgICAgIGFjdGl2YXRlZDogdHJ1ZSxcbiAgICAgICAgdGl0bGU6ICdBc3RyYSBUaGVtZScsXG4gICAgICAgIGRlbW9MaW5rOiAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSkd3V05HSmR2eDgnLFxuICAgICAgICBpbmZvVGV4dDogJ0ZyZWUgV29yZFByZXNzIFBhZ2UgQnVpbGRlciBQbHVnaW4uJyxcbiAgICAgICAgaXNJbnN0YWxsZWQ6IHRydWUsXG4gICAgICAgIGlzRnJlZTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6ICcyJyxcbiAgICAgICAgaWNvbjogPFBsdXMgY2xhc3NOYW1lPSdoLTUgdy01JyAvPixcbiAgICAgICAgYWN0aXZhdGVkOiB0cnVlLFxuICAgICAgICB0aXRsZTogJ1N0YXJ0ZXIgVGVtcGxhdGVzJyxcbiAgICAgICAgZGVtb0xpbms6ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9KR3dXTkdKZHZ4OCcsXG4gICAgICAgIGluZm9UZXh0OiAnQnVpbGQgeW91ciBkcmVhbSB3ZWJzaXRlIGluIG1pbnV0ZXMgd2l0aCBBSS4nLFxuICAgICAgICBpc0luc3RhbGw6IHRydWUsXG4gICAgICAgIGlzRnJlZTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6ICczJyxcbiAgICAgICAgaWNvbjogPFBsdXMgY2xhc3NOYW1lPSdoLTUgdy01JyAvPixcbiAgICAgICAgYWN0aXZhdGVkOiB0cnVlLFxuICAgICAgICB0aXRsZTogJ1N1cmVDYXJ0JyxcbiAgICAgICAgZGVtb0xpbms6ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9KR3dXTkdKZHZ4OCcsXG4gICAgICAgIGluZm9UZXh0OiAnVGhlIG5ldyB3YXkgdG8gc2VsbCBvbiBXb3JkUHJlc3MuJyxcbiAgICAgICAgaXNJbnN0YWxsOiB0cnVlLFxuICAgICAgICBpc0ZyZWU6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGlkOiAnNCcsXG4gICAgICAgIGljb246IDxQbHVzIGNsYXNzTmFtZT0naC01IHctNScgLz4sXG4gICAgICAgIGFjdGl2YXRlZDogdHJ1ZSxcbiAgICAgICAgdGl0bGU6ICdQcmVzdG8gUGxheWVyJyxcbiAgICAgICAgZGVtb0xpbms6ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9KR3dXTkdKZHZ4OCcsXG4gICAgICAgIGluZm9UZXh0OiAnQXV0b21hdGUgeW91ciBXb3JkUHJlc3Mgc2V0dXAuJyxcbiAgICAgICAgaXNJbnN0YWxsOiB0cnVlLFxuICAgICAgICBpc0ZyZWU6IHRydWUsXG4gICAgfSxcbl07XG5cbmNvbnN0IEV4dGVuZFdlYnNpdGUgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcblxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyb3VuZGVkLWxnIGJnLXdoaXRlIHctZnVsbCBtYi00Jz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4nIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgcGFkZGluZ1RvcDogJzEycHgnLFxuICAgICAgICAgICAgICAgIHBhZGRpbmdJbmxpbmU6ICcxNnB4J1xuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSdtLTAgdGV4dC1zbSBmb250LXNlbWlib2xkIHRleHQtdGV4dC1wcmltYXJ5Jz5FeHRlbmQgWW91ciBXZWJzaXRlPC9wPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBnYXAteC0yIG1yLTcnPlxuXG4gICAgICAgICAgICAgICAgICAgIDxBcnJvd1VwUmlnaHQgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggYmctYmxhY2sgZmxleC1jb2wgcm91bmRlZC1sZyBwLTQnPlxuXG4gICAgICAgICAgICAgICAgPENvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICBhbGlnbj1cInN0cmV0Y2hcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1iYWNrZ3JvdW5kLWdyYXkgZ2FwLTEgcC0xXCJcbiAgICAgICAgICAgICAgICAgICAgY29scz17Mn1cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVHlwZT1cImdyaWRcIlxuICAgICAgICAgICAgICAgICAgICBnYXA9XCJcIlxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5PVwic3RhcnRcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge0V4dGVuZFdlYnNpdGVEYXRhLm1hcCgod2lkZ2V0KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8Q29udGFpbmVyLkl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17d2lkZ2V0LmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduU2VsZj1cImF1dG9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtd3JhcCByb3VuZGVkLW1kIHNoYWRvdy1jb250YWluZXItaXRlbSBiZy1iYWNrZ3JvdW5kLXByaW1hcnkgcC00XCJcbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RXh0ZW5kV2Vic2l0ZVdpZGdldCB3aWRnZXQ9e3dpZGdldH0ga2V5PXt3aWRnZXQuaWR9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0NvbnRhaW5lci5JdGVtPlxuICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEV4dGVuZFdlYnNpdGVcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkV4dGVuZFdlYnNpdGVXaWRnZXQiLCJDb250YWluZXIiLCJQbHVzIiwiQXJyb3dVcFJpZ2h0IiwiRXh0ZW5kV2Vic2l0ZURhdGEiLCJpZCIsImljb24iLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiYWN0aXZhdGVkIiwidGl0bGUiLCJkZW1vTGluayIsImluZm9UZXh0IiwiaXNJbnN0YWxsZWQiLCJpc0ZyZWUiLCJpc0luc3RhbGwiLCJFeHRlbmRXZWJzaXRlIiwic3R5bGUiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0lubGluZSIsImFsaWduIiwiY29scyIsImNvbnRhaW5lclR5cGUiLCJnYXAiLCJqdXN0aWZ5IiwibWFwIiwid2lkZ2V0IiwiSXRlbSIsImtleSIsImFsaWduU2VsZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/ExtendWebsite.jsx\n");

/***/ }),

/***/ "./src/Components/Dashboard/ExtendWebsiteWidget.jsx":
/*!**********************************************************!*\
  !*** ./src/Components/Dashboard/ExtendWebsiteWidget.jsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar ExtendWebsiteWidget = function ExtendWebsiteWidget(_ref) {\n  var widget = _ref.widget;\n  var id = widget.id,\n    icon = widget.icon,\n    activated = widget.activated,\n    title = widget.title,\n    demoLink = widget.demoLink,\n    infoText = widget.infoText,\n    isInstalled = widget.isInstalled,\n    isFree = widget.isFree;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"center\",\n    className: \"bg-background-primary p-4 rounded-md shadow-sm\",\n    containerType: \"flex\",\n    direction: \"column\",\n    justify: \"between\",\n    gap: \"lg\"\n    // style={{\n    //     height: '118px',\n    //     width: '190px'\n    // }}\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"h-5 w-5\"\n  }, icon), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center gap-x-2\"\n  }, isFree && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Badge, {\n    label: \"Free\",\n    size: \"xs\",\n    type: \"pill\",\n    variant: \"green\"\n  }), isInstalled ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Label, {\n    size: \"xs\",\n    tag: \"label\",\n    variant: \"neutral\",\n    className: \"cursor-pointer text-link-primary\"\n  }, \"Activate\") : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Label, {\n    size: \"xs\",\n    tag: \"label\",\n    variant: \"neutral\",\n    className: \"cursor-pointer text-link-primary\"\n  }, \"Install\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex flex-col w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm font-medium text-text-primary pb-1 m-0\"\n  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm font-medium text-text-tertiary text-wrap m-0\"\n  }, infoText), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm text-text-tertiary m-0\"\n  }, activated))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExtendWebsiteWidget);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvRXh0ZW5kV2Vic2l0ZVdpZGdldC5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUI7QUFDK0Q7QUFDaEQ7QUFFeEMsSUFBTVMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFtQkEsQ0FBQUMsSUFBQSxFQUVuQjtFQUFBLElBREZDLE1BQU0sR0FBQUQsSUFBQSxDQUFOQyxNQUFNO0VBRU4sSUFBUUMsRUFBRSxHQU9LRCxNQUFNLENBUGJDLEVBQUU7SUFDTkMsSUFBSSxHQU1PRixNQUFNLENBTmpCRSxJQUFJO0lBQ0pDLFNBQVMsR0FLRUgsTUFBTSxDQUxqQkcsU0FBUztJQUNUQyxLQUFLLEdBSU1KLE1BQU0sQ0FKakJJLEtBQUs7SUFDTEMsUUFBUSxHQUdHTCxNQUFNLENBSGpCSyxRQUFRO0lBQ1JDLFFBQVEsR0FFR04sTUFBTSxDQUZqQk0sUUFBUTtJQUNSQyxXQUFXLEdBQ0FQLE1BQU0sQ0FEakJPLFdBQVc7SUFDWEMsTUFBTSxHQUFLUixNQUFNLENBQWpCUSxNQUFNO0VBRVYsb0JBQ0luQiwwREFBQSxDQUFDQyxvREFBUztJQUFDb0IsS0FBSyxFQUFDLFFBQVE7SUFDckJDLFNBQVMsRUFBQyxnREFBZ0Q7SUFDMURDLGFBQWEsRUFBQyxNQUFNO0lBQ3BCQyxTQUFTLEVBQUMsUUFBUTtJQUNsQkMsT0FBTyxFQUFDLFNBQVM7SUFDakJDLEdBQUcsRUFBQztJQUNSO0lBQ0E7SUFDQTtJQUNBO0VBQUEsZ0JBRUkxQiwwREFBQTtJQUFLc0IsU0FBUyxFQUFDO0VBQTBDLGdCQUNyRHRCLDBEQUFBO0lBQUtzQixTQUFTLEVBQUM7RUFBUyxHQUNuQlQsSUFDQSxDQUFDLGVBRU5iLDBEQUFBO0lBQUtzQixTQUFTLEVBQUM7RUFBMkIsR0FDckNILE1BQU0saUJBQ0huQiwwREFBQSxDQUFDTSxnREFBSztJQUNGcUIsS0FBSyxFQUFDLE1BQU07SUFDWkMsSUFBSSxFQUFDLElBQUk7SUFDVEMsSUFBSSxFQUFDLE1BQU07SUFDWEMsT0FBTyxFQUFDO0VBQU8sQ0FDbEIsQ0FDSixFQUVBWixXQUFXLGdCQUNSbEIsMERBQUEsQ0FBQ08sZ0RBQUs7SUFDRnFCLElBQUksRUFBQyxJQUFJO0lBQ1RHLEdBQUcsRUFBQyxPQUFPO0lBQ1hELE9BQU8sRUFBQyxTQUFTO0lBQ2pCUixTQUFTLEVBQUM7RUFBa0MsR0FDL0MsVUFFTSxDQUFDLGdCQUVSdEIsMERBQUEsQ0FBQ08sZ0RBQUs7SUFDRnFCLElBQUksRUFBQyxJQUFJO0lBQ1RHLEdBQUcsRUFBQyxPQUFPO0lBQ1hELE9BQU8sRUFBQyxTQUFTO0lBQ2pCUixTQUFTLEVBQUM7RUFBa0MsR0FDL0MsU0FFTSxDQUVWLENBR0osQ0FBQyxlQUVOdEIsMERBQUE7SUFBS3NCLFNBQVMsRUFBQztFQUFzQixnQkFDakN0QiwwREFBQTtJQUFHc0IsU0FBUyxFQUFDO0VBQWdELEdBQUVQLEtBQVMsQ0FBQyxlQUN6RWYsMERBQUE7SUFBR3NCLFNBQVMsRUFBQztFQUFzRCxHQUFFTCxRQUFZLENBQUMsZUFDbEZqQiwwREFBQTtJQUFLc0IsU0FBUyxFQUFDO0VBQTBDLGdCQUNyRHRCLDBEQUFBO0lBQUdzQixTQUFTLEVBQUM7RUFBZ0MsR0FBRVIsU0FBYSxDQWdCM0QsQ0FDSixDQUNFLENBQUM7QUFFcEIsQ0FBQztBQUVELGlFQUFlTCxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9Db21wb25lbnRzL0Rhc2hib2FyZC9FeHRlbmRXZWJzaXRlV2lkZ2V0LmpzeD85MDYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENvbnRhaW5lciwgVGl0bGUsIEJ1dHRvbiwgU3dpdGNoLCBUb29sdGlwLCBCYWRnZSwgTGFiZWwgfSBmcm9tIFwiQGJzZi9mb3JjZS11aVwiO1xuaW1wb3J0IHsgSW5mb0ljb24gfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG5jb25zdCBFeHRlbmRXZWJzaXRlV2lkZ2V0ID0gKHtcbiAgICB3aWRnZXRcbn0pID0+IHtcbiAgICBjb25zdCB7IGlkLFxuICAgICAgICBpY29uLFxuICAgICAgICBhY3RpdmF0ZWQsXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBkZW1vTGluayxcbiAgICAgICAgaW5mb1RleHQsXG4gICAgICAgIGlzSW5zdGFsbGVkLFxuICAgICAgICBpc0ZyZWUgfSA9IHdpZGdldFxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPENvbnRhaW5lciBhbGlnbj1cImNlbnRlclwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1iYWNrZ3JvdW5kLXByaW1hcnkgcC00IHJvdW5kZWQtbWQgc2hhZG93LXNtXCJcbiAgICAgICAgICAgIGNvbnRhaW5lclR5cGU9XCJmbGV4XCJcbiAgICAgICAgICAgIGRpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICAgICAgICBqdXN0aWZ5PVwiYmV0d2VlblwiXG4gICAgICAgICAgICBnYXA9XCJsZ1wiXG4gICAgICAgIC8vIHN0eWxlPXt7XG4gICAgICAgIC8vICAgICBoZWlnaHQ6ICcxMThweCcsXG4gICAgICAgIC8vICAgICB3aWR0aDogJzE5MHB4J1xuICAgICAgICAvLyB9fVxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHctZnVsbCc+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2gtNSB3LTUnPlxuICAgICAgICAgICAgICAgICAgICB7aWNvbn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBnYXAteC0yJz5cbiAgICAgICAgICAgICAgICAgICAge2lzRnJlZSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD1cIkZyZWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJ4c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInBpbGxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJncmVlblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAgICAgIHtpc0luc3RhbGxlZCA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJ4c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnPVwibGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJuZXV0cmFsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjdXJzb3ItcG9pbnRlciB0ZXh0LWxpbmstcHJpbWFyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQWN0aXZhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplPVwieHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZz1cImxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYW50PVwibmV1dHJhbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3Vyc29yLXBvaW50ZXIgdGV4dC1saW5rLXByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEluc3RhbGxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGZsZXgtY29sIHctZnVsbCc+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSd0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtdGV4dC1wcmltYXJ5IHBiLTEgbS0wJz57dGl0bGV9PC9wPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LXRleHQtdGVydGlhcnkgdGV4dC13cmFwIG0tMCc+e2luZm9UZXh0fTwvcD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHctZnVsbCc+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LXRleHQtdGVydGlhcnkgbS0wJz57YWN0aXZhdGVkfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgey8qIDxUb29sdGlwXG4gICAgICAgICAgICAgICAgYXJyb3dcbiAgICAgICAgICAgICAgICBjb250ZW50PXtpbmZvVGV4dH1cbiAgICAgICAgICAgICAgICBwbGFjZW1lbnQ9XCJ0b3BcIlxuICAgICAgICAgICAgICAgIHRpdGxlPVwiXCJcbiAgICAgICAgICAgICAgICB0cmlnZ2Vycz17W1xuICAgICAgICAgICAgICAgICAgICAnaG92ZXInLFxuICAgICAgICAgICAgICAgICAgICAnZm9jdXMnXG4gICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICB2YXJpYW50PVwibGlnaHRcIlxuICAgICAgICAgICAgICAgIHdpZHRoPVwiMTAwcHhcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxJbmZvSWNvbiBjbGFzc05hbWU9J2gtNSB3LTUnIC8+XG4gICAgICAgICAgICA8L1Rvb2x0aXA+ICovfVxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBFeHRlbmRXZWJzaXRlV2lkZ2V0XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJDb250YWluZXIiLCJUaXRsZSIsIkJ1dHRvbiIsIlN3aXRjaCIsIlRvb2x0aXAiLCJCYWRnZSIsIkxhYmVsIiwiSW5mb0ljb24iLCJFeHRlbmRXZWJzaXRlV2lkZ2V0IiwiX3JlZiIsIndpZGdldCIsImlkIiwiaWNvbiIsImFjdGl2YXRlZCIsInRpdGxlIiwiZGVtb0xpbmsiLCJpbmZvVGV4dCIsImlzSW5zdGFsbGVkIiwiaXNGcmVlIiwiY3JlYXRlRWxlbWVudCIsImFsaWduIiwiY2xhc3NOYW1lIiwiY29udGFpbmVyVHlwZSIsImRpcmVjdGlvbiIsImp1c3RpZnkiLCJnYXAiLCJsYWJlbCIsInNpemUiLCJ0eXBlIiwidmFyaWFudCIsInRhZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/ExtendWebsiteWidget.jsx\n");

/***/ }),

/***/ "./src/Components/Dashboard/QuickAccess.js":
/*!*************************************************!*\
  !*** ./src/Components/Dashboard/QuickAccess.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/headphones.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/star.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/circle-help.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/message-circle.js\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ \"@wordpress/i18n\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nvar QuickAccess = function QuickAccess() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hfe-dashboard-quick-access p-6 bg-white rounded-lg shadow-md\",\n    style: {\n      width: \"-webkit-fill-available\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    className: \"mb-2\",\n    icon: null,\n    iconPosition: \"right\",\n    size: \"xs\",\n    tag: \"h3\",\n    title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)(\"Quick Access\", \"header-footer-elementor\")\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"stretch\",\n    className: \"p-1 bg-background-gray rounded-lg gap-1\",\n    containerType: \"flex\",\n    direction: \"column\",\n    gap: \"\",\n    justify: \"start\",\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    alignSelf: \"auto\",\n    className: \"p-4 bg-white rounded-lg shadow-container-item\",\n    order: \"none\",\n    shrink: 1\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    className: \"text-black\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null),\n    iconPosition: \"left\",\n    variant: \"link\"\n  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)(\"Contact Us\", \"header-footer-elementor\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"p-4 bg-white rounded-lg shadow-container-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    className: \"text-black\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null),\n    iconPosition: \"left\",\n    variant: \"link\"\n  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)(\"Rate Us\", \"header-footer-elementor\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"p-4 bg-white rounded-lg shadow-container-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    className: \"text-black\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null),\n    iconPosition: \"left\",\n    variant: \"link\"\n  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)(\"Request a Feature\", \"header-footer-elementor\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"p-4 bg-white rounded-lg shadow-container-item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    className: \"text-black\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], null),\n    iconPosition: \"left\",\n    variant: \"link\"\n  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)(\"Join the Community\", \"header-footer-elementor\")))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (QuickAccess);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvUXVpY2tBY2Nlc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDK0I7QUFDa0I7QUFDdEM7QUFFckMsSUFBTVMsV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUEsRUFBUztFQUN6QixvQkFDQ1QsMERBQUE7SUFDQ1csU0FBUyxFQUFDLDhEQUE4RDtJQUN4RUMsS0FBSyxFQUFFO01BQ05DLEtBQUssRUFBRTtJQUNSO0VBQUUsZ0JBRUZiLDBEQUFBLENBQUNDLGdEQUFLO0lBQ0xVLFNBQVMsRUFBQyxNQUFNO0lBQ2hCRyxJQUFJLEVBQUUsSUFBSztJQUNYQyxZQUFZLEVBQUMsT0FBTztJQUNwQkMsSUFBSSxFQUFDLElBQUk7SUFDVEMsR0FBRyxFQUFDLElBQUk7SUFDUkMsS0FBSyxFQUFFVixtREFBRSxDQUFDLGNBQWMsRUFBRSx5QkFBeUI7RUFBRSxDQUNyRCxDQUFDLGVBRUZSLDBEQUFBLENBQUNFLG9EQUFTO0lBQ1RpQixLQUFLLEVBQUMsU0FBUztJQUNmUixTQUFTLEVBQUMseUNBQXlDO0lBQ25EUyxhQUFhLEVBQUMsTUFBTTtJQUNwQkMsU0FBUyxFQUFDLFFBQVE7SUFDbEJDLEdBQUcsRUFBQyxFQUFFO0lBQ05DLE9BQU8sRUFBQyxPQUFPO0lBQ2ZYLEtBQUssRUFBRTtNQUNOQyxLQUFLLEVBQUU7SUFDUjtFQUFFLGdCQUVGYiwwREFBQSxDQUFDRSxvREFBUyxDQUFDc0IsSUFBSTtJQUNkQyxTQUFTLEVBQUMsTUFBTTtJQUNoQmQsU0FBUyxFQUFDLCtDQUErQztJQUN6RGUsS0FBSyxFQUFDLE1BQU07SUFDWkMsTUFBTSxFQUFFO0VBQUUsZ0JBRVYzQiwwREFBQSxDQUFDRyxpREFBTTtJQUNOUSxTQUFTLEVBQUMsWUFBWTtJQUN0QkcsSUFBSSxlQUFFZCwwREFBQSxDQUFDSSxvREFBVSxNQUFFLENBQUU7SUFDckJXLFlBQVksRUFBQyxNQUFNO0lBQ25CYSxPQUFPLEVBQUM7RUFBTSxHQUVicEIsbURBQUUsQ0FBQyxZQUFZLEVBQUUseUJBQXlCLENBQ3BDLENBQ08sQ0FBQyxlQUNqQlIsMERBQUEsQ0FBQ0Usb0RBQVMsQ0FBQ3NCLElBQUk7SUFBQ2IsU0FBUyxFQUFDO0VBQStDLGdCQUN4RVgsMERBQUEsQ0FBQ0csaURBQU07SUFDTlEsU0FBUyxFQUFDLFlBQVk7SUFDdEJHLElBQUksZUFBRWQsMERBQUEsQ0FBQ0ssb0RBQUksTUFBRSxDQUFFO0lBQ2ZVLFlBQVksRUFBQyxNQUFNO0lBQ25CYSxPQUFPLEVBQUM7RUFBTSxHQUVicEIsbURBQUUsQ0FBQyxTQUFTLEVBQUUseUJBQXlCLENBQ2pDLENBQ08sQ0FBQyxlQUNqQlIsMERBQUEsQ0FBQ0Usb0RBQVMsQ0FBQ3NCLElBQUk7SUFBQ2IsU0FBUyxFQUFDO0VBQStDLGdCQUN4RVgsMERBQUEsQ0FBQ0csaURBQU07SUFDTlEsU0FBUyxFQUFDLFlBQVk7SUFDdEJHLElBQUksZUFBRWQsMERBQUEsQ0FBQ00sb0RBQVUsTUFBRSxDQUFFO0lBQ3JCUyxZQUFZLEVBQUMsTUFBTTtJQUNuQmEsT0FBTyxFQUFDO0VBQU0sR0FFYnBCLG1EQUFFLENBQUMsbUJBQW1CLEVBQUUseUJBQXlCLENBQzNDLENBQ08sQ0FBQyxlQUNqQlIsMERBQUEsQ0FBQ0Usb0RBQVMsQ0FBQ3NCLElBQUk7SUFBQ2IsU0FBUyxFQUFDO0VBQStDLGdCQUN4RVgsMERBQUEsQ0FBQ0csaURBQU07SUFDTlEsU0FBUyxFQUFDLFlBQVk7SUFDdEJHLElBQUksZUFBRWQsMERBQUEsQ0FBQ08sb0RBQWEsTUFBRSxDQUFFO0lBQ3hCUSxZQUFZLEVBQUMsTUFBTTtJQUNuQmEsT0FBTyxFQUFDO0VBQU0sR0FFYnBCLG1EQUFFLENBQUMsb0JBQW9CLEVBQUUseUJBQXlCLENBQzVDLENBQ08sQ0FDTixDQUNQLENBQUM7QUFFUixDQUFDO0FBRUQsaUVBQWVDLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9Db21wb25lbnRzL0Rhc2hib2FyZC9RdWlja0FjY2Vzcy5qcz84MDIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFRpdGxlLCBDb250YWluZXIsIEJ1dHRvbiB9IGZyb20gXCJAYnNmL2ZvcmNlLXVpXCI7XG5pbXBvcnQgeyBIZWFkcGhvbmVzLCBTdGFyLCBIZWxwQ2lyY2xlLCBNZXNzYWdlQ2lyY2xlIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgX18gfSBmcm9tIFwiQHdvcmRwcmVzcy9pMThuXCI7XG5cbmNvbnN0IFF1aWNrQWNjZXNzID0gKCkgPT4ge1xuXHRyZXR1cm4gKFxuXHRcdDxkaXZcblx0XHRcdGNsYXNzTmFtZT1cImhmZS1kYXNoYm9hcmQtcXVpY2stYWNjZXNzIHAtNiBiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1tZFwiXG5cdFx0XHRzdHlsZT17e1xuXHRcdFx0XHR3aWR0aDogXCItd2Via2l0LWZpbGwtYXZhaWxhYmxlXCIsXG5cdFx0XHR9fVxuXHRcdD5cblx0XHRcdDxUaXRsZVxuXHRcdFx0XHRjbGFzc05hbWU9XCJtYi0yXCJcblx0XHRcdFx0aWNvbj17bnVsbH1cblx0XHRcdFx0aWNvblBvc2l0aW9uPVwicmlnaHRcIlxuXHRcdFx0XHRzaXplPVwieHNcIlxuXHRcdFx0XHR0YWc9XCJoM1wiXG5cdFx0XHRcdHRpdGxlPXtfXyhcIlF1aWNrIEFjY2Vzc1wiLCBcImhlYWRlci1mb290ZXItZWxlbWVudG9yXCIpfVxuXHRcdFx0Lz5cblxuXHRcdFx0PENvbnRhaW5lclxuXHRcdFx0XHRhbGlnbj1cInN0cmV0Y2hcIlxuXHRcdFx0XHRjbGFzc05hbWU9XCJwLTEgYmctYmFja2dyb3VuZC1ncmF5IHJvdW5kZWQtbGcgZ2FwLTFcIlxuXHRcdFx0XHRjb250YWluZXJUeXBlPVwiZmxleFwiXG5cdFx0XHRcdGRpcmVjdGlvbj1cImNvbHVtblwiXG5cdFx0XHRcdGdhcD1cIlwiXG5cdFx0XHRcdGp1c3RpZnk9XCJzdGFydFwiXG5cdFx0XHRcdHN0eWxlPXt7XG5cdFx0XHRcdFx0d2lkdGg6IFwiMTAwJVwiLFxuXHRcdFx0XHR9fVxuXHRcdFx0PlxuXHRcdFx0XHQ8Q29udGFpbmVyLkl0ZW1cblx0XHRcdFx0XHRhbGlnblNlbGY9XCJhdXRvXCJcblx0XHRcdFx0XHRjbGFzc05hbWU9XCJwLTQgYmctd2hpdGUgcm91bmRlZC1sZyBzaGFkb3ctY29udGFpbmVyLWl0ZW1cIlxuXHRcdFx0XHRcdG9yZGVyPVwibm9uZVwiXG5cdFx0XHRcdFx0c2hyaW5rPXsxfVxuXHRcdFx0XHQ+XG5cdFx0XHRcdFx0PEJ1dHRvblxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPVwidGV4dC1ibGFja1wiXG5cdFx0XHRcdFx0XHRpY29uPXs8SGVhZHBob25lcyAvPn1cblx0XHRcdFx0XHRcdGljb25Qb3NpdGlvbj1cImxlZnRcIlxuXHRcdFx0XHRcdFx0dmFyaWFudD1cImxpbmtcIlxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdHtfXyhcIkNvbnRhY3QgVXNcIiwgXCJoZWFkZXItZm9vdGVyLWVsZW1lbnRvclwiKX1cblx0XHRcdFx0XHQ8L0J1dHRvbj5cblx0XHRcdFx0PC9Db250YWluZXIuSXRlbT5cblx0XHRcdFx0PENvbnRhaW5lci5JdGVtIGNsYXNzTmFtZT1cInAtNCBiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1jb250YWluZXItaXRlbVwiPlxuXHRcdFx0XHRcdDxCdXR0b25cblx0XHRcdFx0XHRcdGNsYXNzTmFtZT1cInRleHQtYmxhY2tcIlxuXHRcdFx0XHRcdFx0aWNvbj17PFN0YXIgLz59XG5cdFx0XHRcdFx0XHRpY29uUG9zaXRpb249XCJsZWZ0XCJcblx0XHRcdFx0XHRcdHZhcmlhbnQ9XCJsaW5rXCJcblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHR7X18oXCJSYXRlIFVzXCIsIFwiaGVhZGVyLWZvb3Rlci1lbGVtZW50b3JcIil9XG5cdFx0XHRcdFx0PC9CdXR0b24+XG5cdFx0XHRcdDwvQ29udGFpbmVyLkl0ZW0+XG5cdFx0XHRcdDxDb250YWluZXIuSXRlbSBjbGFzc05hbWU9XCJwLTQgYmctd2hpdGUgcm91bmRlZC1sZyBzaGFkb3ctY29udGFpbmVyLWl0ZW1cIj5cblx0XHRcdFx0XHQ8QnV0dG9uXG5cdFx0XHRcdFx0XHRjbGFzc05hbWU9XCJ0ZXh0LWJsYWNrXCJcblx0XHRcdFx0XHRcdGljb249ezxIZWxwQ2lyY2xlIC8+fVxuXHRcdFx0XHRcdFx0aWNvblBvc2l0aW9uPVwibGVmdFwiXG5cdFx0XHRcdFx0XHR2YXJpYW50PVwibGlua1wiXG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0e19fKFwiUmVxdWVzdCBhIEZlYXR1cmVcIiwgXCJoZWFkZXItZm9vdGVyLWVsZW1lbnRvclwiKX1cblx0XHRcdFx0XHQ8L0J1dHRvbj5cblx0XHRcdFx0PC9Db250YWluZXIuSXRlbT5cblx0XHRcdFx0PENvbnRhaW5lci5JdGVtIGNsYXNzTmFtZT1cInAtNCBiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1jb250YWluZXItaXRlbVwiPlxuXHRcdFx0XHRcdDxCdXR0b25cblx0XHRcdFx0XHRcdGNsYXNzTmFtZT1cInRleHQtYmxhY2tcIlxuXHRcdFx0XHRcdFx0aWNvbj17PE1lc3NhZ2VDaXJjbGUgLz59XG5cdFx0XHRcdFx0XHRpY29uUG9zaXRpb249XCJsZWZ0XCJcblx0XHRcdFx0XHRcdHZhcmlhbnQ9XCJsaW5rXCJcblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHR7X18oXCJKb2luIHRoZSBDb21tdW5pdHlcIiwgXCJoZWFkZXItZm9vdGVyLWVsZW1lbnRvclwiKX1cblx0XHRcdFx0XHQ8L0J1dHRvbj5cblx0XHRcdFx0PC9Db250YWluZXIuSXRlbT5cblx0XHRcdDwvQ29udGFpbmVyPlxuXHRcdDwvZGl2PlxuXHQpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUXVpY2tBY2Nlc3M7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJUaXRsZSIsIkNvbnRhaW5lciIsIkJ1dHRvbiIsIkhlYWRwaG9uZXMiLCJTdGFyIiwiSGVscENpcmNsZSIsIk1lc3NhZ2VDaXJjbGUiLCJfXyIsIlF1aWNrQWNjZXNzIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInN0eWxlIiwid2lkdGgiLCJpY29uIiwiaWNvblBvc2l0aW9uIiwic2l6ZSIsInRhZyIsInRpdGxlIiwiYWxpZ24iLCJjb250YWluZXJUeXBlIiwiZGlyZWN0aW9uIiwiZ2FwIiwianVzdGlmeSIsIkl0ZW0iLCJhbGlnblNlbGYiLCJvcmRlciIsInNocmluayIsInZhcmlhbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/QuickAccess.js\n");

/***/ }),

/***/ "./src/Components/Dashboard/TemplateSection.js":
/*!*****************************************************!*\
  !*** ./src/Components/Dashboard/TemplateSection.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ \"@wordpress/i18n\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar TemplateSection = function TemplateSection() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"hfe-dashboard-templates p-6 bg-white rounded-lg shadow-md mb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"mb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: \"\".concat(hfeSettingsData.templates_url),\n    alt: \"Template Showcase\",\n    className: \"w-full h-auto rounded\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    className: \"mt-2\",\n    icon: null,\n    iconPosition: \"right\",\n    size: \"xs\",\n    tag: \"h2\",\n    title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Build Websites 10x Faster with Templates', 'header-footer-elementor'),\n    description: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Choose from our professionally designed websites to build your site faster, with easy customization options.', 'header-footer-elementor')\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    className: \"w-full mt-4\",\n    icon: null,\n    iconPosition: \"left\",\n    size: \"md\",\n    variant: \"secondary\"\n  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('View Templates', 'header-footer-elementor')));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TemplateSection);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvVGVtcGxhdGVTZWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEI7QUFJSDtBQUNjO0FBRXJDLElBQU1JLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBQSxFQUFTO0VBQzdCLG9CQUNPSiwwREFBQTtJQUNJTSxTQUFTLEVBQUM7RUFBZ0UsZ0JBRTFFTiwwREFBQTtJQUFLTSxTQUFTLEVBQUM7RUFBTSxnQkFDakJOLDBEQUFBO0lBQ0lPLEdBQUcsS0FBQUMsTUFBQSxDQUFLQyxlQUFlLENBQUNDLGFBQWEsQ0FBRztJQUN4Q0MsR0FBRyxFQUFDLG1CQUFtQjtJQUN2QkwsU0FBUyxFQUFDO0VBQXVCLENBQ3BDLENBQ0EsQ0FBQyxlQUNOTiwwREFBQSxDQUFDQyxnREFBSztJQUNGSyxTQUFTLEVBQUMsTUFBTTtJQUNoQk0sSUFBSSxFQUFFLElBQUs7SUFDWEMsWUFBWSxFQUFDLE9BQU87SUFDcEJDLElBQUksRUFBQyxJQUFJO0lBQ1RDLEdBQUcsRUFBQyxJQUFJO0lBQ1JDLEtBQUssRUFBRWIsbURBQUUsQ0FBQywwQ0FBMEMsRUFBRSx5QkFBeUIsQ0FBRTtJQUNqRmMsV0FBVyxFQUFFZCxtREFBRSxDQUFFLDhHQUE4RyxFQUFFLHlCQUF5QjtFQUFFLENBQy9KLENBQUMsZUFDRkgsMERBQUEsQ0FBQ0UsaURBQU07SUFDSEksU0FBUyxFQUFDLGFBQWE7SUFDdkJNLElBQUksRUFBRSxJQUFLO0lBQ1hDLFlBQVksRUFBQyxNQUFNO0lBQ25CQyxJQUFJLEVBQUMsSUFBSTtJQUNUSSxPQUFPLEVBQUM7RUFBVyxHQUVsQmYsbURBQUUsQ0FBQyxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FDM0MsQ0FDUCxDQUFDO0FBRWQsQ0FBQztBQUVELGlFQUFlQyxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvVGVtcGxhdGVTZWN0aW9uLmpzP2MwZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gICAgVGl0bGUsXG4gICAgQnV0dG9uXG59IGZyb20gJ0Bic2YvZm9yY2UtdWknO1xuaW1wb3J0IHsgX18gfSBmcm9tICdAd29yZHByZXNzL2kxOG4nOyBcblxuY29uc3QgVGVtcGxhdGVTZWN0aW9uID0gKCkgPT4ge1xuXHRyZXR1cm4gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJoZmUtZGFzaGJvYXJkLXRlbXBsYXRlcyBwLTYgYmctd2hpdGUgcm91bmRlZC1sZyBzaGFkb3ctbWQgbWItNFwiXG4gICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWItNFwiPlxuICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgICAgc3JjPXtgJHtoZmVTZXR0aW5nc0RhdGEudGVtcGxhdGVzX3VybH1gfVxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCJUZW1wbGF0ZSBTaG93Y2FzZVwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBoLWF1dG8gcm91bmRlZFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPFRpdGxlXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibXQtMlwiXG4gICAgICAgICAgICAgICAgaWNvbj17bnVsbH1cbiAgICAgICAgICAgICAgICBpY29uUG9zaXRpb249XCJyaWdodFwiXG4gICAgICAgICAgICAgICAgc2l6ZT1cInhzXCJcbiAgICAgICAgICAgICAgICB0YWc9XCJoMlwiXG4gICAgICAgICAgICAgICAgdGl0bGU9e19fKCdCdWlsZCBXZWJzaXRlcyAxMHggRmFzdGVyIHdpdGggVGVtcGxhdGVzJywgJ2hlYWRlci1mb290ZXItZWxlbWVudG9yJyl9XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e19fKCAnQ2hvb3NlIGZyb20gb3VyIHByb2Zlc3Npb25hbGx5IGRlc2lnbmVkIHdlYnNpdGVzIHRvIGJ1aWxkIHlvdXIgc2l0ZSBmYXN0ZXIsIHdpdGggZWFzeSBjdXN0b21pemF0aW9uIG9wdGlvbnMuJywgJ2hlYWRlci1mb290ZXItZWxlbWVudG9yJyl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBtdC00XCJcbiAgICAgICAgICAgICAgICBpY29uPXtudWxsfVxuICAgICAgICAgICAgICAgIGljb25Qb3NpdGlvbj1cImxlZnRcIlxuICAgICAgICAgICAgICAgIHNpemU9XCJtZFwiXG4gICAgICAgICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge19fKCdWaWV3IFRlbXBsYXRlcycsICdoZWFkZXItZm9vdGVyLWVsZW1lbnRvcicpfVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuXHQpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGVtcGxhdGVTZWN0aW9uOyJdLCJuYW1lcyI6WyJSZWFjdCIsIlRpdGxlIiwiQnV0dG9uIiwiX18iLCJUZW1wbGF0ZVNlY3Rpb24iLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwic3JjIiwiY29uY2F0IiwiaGZlU2V0dGluZ3NEYXRhIiwidGVtcGxhdGVzX3VybCIsImFsdCIsImljb24iLCJpY29uUG9zaXRpb24iLCJzaXplIiwidGFnIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInZhcmlhbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/TemplateSection.js\n");

/***/ }),

/***/ "./src/Components/Dashboard/UltimateFeatures.js":
/*!******************************************************!*\
  !*** ./src/Components/Dashboard/UltimateFeatures.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/zap.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/check.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/plus.js\");\n\n\n\nvar UltimateFeatures = function UltimateFeatures() {\n  var featureData = [{\n    id: 1,\n    icon: \"\",\n    title: \"Modal Popup\"\n  }, {\n    id: 2,\n    icon: \"\",\n    title: \"Advanced Heading\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Post Layouts\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Info Box\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Pricing Cards\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Form Stylers and more...\"\n  }];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    className: \"bg-background-primary p-4 border-[0.5px] border-subtle rounded-xl shadow-sm\",\n    containerType: \"flex\",\n    direction: \"row\",\n    justify: \"between\",\n    gap: \"xs\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"flex flex-col justify-between\",\n    style: {\n      width: \"65%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null),\n    iconPosition: \"left\",\n    size: \"xs\",\n    tag: \"h6\",\n    title: \"Unlock Ultimate Features\",\n    className: \"text-xs font-semibold text-brand-primary-600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: \"\",\n    iconPosition: \"left\",\n    tag: \"h6\",\n    title: \"Create Ultimate Designs with Addons Pro!\",\n    className: \"py-1 text-sm\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-md m-0 text-text-secondary\"\n  }, \"Get access to advanced widgets and features to create the website that stands out!\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"grid grid-cols-2 grid-flow-row gap-1 my-4\"\n  }, featureData.map(function (feature) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n      key: feature.id,\n      description: \"\",\n      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        className: \"text-brand-primary-600 mr-1 h-3 w-3\"\n      }),\n      iconPosition: \"left\",\n      size: \"xxs\",\n      tag: \"h6\",\n      title: feature.title,\n      className: \"\"\n    });\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center pb-3 gap-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null),\n    iconPosition: \"right\",\n    variant: \"secondary\",\n    className: \"\"\n  }, \"Upgrade Now\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: \"\",\n    iconPosition: \"right\",\n    variant: \"ghost\"\n  }, \"Compare Free vs Pro\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"flex justify-center items-center\",\n    style: {\n      width: \"34%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: \"\".concat(hfeSettingsData.column_url),\n    alt: \"Column Showcase\",\n    className: \"w-full h-auto rounded\"\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UltimateFeatures);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvVWx0aW1hdGVGZWF0dXJlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEwQjtBQUMrQjtBQUNUO0FBQ2hELElBQU1PLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUEsRUFBUztFQUM5QixJQUFNQyxXQUFXLEdBQUcsQ0FDbkI7SUFDQ0MsRUFBRSxFQUFFLENBQUM7SUFDTEMsSUFBSSxFQUFFLEVBQUU7SUFDUkMsS0FBSyxFQUFFO0VBQ1IsQ0FBQyxFQUNEO0lBQ0NGLEVBQUUsRUFBRSxDQUFDO0lBQ0xDLElBQUksRUFBRSxFQUFFO0lBQ1JDLEtBQUssRUFBRTtFQUNSLENBQUMsRUFDRDtJQUNDRixFQUFFLEVBQUUsQ0FBQztJQUNMQyxJQUFJLEVBQUUsRUFBRTtJQUNSQyxLQUFLLEVBQUU7RUFDUixDQUFDLEVBQ0Q7SUFDQ0YsRUFBRSxFQUFFLENBQUM7SUFDTEMsSUFBSSxFQUFFLEVBQUU7SUFDUkMsS0FBSyxFQUFFO0VBQ1IsQ0FBQyxFQUNEO0lBQ0NGLEVBQUUsRUFBRSxDQUFDO0lBQ0xDLElBQUksRUFBRSxFQUFFO0lBQ1JDLEtBQUssRUFBRTtFQUNSLENBQUMsRUFDRDtJQUNDRixFQUFFLEVBQUUsQ0FBQztJQUNMQyxJQUFJLEVBQUUsRUFBRTtJQUNSQyxLQUFLLEVBQUU7RUFDUixDQUFDLENBQ0Q7RUFDRCxvQkFDQ1gsMERBQUEsMkJBQ0NBLDBEQUFBLENBQUNDLG9EQUFTO0lBQ1RZLFNBQVMsRUFBQyw2RUFBNkU7SUFDdkZDLGFBQWEsRUFBQyxNQUFNO0lBQ3BCQyxTQUFTLEVBQUMsS0FBSztJQUNmQyxPQUFPLEVBQUMsU0FBUztJQUNqQkMsR0FBRyxFQUFDO0VBQUksZ0JBRVJqQiwwREFBQSxDQUFDQyxvREFBUyxDQUFDaUIsSUFBSTtJQUFDTCxTQUFTLEVBQUMsK0JBQStCO0lBQUNNLEtBQUssRUFBRTtNQUFDQyxLQUFLLEVBQUM7SUFBSztFQUFFLGdCQUM5RXBCLDBEQUFBLDJCQUNDQSwwREFBQSxDQUFDRSxnREFBSztJQUNMbUIsV0FBVyxFQUFDLEVBQUU7SUFDZFgsSUFBSSxlQUFFViwwREFBQSxDQUFDSSxvREFBRyxNQUFFLENBQUU7SUFDZGtCLFlBQVksRUFBQyxNQUFNO0lBQ25CQyxJQUFJLEVBQUMsSUFBSTtJQUNUQyxHQUFHLEVBQUMsSUFBSTtJQUNSYixLQUFLLEVBQUMsMEJBQTBCO0lBQ2hDRSxTQUFTLEVBQUM7RUFBOEMsQ0FDeEQsQ0FBQyxlQUNGYiwwREFBQSxDQUFDRSxnREFBSztJQUNMbUIsV0FBVyxFQUFDLEVBQUU7SUFDZFgsSUFBSSxFQUFFLEVBQUc7SUFDVFksWUFBWSxFQUFDLE1BQU07SUFDbkJFLEdBQUcsRUFBQyxJQUFJO0lBQ1JiLEtBQUssRUFBQywwQ0FBMEM7SUFDaERFLFNBQVMsRUFBQztFQUFjLENBQ3hCLENBQUMsZUFDRmIsMERBQUE7SUFBR2EsU0FBUyxFQUFDO0VBQWlDLEdBQUMsb0ZBRzVDLENBQ0MsQ0FBQyxlQUNOYiwwREFBQTtJQUFLYSxTQUFTLEVBQUM7RUFBMkMsR0FDeERMLFdBQVcsQ0FBQ2lCLEdBQUcsQ0FBQyxVQUFDQyxPQUFPO0lBQUEsb0JBQ3hCMUIsMERBQUEsQ0FBQ0UsZ0RBQUs7TUFDTnlCLEdBQUcsRUFBRUQsT0FBTyxDQUFDakIsRUFBRztNQUNmWSxXQUFXLEVBQUMsRUFBRTtNQUNkWCxJQUFJLGVBQ0hWLDBEQUFBLENBQUNNLG9EQUFLO1FBQUNPLFNBQVMsRUFBQztNQUFxQyxDQUFFLENBQ3hEO01BQ0RTLFlBQVksRUFBQyxNQUFNO01BQ25CQyxJQUFJLEVBQUMsS0FBSztNQUNWQyxHQUFHLEVBQUMsSUFBSTtNQUNSYixLQUFLLEVBQUVlLE9BQU8sQ0FBQ2YsS0FBTTtNQUNyQkUsU0FBUyxFQUFDO0lBQUUsQ0FDWixDQUFDO0VBQUEsQ0FDRixDQUNHLENBQUMsZUFDTmIsMERBQUE7SUFBS2EsU0FBUyxFQUFDO0VBQThCLGdCQUM1Q2IsMERBQUEsQ0FBQ0csaURBQU07SUFDTk8sSUFBSSxlQUFFViwwREFBQSxDQUFDSyxvREFBSSxNQUFFLENBQUU7SUFDZmlCLFlBQVksRUFBQyxPQUFPO0lBQ3BCTSxPQUFPLEVBQUMsV0FBVztJQUNuQmYsU0FBUyxFQUFDO0VBQUUsR0FDWixhQUVPLENBQUMsZUFDVGIsMERBQUEsQ0FBQ0csaURBQU07SUFBQ08sSUFBSSxFQUFFLEVBQUc7SUFBQ1ksWUFBWSxFQUFDLE9BQU87SUFBQ00sT0FBTyxFQUFDO0VBQU8sR0FBQyxxQkFFL0MsQ0FDSixDQUNVLENBQUMsZUFDakI1QiwwREFBQSxDQUFDQyxvREFBUyxDQUFDaUIsSUFBSTtJQUFDTCxTQUFTLEVBQUMsa0NBQWtDO0lBQUNNLEtBQUssRUFBRTtNQUFDQyxLQUFLLEVBQUM7SUFBSztFQUFFLGdCQUNqRnBCLDBEQUFBO0lBQ0M2QixHQUFHLEtBQUFDLE1BQUEsQ0FBS0MsZUFBZSxDQUFDQyxVQUFVLENBQUc7SUFDckNDLEdBQUcsRUFBQyxpQkFBaUI7SUFDckJwQixTQUFTLEVBQUM7RUFBdUIsQ0FDakMsQ0FDYyxDQUNOLENBQ1AsQ0FBQztBQUVSLENBQUM7QUFDRCxpRUFBZU4sZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvVWx0aW1hdGVGZWF0dXJlcy5qcz8zMGUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENvbnRhaW5lciwgVGl0bGUsIEJ1dHRvbiB9IGZyb20gXCJAYnNmL2ZvcmNlLXVpXCI7XG5pbXBvcnQgeyBaYXAsIFBsdXMsIENoZWNrIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuY29uc3QgVWx0aW1hdGVGZWF0dXJlcyA9ICgpID0+IHtcblx0Y29uc3QgZmVhdHVyZURhdGEgPSBbXG5cdFx0e1xuXHRcdFx0aWQ6IDEsXG5cdFx0XHRpY29uOiBcIlwiLFxuXHRcdFx0dGl0bGU6IFwiTW9kYWwgUG9wdXBcIixcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAyLFxuXHRcdFx0aWNvbjogXCJcIixcblx0XHRcdHRpdGxlOiBcIkFkdmFuY2VkIEhlYWRpbmdcIixcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAxLFxuXHRcdFx0aWNvbjogXCJcIixcblx0XHRcdHRpdGxlOiBcIlBvc3QgTGF5b3V0c1wiLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0aWQ6IDEsXG5cdFx0XHRpY29uOiBcIlwiLFxuXHRcdFx0dGl0bGU6IFwiSW5mbyBCb3hcIixcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAxLFxuXHRcdFx0aWNvbjogXCJcIixcblx0XHRcdHRpdGxlOiBcIlByaWNpbmcgQ2FyZHNcIixcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAxLFxuXHRcdFx0aWNvbjogXCJcIixcblx0XHRcdHRpdGxlOiBcIkZvcm0gU3R5bGVycyBhbmQgbW9yZS4uLlwiLFxuXHRcdH0sXG5cdF07XG5cdHJldHVybiAoXG5cdFx0PGRpdj5cblx0XHRcdDxDb250YWluZXJcblx0XHRcdFx0Y2xhc3NOYW1lPVwiYmctYmFja2dyb3VuZC1wcmltYXJ5IHAtNCBib3JkZXItWzAuNXB4XSBib3JkZXItc3VidGxlIHJvdW5kZWQteGwgc2hhZG93LXNtXCJcblx0XHRcdFx0Y29udGFpbmVyVHlwZT1cImZsZXhcIlxuXHRcdFx0XHRkaXJlY3Rpb249XCJyb3dcIlxuXHRcdFx0XHRqdXN0aWZ5PVwiYmV0d2VlblwiXG5cdFx0XHRcdGdhcD1cInhzXCJcblx0XHRcdD5cblx0XHRcdFx0PENvbnRhaW5lci5JdGVtIGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wganVzdGlmeS1iZXR3ZWVuXCIgc3R5bGU9e3t3aWR0aDpcIjY1JVwifX0+XG5cdFx0XHRcdFx0PGRpdj5cblx0XHRcdFx0XHRcdDxUaXRsZVxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbj1cIlwiXG5cdFx0XHRcdFx0XHRcdGljb249ezxaYXAgLz59XG5cdFx0XHRcdFx0XHRcdGljb25Qb3NpdGlvbj1cImxlZnRcIlxuXHRcdFx0XHRcdFx0XHRzaXplPVwieHNcIlxuXHRcdFx0XHRcdFx0XHR0YWc9XCJoNlwiXG5cdFx0XHRcdFx0XHRcdHRpdGxlPVwiVW5sb2NrIFVsdGltYXRlIEZlYXR1cmVzXCJcblx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPVwidGV4dC14cyBmb250LXNlbWlib2xkIHRleHQtYnJhbmQtcHJpbWFyeS02MDBcIlxuXHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdDxUaXRsZVxuXHRcdFx0XHRcdFx0XHRkZXNjcmlwdGlvbj1cIlwiXG5cdFx0XHRcdFx0XHRcdGljb249e1wiXCJ9XG5cdFx0XHRcdFx0XHRcdGljb25Qb3NpdGlvbj1cImxlZnRcIlxuXHRcdFx0XHRcdFx0XHR0YWc9XCJoNlwiXG5cdFx0XHRcdFx0XHRcdHRpdGxlPVwiQ3JlYXRlIFVsdGltYXRlIERlc2lnbnMgd2l0aCBBZGRvbnMgUHJvIVwiXG5cdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT1cInB5LTEgdGV4dC1zbVwiXG5cdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0PHAgY2xhc3NOYW1lPVwidGV4dC1tZCBtLTAgdGV4dC10ZXh0LXNlY29uZGFyeVwiPlxuXHRcdFx0XHRcdFx0XHRHZXQgYWNjZXNzIHRvIGFkdmFuY2VkIHdpZGdldHMgYW5kIGZlYXR1cmVzIHRvXG5cdFx0XHRcdFx0XHRcdGNyZWF0ZSB0aGUgd2Vic2l0ZSB0aGF0IHN0YW5kcyBvdXQhXG5cdFx0XHRcdFx0XHQ8L3A+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0yIGdyaWQtZmxvdy1yb3cgZ2FwLTEgbXktNFwiPlxuXHRcdFx0XHRcdFx0e2ZlYXR1cmVEYXRhLm1hcCgoZmVhdHVyZSkgPT4gKFxuXHRcdFx0XHRcdFx0XHQ8VGl0bGVcblx0XHRcdFx0XHRcdFx0a2V5PXtmZWF0dXJlLmlkfVxuXHRcdFx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uPVwiXCJcblx0XHRcdFx0XHRcdFx0XHRpY29uPXtcblx0XHRcdFx0XHRcdFx0XHRcdDxDaGVjayBjbGFzc05hbWU9XCJ0ZXh0LWJyYW5kLXByaW1hcnktNjAwIG1yLTEgaC0zIHctM1wiIC8+XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGljb25Qb3NpdGlvbj1cImxlZnRcIlxuXHRcdFx0XHRcdFx0XHRcdHNpemU9XCJ4eHNcIlxuXHRcdFx0XHRcdFx0XHRcdHRhZz1cImg2XCJcblx0XHRcdFx0XHRcdFx0XHR0aXRsZT17ZmVhdHVyZS50aXRsZX1cblx0XHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9XCJcIlxuXHRcdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0KSl9XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBwYi0zIGdhcC00XCI+XG5cdFx0XHRcdFx0XHQ8QnV0dG9uXG5cdFx0XHRcdFx0XHRcdGljb249ezxQbHVzIC8+fVxuXHRcdFx0XHRcdFx0XHRpY29uUG9zaXRpb249XCJyaWdodFwiXG5cdFx0XHRcdFx0XHRcdHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9XCJcIlxuXHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRVcGdyYWRlIE5vd1xuXHRcdFx0XHRcdFx0PC9CdXR0b24+XG5cdFx0XHRcdFx0XHQ8QnV0dG9uIGljb249e1wiXCJ9IGljb25Qb3NpdGlvbj1cInJpZ2h0XCIgdmFyaWFudD1cImdob3N0XCI+XG5cdFx0XHRcdFx0XHRcdENvbXBhcmUgRnJlZSB2cyBQcm9cblx0XHRcdFx0XHRcdDwvQnV0dG9uPlxuXHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8L0NvbnRhaW5lci5JdGVtPlxuXHRcdFx0XHQ8Q29udGFpbmVyLkl0ZW0gY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXJcIiBzdHlsZT17e3dpZHRoOlwiMzQlXCJ9fT5cblx0XHRcdFx0XHQ8aW1nXG5cdFx0XHRcdFx0XHRzcmM9e2Ake2hmZVNldHRpbmdzRGF0YS5jb2x1bW5fdXJsfWB9XG5cdFx0XHRcdFx0XHRhbHQ9XCJDb2x1bW4gU2hvd2Nhc2VcIlxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPVwidy1mdWxsIGgtYXV0byByb3VuZGVkXCJcblx0XHRcdFx0XHQvPlxuXHRcdFx0XHQ8L0NvbnRhaW5lci5JdGVtPlxuXHRcdFx0PC9Db250YWluZXI+XG5cdFx0PC9kaXY+XG5cdCk7XG59O1xuZXhwb3J0IGRlZmF1bHQgVWx0aW1hdGVGZWF0dXJlcztcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkNvbnRhaW5lciIsIlRpdGxlIiwiQnV0dG9uIiwiWmFwIiwiUGx1cyIsIkNoZWNrIiwiVWx0aW1hdGVGZWF0dXJlcyIsImZlYXR1cmVEYXRhIiwiaWQiLCJpY29uIiwidGl0bGUiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiY29udGFpbmVyVHlwZSIsImRpcmVjdGlvbiIsImp1c3RpZnkiLCJnYXAiLCJJdGVtIiwic3R5bGUiLCJ3aWR0aCIsImRlc2NyaXB0aW9uIiwiaWNvblBvc2l0aW9uIiwic2l6ZSIsInRhZyIsIm1hcCIsImZlYXR1cmUiLCJrZXkiLCJ2YXJpYW50Iiwic3JjIiwiY29uY2F0IiwiaGZlU2V0dGluZ3NEYXRhIiwiY29sdW1uX3VybCIsImFsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/UltimateFeatures.js\n");

/***/ }),

/***/ "./src/Components/Dashboard/WelcomeContainer.js":
/*!******************************************************!*\
  !*** ./src/Components/Dashboard/WelcomeContainer.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/plus.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/share.js\");\n\n\n\nvar WelcomeContainer = function WelcomeContainer() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"center\",\n    className: \"bg-background-primary border-[0.5px] border-subtle rounded-xl shadow-sm mb-4 p-4\",\n    containerType: \"flex\",\n    direction: \"row\",\n    gap: \"sm\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    shrink: 1\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: null,\n    iconPosition: \"right\",\n    size: \"md\",\n    tag: \"h3\",\n    title: \"Welcome to Ultimate Addons for Elementor!\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"font-semibold\"\n  }, \"We\\u2019re excited to help you supercharge your website-building experience\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm text-text-secondary\"\n  }, \"Effortlessly design stunning websites with our comprehensive range of free and premium widgets and features. To get started,watch the video or check our comprehensive documentation for more details.\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center gap-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null),\n    iconPosition: \"right\",\n    variant: \"primary\",\n    className: \"bg-[#6005FF]\"\n  }, \"Create New Page\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null),\n    iconPosition: \"right\",\n    variant: \"ghost\"\n  }, \"Read full guide\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"p-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"iframe\", {\n    width: \"280\",\n    height: \"160\",\n    src: \"https://www.youtube.com/embed/ZeogOxqdKJI\",\n    frameBorder: \"0\",\n    style: {\n      borderRadius: \"8px\"\n    },\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WelcomeContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvV2VsY29tZUNvbnRhaW5lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTBCO0FBQytCO0FBQ2Q7QUFDM0MsSUFBTU0sZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBQSxFQUFTO0VBQzlCLG9CQUNDTiwwREFBQSwyQkFDQ0EsMERBQUEsQ0FBQ0Msb0RBQVM7SUFDVE8sS0FBSyxFQUFDLFFBQVE7SUFDZEMsU0FBUyxFQUFDLGtGQUFrRjtJQUM1RkMsYUFBYSxFQUFDLE1BQU07SUFDcEJDLFNBQVMsRUFBQyxLQUFLO0lBQ2ZDLEdBQUcsRUFBQztFQUFJLGdCQUVSWiwwREFBQSxDQUFDQyxvREFBUyxDQUFDWSxJQUFJO0lBQ2RDLE1BQU0sRUFBRTtFQUFFLGdCQUVWZCwwREFBQSxDQUFDRSxnREFBSztJQUNMYSxXQUFXLEVBQUMsRUFBRTtJQUNkQyxJQUFJLEVBQUUsSUFBSztJQUNYQyxZQUFZLEVBQUMsT0FBTztJQUNwQkMsSUFBSSxFQUFDLElBQUk7SUFDVEMsR0FBRyxFQUFDLElBQUk7SUFDUkMsS0FBSyxFQUFDO0VBQTJDLENBQ2pELENBQUMsZUFDRnBCLDBEQUFBO0lBQUdTLFNBQVMsRUFBQztFQUFlLEdBQUMsNkVBRzFCLENBQUMsZUFDSlQsMERBQUE7SUFBR1MsU0FBUyxFQUFDO0VBQTZCLEdBQUMsd01BS3hDLENBQUMsZUFDSlQsMERBQUE7SUFBS1MsU0FBUyxFQUFDO0VBQXlCLGdCQUN2Q1QsMERBQUEsQ0FBQ0csaURBQU07SUFDTmEsSUFBSSxlQUFFaEIsMERBQUEsQ0FBQ0ssb0RBQUksTUFBRSxDQUFFO0lBQ2ZZLFlBQVksRUFBQyxPQUFPO0lBQ3BCSSxPQUFPLEVBQUMsU0FBUztJQUNqQlosU0FBUyxFQUFDO0VBQWMsR0FDeEIsaUJBRU8sQ0FBQyxlQUNUVCwwREFBQSxDQUFDRyxpREFBTTtJQUNOYSxJQUFJLGVBQUVoQiwwREFBQSxDQUFDSSxvREFBSyxNQUFFLENBQUU7SUFDaEJhLFlBQVksRUFBQyxPQUFPO0lBQ3BCSSxPQUFPLEVBQUM7RUFBTyxHQUNmLGlCQUVPLENBQ0osQ0FDVSxDQUFDLGVBQ2pCckIsMERBQUEsQ0FBQ0Msb0RBQVMsQ0FBQ1ksSUFBSTtJQUNkSixTQUFTLEVBQUM7RUFBSyxnQkFFZlQsMERBQUE7SUFDQ3NCLEtBQUssRUFBQyxLQUFLO0lBQ1hDLE1BQU0sRUFBQyxLQUFLO0lBQ1pDLEdBQUcsRUFBQywyQ0FBMkM7SUFDL0NDLFdBQVcsRUFBQyxHQUFHO0lBQ2ZDLEtBQUssRUFBRTtNQUFFQyxZQUFZLEVBQUU7SUFBTSxDQUFFO0lBQy9CQyxLQUFLLEVBQUMsMEZBQTBGO0lBQ2hHQyxlQUFlO0VBQUEsQ0FDZixDQUNjLENBQ04sQ0FDUCxDQUFDO0FBRVIsQ0FBQztBQUNELGlFQUFldkIsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvV2VsY29tZUNvbnRhaW5lci5qcz8wMGI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENvbnRhaW5lciwgVGl0bGUsIEJ1dHRvbiB9IGZyb20gXCJAYnNmL2ZvcmNlLXVpXCI7XG5pbXBvcnQgeyBTaGFyZSwgUGx1cyB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmNvbnN0IFdlbGNvbWVDb250YWluZXIgPSAoKSA9PiB7XG5cdHJldHVybiAoXG5cdFx0PGRpdj5cblx0XHRcdDxDb250YWluZXJcblx0XHRcdFx0YWxpZ249XCJjZW50ZXJcIlxuXHRcdFx0XHRjbGFzc05hbWU9XCJiZy1iYWNrZ3JvdW5kLXByaW1hcnkgYm9yZGVyLVswLjVweF0gYm9yZGVyLXN1YnRsZSByb3VuZGVkLXhsIHNoYWRvdy1zbSBtYi00IHAtNFwiXG5cdFx0XHRcdGNvbnRhaW5lclR5cGU9XCJmbGV4XCJcblx0XHRcdFx0ZGlyZWN0aW9uPVwicm93XCJcblx0XHRcdFx0Z2FwPVwic21cIlxuXHRcdFx0PlxuXHRcdFx0XHQ8Q29udGFpbmVyLkl0ZW1cblx0XHRcdFx0XHRzaHJpbms9ezF9XG5cdFx0XHRcdD5cblx0XHRcdFx0XHQ8VGl0bGVcblx0XHRcdFx0XHRcdGRlc2NyaXB0aW9uPVwiXCJcblx0XHRcdFx0XHRcdGljb249e251bGx9XG5cdFx0XHRcdFx0XHRpY29uUG9zaXRpb249XCJyaWdodFwiXG5cdFx0XHRcdFx0XHRzaXplPVwibWRcIlxuXHRcdFx0XHRcdFx0dGFnPVwiaDNcIlxuXHRcdFx0XHRcdFx0dGl0bGU9XCJXZWxjb21lIHRvIFVsdGltYXRlIEFkZG9ucyBmb3IgRWxlbWVudG9yIVwiXG5cdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHQ8cCBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkXCI+XG5cdFx0XHRcdFx0XHRXZeKAmXJlIGV4Y2l0ZWQgdG8gaGVscCB5b3Ugc3VwZXJjaGFyZ2UgeW91clxuXHRcdFx0XHRcdFx0d2Vic2l0ZS1idWlsZGluZyBleHBlcmllbmNlXG5cdFx0XHRcdFx0PC9wPlxuXHRcdFx0XHRcdDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC10ZXh0LXNlY29uZGFyeVwiPlxuXHRcdFx0XHRcdFx0RWZmb3J0bGVzc2x5IGRlc2lnbiBzdHVubmluZyB3ZWJzaXRlcyB3aXRoIG91clxuXHRcdFx0XHRcdFx0Y29tcHJlaGVuc2l2ZSByYW5nZSBvZiBmcmVlIGFuZCBwcmVtaXVtIHdpZGdldHMgYW5kXG5cdFx0XHRcdFx0XHRmZWF0dXJlcy4gVG8gZ2V0IHN0YXJ0ZWQsd2F0Y2ggdGhlIHZpZGVvIG9yIGNoZWNrIG91clxuXHRcdFx0XHRcdFx0Y29tcHJlaGVuc2l2ZSBkb2N1bWVudGF0aW9uIGZvciBtb3JlIGRldGFpbHMuXG5cdFx0XHRcdFx0PC9wPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cblx0XHRcdFx0XHRcdDxCdXR0b25cblx0XHRcdFx0XHRcdFx0aWNvbj17PFBsdXMgLz59XG5cdFx0XHRcdFx0XHRcdGljb25Qb3NpdGlvbj1cInJpZ2h0XCJcblx0XHRcdFx0XHRcdFx0dmFyaWFudD1cInByaW1hcnlcIlxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9XCJiZy1bIzYwMDVGRl1cIlxuXHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRDcmVhdGUgTmV3IFBhZ2Vcblx0XHRcdFx0XHRcdDwvQnV0dG9uPlxuXHRcdFx0XHRcdFx0PEJ1dHRvblxuXHRcdFx0XHRcdFx0XHRpY29uPXs8U2hhcmUgLz59XG5cdFx0XHRcdFx0XHRcdGljb25Qb3NpdGlvbj1cInJpZ2h0XCJcblx0XHRcdFx0XHRcdFx0dmFyaWFudD1cImdob3N0XCJcblx0XHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFx0UmVhZCBmdWxsIGd1aWRlXG5cdFx0XHRcdFx0XHQ8L0J1dHRvbj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9Db250YWluZXIuSXRlbT5cblx0XHRcdFx0PENvbnRhaW5lci5JdGVtIFxuXHRcdFx0XHRcdGNsYXNzTmFtZT1cInAtMlwiXG5cdFx0XHRcdD5cblx0XHRcdFx0XHQ8aWZyYW1lXG5cdFx0XHRcdFx0XHR3aWR0aD1cIjI4MFwiXG5cdFx0XHRcdFx0XHRoZWlnaHQ9XCIxNjBcIlxuXHRcdFx0XHRcdFx0c3JjPVwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvWmVvZ094cWRLSklcIlxuXHRcdFx0XHRcdFx0ZnJhbWVCb3JkZXI9XCIwXCJcblx0XHRcdFx0XHRcdHN0eWxlPXt7IGJvcmRlclJhZGl1czogXCI4cHhcIiB9fVxuXHRcdFx0XHRcdFx0YWxsb3c9XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlXCJcblx0XHRcdFx0XHRcdGFsbG93RnVsbFNjcmVlblxuXHRcdFx0XHRcdC8+XG5cdFx0XHRcdDwvQ29udGFpbmVyLkl0ZW0+XG5cdFx0XHQ8L0NvbnRhaW5lcj5cblx0XHQ8L2Rpdj5cblx0KTtcbn07XG5leHBvcnQgZGVmYXVsdCBXZWxjb21lQ29udGFpbmVyO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQ29udGFpbmVyIiwiVGl0bGUiLCJCdXR0b24iLCJTaGFyZSIsIlBsdXMiLCJXZWxjb21lQ29udGFpbmVyIiwiY3JlYXRlRWxlbWVudCIsImFsaWduIiwiY2xhc3NOYW1lIiwiY29udGFpbmVyVHlwZSIsImRpcmVjdGlvbiIsImdhcCIsIkl0ZW0iLCJzaHJpbmsiLCJkZXNjcmlwdGlvbiIsImljb24iLCJpY29uUG9zaXRpb24iLCJzaXplIiwidGFnIiwidGl0bGUiLCJ2YXJpYW50Iiwid2lkdGgiLCJoZWlnaHQiLCJzcmMiLCJmcmFtZUJvcmRlciIsInN0eWxlIiwiYm9yZGVyUmFkaXVzIiwiYWxsb3ciLCJhbGxvd0Z1bGxTY3JlZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/WelcomeContainer.js\n");

/***/ }),

/***/ "./src/Components/Dashboard/WidgetItem.jsx":
/*!*************************************************!*\
  !*** ./src/Components/Dashboard/WidgetItem.jsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/info.js\");\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n\n\n\n\nvar WidgetItem = function WidgetItem(_ref) {\n  var widget = _ref.widget;\n  var icon = widget.icon,\n    title = widget.title,\n    viewDemo = widget.viewDemo,\n    infoText = widget.infoText,\n    is_pro = widget.is_pro;\n  console.log({\n    widget: widget\n  });\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"center\",\n    containerType: \"flex\",\n    direction: \"column\",\n    justify: \"between\",\n    gap: \"\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"h-5 w-5 mb-5 \".concat(icon === null || icon === void 0 ? void 0 : icon.props)\n  }, icon), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center gap-x-2\"\n  }, is_pro ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Badge, {\n    label: \"PRO\",\n    size: \"xs\",\n    type: \"pill\",\n    variant: \"inverse\"\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Switch, {\n    size: \"sm\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex flex-col w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm font-medium text-text-primary m-0 mb-2\"\n  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm text-text-tertiary m-0\"\n  }, viewDemo), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Tooltip, {\n    arrow: true,\n    content: infoText,\n    placement: \"top\",\n    title: \"\",\n    triggers: ['hover', 'focus'],\n    variant: \"light\",\n    width: \"100px\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  })))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WidgetItem);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvV2lkZ2V0SXRlbS5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF5QjtBQUN3RDtBQUN6QztBQUNBO0FBRXhDLElBQU1TLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFBQyxJQUFBLEVBRVY7RUFBQSxJQURGQyxNQUFNLEdBQUFELElBQUEsQ0FBTkMsTUFBTTtFQUVOLElBQ0lDLElBQUksR0FJUUQsTUFBTSxDQUpsQkMsSUFBSTtJQUNKQyxLQUFLLEdBR09GLE1BQU0sQ0FIbEJFLEtBQUs7SUFDTEMsUUFBUSxHQUVJSCxNQUFNLENBRmxCRyxRQUFRO0lBQ1JDLFFBQVEsR0FDSUosTUFBTSxDQURsQkksUUFBUTtJQUNSQyxNQUFNLEdBQU1MLE1BQU0sQ0FBbEJLLE1BQU07RUFJTkMsT0FBTyxDQUFDQyxHQUFHLENBQUM7SUFBQ1AsTUFBTSxFQUFOQTtFQUFNLENBQUMsQ0FBQztFQUV6QixvQkFDSVgsMERBQUEsQ0FBQ0Msb0RBQVM7SUFBQ21CLEtBQUssRUFBQyxRQUFRO0lBQ3JCQyxhQUFhLEVBQUMsTUFBTTtJQUNwQkMsU0FBUyxFQUFDLFFBQVE7SUFDbEJDLE9BQU8sRUFBQyxTQUFTO0lBQ2pCQyxHQUFHLEVBQUM7RUFBRSxnQkFFTnhCLDBEQUFBO0lBQUt5QixTQUFTLEVBQUM7RUFBMEMsZ0JBQ3JEekIsMERBQUE7SUFBTXlCLFNBQVMsa0JBQUFDLE1BQUEsQ0FBa0JkLElBQUksYUFBSkEsSUFBSSx1QkFBSkEsSUFBSSxDQUFFZSxLQUFLO0VBQUcsR0FDMUNmLElBQ0EsQ0FBQyxlQUVOWiwwREFBQTtJQUFLeUIsU0FBUyxFQUFDO0VBQTJCLEdBVXJDVCxNQUFNLGdCQUNIaEIsMERBQUEsQ0FBQ00sZ0RBQUs7SUFDRnNCLEtBQUssRUFBQyxLQUFLO0lBQ1hDLElBQUksRUFBQyxJQUFJO0lBQ1RDLElBQUksRUFBQyxNQUFNO0lBQ1hDLE9BQU8sRUFBQztFQUFTLENBQ3BCLENBQUMsZ0JBRUYvQiwwREFBQSxDQUFDSSxpREFBTTtJQUFDeUIsSUFBSSxFQUFDO0VBQUksQ0FBRSxDQUV0QixDQUdKLENBQUMsZUFFTjdCLDBEQUFBO0lBQUt5QixTQUFTLEVBQUM7RUFBc0IsZ0JBQ2pDekIsMERBQUE7SUFBR3lCLFNBQVMsRUFBQztFQUFnRCxHQUFFWixLQUFTLENBQUMsZUFDekViLDBEQUFBO0lBQUt5QixTQUFTLEVBQUM7RUFBMEMsZ0JBQ3JEekIsMERBQUE7SUFBR3lCLFNBQVMsRUFBQztFQUFnQyxHQUFFWCxRQUFZLENBQUMsZUFDNURkLDBEQUFBLENBQUNLLGtEQUFPO0lBQ0oyQixLQUFLO0lBQ0xDLE9BQU8sRUFBRWxCLFFBQVM7SUFDbEJtQixTQUFTLEVBQUMsS0FBSztJQUNmckIsS0FBSyxFQUFDLEVBQUU7SUFDUnNCLFFBQVEsRUFBRSxDQUNOLE9BQU8sRUFDUCxPQUFPLENBQ1Q7SUFDRkosT0FBTyxFQUFDLE9BQU87SUFDZkssS0FBSyxFQUFDO0VBQU8sZ0JBRWJwQywwREFBQSxDQUFDTyxvREFBUTtJQUFDa0IsU0FBUyxFQUFDO0VBQVMsQ0FBRSxDQUMxQixDQUVSLENBQ0osQ0FDRSxDQUFDO0FBRXBCLENBQUM7QUFFRCxpRUFBZWhCLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9Db21wb25lbnRzL0Rhc2hib2FyZC9XaWRnZXRJdGVtLmpzeD85MTAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENvbnRhaW5lciwgVGl0bGUsIEJ1dHRvbiwgU3dpdGNoLCBUb29sdGlwLCBCYWRnZSB9IGZyb20gXCJAYnNmL2ZvcmNlLXVpXCI7XG5pbXBvcnQgeyBJbmZvSWNvbiB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3QtZG9tL2NsaWVudCc7XG5cbmNvbnN0IFdpZGdldEl0ZW0gPSAoe1xuICAgIHdpZGdldFxufSkgPT4ge1xuICAgIGNvbnN0IHsgXG4gICAgICAgIGljb24sXG4gICAgICAgIHRpdGxlLFxuICAgICAgICB2aWV3RGVtbyxcbiAgICAgICAgaW5mb1RleHQsXG4gICAgICAgIGlzX3BybywgfSA9IHdpZGdldFxuXG4gICAgICAgIFxuXG4gICAgICAgIGNvbnNvbGUubG9nKHt3aWRnZXR9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPENvbnRhaW5lciBhbGlnbj1cImNlbnRlclwiXG4gICAgICAgICAgICBjb250YWluZXJUeXBlPVwiZmxleFwiXG4gICAgICAgICAgICBkaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAgICAgICAganVzdGlmeT1cImJldHdlZW5cIlxuICAgICAgICAgICAgZ2FwPVwiXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiB3LWZ1bGwnPlxuICAgICAgICAgICAgICAgIDxkaXYgIGNsYXNzTmFtZT17YGgtNSB3LTUgbWItNSAke2ljb24/LnByb3BzfWB9PlxuICAgICAgICAgICAgICAgICAgICB7aWNvbn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBnYXAteC0yJz5cbiAgICAgICAgICAgICAgICAgICAgey8qIHtpc05ldyAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD1cIk5ld1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cInhzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicGlsbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cImJsdWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX0gKi99XG5cbiAgICAgICAgICAgICAgICAgICAge2lzX3BybyA/IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCYWRnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPVwiUFJPXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplPVwieHNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJwaWxsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYW50PVwiaW52ZXJzZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgPFN3aXRjaCBzaXplPSdzbScgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuXG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggZmxleC1jb2wgdy1mdWxsJz5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J3RleHQtc20gZm9udC1tZWRpdW0gdGV4dC10ZXh0LXByaW1hcnkgbS0wIG1iLTInPnt0aXRsZX08L3A+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiB3LWZ1bGwnPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J3RleHQtc20gdGV4dC10ZXh0LXRlcnRpYXJ5IG0tMCc+e3ZpZXdEZW1vfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgPFRvb2x0aXBcbiAgICAgICAgICAgICAgICAgICAgICAgIGFycm93XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50PXtpbmZvVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudD1cInRvcFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmlnZ2Vycz17W1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdob3ZlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZvY3VzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJsaWdodFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMHB4XCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEluZm9JY29uIGNsYXNzTmFtZT0naC01IHctNScgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9Ub29sdGlwPlxuXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBXaWRnZXRJdGVtXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJDb250YWluZXIiLCJUaXRsZSIsIkJ1dHRvbiIsIlN3aXRjaCIsIlRvb2x0aXAiLCJCYWRnZSIsIkluZm9JY29uIiwiTGluayIsIldpZGdldEl0ZW0iLCJfcmVmIiwid2lkZ2V0IiwiaWNvbiIsInRpdGxlIiwidmlld0RlbW8iLCJpbmZvVGV4dCIsImlzX3BybyIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGVFbGVtZW50IiwiYWxpZ24iLCJjb250YWluZXJUeXBlIiwiZGlyZWN0aW9uIiwianVzdGlmeSIsImdhcCIsImNsYXNzTmFtZSIsImNvbmNhdCIsInByb3BzIiwibGFiZWwiLCJzaXplIiwidHlwZSIsInZhcmlhbnQiLCJhcnJvdyIsImNvbnRlbnQiLCJwbGFjZW1lbnQiLCJ0cmlnZ2VycyIsIndpZHRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/WidgetItem.jsx\n");

/***/ }),

/***/ "./src/Components/Dashboard/Widgets.jsx":
/*!**********************************************!*\
  !*** ./src/Components/Dashboard/Widgets.jsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _WidgetItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WidgetItem */ \"./src/Components/Dashboard/WidgetItem.jsx\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/ellipsis.js\");\n\n\n\n\n\nvar Widgets = function Widgets() {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),\n    _useState2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_useState, 2),\n    allWidgetsData = _useState2[0],\n    setAllWidgetsData = _useState2[1]; // Initialize state.\n\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    var widgetsData = convertToWidgetsArray(window.hfeWidgetsList);\n    console.log({\n      widgetsData: widgetsData\n    });\n    setAllWidgetsData(widgetsData);\n  }, []);\n  console.log(window.hfeWidgetsList);\n  console.log(allWidgetsData);\n  function convertToWidgetsArray(data) {\n    var widgets = [];\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        var widget = data[key];\n        widgets.push({\n          widgetTitle: key,\n          // Using the key as 'widgetTitle'\n          slug: widget.slug,\n          title: widget.title,\n          keywords: widget.keywords,\n          icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"i\", {\n            className: widget.icon\n          }),\n          title_url: widget.title_url,\n          \"default\": widget[\"default\"],\n          doc_url: widget.doc_url,\n          is_pro: widget.is_pro\n        });\n      }\n    }\n    return widgets;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"rounded-lg bg-white w-full mb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center justify-between\",\n    style: {\n      paddingTop: '12px',\n      paddingInline: '16px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", {\n    className: \"m-0 text-sm font-semibold text-text-primary\"\n  }, \"Widgets / Features\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex items-center gap-x-2 mr-7\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", {\n    className: \"m-0 text-xs font-semibold text-text-primary\"\n  }, \"View all\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex bg-black flex-col rounded-lg p-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_3__.Container, {\n    align: \"stretch\",\n    className: \"bg-background-gray p-1 gap-1.5\",\n    cols: 4,\n    containerType: \"grid\",\n    gap: \"\",\n    justify: \"start\"\n  }, allWidgetsData === null || allWidgetsData === void 0 ? void 0 : allWidgetsData.slice(0, 12).map(function (widget) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_3__.Container.Item, {\n      key: widget.id,\n      alignSelf: \"auto\",\n      className: \"text-wrap rounded-md shadow-container-item bg-background-primary p-4\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_WidgetItem__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      widget: widget,\n      key: widget.id\n    }));\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Widgets);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9EYXNoYm9hcmQvV2lkZ2V0cy5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ2xDO0FBQ3lCO0FBQ2M7QUFFeEQsSUFBTU8sT0FBTyxHQUFHLFNBQVZBLE9BQU9BLENBQUEsRUFBUztFQUVsQixJQUFBQyxTQUFBLEdBQTRDUCwrQ0FBUSxDQUFDLElBQUksQ0FBQztJQUFBUSxVQUFBLEdBQUFDLGdGQUFBLENBQUFGLFNBQUE7SUFBbkRHLGNBQWMsR0FBQUYsVUFBQTtJQUFFRyxpQkFBaUIsR0FBQUgsVUFBQSxJQUFtQixDQUFDOztFQUU1RFAsZ0RBQVMsQ0FBQyxZQUFNO0lBQ1osSUFBTVcsV0FBVyxHQUFJQyxxQkFBcUIsQ0FBQ0MsTUFBTSxDQUFDQyxjQUFjLENBQUM7SUFDakVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO01BQUNMLFdBQVcsRUFBWEE7SUFBVyxDQUFDLENBQUM7SUFDMUJELGlCQUFpQixDQUFDQyxXQUFXLENBQUM7RUFDbEMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztFQUVOSSxPQUFPLENBQUNDLEdBQUcsQ0FBRUgsTUFBTSxDQUFDQyxjQUFlLENBQUM7RUFDcENDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFUCxjQUFlLENBQUM7RUFFN0IsU0FBU0cscUJBQXFCQSxDQUFDSyxJQUFJLEVBQUU7SUFDakMsSUFBTUMsT0FBTyxHQUFHLEVBQUU7SUFFbEIsS0FBSyxJQUFNQyxHQUFHLElBQUlGLElBQUksRUFBRTtNQUNwQixJQUFJQSxJQUFJLENBQUNHLGNBQWMsQ0FBQ0QsR0FBRyxDQUFDLEVBQUU7UUFDMUIsSUFBTUUsTUFBTSxHQUFHSixJQUFJLENBQUNFLEdBQUcsQ0FBQztRQUN4QkQsT0FBTyxDQUFDSSxJQUFJLENBQUM7VUFDVEMsV0FBVyxFQUFFSixHQUFHO1VBQUU7VUFDbEJLLElBQUksRUFBRUgsTUFBTSxDQUFDRyxJQUFJO1VBQ2pCQyxLQUFLLEVBQUVKLE1BQU0sQ0FBQ0ksS0FBSztVQUNuQkMsUUFBUSxFQUFFTCxNQUFNLENBQUNLLFFBQVE7VUFDekJDLElBQUksZUFBRTdCLDBEQUFBO1lBQUcrQixTQUFTLEVBQUVSLE1BQU0sQ0FBQ007VUFBSyxDQUFJLENBQUM7VUFDckNHLFNBQVMsRUFBRVQsTUFBTSxDQUFDUyxTQUFTO1VBQzNCLFdBQVNULE1BQU0sV0FBUTtVQUN2QlUsT0FBTyxFQUFFVixNQUFNLENBQUNVLE9BQU87VUFDdkJDLE1BQU0sRUFBRVgsTUFBTSxDQUFDVztRQUNuQixDQUFDLENBQUM7TUFDTjtJQUNKO0lBRUEsT0FBT2QsT0FBTztFQUNsQjtFQUVBLG9CQUNJcEIsMERBQUE7SUFBSytCLFNBQVMsRUFBQztFQUFpQyxnQkFDNUMvQiwwREFBQTtJQUFLK0IsU0FBUyxFQUFDLG1DQUFtQztJQUFDSSxLQUFLLEVBQUU7TUFDdERDLFVBQVUsRUFBRSxNQUFNO01BQ2xCQyxhQUFhLEVBQUU7SUFDbkI7RUFBRSxnQkFDTXJDLDBEQUFBO0lBQUcrQixTQUFTLEVBQUM7RUFBNkMsR0FBQyxvQkFBcUIsQ0FBQyxlQUNqRi9CLDBEQUFBO0lBQUsrQixTQUFTLEVBQUM7RUFBZ0MsZ0JBQzNDL0IsMERBQUE7SUFBRytCLFNBQVMsRUFBQztFQUE2QyxHQUFDLFVBQVcsQ0FBQyxlQUN2RS9CLDBEQUFBLENBQUNLLG9EQUFrQixNQUFFLENBQ3BCLENBQ0osQ0FBQyxlQUNWTCwwREFBQTtJQUFLK0IsU0FBUyxFQUFDO0VBQXVDLGdCQUVsRC9CLDBEQUFBLENBQUNJLG9EQUFTO0lBQ05rQyxLQUFLLEVBQUMsU0FBUztJQUNmUCxTQUFTLEVBQUMsZ0NBQWdDO0lBQzFDUSxJQUFJLEVBQUUsQ0FBRTtJQUNSQyxhQUFhLEVBQUMsTUFBTTtJQUNwQkMsR0FBRyxFQUFDLEVBQUU7SUFDTkMsT0FBTyxFQUFDO0VBQU8sR0FFVi9CLGNBQWMsYUFBZEEsY0FBYyx1QkFBZEEsY0FBYyxDQUFFZ0MsS0FBSyxDQUFDLENBQUMsRUFBQyxFQUFFLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLFVBQUNyQixNQUFNO0lBQUEsb0JBQ3BDdkIsMERBQUEsQ0FBQ0ksb0RBQVMsQ0FBQ3lDLElBQUk7TUFDZHhCLEdBQUcsRUFBRUUsTUFBTSxDQUFDdUIsRUFBRztNQUNmQyxTQUFTLEVBQUMsTUFBTTtNQUNoQmhCLFNBQVMsRUFBQztJQUFzRSxnQkFFN0UvQiwwREFBQSxDQUFDRyxtREFBVTtNQUFDb0IsTUFBTSxFQUFFQSxNQUFPO01BQUNGLEdBQUcsRUFBRUUsTUFBTSxDQUFDdUI7SUFBRyxDQUFFLENBQ2pDLENBQUM7RUFBQSxDQUNwQixDQUNNLENBQ2QsQ0FDSixDQUFDO0FBRWQsQ0FBQztBQUVELGlFQUFldkMsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vc3JjL0NvbXBvbmVudHMvRGFzaGJvYXJkL1dpZGdldHMuanN4Pzc2MDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7IFxuaW1wb3J0IFdpZGdldEl0ZW0gZnJvbSAnLi9XaWRnZXRJdGVtJ1xuaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSBcIkBic2YvZm9yY2UtdWlcIjtcbmltcG9ydCB7IE1vcmVIb3Jpem9udGFsSWNvbiwgUGx1cyB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcblxuY29uc3QgV2lkZ2V0cyA9ICgpID0+IHtcblxuICAgIGNvbnN0IFthbGxXaWRnZXRzRGF0YSwgc2V0QWxsV2lkZ2V0c0RhdGFdID0gdXNlU3RhdGUobnVsbCk7IC8vIEluaXRpYWxpemUgc3RhdGUuXG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB3aWRnZXRzRGF0YSA9ICBjb252ZXJ0VG9XaWRnZXRzQXJyYXkod2luZG93LmhmZVdpZGdldHNMaXN0KVxuICAgICAgICBjb25zb2xlLmxvZyh7d2lkZ2V0c0RhdGF9KVxuICAgICAgICBzZXRBbGxXaWRnZXRzRGF0YSh3aWRnZXRzRGF0YSk7XG4gICAgfSwgW10pO1xuXG4gICAgY29uc29sZS5sb2coIHdpbmRvdy5oZmVXaWRnZXRzTGlzdCApO1xuICAgIGNvbnNvbGUubG9nKCBhbGxXaWRnZXRzRGF0YSApO1xuXG4gICAgZnVuY3Rpb24gY29udmVydFRvV2lkZ2V0c0FycmF5KGRhdGEpIHtcbiAgICAgICAgY29uc3Qgd2lkZ2V0cyA9IFtdO1xuICAgIFxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgd2lkZ2V0ID0gZGF0YVtrZXldO1xuICAgICAgICAgICAgICAgIHdpZGdldHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIHdpZGdldFRpdGxlOiBrZXksIC8vIFVzaW5nIHRoZSBrZXkgYXMgJ3dpZGdldFRpdGxlJ1xuICAgICAgICAgICAgICAgICAgICBzbHVnOiB3aWRnZXQuc2x1ZyxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHdpZGdldC50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAga2V5d29yZHM6IHdpZGdldC5rZXl3b3JkcyxcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogPGkgY2xhc3NOYW1lPXt3aWRnZXQuaWNvbn0+PC9pPixcbiAgICAgICAgICAgICAgICAgICAgdGl0bGVfdXJsOiB3aWRnZXQudGl0bGVfdXJsLFxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiB3aWRnZXQuZGVmYXVsdCxcbiAgICAgICAgICAgICAgICAgICAgZG9jX3VybDogd2lkZ2V0LmRvY191cmwsXG4gICAgICAgICAgICAgICAgICAgIGlzX3Bybzogd2lkZ2V0LmlzX3Byb1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIHJldHVybiB3aWRnZXRzO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyb3VuZGVkLWxnIGJnLXdoaXRlIHctZnVsbCBtYi00Jz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4nIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgcGFkZGluZ1RvcDogJzEycHgnLFxuICAgICAgICAgICAgICAgIHBhZGRpbmdJbmxpbmU6ICcxNnB4J1xuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0nbS0wIHRleHQtc20gZm9udC1zZW1pYm9sZCB0ZXh0LXRleHQtcHJpbWFyeSc+V2lkZ2V0cyAvIEZlYXR1cmVzPC9wPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIgZ2FwLXgtMiBtci03Jz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0nbS0wIHRleHQteHMgZm9udC1zZW1pYm9sZCB0ZXh0LXRleHQtcHJpbWFyeSc+VmlldyBhbGw8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TW9yZUhvcml6b250YWxJY29uIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggYmctYmxhY2sgZmxleC1jb2wgcm91bmRlZC1sZyBwLTQnPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxDb250YWluZXJcbiAgICAgICAgICAgICAgICAgICAgYWxpZ249XCJzdHJldGNoXCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctYmFja2dyb3VuZC1ncmF5IHAtMSBnYXAtMS41XCJcbiAgICAgICAgICAgICAgICAgICAgY29scz17NH1cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyVHlwZT1cImdyaWRcIlxuICAgICAgICAgICAgICAgICAgICBnYXA9XCJcIlxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5PVwic3RhcnRcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7YWxsV2lkZ2V0c0RhdGE/LnNsaWNlKDAsMTIpLm1hcCgod2lkZ2V0KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbnRhaW5lci5JdGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17d2lkZ2V0LmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnblNlbGY9XCJhdXRvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC13cmFwIHJvdW5kZWQtbWQgc2hhZG93LWNvbnRhaW5lci1pdGVtIGJnLWJhY2tncm91bmQtcHJpbWFyeSBwLTRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8V2lkZ2V0SXRlbSB3aWRnZXQ9e3dpZGdldH0ga2V5PXt3aWRnZXQuaWR9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db250YWluZXIuSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFdpZGdldHNcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiV2lkZ2V0SXRlbSIsIkNvbnRhaW5lciIsIk1vcmVIb3Jpem9udGFsSWNvbiIsIlBsdXMiLCJXaWRnZXRzIiwiX3VzZVN0YXRlIiwiX3VzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5IiwiYWxsV2lkZ2V0c0RhdGEiLCJzZXRBbGxXaWRnZXRzRGF0YSIsIndpZGdldHNEYXRhIiwiY29udmVydFRvV2lkZ2V0c0FycmF5Iiwid2luZG93IiwiaGZlV2lkZ2V0c0xpc3QiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsIndpZGdldHMiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsIndpZGdldCIsInB1c2giLCJ3aWRnZXRUaXRsZSIsInNsdWciLCJ0aXRsZSIsImtleXdvcmRzIiwiaWNvbiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJ0aXRsZV91cmwiLCJkb2NfdXJsIiwiaXNfcHJvIiwic3R5bGUiLCJwYWRkaW5nVG9wIiwicGFkZGluZ0lubGluZSIsImFsaWduIiwiY29scyIsImNvbnRhaW5lclR5cGUiLCJnYXAiLCJqdXN0aWZ5Iiwic2xpY2UiLCJtYXAiLCJJdGVtIiwiaWQiLCJhbGlnblNlbGYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Components/Dashboard/Widgets.jsx\n");

/***/ }),

/***/ "./src/Components/HeaderLine.js":
/*!**************************************!*\
  !*** ./src/Components/HeaderLine.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wordpress/i18n */ \"@wordpress/i18n\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar HeaderLine = function HeaderLine() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    className: \"hfe-header-title m-4\",\n    description: \"\",\n    icon: null,\n    iconPosition: \"right\",\n    size: \"xs\",\n    tag: \"h6\",\n    title: (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_2__.__)('Formerly Elementor Header & Footer Builder', 'header-footer-elementor')\n  });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HeaderLine);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9IZWFkZXJMaW5lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEI7QUFHSDtBQUNjO0FBRXJDLElBQU1HLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFBLEVBQVM7RUFDeEIsb0JBQ09ILDBEQUFBLENBQUNDLGdEQUFLO0lBQ0ZJLFNBQVMsRUFBQyxzQkFBc0I7SUFDaENDLFdBQVcsRUFBQyxFQUFFO0lBQ2RDLElBQUksRUFBRSxJQUFLO0lBQ1hDLFlBQVksRUFBQyxPQUFPO0lBQ3BCQyxJQUFJLEVBQUMsSUFBSTtJQUNUQyxHQUFHLEVBQUMsSUFBSTtJQUNSQyxLQUFLLEVBQUVULG1EQUFFLENBQUMsNENBQTRDLEVBQUUseUJBQXlCO0VBQUUsQ0FDdEYsQ0FBQztBQUVWLENBQUM7QUFFRCxpRUFBZUMsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vc3JjL0NvbXBvbmVudHMvSGVhZGVyTGluZS5qcz82ZTFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICAgIFRpdGxlXG59IGZyb20gJ0Bic2YvZm9yY2UtdWknO1xuaW1wb3J0IHsgX18gfSBmcm9tICdAd29yZHByZXNzL2kxOG4nOyBcblxuY29uc3QgSGVhZGVyTGluZSA9ICgpID0+IHtcblx0cmV0dXJuIChcbiAgICAgICAgPFRpdGxlXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJoZmUtaGVhZGVyLXRpdGxlIG0tNFwiXG4gICAgICAgICAgICBkZXNjcmlwdGlvbj1cIlwiXG4gICAgICAgICAgICBpY29uPXtudWxsfVxuICAgICAgICAgICAgaWNvblBvc2l0aW9uPVwicmlnaHRcIlxuICAgICAgICAgICAgc2l6ZT1cInhzXCJcbiAgICAgICAgICAgIHRhZz1cImg2XCJcbiAgICAgICAgICAgIHRpdGxlPXtfXygnRm9ybWVybHkgRWxlbWVudG9yIEhlYWRlciAmIEZvb3RlciBCdWlsZGVyJywgJ2hlYWRlci1mb290ZXItZWxlbWVudG9yJyl9XG4gICAgICAgIC8+XG5cdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJMaW5lO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiVGl0bGUiLCJfXyIsIkhlYWRlckxpbmUiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiZGVzY3JpcHRpb24iLCJpY29uIiwiaWNvblBvc2l0aW9uIiwic2l6ZSIsInRhZyIsInRpdGxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Components/HeaderLine.js\n");

/***/ }),

/***/ "./src/Components/NavMenu.js":
/*!***********************************!*\
  !*** ./src/Components/NavMenu.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router/dist/index.js\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/dist/index.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/arrow-up-right.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/circle-help.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/megaphone.js\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wordpress/i18n */ \"@wordpress/i18n\");\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\nvar NavMenu = function NavMenu() {\n  var location = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useLocation)();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(location.pathname),\n    _useState2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_useState, 2),\n    currentPath = _useState2[0],\n    setCurrentPath = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),\n    _useState4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_useState3, 2),\n    links = _useState4[0],\n    setLinks = _useState4[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    setCurrentPath(location.pathname);\n  }, [location]);\n\n  // Fetch data from the REST API\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\n    fetch(\"/wp-json/myplugin/v1/links\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data); // Log the data to the console\n      setLinks(data);\n    });\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar, {\n    style: {\n      width: \"unset\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Left, {\n    gap: \"xl\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Item, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"svg\", {\n    fill: \"none\",\n    height: \"24\",\n    viewBox: \"0 0 25 24\",\n    width: \"25\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"path\", {\n    clipRule: \"evenodd\",\n    d: \"M12.5 24C19.1275 24 24.5 18.6273 24.5 11.9999C24.5 5.37255 19.1275 0 12.5 0C5.87259 0 0.5 5.37255 0.5 11.9999C0.5 18.6273 5.87259 24 12.5 24ZM12.5517 5.99996C11.5882 5.99996 10.2547 6.55101 9.5734 7.23073L7.7229 9.07688H16.9465L20.0307 5.99996H12.5517ZM15.4111 16.7692C14.7298 17.4489 13.3964 17.9999 12.4328 17.9999H4.95388L8.03804 14.923H17.2616L15.4111 16.7692ZM18.4089 10.6153H6.18418L5.60673 11.1923C4.23941 12.423 4.64495 13.3846 6.5598 13.3846H18.8176L19.3952 12.8076C20.7492 11.5841 20.3237 10.6153 18.4089 10.6153Z\",\n    fill: \"#0D7EE8\",\n    fillRule: \"evenodd\"\n  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Middle, {\n    align: \"left\",\n    gap: \"2xl\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Item, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"flex gap-2\"\n  }, links === null || links === void 0 ? void 0 : links.map(function (link) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_5__.Link, {\n      key: link.id,\n      to: link.url // Corrected the path for routing\n      ,\n      className: currentPath === link.path ? 'active-link' : '' // Optional active class\n    }, link.label);\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Item, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Button, {\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], null),\n    iconPosition: \"right\",\n    variant: \"ghost\"\n  }, (0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_3__.__)(\"Upgrade to Pro\", \"header-footer-elementor\")))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Right, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Item, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Badge, {\n    label: \"V 1.6.42\",\n    size: \"xs\",\n    variant: \"neutral\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Topbar.Item, {\n    className: \"gap-2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NavMenu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Components/NavMenu.js\n");

/***/ }),

/***/ "./src/Components/Templates/ExploreTemplates.jsx":
/*!*******************************************************!*\
  !*** ./src/Components/Templates/ExploreTemplates.jsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/zap.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/check.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/plus.js\");\n\n\n\nvar ExploreTemplates = function ExploreTemplates() {\n  var templateData = [{\n    id: 1,\n    icon: \"\",\n    title: \"250+ templates for evrry niche\"\n  }, {\n    id: 2,\n    icon: \"\",\n    title: \"Modern, timeless designs\"\n  }, {\n    id: 3,\n    icon: \"\",\n    title: \"Full design flexibility for easy customization\"\n  }, {\n    id: 4,\n    icon: \"\",\n    title: \"100% responsive across all devices\"\n  }];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    className: \"bg-background-primary p-4 border-[0.5px] border-subtle rounded-xl shadow-sm\",\n    containerType: \"flex\",\n    direction: \"row\",\n    justify: \"between\",\n    gap: \"xs\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"flex flex-col justify-between\",\n    style: {\n      width: \"40%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null),\n    iconPosition: \"left\",\n    size: \"xs\",\n    tag: \"h6\",\n    title: \"Design Your Website in Minutes\",\n    className: \"text-xs font-semibold text-brand-primary-600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: \"\",\n    iconPosition: \"left\",\n    tag: \"h6\",\n    title: \"Build your website faster using our prebuilt templates\",\n    className: \"py-1 text-sm\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-md m-0 text-text-secondary\"\n  }, \"Stop building your site from scratch. Use our professional templates for your stunning website. It\\u2019s easy to customize and completely responsive. Explore hundreds of designs and bring your vision to life in no time.\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"grid grid-cols-1 grid-flow-row gap-1 my-4\"\n  }, templateData.map(function (template) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n      key: template.id,\n      description: \"\",\n      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        className: \"text-brand-primary-600 mr-1 h-3 w-3\"\n      }),\n      iconPosition: \"left\",\n      size: \"xs\",\n      tag: \"h6\",\n      title: template.title,\n      className: \"\"\n    });\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center pb-3 gap-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null),\n    iconPosition: \"right\",\n    variant: \"secondary\",\n    style: {\n      backgroundColor: \"#6005FF\"\n    },\n    className: \"\"\n  }, \"Explore Templates\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: \"\",\n    iconPosition: \"right\",\n    variant: \"ghost\"\n  }, \"Learn More\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"flex justify-center items-center\",\n    style: {\n      width: \"60%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: \"\".concat(hfeSettingsData.template_url),\n    alt: \"Column Showcase\",\n    className: \"w-full h-auto rounded\"\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExploreTemplates);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Components/Templates/ExploreTemplates.jsx\n");

/***/ }),

/***/ "./src/Components/Templates/Templates.jsx":
/*!************************************************!*\
  !*** ./src/Components/Templates/Templates.jsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _NavMenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../NavMenu */ \"./src/Components/NavMenu.js\");\n/* harmony import */ var _HeaderLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../HeaderLine */ \"./src/Components/HeaderLine.js\");\n/* harmony import */ var _ExploreTemplates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ExploreTemplates */ \"./src/Components/Templates/ExploreTemplates.jsx\");\n\n\n\n\n\nvar Templates = function Templates() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_NavMenu__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_HeaderLine__WEBPACK_IMPORTED_MODULE_3__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"stretch\",\n    className: \"p-2\",\n    containerType: \"flex\",\n    direction: \"row\",\n    gap: \"sm\",\n    justify: \"center\",\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"p-2\",\n    alignSelf: \"auto\",\n    order: \"none\",\n    shrink: 1,\n    style: {\n      width: \"90%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ExploreTemplates__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null)))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Templates);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9UZW1wbGF0ZXMvVGVtcGxhdGVzLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF5QjtBQUNpQjtBQUM1QjtBQUNHO0FBQ007QUFFdkIsSUFBTUssU0FBUyxHQUFHLFNBQVpBLFNBQVNBLENBQUEsRUFBUztFQUN0QixvQkFDRUwsMERBQUEsQ0FBQUEsdURBQUEscUJBQ1FBLDBEQUFBLENBQUNFLGdEQUFPLE1BQUUsQ0FBQyxlQUNYRiwwREFBQTtJQUFLUSxTQUFTLEVBQUM7RUFBRSxnQkFDYlIsMERBQUEsQ0FBQ0csbURBQVUsTUFBRSxDQUFDLGVBQ2RILDBEQUFBLENBQUNDLG9EQUFTO0lBQ05RLEtBQUssRUFBQyxTQUFTO0lBQ2ZELFNBQVMsRUFBQyxLQUFLO0lBQ2ZFLGFBQWEsRUFBQyxNQUFNO0lBQ3BCQyxTQUFTLEVBQUMsS0FBSztJQUNmQyxHQUFHLEVBQUMsSUFBSTtJQUNSQyxPQUFPLEVBQUMsUUFBUTtJQUNoQkMsS0FBSyxFQUFFO01BQ0hDLEtBQUssRUFBRTtJQUNYO0VBQUUsZ0JBRUZmLDBEQUFBLENBQUNDLG9EQUFTLENBQUNlLElBQUk7SUFDWFIsU0FBUyxFQUFDLEtBQUs7SUFDZlMsU0FBUyxFQUFDLE1BQU07SUFDaEJDLEtBQUssRUFBQyxNQUFNO0lBQ1pDLE1BQU0sRUFBRSxDQUFFO0lBQ1ZMLEtBQUssRUFBRTtNQUNIQyxLQUFLLEVBQUU7SUFDWDtFQUFFLGdCQUlGZiwwREFBQSxDQUFDSSx5REFBZ0IsTUFBRSxDQUNQLENBQ1QsQ0FDVixDQUNQLENBQUM7QUFFWCxDQUFDO0FBRUQsaUVBQWVDLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9Db21wb25lbnRzL1RlbXBsYXRlcy9UZW1wbGF0ZXMuanN4P2RkNTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ29udGFpbmVyIH0gZnJvbSBcIkBic2YvZm9yY2UtdWlcIjtcbmltcG9ydCBOYXZNZW51IGZyb20gJ0Bjb21wb25lbnRzL05hdk1lbnUnO1xuaW1wb3J0IEhlYWRlckxpbmUgZnJvbSAnQGNvbXBvbmVudHMvSGVhZGVyTGluZSc7XG5pbXBvcnQgRXhwbG9yZVRlbXBsYXRlcyBmcm9tICcuL0V4cGxvcmVUZW1wbGF0ZXMnO1xuXG5jb25zdCBUZW1wbGF0ZXMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgICAgICAgIDxOYXZNZW51IC8+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgIDxIZWFkZXJMaW5lIC8+XG4gICAgICAgICAgICAgICAgPENvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICBhbGlnbj1cInN0cmV0Y2hcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwLTJcIlxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXJUeXBlPVwiZmxleFwiXG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbj1cInJvd1wiXG4gICAgICAgICAgICAgICAgICAgIGdhcD1cInNtXCJcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeT1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8Q29udGFpbmVyLkl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInAtMlwiXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnblNlbGY9XCJhdXRvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzaHJpbms9ezF9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjkwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgey8qIDxXZWxjb21lQ29udGFpbmVyIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8V2lkZ2V0cyAvPiAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxFeHBsb3JlVGVtcGxhdGVzIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvQ29udGFpbmVyLkl0ZW0+XG4gICAgICAgICAgICAgICAgPC9Db250YWluZXI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC8+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGVtcGxhdGVzXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJDb250YWluZXIiLCJOYXZNZW51IiwiSGVhZGVyTGluZSIsIkV4cGxvcmVUZW1wbGF0ZXMiLCJUZW1wbGF0ZXMiLCJjcmVhdGVFbGVtZW50IiwiRnJhZ21lbnQiLCJjbGFzc05hbWUiLCJhbGlnbiIsImNvbnRhaW5lclR5cGUiLCJkaXJlY3Rpb24iLCJnYXAiLCJqdXN0aWZ5Iiwic3R5bGUiLCJ3aWR0aCIsIkl0ZW0iLCJhbGlnblNlbGYiLCJvcmRlciIsInNocmluayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Components/Templates/Templates.jsx\n");

/***/ }),

/***/ "./src/Components/Widgets/Features.jsx":
/*!*********************************************!*\
  !*** ./src/Components/Widgets/Features.jsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _HeaderLine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../HeaderLine */ \"./src/Components/HeaderLine.js\");\n/* harmony import */ var _NavMenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../NavMenu */ \"./src/Components/NavMenu.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Dashboard_WelcomeContainer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Dashboard/WelcomeContainer */ \"./src/Components/Dashboard/WelcomeContainer.js\");\n/* harmony import */ var _Dashboard_Widgets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Dashboard/Widgets */ \"./src/Components/Dashboard/Widgets.jsx\");\n/* harmony import */ var _Dashboard_UltimateFeatures__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Dashboard/UltimateFeatures */ \"./src/Components/Dashboard/UltimateFeatures.js\");\n/* harmony import */ var _Dashboard_ExtendWebsite__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Dashboard/ExtendWebsite */ \"./src/Components/Dashboard/ExtendWebsite.jsx\");\n/* harmony import */ var _Dashboard_TemplateSection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Dashboard/TemplateSection */ \"./src/Components/Dashboard/TemplateSection.js\");\n/* harmony import */ var _Dashboard_QuickAccess__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Dashboard/QuickAccess */ \"./src/Components/Dashboard/QuickAccess.js\");\n/* harmony import */ var _Features_FeatureWidgets__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Features/FeatureWidgets */ \"./src/Components/Widgets/Features/FeatureWidgets.jsx\");\n/* harmony import */ var _UltimateWidgets__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./UltimateWidgets */ \"./src/Components/Widgets/UltimateWidgets.jsx\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar Features = function Features() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement((react__WEBPACK_IMPORTED_MODULE_3___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_NavMenu__WEBPACK_IMPORTED_MODULE_1__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(\"div\", {\n    className: \"\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_HeaderLine__WEBPACK_IMPORTED_MODULE_0__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Container, {\n    align: \"stretch\",\n    className: \"p-2\",\n    containerType: \"flex\",\n    direction: \"row\",\n    gap: \"sm\",\n    justify: \"start\",\n    style: {\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Container.Item, {\n    className: \"p-2\",\n    alignSelf: \"auto\",\n    order: \"none\",\n    shrink: 1,\n    style: {\n      width: \"65%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_Features_FeatureWidgets__WEBPACK_IMPORTED_MODULE_10__[\"default\"], null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_2__.Container.Item, {\n    className: \"p-2\",\n    style: {\n      width: \"34%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_Dashboard_ExtendWebsite__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_Dashboard_TemplateSection__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_Dashboard_QuickAccess__WEBPACK_IMPORTED_MODULE_9__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(_UltimateWidgets__WEBPACK_IMPORTED_MODULE_11__[\"default\"], null)))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Features);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9XaWRnZXRzL0ZlYXR1cmVzLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUI7QUFDSDtBQUM0QjtBQUNqQjtBQUNGO0FBQ1Q7QUFDUztBQUNIO0FBQ0U7QUFDSjtBQUNHO0FBQ0M7QUFFdEIsSUFBTVksUUFBUSxHQUFHLFNBQVhBLFFBQVFBLENBQUEsRUFBUztFQUNyQixvQkFDRVQsMERBQUEsQ0FBQUEsdURBQUEscUJBQ0FBLDBEQUFBLENBQUNGLGdEQUFPLE1BQUUsQ0FBQyxlQUNYRSwwREFBQTtJQUFLWSxTQUFTLEVBQUM7RUFBRSxnQkFDYlosMERBQUEsQ0FBQ0gsbURBQVUsTUFBRSxDQUFDLGVBQ2RHLDBEQUFBLENBQUNELG9EQUFTO0lBQ05jLEtBQUssRUFBQyxTQUFTO0lBQ2ZELFNBQVMsRUFBQyxLQUFLO0lBQ2ZFLGFBQWEsRUFBQyxNQUFNO0lBQ3BCQyxTQUFTLEVBQUMsS0FBSztJQUNmQyxHQUFHLEVBQUMsSUFBSTtJQUNSQyxPQUFPLEVBQUMsT0FBTztJQUNmQyxLQUFLLEVBQUU7TUFDSEMsS0FBSyxFQUFFO0lBQ1g7RUFBRSxnQkFFRm5CLDBEQUFBLENBQUNELG9EQUFTLENBQUNxQixJQUFJO0lBQ1hSLFNBQVMsRUFBQyxLQUFLO0lBQ2ZTLFNBQVMsRUFBQyxNQUFNO0lBQ2hCQyxLQUFLLEVBQUMsTUFBTTtJQUNaQyxNQUFNLEVBQUUsQ0FBRTtJQUNWTCxLQUFLLEVBQUU7TUFDSEMsS0FBSyxFQUFFO0lBQ1g7RUFBRSxnQkFFRm5CLDBEQUFBLENBQUNPLGlFQUFjLE1BQUUsQ0FDTCxDQUFDLGVBQ2pCUCwwREFBQSxDQUFDRCxvREFBUyxDQUFDcUIsSUFBSTtJQUNYUixTQUFTLEVBQUMsS0FBSztJQUNmTSxLQUFLLEVBQUU7TUFDSEMsS0FBSyxFQUFFO0lBQ1g7RUFBRSxnQkFFRm5CLDBEQUFBLENBQUNJLGdFQUFhLE1BQUUsQ0FBQyxlQUNqQkosMERBQUEsQ0FBQ0ssa0VBQWUsTUFBRSxDQUFDLGVBQ25CTCwwREFBQSxDQUFDTSw4REFBVyxNQUFFLENBQUMsZUFDZk4sMERBQUEsQ0FBQ1EseURBQWUsTUFBRSxDQUNOLENBQ1QsQ0FDVixDQUNQLENBQUM7QUFFSCxDQUFDO0FBRUQsaUVBQWVDLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9Db21wb25lbnRzL1dpZGdldHMvRmVhdHVyZXMuanN4PzkwODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWRlckxpbmUgZnJvbSAnQGNvbXBvbmVudHMvSGVhZGVyTGluZSdcbmltcG9ydCBOYXZNZW51IGZyb20gJ0Bjb21wb25lbnRzL05hdk1lbnUnXG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tIFwiQGJzZi9mb3JjZS11aVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFdlbGNvbWVDb250YWluZXIgZnJvbSAnQGNvbXBvbmVudHMvRGFzaGJvYXJkL1dlbGNvbWVDb250YWluZXInO1xuaW1wb3J0IFdpZGdldHMgZnJvbSAnQGNvbXBvbmVudHMvRGFzaGJvYXJkL1dpZGdldHMnO1xuaW1wb3J0IFVsdGltYXRlRmVhdHVyZXMgZnJvbSAnQGNvbXBvbmVudHMvRGFzaGJvYXJkL1VsdGltYXRlRmVhdHVyZXMnO1xuaW1wb3J0IEV4dGVuZFdlYnNpdGUgZnJvbSAnQGNvbXBvbmVudHMvRGFzaGJvYXJkL0V4dGVuZFdlYnNpdGUnO1xuaW1wb3J0IFRlbXBsYXRlU2VjdGlvbiBmcm9tICdAY29tcG9uZW50cy9EYXNoYm9hcmQvVGVtcGxhdGVTZWN0aW9uJztcbmltcG9ydCBRdWlja0FjY2VzcyBmcm9tICdAY29tcG9uZW50cy9EYXNoYm9hcmQvUXVpY2tBY2Nlc3MnO1xuaW1wb3J0IEZlYXR1cmVXaWRnZXRzIGZyb20gJy4vRmVhdHVyZXMvRmVhdHVyZVdpZGdldHMnO1xuaW1wb3J0IFVsdGltYXRlV2lkZ2V0cyBmcm9tICcuL1VsdGltYXRlV2lkZ2V0cyc7XG5cbmNvbnN0IEZlYXR1cmVzID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgPE5hdk1lbnUgLz5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICA8SGVhZGVyTGluZSAvPlxuICAgICAgICA8Q29udGFpbmVyXG4gICAgICAgICAgICBhbGlnbj1cInN0cmV0Y2hcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicC0yXCJcbiAgICAgICAgICAgIGNvbnRhaW5lclR5cGU9XCJmbGV4XCJcbiAgICAgICAgICAgIGRpcmVjdGlvbj1cInJvd1wiXG4gICAgICAgICAgICBnYXA9XCJzbVwiXG4gICAgICAgICAgICBqdXN0aWZ5PVwic3RhcnRcIlxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgICA8Q29udGFpbmVyLkl0ZW1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJwLTJcIlxuICAgICAgICAgICAgICAgIGFsaWduU2VsZj1cImF1dG9cIlxuICAgICAgICAgICAgICAgIG9yZGVyPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgc2hyaW5rPXsxfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjY1JVwiLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPEZlYXR1cmVXaWRnZXRzIC8+XG4gICAgICAgICAgICA8L0NvbnRhaW5lci5JdGVtPlxuICAgICAgICAgICAgPENvbnRhaW5lci5JdGVtIFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInAtMlwiXG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMzQlXCIsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8RXh0ZW5kV2Vic2l0ZSAvPlxuICAgICAgICAgICAgICAgIDxUZW1wbGF0ZVNlY3Rpb24gLz5cbiAgICAgICAgICAgICAgICA8UXVpY2tBY2Nlc3MgLz5cbiAgICAgICAgICAgICAgICA8VWx0aW1hdGVXaWRnZXRzIC8+XG4gICAgICAgICAgICA8L0NvbnRhaW5lci5JdGVtPlxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICA8L2Rpdj5cbjwvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZlYXR1cmVzIl0sIm5hbWVzIjpbIkhlYWRlckxpbmUiLCJOYXZNZW51IiwiQ29udGFpbmVyIiwiUmVhY3QiLCJXZWxjb21lQ29udGFpbmVyIiwiV2lkZ2V0cyIsIlVsdGltYXRlRmVhdHVyZXMiLCJFeHRlbmRXZWJzaXRlIiwiVGVtcGxhdGVTZWN0aW9uIiwiUXVpY2tBY2Nlc3MiLCJGZWF0dXJlV2lkZ2V0cyIsIlVsdGltYXRlV2lkZ2V0cyIsIkZlYXR1cmVzIiwiY3JlYXRlRWxlbWVudCIsIkZyYWdtZW50IiwiY2xhc3NOYW1lIiwiYWxpZ24iLCJjb250YWluZXJUeXBlIiwiZGlyZWN0aW9uIiwiZ2FwIiwianVzdGlmeSIsInN0eWxlIiwid2lkdGgiLCJJdGVtIiwiYWxpZ25TZWxmIiwib3JkZXIiLCJzaHJpbmsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Components/Widgets/Features.jsx\n");

/***/ }),

/***/ "./src/Components/Widgets/Features/FeatureWidgetItems.jsx":
/*!****************************************************************!*\
  !*** ./src/Components/Widgets/Features/FeatureWidgetItems.jsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/info.js\");\n\n\n\nvar FeatureWidgetItems = function FeatureWidgetItems(_ref) {\n  var widget = _ref.widget;\n  var id = widget.id,\n    icon = widget.icon,\n    enabled = widget.enabled,\n    title = widget.title,\n    demoLink = widget.demoLink,\n    viewDemo = widget.viewDemo,\n    infoText = widget.infoText,\n    isNew = widget.isNew,\n    isPro = widget.isPro;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"center\",\n    containerType: \"flex\",\n    direction: \"column\",\n    justify: \"between\",\n    gap: \"\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"h-5 w-5 mb-5\"\n  }, icon), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center gap-x-2\"\n  }, isNew && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Badge, {\n    label: \"New\",\n    size: \"xs\",\n    type: \"pill\",\n    variant: \"blue\"\n  }), isPro ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Badge, {\n    label: \"PRO\",\n    size: \"xs\",\n    type: \"pill\",\n    variant: \"inverse\"\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Switch, {\n    size: \"sm\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex flex-col w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm font-medium text-text-primary m-0 mb-2\"\n  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between w-full\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-sm text-text-tertiary m-0\"\n  }, viewDemo), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Tooltip, {\n    arrow: true,\n    content: infoText,\n    placement: \"top\",\n    title: \"\",\n    triggers: ['hover', 'focus'],\n    variant: \"light\",\n    width: \"100px\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    className: \"h-5 w-5\"\n  })))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FeatureWidgetItems);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvQ29tcG9uZW50cy9XaWRnZXRzL0ZlYXR1cmVzL0ZlYXR1cmVXaWRnZXRJdGVtcy5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlCO0FBQ3dEO0FBQ3pDO0FBRXhDLElBQU1RLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQUFDLElBQUEsRUFFbEI7RUFBQSxJQURGQyxNQUFNLEdBQUFELElBQUEsQ0FBTkMsTUFBTTtFQUVOLElBQVFDLEVBQUUsR0FRS0QsTUFBTSxDQVJiQyxFQUFFO0lBQ05DLElBQUksR0FPT0YsTUFBTSxDQVBqQkUsSUFBSTtJQUNKQyxPQUFPLEdBTUlILE1BQU0sQ0FOakJHLE9BQU87SUFDUEMsS0FBSyxHQUtNSixNQUFNLENBTGpCSSxLQUFLO0lBQ0xDLFFBQVEsR0FJR0wsTUFBTSxDQUpqQkssUUFBUTtJQUNSQyxRQUFRLEdBR0dOLE1BQU0sQ0FIakJNLFFBQVE7SUFDUkMsUUFBUSxHQUVHUCxNQUFNLENBRmpCTyxRQUFRO0lBQ1JDLEtBQUssR0FDTVIsTUFBTSxDQURqQlEsS0FBSztJQUNMQyxLQUFLLEdBQU1ULE1BQU0sQ0FBakJTLEtBQUs7RUFFVCxvQkFDSW5CLDBEQUFBLENBQUNDLG9EQUFTO0lBQUNvQixLQUFLLEVBQUMsUUFBUTtJQUNyQkMsYUFBYSxFQUFDLE1BQU07SUFDcEJDLFNBQVMsRUFBQyxRQUFRO0lBQ2xCQyxPQUFPLEVBQUMsU0FBUztJQUNqQkMsR0FBRyxFQUFDO0VBQUUsZ0JBRU56QiwwREFBQTtJQUFLMEIsU0FBUyxFQUFDO0VBQTBDLGdCQUNyRDFCLDBEQUFBO0lBQUswQixTQUFTLEVBQUM7RUFBYyxHQUN4QmQsSUFDQSxDQUFDLGVBRU5aLDBEQUFBO0lBQUswQixTQUFTLEVBQUM7RUFBMkIsR0FDckNSLEtBQUssaUJBQ0ZsQiwwREFBQSxDQUFDTSxnREFBSztJQUNGcUIsS0FBSyxFQUFDLEtBQUs7SUFDWEMsSUFBSSxFQUFDLElBQUk7SUFDVEMsSUFBSSxFQUFDLE1BQU07SUFDWEMsT0FBTyxFQUFDO0VBQU0sQ0FDakIsQ0FDSixFQUVBWCxLQUFLLGdCQUNGbkIsMERBQUEsQ0FBQ00sZ0RBQUs7SUFDRnFCLEtBQUssRUFBQyxLQUFLO0lBQ1hDLElBQUksRUFBQyxJQUFJO0lBQ1RDLElBQUksRUFBQyxNQUFNO0lBQ1hDLE9BQU8sRUFBQztFQUFTLENBQ3BCLENBQUMsZ0JBRUY5QiwwREFBQSxDQUFDSSxpREFBTTtJQUFDd0IsSUFBSSxFQUFDO0VBQUksQ0FBRSxDQUV0QixDQUdKLENBQUMsZUFFTjVCLDBEQUFBO0lBQUswQixTQUFTLEVBQUM7RUFBc0IsZ0JBQ2pDMUIsMERBQUE7SUFBRzBCLFNBQVMsRUFBQztFQUFnRCxHQUFFWixLQUFTLENBQUMsZUFDekVkLDBEQUFBO0lBQUswQixTQUFTLEVBQUM7RUFBMEMsZ0JBQ3JEMUIsMERBQUE7SUFBRzBCLFNBQVMsRUFBQztFQUFnQyxHQUFFVixRQUFZLENBQUMsZUFDNURoQiwwREFBQSxDQUFDSyxrREFBTztJQUNKMEIsS0FBSztJQUNMQyxPQUFPLEVBQUVmLFFBQVM7SUFDbEJnQixTQUFTLEVBQUMsS0FBSztJQUNmbkIsS0FBSyxFQUFDLEVBQUU7SUFDUm9CLFFBQVEsRUFBRSxDQUNOLE9BQU8sRUFDUCxPQUFPLENBQ1Q7SUFDRkosT0FBTyxFQUFDLE9BQU87SUFDZkssS0FBSyxFQUFDO0VBQU8sZ0JBRWJuQywwREFBQSxDQUFDTyxvREFBUTtJQUFDbUIsU0FBUyxFQUFDO0VBQVMsQ0FBRSxDQUMxQixDQUVSLENBQ0osQ0FDRSxDQUFDO0FBRXBCLENBQUM7QUFFRCxpRUFBZWxCLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vc3JjL0NvbXBvbmVudHMvV2lkZ2V0cy9GZWF0dXJlcy9GZWF0dXJlV2lkZ2V0SXRlbXMuanN4P2Q2ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ29udGFpbmVyLCBUaXRsZSwgQnV0dG9uLCBTd2l0Y2gsIFRvb2x0aXAsIEJhZGdlIH0gZnJvbSBcIkBic2YvZm9yY2UtdWlcIjtcbmltcG9ydCB7IEluZm9JY29uIH0gZnJvbSAnbHVjaWRlLXJlYWN0JztcblxuY29uc3QgRmVhdHVyZVdpZGdldEl0ZW1zID0gKHtcbiAgICB3aWRnZXRcbn0pID0+IHtcbiAgICBjb25zdCB7IGlkLFxuICAgICAgICBpY29uLFxuICAgICAgICBlbmFibGVkLFxuICAgICAgICB0aXRsZSxcbiAgICAgICAgZGVtb0xpbmssXG4gICAgICAgIHZpZXdEZW1vLFxuICAgICAgICBpbmZvVGV4dCxcbiAgICAgICAgaXNOZXcsXG4gICAgICAgIGlzUHJvLCB9ID0gd2lkZ2V0XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8Q29udGFpbmVyIGFsaWduPVwiY2VudGVyXCJcbiAgICAgICAgICAgIGNvbnRhaW5lclR5cGU9XCJmbGV4XCJcbiAgICAgICAgICAgIGRpcmVjdGlvbj1cImNvbHVtblwiXG4gICAgICAgICAgICBqdXN0aWZ5PVwiYmV0d2VlblwiXG4gICAgICAgICAgICBnYXA9XCJcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHctZnVsbCc+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2gtNSB3LTUgbWItNSc+XG4gICAgICAgICAgICAgICAgICAgIHtpY29ufVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsZXggaXRlbXMtY2VudGVyIGdhcC14LTInPlxuICAgICAgICAgICAgICAgICAgICB7aXNOZXcgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJOZXdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJ4c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInBpbGxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJibHVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICAgICAge2lzUHJvID8gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPEJhZGdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJQUk9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJ4c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInBpbGxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJpbnZlcnNlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8U3dpdGNoIHNpemU9J3NtJyAvPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBmbGV4LWNvbCB3LWZ1bGwnPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LXRleHQtcHJpbWFyeSBtLTAgbWItMic+e3RpdGxlfTwvcD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHctZnVsbCc+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT0ndGV4dC1zbSB0ZXh0LXRleHQtdGVydGlhcnkgbS0wJz57dmlld0RlbW99PC9wPlxuICAgICAgICAgICAgICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJyb3dcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ9e2luZm9UZXh0fVxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50PVwidG9wXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWdnZXJzPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2hvdmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZm9jdXMnXG4gICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cImxpZ2h0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMTAwcHhcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW5mb0ljb24gY2xhc3NOYW1lPSdoLTUgdy01JyAvPlxuICAgICAgICAgICAgICAgICAgICA8L1Rvb2x0aXA+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZlYXR1cmVXaWRnZXRJdGVtc1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQ29udGFpbmVyIiwiVGl0bGUiLCJCdXR0b24iLCJTd2l0Y2giLCJUb29sdGlwIiwiQmFkZ2UiLCJJbmZvSWNvbiIsIkZlYXR1cmVXaWRnZXRJdGVtcyIsIl9yZWYiLCJ3aWRnZXQiLCJpZCIsImljb24iLCJlbmFibGVkIiwidGl0bGUiLCJkZW1vTGluayIsInZpZXdEZW1vIiwiaW5mb1RleHQiLCJpc05ldyIsImlzUHJvIiwiY3JlYXRlRWxlbWVudCIsImFsaWduIiwiY29udGFpbmVyVHlwZSIsImRpcmVjdGlvbiIsImp1c3RpZnkiLCJnYXAiLCJjbGFzc05hbWUiLCJsYWJlbCIsInNpemUiLCJ0eXBlIiwidmFyaWFudCIsImFycm93IiwiY29udGVudCIsInBsYWNlbWVudCIsInRyaWdnZXJzIiwid2lkdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Components/Widgets/Features/FeatureWidgetItems.jsx\n");

/***/ }),

/***/ "./src/Components/Widgets/Features/FeatureWidgets.jsx":
/*!************************************************************!*\
  !*** ./src/Components/Widgets/Features/FeatureWidgets.jsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/plus.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/map.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/ellipsis.js\");\n/* harmony import */ var _FeatureWidgetItems__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FeatureWidgetItems */ \"./src/Components/Widgets/Features/FeatureWidgetItems.jsx\");\n\n\n\n\nvar widgetData = [{\n  id: '1',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Post Info',\n  demoLink: 'https://www.youtube.com/embed/ZeogOxqdKJI',\n  viewDemo: 'View Demo',\n  infoText: 'Display post information like author, date, and categories.',\n  isNew: true,\n  isPro: false\n}, {\n  id: '2',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Scroll To Top',\n  demoLink: 'https://www.youtube.com/embed/dQw4w9WgXcQ',\n  viewDemo: 'View Demo',\n  infoText: 'Showcase customer reviews and star ratings.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '3',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Tooltip',\n  demoLink: 'https://www.youtube.com/embed/LXb3EKWsInQ',\n  viewDemo: 'View Demo',\n  infoText: 'Create an image gallery with lightbox functionality.',\n  isNew: true,\n  isPro: true\n}, {\n  id: '4',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Heading',\n  demoLink: 'https://www.youtube.com/embed/JGwWNGJdvx8',\n  viewDemo: 'View Demo',\n  infoText: 'Embed and customize video players for your site.',\n  isNew: false,\n  isPro: false\n}, {\n  id: '5',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Duplicator',\n  demoLink: 'https://www.youtube.com/embed/tVj0ZTS4WF4',\n  viewDemo: 'View Demo',\n  infoText: 'Display notifications and alerts on your website.',\n  isNew: false,\n  isPro: false\n}, {\n  id: '6',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Reading Progress Bar',\n  demoLink: 'https://www.youtube.com/embed/6_b7RDuLwcI',\n  viewDemo: 'View Demo',\n  infoText: 'Create customizable contact forms with multiple fields.',\n  isNew: true,\n  isPro: true\n}, {\n  id: '7',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Image Gallery',\n  demoLink: 'https://www.youtube.com/embed/mWRsgZuwf_8',\n  viewDemo: 'View Demo',\n  infoText: 'Showcase images or content in a responsive slider.',\n  isNew: true,\n  isPro: true\n}, {\n  id: '8',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Breadcrumbs',\n  demoLink: 'https://www.youtube.com/embed/2vjPBrBU-TM',\n  viewDemo: 'View Demo',\n  infoText: 'Display product pricing with customizable tables.',\n  isNew: false,\n  isPro: false\n}, {\n  id: '9',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Image',\n  demoLink: 'https://www.youtube.com/embed/CTFtOOh47oo',\n  viewDemo: 'View Demo',\n  infoText: 'Add countdown timers for promotions or events.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '10',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Icon',\n  demoLink: 'https://www.youtube.com/embed/SR6iYWJxHqs',\n  viewDemo: 'View Demo',\n  infoText: 'Allow users to share your content on social media platforms.',\n  isNew: false,\n  isPro: false\n}, {\n  id: '11',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Content timeline',\n  demoLink: 'https://www.youtube.com/embed/tAGnKpE4NCI',\n  viewDemo: 'View Demo',\n  infoText: 'Display customer testimonials with customizable layouts.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '12',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Login Form',\n  demoLink: 'https://www.youtube.com/embed/7wtfhZwyrcc',\n  viewDemo: 'View Demo',\n  infoText: 'Create collapsible accordion panels for content.',\n  isNew: true,\n  isPro: false\n}, {\n  id: '13',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Countdown',\n  demoLink: 'https://www.youtube.com/embed/IcrbM1l_BoI',\n  viewDemo: 'View Demo',\n  infoText: 'Organize content in responsive tabbed sections.',\n  isNew: false,\n  isPro: false\n}, {\n  id: '14',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: true,\n  title: 'Registration Form',\n  demoLink: 'https://www.youtube.com/embed/j5-yKhDd64s',\n  viewDemo: 'View Demo',\n  infoText: 'Add customizable progress bars to your pages.',\n  isNew: false,\n  isPro: false\n}, {\n  id: '15',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Instagram Feed',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '16',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Loop Builder',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '17',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Dynamic Content',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '18',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Global Block Style',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '19',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Popup Builder',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '20',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal Pro',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '21',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Countdown Pro',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '22',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Buttons',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '23',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Info Box',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '24',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Call to Action',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '25',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Counter',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '26',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'FAQ',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '27',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Form',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '28',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Google Maps',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '29',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'How To',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '30',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Icon List',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '31',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Image Gallery',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '32',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Inline Notice',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '33',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Lottie Animation',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '34',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Marketing Button',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '35',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '36',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '37',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '38',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '39',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '39',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '40',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '41',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '42',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '43',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}, {\n  id: '44',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"h-5 w-5\"\n  }),\n  enabled: false,\n  title: 'Modal',\n  demoLink: 'https://www.youtube.com/embed/OPf0YbXqDm0',\n  viewDemo: 'View Demo',\n  infoText: 'Embed Google Maps with customizable markers and styles.',\n  isNew: false,\n  isPro: true\n}];\nvar FeatureWidgets = function FeatureWidgets() {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"rounded-lg bg-white w-full mb-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center justify-between\",\n    style: {\n      paddingTop: '12px',\n      paddingInline: '16px'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"m-0 text-sm font-semibold text-text-primary\"\n  }, \"Widgets / Features\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center gap-x-2 mr-7\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"m-0 text-xs font-semibold text-text-primary\"\n  }, \"View all\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex bg-black flex-col rounded-lg p-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    align: \"stretch\",\n    className: \"bg-background-gray p-1 gap-1.5\",\n    cols: 4,\n    containerType: \"grid\",\n    gap: \"\",\n    justify: \"start\"\n  }, widgetData.map(function (widget) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n      key: widget.id,\n      alignSelf: \"auto\",\n      className: \"text-wrap rounded-md shadow-container-item bg-background-primary p-4\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FeatureWidgetItems__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      widget: widget,\n      key: widget.id\n    }));\n  }))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FeatureWidgets);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Components/Widgets/Features/FeatureWidgets.jsx\n");

/***/ }),

/***/ "./src/Components/Widgets/UltimateWidgets.jsx":
/*!****************************************************!*\
  !*** ./src/Components/Widgets/UltimateWidgets.jsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/zap.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/check.js\");\n/* harmony import */ var lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lucide-react */ \"./node_modules/lucide-react/dist/esm/icons/plus.js\");\n\n\n\nvar UltimateWidgets = function UltimateWidgets() {\n  var featureData = [{\n    id: 1,\n    icon: \"\",\n    title: \"Modal Popup\"\n  }, {\n    id: 2,\n    icon: \"\",\n    title: \"Advanced Heading\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Post Layouts\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Info Box\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Pricing Cards\"\n  }, {\n    id: 1,\n    icon: \"\",\n    title: \"Form Stylers and more...\"\n  }];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container, {\n    className: \"bg-background-primary gap-1 p-4 border-[0.5px] border-subtle rounded-xl shadow-sm\",\n    containerType: \"flex\",\n    direction: \"column\",\n    justify: \"between\",\n    gap: \"xs\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"flex flex-col justify-center items-center\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"img\", {\n    src: \"\".concat(hfeSettingsData.column_url),\n    alt: \"Column Showcase\",\n    className: \"h-auto rounded w-1/2\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Container.Item, {\n    className: \"flex flex-col justify-between\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null),\n    iconPosition: \"left\",\n    size: \"xs\",\n    tag: \"h6\",\n    title: \"Unlock Ultimate Features\",\n    className: \"text-xs font-semibold text-brand-primary-600\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n    description: \"\",\n    icon: \"\",\n    iconPosition: \"left\",\n    tag: \"h6\",\n    title: \"Create Ultimate Designs with Addons Pro!\",\n    className: \"py-1 text-sm\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    className: \"text-md m-0 text-text-secondary\"\n  }, \"Get access to advanced widgets and features to create the website that stands out!\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"grid grid-cols-2 grid-flow-row gap-1 my-4\"\n  }, featureData.map(function (feature) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Title, {\n      key: feature.id,\n      description: \"\",\n      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        className: \"text-brand-primary-600 mr-1 h-3 w-3\"\n      }),\n      iconPosition: \"left\",\n      size: \"xxs\",\n      tag: \"h6\",\n      title: feature.title,\n      className: \"\"\n    });\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"flex items-center pb-3 gap-4\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null),\n    iconPosition: \"right\",\n    variant: \"secondary\",\n    className: \"\"\n  }, \"Upgrade Now\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Button, {\n    icon: \"\",\n    iconPosition: \"right\",\n    variant: \"ghost\"\n  }, \"Compare Free vs Pro\")))));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UltimateWidgets);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Components/Widgets/UltimateWidgets.jsx\n");

/***/ }),

/***/ "./src/Screens/Test.js":
/*!*****************************!*\
  !*** ./src/Screens/Test.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wordpress/element */ \"@wordpress/element\");\n/* harmony import */ var _wordpress_element__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wordpress_element__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bsf/force-ui */ \"./node_modules/@bsf/force-ui/dist/force-ui.js\");\n/* harmony import */ var _bsf_force_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar Test = function Test() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-4\"\n  }, /*#__PURE__*/React.createElement(_bsf_force_ui__WEBPACK_IMPORTED_MODULE_1__.Alert, {\n    title: 'Info alert',\n    content: 'This is a description',\n    variant: \"error\"\n  }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Test);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvU2NyZWVucy9UZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThDO0FBR3ZCO0FBRXZCLElBQU1FLElBQUksR0FBRyxTQUFQQSxJQUFJQSxDQUFBLEVBQVM7RUFFbEIsb0JBQ0NDLEtBQUEsQ0FBQUMsYUFBQTtJQUFLQyxTQUFTLEVBQUM7RUFBTSxnQkFDcEJGLEtBQUEsQ0FBQUMsYUFBQSxDQUFDSCxnREFBSztJQUNMSyxLQUFLLEVBQUUsWUFBYTtJQUNwQkMsT0FBTyxFQUFFLHVCQUF3QjtJQUNqQ0MsT0FBTyxFQUFDO0VBQU8sQ0FDZixDQUNHLENBQUM7QUFFUixDQUFDO0FBRUQsaUVBQWVOLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9TY3JlZW5zL1Rlc3QuanM/ODdiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ0B3b3JkcHJlc3MvZWxlbWVudCc7XG5pbXBvcnQge1xuXHRBbGVydCxcbn0gZnJvbSAnQGJzZi9mb3JjZS11aSc7XG5cbmNvbnN0IFRlc3QgPSAoKSA9PiB7XG5cblx0cmV0dXJuIChcblx0XHQ8ZGl2IGNsYXNzTmFtZT1cInBiLTRcIj5cblx0XHRcdDxBbGVydFxuXHRcdFx0XHR0aXRsZT17J0luZm8gYWxlcnQnfVxuXHRcdFx0XHRjb250ZW50PXsnVGhpcyBpcyBhIGRlc2NyaXB0aW9uJ31cblx0XHRcdFx0dmFyaWFudD1cImVycm9yXCJcblx0XHRcdC8+XG5cdFx0PC9kaXY+XG5cdCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUZXN0O1xuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwiQWxlcnQiLCJUZXN0IiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwidGl0bGUiLCJjb250ZW50IiwidmFyaWFudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Screens/Test.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\n/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wordpress/dom-ready */ \"@wordpress/dom-ready\");\n/* harmony import */ var _wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App */ \"./src/App.js\");\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n // Import from react-dom/client for React 18\n\n\n\n_wordpress_dom_ready__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n  var rootElement = document.getElementById('hfe-settings-app');\n  if (rootElement) {\n    var root = (0,react_dom_client__WEBPACK_IMPORTED_MODULE_0__.createRoot)(rootElement); // Use createRoot() for React 18\n    root.render(/*#__PURE__*/React.createElement(_App__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null));\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDLENBQUM7QUFDSDtBQUNsQztBQUNWO0FBRUFDLDJEQUFRLENBQUMsWUFBTTtFQUNiLElBQU1FLFdBQVcsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsa0JBQWtCLENBQUM7RUFDL0QsSUFBSUYsV0FBVyxFQUFFO0lBQ2YsSUFBTUcsSUFBSSxHQUFHTiw0REFBVSxDQUFDRyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ3RDRyxJQUFJLENBQUNDLE1BQU0sY0FBQ0MsS0FBQSxDQUFBQyxhQUFBLENBQUNQLDRDQUFHLE1BQUUsQ0FBQyxDQUFDO0VBQ3RCO0FBQ0YsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSAncmVhY3QtZG9tL2NsaWVudCc7IC8vIEltcG9ydCBmcm9tIHJlYWN0LWRvbS9jbGllbnQgZm9yIFJlYWN0IDE4XG5pbXBvcnQgZG9tUmVhZHkgZnJvbSAnQHdvcmRwcmVzcy9kb20tcmVhZHknO1xuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCc7XG5pbXBvcnQgJy4vc3R5bGVzLmNzcyc7XG5cbmRvbVJlYWR5KCgpID0+IHtcbiAgY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGZlLXNldHRpbmdzLWFwcCcpO1xuICBpZiAocm9vdEVsZW1lbnQpIHtcbiAgICBjb25zdCByb290ID0gY3JlYXRlUm9vdChyb290RWxlbWVudCk7IC8vIFVzZSBjcmVhdGVSb290KCkgZm9yIFJlYWN0IDE4XG4gICAgcm9vdC5yZW5kZXIoPEFwcCAvPik7XG4gIH0gXG59KTtcblxuIl0sIm5hbWVzIjpbImNyZWF0ZVJvb3QiLCJkb21SZWFkeSIsIkFwcCIsInJvb3RFbGVtZW50IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInJvb3QiLCJyZW5kZXIiLCJSZWFjdCIsImNyZWF0ZUVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Icon)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nconst Icon = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\n      \"svg\",\n      {\n        ref,\n        ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\n\n//# sourceMappingURL=Icon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL0ljb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWtEO0FBQ0s7QUFDRjs7QUFFckQsYUFBYSxpREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZEQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrRUFBWTtBQUMvQjtBQUNBLE9BQU87QUFDUDtBQUNBLDBDQUEwQyxvREFBYTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9JY29uLmpzP2NlZDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDQ2LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCB7IGZvcndhcmRSZWYsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZGVmYXVsdEF0dHJpYnV0ZXMgZnJvbSAnLi9kZWZhdWx0QXR0cmlidXRlcy5qcyc7XG5pbXBvcnQgeyBtZXJnZUNsYXNzZXMgfSBmcm9tICcuL3NoYXJlZC9zcmMvdXRpbHMuanMnO1xuXG5jb25zdCBJY29uID0gZm9yd2FyZFJlZihcbiAgKHtcbiAgICBjb2xvciA9IFwiY3VycmVudENvbG9yXCIsXG4gICAgc2l6ZSA9IDI0LFxuICAgIHN0cm9rZVdpZHRoID0gMixcbiAgICBhYnNvbHV0ZVN0cm9rZVdpZHRoLFxuICAgIGNsYXNzTmFtZSA9IFwiXCIsXG4gICAgY2hpbGRyZW4sXG4gICAgaWNvbk5vZGUsXG4gICAgLi4ucmVzdFxuICB9LCByZWYpID0+IHtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7XG4gICAgICAgIHJlZixcbiAgICAgICAgLi4uZGVmYXVsdEF0dHJpYnV0ZXMsXG4gICAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgICBoZWlnaHQ6IHNpemUsXG4gICAgICAgIHN0cm9rZTogY29sb3IsXG4gICAgICAgIHN0cm9rZVdpZHRoOiBhYnNvbHV0ZVN0cm9rZVdpZHRoID8gTnVtYmVyKHN0cm9rZVdpZHRoKSAqIDI0IC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXG4gICAgICAgIGNsYXNzTmFtZTogbWVyZ2VDbGFzc2VzKFwibHVjaWRlXCIsIGNsYXNzTmFtZSksXG4gICAgICAgIC4uLnJlc3RcbiAgICAgIH0sXG4gICAgICBbXG4gICAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcbiAgICAgICAgLi4uQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICAgIF1cbiAgICApO1xuICB9XG4pO1xuXG5leHBvcnQgeyBJY29uIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUljb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/Icon.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createLucideIcon)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n    ({ className, ...props }, ref) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      ref,\n      iconNode,\n      className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(`lucide-${(0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\n\n//# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2NyZWF0ZUx1Y2lkZUljb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWtEO0FBQ2dCO0FBQ3JDOztBQUU3QjtBQUNBLG9CQUFvQixpREFBVTtBQUM5QixPQUFPLHFCQUFxQixVQUFVLG9EQUFhLENBQUMsZ0RBQUk7QUFDeEQ7QUFDQTtBQUNBLGlCQUFpQixrRUFBWSxXQUFXLGlFQUFXLFdBQVc7QUFDOUQ7QUFDQSxLQUFLO0FBQ0w7QUFDQSw2QkFBNkIsU0FBUztBQUN0QztBQUNBOztBQUV1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9jcmVhdGVMdWNpZGVJY29uLmpzP2U3NjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDQ2LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCB7IGZvcndhcmRSZWYsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBtZXJnZUNsYXNzZXMsIHRvS2ViYWJDYXNlIH0gZnJvbSAnLi9zaGFyZWQvc3JjL3V0aWxzLmpzJztcbmltcG9ydCBJY29uIGZyb20gJy4vSWNvbi5qcyc7XG5cbmNvbnN0IGNyZWF0ZUx1Y2lkZUljb24gPSAoaWNvbk5hbWUsIGljb25Ob2RlKSA9PiB7XG4gIGNvbnN0IENvbXBvbmVudCA9IGZvcndhcmRSZWYoXG4gICAgKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IGNyZWF0ZUVsZW1lbnQoSWNvbiwge1xuICAgICAgcmVmLFxuICAgICAgaWNvbk5vZGUsXG4gICAgICBjbGFzc05hbWU6IG1lcmdlQ2xhc3NlcyhgbHVjaWRlLSR7dG9LZWJhYkNhc2UoaWNvbk5hbWUpfWAsIGNsYXNzTmFtZSksXG4gICAgICAuLi5wcm9wc1xuICAgIH0pXG4gICk7XG4gIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGAke2ljb25OYW1lfWA7XG4gIHJldHVybiBDb21wb25lbnQ7XG59O1xuXG5leHBvcnQgeyBjcmVhdGVMdWNpZGVJY29uIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUx1Y2lkZUljb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/createLucideIcon.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ defaultAttributes)\n/* harmony export */ });\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\n\n//# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2RlZmF1bHRBdHRyaWJ1dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanM/MmM1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIGRlZmF1bHRBdHRyaWJ1dGVzID0ge1xuICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICB3aWR0aDogMjQsXG4gIGhlaWdodDogMjQsXG4gIHZpZXdCb3g6IFwiMCAwIDI0IDI0XCIsXG4gIGZpbGw6IFwibm9uZVwiLFxuICBzdHJva2U6IFwiY3VycmVudENvbG9yXCIsXG4gIHN0cm9rZVdpZHRoOiAyLFxuICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gIHN0cm9rZUxpbmVqb2luOiBcInJvdW5kXCJcbn07XG5cbmV4cG9ydCB7IGRlZmF1bHRBdHRyaWJ1dGVzIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRBdHRyaWJ1dGVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/defaultAttributes.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/arrow-up-right.js":
/*!********************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/arrow-up-right.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ArrowUpRight)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst ArrowUpRight = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"ArrowUpRight\", [\n  [\"path\", { d: \"M7 7h10v10\", key: \"1tivn9\" }],\n  [\"path\", { d: \"M7 17 17 7\", key: \"1vkiza\" }]\n]);\n\n\n//# sourceMappingURL=arrow-up-right.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2Fycm93LXVwLXJpZ2h0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQscUJBQXFCLGdFQUFnQjtBQUNyQyxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLGdDQUFnQztBQUM3Qzs7QUFFbUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYXJyb3ctdXAtcmlnaHQuanM/ZDU0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IEFycm93VXBSaWdodCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJBcnJvd1VwUmlnaHRcIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNNyA3aDEwdjEwXCIsIGtleTogXCIxdGl2bjlcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTcgMTcgMTcgN1wiLCBrZXk6IFwiMXZraXphXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBBcnJvd1VwUmlnaHQgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyb3ctdXAtcmlnaHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/arrow-up-right.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/check.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/check.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Check)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Check = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Check\", [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]]);\n\n\n//# sourceMappingURL=check.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NoZWNrLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQsY0FBYyxnRUFBZ0Isc0JBQXNCLHFDQUFxQzs7QUFFN0Q7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2hlY2suanM/MTI2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IENoZWNrID0gY3JlYXRlTHVjaWRlSWNvbihcIkNoZWNrXCIsIFtbXCJwYXRoXCIsIHsgZDogXCJNMjAgNiA5IDE3bC01LTVcIiwga2V5OiBcIjFnbWYyY1wiIH1dXSk7XG5cbmV4cG9ydCB7IENoZWNrIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoZWNrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/check.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/circle-help.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/circle-help.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CircleHelp)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst CircleHelp = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"CircleHelp\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\", key: \"1u773s\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n]);\n\n\n//# sourceMappingURL=circle-help.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NpcmNsZS1oZWxwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQsbUJBQW1CLGdFQUFnQjtBQUNuQyxlQUFlLDRDQUE0QztBQUMzRCxhQUFhLDBEQUEwRDtBQUN2RSxhQUFhLGdDQUFnQztBQUM3Qzs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvY2lyY2xlLWhlbHAuanM/YjEyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IENpcmNsZUhlbHAgPSBjcmVhdGVMdWNpZGVJY29uKFwiQ2lyY2xlSGVscFwiLCBbXG4gIFtcImNpcmNsZVwiLCB7IGN4OiBcIjEyXCIsIGN5OiBcIjEyXCIsIHI6IFwiMTBcIiwga2V5OiBcIjFtZ2xheVwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNOS4wOSA5YTMgMyAwIDAgMSA1LjgzIDFjMCAyLTMgMy0zIDNcIiwga2V5OiBcIjF1Nzczc1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTIgMTdoLjAxXCIsIGtleTogXCJwMzJwMDVcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IENpcmNsZUhlbHAgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2lyY2xlLWhlbHAuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/circle-help.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/ellipsis.js":
/*!**************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/ellipsis.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Ellipsis)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Ellipsis = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Ellipsis\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"19\", cy: \"12\", r: \"1\", key: \"1wjl8i\" }],\n  [\"circle\", { cx: \"5\", cy: \"12\", r: \"1\", key: \"1pcz8c\" }]\n]);\n\n\n//# sourceMappingURL=ellipsis.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2VsbGlwc2lzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQsaUJBQWlCLGdFQUFnQjtBQUNqQyxlQUFlLDJDQUEyQztBQUMxRCxlQUFlLDJDQUEyQztBQUMxRCxlQUFlLDBDQUEwQztBQUN6RDs7QUFFK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvZWxsaXBzaXMuanM/Yzc4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IEVsbGlwc2lzID0gY3JlYXRlTHVjaWRlSWNvbihcIkVsbGlwc2lzXCIsIFtcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiMTJcIiwgY3k6IFwiMTJcIiwgcjogXCIxXCIsIGtleTogXCI0MWhpbGZcIiB9XSxcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiMTlcIiwgY3k6IFwiMTJcIiwgcjogXCIxXCIsIGtleTogXCIxd2psOGlcIiB9XSxcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiNVwiLCBjeTogXCIxMlwiLCByOiBcIjFcIiwga2V5OiBcIjFwY3o4Y1wiIH1dXG5dKTtcblxuZXhwb3J0IHsgRWxsaXBzaXMgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZWxsaXBzaXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/ellipsis.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/headphones.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/headphones.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Headphones)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Headphones = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Headphones\", [\n  [\n    \"path\",\n    {\n      d: \"M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3\",\n      key: \"1xhozi\"\n    }\n  ]\n]);\n\n\n//# sourceMappingURL=headphones.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2hlYWRwaG9uZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RCxtQkFBbUIsZ0VBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2hlYWRwaG9uZXMuanM/ZGVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IEhlYWRwaG9uZXMgPSBjcmVhdGVMdWNpZGVJY29uKFwiSGVhZHBob25lc1wiLCBbXG4gIFtcbiAgICBcInBhdGhcIixcbiAgICB7XG4gICAgICBkOiBcIk0zIDE0aDNhMiAyIDAgMCAxIDIgMnYzYTIgMiAwIDAgMS0yIDJINWEyIDIgMCAwIDEtMi0ydi03YTkgOSAwIDAgMSAxOCAwdjdhMiAyIDAgMCAxLTIgMmgtMWEyIDIgMCAwIDEtMi0ydi0zYTIgMiAwIDAgMSAyLTJoM1wiLFxuICAgICAga2V5OiBcIjF4aG96aVwiXG4gICAgfVxuICBdXG5dKTtcblxuZXhwb3J0IHsgSGVhZHBob25lcyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFkcGhvbmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/headphones.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/info.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/info.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Info)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Info = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Info\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n]);\n\n\n//# sourceMappingURL=info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2luZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RCxhQUFhLGdFQUFnQjtBQUM3QixlQUFlLDRDQUE0QztBQUMzRCxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLCtCQUErQjtBQUM1Qzs7QUFFMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvaW5mby5qcz8xZWZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ0Ni4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgSW5mbyA9IGNyZWF0ZUx1Y2lkZUljb24oXCJJbmZvXCIsIFtcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiMTJcIiwgY3k6IFwiMTJcIiwgcjogXCIxMFwiLCBrZXk6IFwiMW1nbGF5XCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xMiAxNnYtNFwiLCBrZXk6IFwiMWR0aWZ1XCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xMiA4aC4wMVwiLCBrZXk6IFwiZTlib2kzXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBJbmZvIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZm8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/info.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/map.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/map.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Map)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Map = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Map\", [\n  [\n    \"path\",\n    {\n      d: \"M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z\",\n      key: \"169xi5\"\n    }\n  ],\n  [\"path\", { d: \"M15 5.764v15\", key: \"1pn4in\" }],\n  [\"path\", { d: \"M9 3.236v15\", key: \"1uimfh\" }]\n]);\n\n\n//# sourceMappingURL=map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21hcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXRELFlBQVksZ0VBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0MsYUFBYSxpQ0FBaUM7QUFDOUM7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21hcC5qcz84MzNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ0Ni4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgTWFwID0gY3JlYXRlTHVjaWRlSWNvbihcIk1hcFwiLCBbXG4gIFtcbiAgICBcInBhdGhcIixcbiAgICB7XG4gICAgICBkOiBcIk0xNC4xMDYgNS41NTNhMiAyIDAgMCAwIDEuNzg4IDBsMy42NTktMS44M0ExIDEgMCAwIDEgMjEgNC42MTl2MTIuNzY0YTEgMSAwIDAgMS0uNTUzLjg5NGwtNC41NTMgMi4yNzdhMiAyIDAgMCAxLTEuNzg4IDBsLTQuMjEyLTIuMTA2YTIgMiAwIDAgMC0xLjc4OCAwbC0zLjY1OSAxLjgzQTEgMSAwIDAgMSAzIDE5LjM4MVY2LjYxOGExIDEgMCAwIDEgLjU1My0uODk0bDQuNTUzLTIuMjc3YTIgMiAwIDAgMSAxLjc4OCAwelwiLFxuICAgICAga2V5OiBcIjE2OXhpNVwiXG4gICAgfVxuICBdLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTUgNS43NjR2MTVcIiwga2V5OiBcIjFwbjRpblwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNOSAzLjIzNnYxNVwiLCBrZXk6IFwiMXVpbWZoXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBNYXAgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFwLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/map.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/megaphone.js":
/*!***************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/megaphone.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Megaphone)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Megaphone = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Megaphone\", [\n  [\"path\", { d: \"m3 11 18-5v12L3 14v-3z\", key: \"n962bs\" }],\n  [\"path\", { d: \"M11.6 16.8a3 3 0 1 1-5.8-1.6\", key: \"1yl0tm\" }]\n]);\n\n\n//# sourceMappingURL=megaphone.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21lZ2FwaG9uZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXRELGtCQUFrQixnRUFBZ0I7QUFDbEMsYUFBYSw0Q0FBNEM7QUFDekQsYUFBYSxrREFBa0Q7QUFDL0Q7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21lZ2FwaG9uZS5qcz9jNWEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ0Ni4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgTWVnYXBob25lID0gY3JlYXRlTHVjaWRlSWNvbihcIk1lZ2FwaG9uZVwiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIm0zIDExIDE4LTV2MTJMMyAxNHYtM3pcIiwga2V5OiBcIm45NjJic1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTEuNiAxNi44YTMgMyAwIDEgMS01LjgtMS42XCIsIGtleTogXCIxeWwwdG1cIiB9XVxuXSk7XG5cbmV4cG9ydCB7IE1lZ2FwaG9uZSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZWdhcGhvbmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/megaphone.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/message-circle.js":
/*!********************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/message-circle.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MessageCircle)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst MessageCircle = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"MessageCircle\", [\n  [\"path\", { d: \"M7.9 20A9 9 0 1 0 4 16.1L2 22Z\", key: \"vv11sd\" }]\n]);\n\n\n//# sourceMappingURL=message-circle.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21lc3NhZ2UtY2lyY2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQsc0JBQXNCLGdFQUFnQjtBQUN0QyxhQUFhLG9EQUFvRDtBQUNqRTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvbWVzc2FnZS1jaXJjbGUuanM/MjMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IE1lc3NhZ2VDaXJjbGUgPSBjcmVhdGVMdWNpZGVJY29uKFwiTWVzc2FnZUNpcmNsZVwiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk03LjkgMjBBOSA5IDAgMSAwIDQgMTYuMUwyIDIyWlwiLCBrZXk6IFwidnYxMXNkXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBNZXNzYWdlQ2lyY2xlIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2UtY2lyY2xlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/message-circle.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/plus.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/plus.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Plus)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Plus = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Plus\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }]\n]);\n\n\n//# sourceMappingURL=plus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3BsdXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RCxhQUFhLGdFQUFnQjtBQUM3QixhQUFhLDhCQUE4QjtBQUMzQyxhQUFhLDhCQUE4QjtBQUMzQzs7QUFFMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcGx1cy5qcz9jOGMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ0Ni4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgUGx1cyA9IGNyZWF0ZUx1Y2lkZUljb24oXCJQbHVzXCIsIFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTUgMTJoMTRcIiwga2V5OiBcIjFheXMwaFwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTIgNXYxNFwiLCBrZXk6IFwiczY5OWxlXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBQbHVzIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsdXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/plus.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/share.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/share.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Share)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Share = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Share\", [\n  [\"path\", { d: \"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\", key: \"1b2hhj\" }],\n  [\"polyline\", { points: \"16 6 12 2 8 6\", key: \"m901s6\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"2\", y2: \"15\", key: \"1p0rca\" }]\n]);\n\n\n//# sourceMappingURL=share.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3NoYXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQsY0FBYyxnRUFBZ0I7QUFDOUIsYUFBYSwrREFBK0Q7QUFDNUUsaUJBQWlCLHdDQUF3QztBQUN6RCxhQUFhLHNEQUFzRDtBQUNuRTs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvc2hhcmUuanM/ZGU0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC40NDYuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFNoYXJlID0gY3JlYXRlTHVjaWRlSWNvbihcIlNoYXJlXCIsIFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTQgMTJ2OGEyIDIgMCAwIDAgMiAyaDEyYTIgMiAwIDAgMCAyLTJ2LThcIiwga2V5OiBcIjFiMmhoalwiIH1dLFxuICBbXCJwb2x5bGluZVwiLCB7IHBvaW50czogXCIxNiA2IDEyIDIgOCA2XCIsIGtleTogXCJtOTAxczZcIiB9XSxcbiAgW1wibGluZVwiLCB7IHgxOiBcIjEyXCIsIHgyOiBcIjEyXCIsIHkxOiBcIjJcIiwgeTI6IFwiMTVcIiwga2V5OiBcIjFwMHJjYVwiIH1dXG5dKTtcblxuZXhwb3J0IHsgU2hhcmUgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhcmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/share.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/star.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/star.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Star)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Star = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Star\", [\n  [\n    \"polygon\",\n    {\n      points: \"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\",\n      key: \"8f66p6\"\n    }\n  ]\n]);\n\n\n//# sourceMappingURL=star.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3N0YXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RCxhQUFhLGdFQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9zdGFyLmpzPzY5N2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNDQ2LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBTdGFyID0gY3JlYXRlTHVjaWRlSWNvbihcIlN0YXJcIiwgW1xuICBbXG4gICAgXCJwb2x5Z29uXCIsXG4gICAge1xuICAgICAgcG9pbnRzOiBcIjEyIDIgMTUuMDkgOC4yNiAyMiA5LjI3IDE3IDE0LjE0IDE4LjE4IDIxLjAyIDEyIDE3Ljc3IDUuODIgMjEuMDIgNyAxNC4xNCAyIDkuMjcgOC45MSA4LjI2IDEyIDJcIixcbiAgICAgIGtleTogXCI4ZjY2cDZcIlxuICAgIH1cbiAgXVxuXSk7XG5cbmV4cG9ydCB7IFN0YXIgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Rhci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/star.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/zap.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/zap.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Zap)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst Zap = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Zap\", [\n  [\n    \"path\",\n    {\n      d: \"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z\",\n      key: \"1xq2db\"\n    }\n  ]\n]);\n\n\n//# sourceMappingURL=zap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3phcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXRELFlBQVksZ0VBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVhZGVyLWZvb3Rlci1lbGVtZW50b3IvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3phcC5qcz8wN2ZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ0Ni4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgWmFwID0gY3JlYXRlTHVjaWRlSWNvbihcIlphcFwiLCBbXG4gIFtcbiAgICBcInBhdGhcIixcbiAgICB7XG4gICAgICBkOiBcIk00IDE0YTEgMSAwIDAgMS0uNzgtMS42M2w5LjktMTAuMmEuNS41IDAgMCAxIC44Ni40NmwtMS45MiA2LjAyQTEgMSAwIDAgMCAxMyAxMGg3YTEgMSAwIDAgMSAuNzggMS42M2wtOS45IDEwLjJhLjUuNSAwIDAgMS0uODYtLjQ2bDEuOTItNi4wMkExIDEgMCAwIDAgMTEgMTR6XCIsXG4gICAgICBrZXk6IFwiMXhxMmRiXCJcbiAgICB9XG4gIF1cbl0pO1xuXG5leHBvcnQgeyBaYXAgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9emFwLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/zap.js\n");

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeClasses: () => (/* binding */ mergeClasses),\n/* harmony export */   toKebabCase: () => (/* binding */ toKebabCase)\n/* harmony export */ });\n/**\n * @license lucide-react v0.446.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && array.indexOf(className) === index;\n}).join(\" \");\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL3NoYXJlZC9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFb0M7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vc2hhcmVkL3NyYy91dGlscy5qcz9iYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjQ0Ni4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCB0b0tlYmFiQ2FzZSA9IChzdHJpbmcpID0+IHN0cmluZy5yZXBsYWNlKC8oW2EtejAtOV0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCk7XG5jb25zdCBtZXJnZUNsYXNzZXMgPSAoLi4uY2xhc3NlcykgPT4gY2xhc3Nlcy5maWx0ZXIoKGNsYXNzTmFtZSwgaW5kZXgsIGFycmF5KSA9PiB7XG4gIHJldHVybiBCb29sZWFuKGNsYXNzTmFtZSkgJiYgYXJyYXkuaW5kZXhPZihjbGFzc05hbWUpID09PSBpbmRleDtcbn0pLmpvaW4oXCIgXCIpO1xuXG5leHBvcnQgeyBtZXJnZUNsYXNzZXMsIHRvS2ViYWJDYXNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/shared/src/utils.js\n");

/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL3NyYy9zdHlsZXMuY3NzPzUyMzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles.css\n");

/***/ }),

/***/ "./node_modules/react-dom/client.js":
/*!******************************************!*\
  !*** ./node_modules/react-dom/client.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar m = __webpack_require__(/*! react-dom */ \"react-dom\");\nif (false) {} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixRQUFRLG1CQUFPLENBQUMsNEJBQVc7QUFDM0IsSUFBSSxLQUFxQyxFQUFFLEVBRzFDLENBQUM7QUFDRjtBQUNBLEVBQUUsa0JBQWtCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxFQUFFLG1CQUFtQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2xpZW50LmpzPzExYjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbSA9IHJlcXVpcmUoJ3JlYWN0LWRvbScpO1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgZXhwb3J0cy5jcmVhdGVSb290ID0gbS5jcmVhdGVSb290O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gbS5oeWRyYXRlUm9vdDtcbn0gZWxzZSB7XG4gIHZhciBpID0gbS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtcbiAgZXhwb3J0cy5jcmVhdGVSb290ID0gZnVuY3Rpb24oYywgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uY3JlYXRlUm9vdChjLCBvKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSBmYWxzZTtcbiAgICB9XG4gIH07XG4gIGV4cG9ydHMuaHlkcmF0ZVJvb3QgPSBmdW5jdGlvbihjLCBoLCBvKSB7XG4gICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSB0cnVlO1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gbS5oeWRyYXRlUm9vdChjLCBoLCBvKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaS51c2luZ0NsaWVudEVudHJ5UG9pbnQgPSBmYWxzZTtcbiAgICB9XG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-dom/client.js\n");

/***/ }),

/***/ "./node_modules/react-router-dom/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-router-dom/dist/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortedDeferredError: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.AbortedDeferredError),\n/* harmony export */   Await: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.Await),\n/* harmony export */   BrowserRouter: () => (/* binding */ BrowserRouter),\n/* harmony export */   Form: () => (/* binding */ Form),\n/* harmony export */   HashRouter: () => (/* binding */ HashRouter),\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   MemoryRouter: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.MemoryRouter),\n/* harmony export */   NavLink: () => (/* binding */ NavLink),\n/* harmony export */   Navigate: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.Navigate),\n/* harmony export */   NavigationType: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.Action),\n/* harmony export */   Outlet: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.Outlet),\n/* harmony export */   Route: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.Route),\n/* harmony export */   Router: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.Router),\n/* harmony export */   RouterProvider: () => (/* binding */ RouterProvider),\n/* harmony export */   Routes: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.Routes),\n/* harmony export */   ScrollRestoration: () => (/* binding */ ScrollRestoration),\n/* harmony export */   UNSAFE_DataRouterContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterContext),\n/* harmony export */   UNSAFE_DataRouterStateContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterStateContext),\n/* harmony export */   UNSAFE_ErrorResponseImpl: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_ErrorResponseImpl),\n/* harmony export */   UNSAFE_FetchersContext: () => (/* binding */ FetchersContext),\n/* harmony export */   UNSAFE_LocationContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_LocationContext),\n/* harmony export */   UNSAFE_NavigationContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_NavigationContext),\n/* harmony export */   UNSAFE_RouteContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_RouteContext),\n/* harmony export */   UNSAFE_ViewTransitionContext: () => (/* binding */ ViewTransitionContext),\n/* harmony export */   UNSAFE_useRouteId: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_useRouteId),\n/* harmony export */   UNSAFE_useScrollRestoration: () => (/* binding */ useScrollRestoration),\n/* harmony export */   createBrowserRouter: () => (/* binding */ createBrowserRouter),\n/* harmony export */   createHashRouter: () => (/* binding */ createHashRouter),\n/* harmony export */   createMemoryRouter: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.createMemoryRouter),\n/* harmony export */   createPath: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.createPath),\n/* harmony export */   createRoutesFromChildren: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.createRoutesFromChildren),\n/* harmony export */   createRoutesFromElements: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.createRoutesFromElements),\n/* harmony export */   createSearchParams: () => (/* binding */ createSearchParams),\n/* harmony export */   defer: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.defer),\n/* harmony export */   generatePath: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.generatePath),\n/* harmony export */   isRouteErrorResponse: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.isRouteErrorResponse),\n/* harmony export */   json: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.json),\n/* harmony export */   matchPath: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.matchPath),\n/* harmony export */   matchRoutes: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.matchRoutes),\n/* harmony export */   parsePath: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.parsePath),\n/* harmony export */   redirect: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.redirect),\n/* harmony export */   redirectDocument: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.redirectDocument),\n/* harmony export */   renderMatches: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.renderMatches),\n/* harmony export */   replace: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.replace),\n/* harmony export */   resolvePath: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_2__.resolvePath),\n/* harmony export */   unstable_HistoryRouter: () => (/* binding */ HistoryRouter),\n/* harmony export */   unstable_usePrompt: () => (/* binding */ usePrompt),\n/* harmony export */   useActionData: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useActionData),\n/* harmony export */   useAsyncError: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useAsyncError),\n/* harmony export */   useAsyncValue: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useAsyncValue),\n/* harmony export */   useBeforeUnload: () => (/* binding */ useBeforeUnload),\n/* harmony export */   useBlocker: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useBlocker),\n/* harmony export */   useFetcher: () => (/* binding */ useFetcher),\n/* harmony export */   useFetchers: () => (/* binding */ useFetchers),\n/* harmony export */   useFormAction: () => (/* binding */ useFormAction),\n/* harmony export */   useHref: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useHref),\n/* harmony export */   useInRouterContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useInRouterContext),\n/* harmony export */   useLinkClickHandler: () => (/* binding */ useLinkClickHandler),\n/* harmony export */   useLoaderData: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useLoaderData),\n/* harmony export */   useLocation: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useLocation),\n/* harmony export */   useMatch: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useMatch),\n/* harmony export */   useMatches: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useMatches),\n/* harmony export */   useNavigate: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useNavigate),\n/* harmony export */   useNavigation: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useNavigation),\n/* harmony export */   useNavigationType: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useNavigationType),\n/* harmony export */   useOutlet: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useOutlet),\n/* harmony export */   useOutletContext: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useOutletContext),\n/* harmony export */   useParams: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useParams),\n/* harmony export */   useResolvedPath: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useResolvedPath),\n/* harmony export */   useRevalidator: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useRevalidator),\n/* harmony export */   useRouteError: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useRouteError),\n/* harmony export */   useRouteLoaderData: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useRouteLoaderData),\n/* harmony export */   useRoutes: () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_3__.useRoutes),\n/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),\n/* harmony export */   useSubmit: () => (/* binding */ useSubmit),\n/* harmony export */   useViewTransitionState: () => (/* binding */ useViewTransitionState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router */ \"./node_modules/react-router/dist/index.js\");\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @remix-run/router */ \"./node_modules/@remix-run/router/dist/router.js\");\n/**\n * React Router DOM v6.27.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n     true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_warning)(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createRouter)({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createBrowserHistory)({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createRouter)({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createHashHistory)({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  isTransitioning: false\n});\nif (true) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(new Map());\nif (true) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = react__WEBPACK_IMPORTED_MODULE_0__[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = react_dom__WEBPACK_IMPORTED_MODULE_1__[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = react__WEBPACK_IMPORTED_MODULE_0__[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(router.state);\n  let [pendingState, setPendingState] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  let [vtContext, setVtContext] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  let [transition, setTransition] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  let [interruption, setInterruption] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n  let fetcherData = react__WEBPACK_IMPORTED_MODULE_0__.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n     true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_warning)(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return (0,react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_useRoutesImpl)(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createBrowserHistory)({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createHashHistory)({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (true) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n         true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_warning)(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useHref)(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (true) {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useResolvedPath)(to, {\n    relative: rest.relative\n  });\n  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useLocation)();\n  let routerState = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (true) {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (true) {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (true) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterContext);\n  !ctx ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName)) : 0 : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_DataRouterStateContext);\n  !state ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName)) : 0 : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();\n  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useLocation)();\n  let path = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useResolvedPath)(to, {\n    relative\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createPath)(location) === (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createPath)(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n   true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_warning)(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : 0;\n  let defaultSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useLocation)();\n  let searchParams = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useNavigate)();\n  let setSearchParams = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_NavigationContext);\n  let currentRouteId = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_useRouteId)();\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_NavigationContext);\n  let routeContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_RouteContext);\n  !routeContext ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, \"useFormAction must be used inside a RouteContext\") : 0 : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useResolvedPath)(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useLocation)();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : (0,react_router__WEBPACK_IMPORTED_MODULE_2__.joinPaths)([basename, path.pathname]);\n  }\n  return (0,react_router__WEBPACK_IMPORTED_MODULE_2__.createPath)(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FetchersContext);\n  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, \"useFetcher must be used inside a FetchersContext\") : 0 : void 0;\n  !route ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, \"useFetcher must be used inside a RouteContext\") : 0 : void 0;\n  !(routeId != null) ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : 0 : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = react__WEBPACK_IMPORTED_MODULE_0__.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((href, opts) => {\n    !routeId ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, \"No routeId available for fetcher.load()\") : 0 : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, ref) => {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (true) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || react_router__WEBPACK_IMPORTED_MODULE_2__.IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(react_router__WEBPACK_IMPORTED_MODULE_3__.UNSAFE_NavigationContext);\n  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useLocation)();\n  let matches = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useMatches)();\n  let navigation = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useNavigation)();\n  // Trigger manual scroll restoration while we're active\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n       true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_warning)(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useBlocker)(when);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ViewTransitionContext);\n  !(vtContext != null) ?  true ? (0,react_router__WEBPACK_IMPORTED_MODULE_2__.UNSAFE_invariant)(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : 0 : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = (0,react_router__WEBPACK_IMPORTED_MODULE_3__.useResolvedPath)(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = (0,react_router__WEBPACK_IMPORTED_MODULE_2__.stripBasename)(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (0,react_router__WEBPACK_IMPORTED_MODULE_2__.matchPath)(path.pathname, nextPath) != null || (0,react_router__WEBPACK_IMPORTED_MODULE_2__.matchPath)(path.pathname, currentPath) != null;\n}\n//#endregion\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-router-dom/dist/index.js\n");

/***/ }),

/***/ "./node_modules/react-router/dist/index.js":
/*!*************************************************!*\
  !*** ./node_modules/react-router/dist/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortedDeferredError: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.AbortedDeferredError),\n/* harmony export */   Await: () => (/* binding */ Await),\n/* harmony export */   MemoryRouter: () => (/* binding */ MemoryRouter),\n/* harmony export */   Navigate: () => (/* binding */ Navigate),\n/* harmony export */   NavigationType: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.Action),\n/* harmony export */   Outlet: () => (/* binding */ Outlet),\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   RouterProvider: () => (/* binding */ RouterProvider),\n/* harmony export */   Routes: () => (/* binding */ Routes),\n/* harmony export */   UNSAFE_DataRouterContext: () => (/* binding */ DataRouterContext),\n/* harmony export */   UNSAFE_DataRouterStateContext: () => (/* binding */ DataRouterStateContext),\n/* harmony export */   UNSAFE_LocationContext: () => (/* binding */ LocationContext),\n/* harmony export */   UNSAFE_NavigationContext: () => (/* binding */ NavigationContext),\n/* harmony export */   UNSAFE_RouteContext: () => (/* binding */ RouteContext),\n/* harmony export */   UNSAFE_mapRouteProperties: () => (/* binding */ mapRouteProperties),\n/* harmony export */   UNSAFE_useRouteId: () => (/* binding */ useRouteId),\n/* harmony export */   UNSAFE_useRoutesImpl: () => (/* binding */ useRoutesImpl),\n/* harmony export */   createMemoryRouter: () => (/* binding */ createMemoryRouter),\n/* harmony export */   createPath: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.createPath),\n/* harmony export */   createRoutesFromChildren: () => (/* binding */ createRoutesFromChildren),\n/* harmony export */   createRoutesFromElements: () => (/* binding */ createRoutesFromChildren),\n/* harmony export */   defer: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.defer),\n/* harmony export */   generatePath: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.generatePath),\n/* harmony export */   isRouteErrorResponse: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.isRouteErrorResponse),\n/* harmony export */   json: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.json),\n/* harmony export */   matchPath: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.matchPath),\n/* harmony export */   matchRoutes: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.matchRoutes),\n/* harmony export */   parsePath: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.parsePath),\n/* harmony export */   redirect: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.redirect),\n/* harmony export */   redirectDocument: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.redirectDocument),\n/* harmony export */   renderMatches: () => (/* binding */ renderMatches),\n/* harmony export */   replace: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.replace),\n/* harmony export */   resolvePath: () => (/* reexport safe */ _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.resolvePath),\n/* harmony export */   useActionData: () => (/* binding */ useActionData),\n/* harmony export */   useAsyncError: () => (/* binding */ useAsyncError),\n/* harmony export */   useAsyncValue: () => (/* binding */ useAsyncValue),\n/* harmony export */   useBlocker: () => (/* binding */ useBlocker),\n/* harmony export */   useHref: () => (/* binding */ useHref),\n/* harmony export */   useInRouterContext: () => (/* binding */ useInRouterContext),\n/* harmony export */   useLoaderData: () => (/* binding */ useLoaderData),\n/* harmony export */   useLocation: () => (/* binding */ useLocation),\n/* harmony export */   useMatch: () => (/* binding */ useMatch),\n/* harmony export */   useMatches: () => (/* binding */ useMatches),\n/* harmony export */   useNavigate: () => (/* binding */ useNavigate),\n/* harmony export */   useNavigation: () => (/* binding */ useNavigation),\n/* harmony export */   useNavigationType: () => (/* binding */ useNavigationType),\n/* harmony export */   useOutlet: () => (/* binding */ useOutlet),\n/* harmony export */   useOutletContext: () => (/* binding */ useOutletContext),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   useResolvedPath: () => (/* binding */ useResolvedPath),\n/* harmony export */   useRevalidator: () => (/* binding */ useRevalidator),\n/* harmony export */   useRouteError: () => (/* binding */ useRouteError),\n/* harmony export */   useRouteLoaderData: () => (/* binding */ useRouteLoaderData),\n/* harmony export */   useRoutes: () => (/* binding */ useRoutes)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _remix_run_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @remix-run/router */ \"./node_modules/@remix-run/router/dist/router.js\");\n/**\n * React Router v6.27.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (true) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (true) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (true) {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (true) {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (true) {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (true) {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nif (true) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : 0 : void 0;\n  let {\n    basename,\n    navigator\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.joinPaths)([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : 0 : void 0;\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : 0 : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.matchPath)(pattern, (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_decodePath)(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : 0 : void 0;\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n  let {\n    matches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify((0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_getResolveToMatches)(matches, future.v7_relativeSplatPath));\n  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n     true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(activeRef.current, navigateEffectWarning) : 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.resolveTo)(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.joinPaths)([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n  let {\n    matches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify((0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_getResolveToMatches)(matches, future.v7_relativeSplatPath));\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.resolveTo)(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : 0 : void 0;\n  let {\n    navigator\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (true) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.parsePath)(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : 0 : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.matchRoutes)(routes, {\n    pathname: remainingPathname\n  });\n  if (true) {\n     true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : 0;\n     true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.joinPaths)([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.joinPaths)([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.isRouteErrorResponse)(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (true) {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : 0 : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterContext);\n  !ctx ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName)) : 0 : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = react__WEBPACK_IMPORTED_MODULE_0__.useContext(DataRouterStateContext);\n  !state ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName)) : 0 : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  !route ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName)) : 0 : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : 0 : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => matches.map(m => (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_convertRouteMatchToUiMatch)(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = react__WEBPACK_IMPORTED_MODULE_0__.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = react__WEBPACK_IMPORTED_MODULE_0__.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"\");\n  let blockerFunction = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.stripBasename)(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.stripBasename)(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n     true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(activeRef.current, navigateEffectWarning) : 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n     true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(false, message) : 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = react__WEBPACK_IMPORTED_MODULE_0__[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n     true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.createMemoryHistory)({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : 0 : void 0;\n  let {\n    future,\n    static: isStatic\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(NavigationContext);\n   true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : 0;\n  let {\n    matches\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.resolveTo)(to, (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_getResolveToMatches)(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n   true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : 0 ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : 0 : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.parsePath)(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    let trailingPathname = (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.stripBasename)(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n   true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof _remix_run_router__WEBPACK_IMPORTED_MODULE_1__.AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : 0 : void 0;\n    !(!element.props.index || !element.props.children) ?  true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_invariant)(false, \"An index route cannot have child routes.\") : 0 : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (true) {\n      if (route.element) {\n         true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (true) {\n      if (route.hydrateFallbackElement) {\n         true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (true) {\n      if (route.errorElement) {\n         true ? (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_warning)(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.createRouter)({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: (0,_remix_run_router__WEBPACK_IMPORTED_MODULE_1__.createMemoryHistory)({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-router/dist/index.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = window["React"];

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = window["ReactDOM"];

/***/ }),

/***/ "@wordpress/dom-ready":
/*!**********************************!*\
  !*** external ["wp","domReady"] ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["domReady"];

/***/ }),

/***/ "@wordpress/element":
/*!*********************************!*\
  !*** external ["wp","element"] ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["element"];

/***/ }),

/***/ "@wordpress/i18n":
/*!******************************!*\
  !*** external ["wp","i18n"] ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = window["wp"]["i18n"];

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayLikeToArray)\n/* harmony export */ });\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLGdDQUFnQyxPQUFPO0FBQ3ZDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheUxpa2VUb0FycmF5LmpzPzZkNGMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkociwgYSkge1xuICAobnVsbCA9PSBhIHx8IGEgPiByLmxlbmd0aCkgJiYgKGEgPSByLmxlbmd0aCk7XG4gIGZvciAodmFyIGUgPSAwLCBuID0gQXJyYXkoYSk7IGUgPCBhOyBlKyspIG5bZV0gPSByW2VdO1xuICByZXR1cm4gbjtcbn1cbmV4cG9ydCB7IF9hcnJheUxpa2VUb0FycmF5IGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _arrayWithHoles)\n/* harmony export */ });\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRoSG9sZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5V2l0aEhvbGVzLmpzP2ZmZWIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKHIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkocikpIHJldHVybiByO1xufVxuZXhwb3J0IHsgX2FycmF5V2l0aEhvbGVzIGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _iterableToArrayLimit)\n/* harmony export */ });\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFlBQVksa0VBQWtFO0FBQ3RGLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzPzg0ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KHIsIGwpIHtcbiAgdmFyIHQgPSBudWxsID09IHIgPyBudWxsIDogXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIHJbU3ltYm9sLml0ZXJhdG9yXSB8fCByW1wiQEBpdGVyYXRvclwiXTtcbiAgaWYgKG51bGwgIT0gdCkge1xuICAgIHZhciBlLFxuICAgICAgbixcbiAgICAgIGksXG4gICAgICB1LFxuICAgICAgYSA9IFtdLFxuICAgICAgZiA9ICEwLFxuICAgICAgbyA9ICExO1xuICAgIHRyeSB7XG4gICAgICBpZiAoaSA9ICh0ID0gdC5jYWxsKHIpKS5uZXh0LCAwID09PSBsKSB7XG4gICAgICAgIGlmIChPYmplY3QodCkgIT09IHQpIHJldHVybjtcbiAgICAgICAgZiA9ICExO1xuICAgICAgfSBlbHNlIGZvciAoOyAhKGYgPSAoZSA9IGkuY2FsbCh0KSkuZG9uZSkgJiYgKGEucHVzaChlLnZhbHVlKSwgYS5sZW5ndGggIT09IGwpOyBmID0gITApO1xuICAgIH0gY2F0Y2ggKHIpIHtcbiAgICAgIG8gPSAhMCwgbiA9IHI7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICghZiAmJiBudWxsICE9IHRbXCJyZXR1cm5cIl0gJiYgKHUgPSB0W1wicmV0dXJuXCJdKCksIE9iamVjdCh1KSAhPT0gdSkpIHJldHVybjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChvKSB0aHJvdyBuO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYTtcbiAgfVxufVxuZXhwb3J0IHsgX2l0ZXJhYmxlVG9BcnJheUxpbWl0IGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _nonIterableRest)\n/* harmony export */ });\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVJlc3QuanM/N2FiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuZXhwb3J0IHsgX25vbkl0ZXJhYmxlUmVzdCBhcyBkZWZhdWx0IH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _slicedToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\");\n/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArrayLimit.js */ \"./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\");\n/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\");\n/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest.js */ \"./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\");\n\n\n\n\nfunction _slicedToArray(r, e) {\n  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(r, e) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(r, e) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNZO0FBQ1k7QUFDdEI7QUFDbkQ7QUFDQSxTQUFTLDhEQUFjLE9BQU8sb0VBQW9CLFVBQVUsMEVBQTBCLFVBQVUsK0RBQWU7QUFDL0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFkZXItZm9vdGVyLWVsZW1lbnRvci8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5LmpzPzEyYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5V2l0aEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aEhvbGVzLmpzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5TGltaXQgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5TGltaXQuanNcIjtcbmltcG9ydCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSBmcm9tIFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qc1wiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlUmVzdCBmcm9tIFwiLi9ub25JdGVyYWJsZVJlc3QuanNcIjtcbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KHIsIGUpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKHIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KHIsIGUpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KHIsIGUpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufVxuZXhwb3J0IHsgX3NsaWNlZFRvQXJyYXkgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _unsupportedIterableToArray)\n/* harmony export */ });\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r, a) : void 0;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFDckQ7QUFDQTtBQUNBLHFDQUFxQyxnRUFBZ0I7QUFDckQsY0FBYztBQUNkLCtMQUErTCxnRUFBZ0I7QUFDL007QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2hlYWRlci1mb290ZXItZWxlbWVudG9yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzPzM3ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KHIsIGEpIHtcbiAgaWYgKHIpIHtcbiAgICBpZiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgcikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkociwgYSk7XG4gICAgdmFyIHQgPSB7fS50b1N0cmluZy5jYWxsKHIpLnNsaWNlKDgsIC0xKTtcbiAgICByZXR1cm4gXCJPYmplY3RcIiA9PT0gdCAmJiByLmNvbnN0cnVjdG9yICYmICh0ID0gci5jb25zdHJ1Y3Rvci5uYW1lKSwgXCJNYXBcIiA9PT0gdCB8fCBcIlNldFwiID09PSB0ID8gQXJyYXkuZnJvbShyKSA6IFwiQXJndW1lbnRzXCIgPT09IHQgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QodCkgPyBhcnJheUxpa2VUb0FycmF5KHIsIGEpIDogdm9pZCAwO1xuICB9XG59XG5leHBvcnQgeyBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;